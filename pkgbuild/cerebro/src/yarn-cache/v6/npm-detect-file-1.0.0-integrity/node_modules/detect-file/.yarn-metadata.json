{
  "manifest": {
    "name": "detect-file",
    "description": "Detects if a file exists and returns the resolved filepath.",
    "version": "1.0.0",
    "homepage": "https://github.com/doowb/detect-file",
    "author": {
      "name": "Brian Woodward",
      "url": "https://github.com/doowb"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/doowb/detect-file.git"
    },
    "bugs": {
      "url": "https://github.com/doowb/detect-file/issues"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "mocha"
    },
    "dependencies": {},
    "devDependencies": {
      "gulp-format-md": "*",
      "mocha": "*"
    },
    "keywords": [
      "detect",
      "exists",
      "file",
      "file exists",
      "file-path",
      "filepath",
      "path",
      "resolve",
      "resolve file",
      "resolve filepath"
    ],
    "verb": {
      "layout": "default",
      "tasks": [
        "readme"
      ],
      "plugins": [
        "gulp-format-md"
      ],
      "related": {
        "list": [
          "fs-exists-sync"
        ]
      },
      "reflinks": [
        "verb",
        "verb-readme-generator"
      ],
      "lint": {
        "reflinks": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-detect-file-1.0.0-integrity/node_modules/detect-file/package.json",
    "readmeFilename": "README.md",
    "readme": "# detect-file [![NPM version](https://img.shields.io/npm/v/detect-file.svg?style=flat)](https://www.npmjs.com/package/detect-file) [![NPM monthly downloads](https://img.shields.io/npm/dm/detect-file.svg?style=flat)](https://npmjs.org/package/detect-file)  [![NPM total downloads](https://img.shields.io/npm/dt/detect-file.svg?style=flat)](https://npmjs.org/package/detect-file) [![Linux Build Status](https://img.shields.io/travis/doowb/detect-file.svg?style=flat&label=Travis)](https://travis-ci.org/doowb/detect-file) [![Windows Build Status](https://img.shields.io/appveyor/ci/doowb/detect-file.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/doowb/detect-file)\n\n> Detects if a file exists and returns the resolved filepath.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save detect-file\n```\n\nInstall with [yarn](https://yarnpkg.com):\n\n```sh\n$ yarn add detect-file\n```\n\n## Usage\n\n```js\nvar detect = require('detect-file');\n```\n\n## API\n\n### [detect](index.js#L33)\n\nDetect the given `filepath` if it exists.\n\n**Params**\n\n* `filepath` **{String}**: filepath to detect.\n* `options` **{Object}**: Additional options.\n* `options.nocase` **{Boolean}**: Set this to `true` to force case-insensitive filename checks. This is useful on case sensitive file systems.\n* `returns` **{String}**: Returns the detected filepath if it exists, otherwise returns `null`.\n\n**Example**\n\n```js\nvar res = detect('package.json');\nconsole.log(res);\n//=> \"package.json\"\n\nvar res = detect('fake-file.json');\nconsole.log(res)\n//=> null\n```\n\n## Case sensitive file systems\n\nWhen using the `nocase` option, this library will attempt to detect the filepath with the following methods:\n\n1. Try to read all files in the `filepath` using `fs.readdirSync`. If successful and `filepath` is a directory, return the `filepath`.\n2. Try to read all files in the `filepath`'s directory using `fs.readdirSync`. If successful, do case insensitive comparasions of the `filepath` to the files in `filepath`'s directory.\n\n## About\n\n### Related projects\n\n[fs-exists-sync](https://www.npmjs.com/package/fs-exists-sync): Drop-in replacement for `fs.existsSync` with zero dependencies. Other libs I found either have crucial differences… [more](https://github.com/jonschlinkert/fs-exists-sync) | [homepage](https://github.com/jonschlinkert/fs-exists-sync \"Drop-in replacement for `fs.existsSync` with zero dependencies. Other libs I found either have crucial differences from fs.existsSync, or unnecessary dependencies. See README.md for more info.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Brian Woodward**\n\n* [github/doowb](https://github.com/doowb)\n* [twitter/doowb](https://twitter.com/doowb)\n\n### License\n\nCopyright © 2017, [Brian Woodward](https://github.com/doowb).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on August 05, 2017._",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016-2017, Brian Woodward.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/detect-file/-/detect-file-1.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/detect-file/-/detect-file-1.0.0.tgz",
    "hash": "",
    "integrity": "sha1-8NZtA2cqglyxtzvbP+YjEMjlUrc=",
    "registry": "npm",
    "packageName": "detect-file",
    "cacheIntegrity": "sha512-DtCOLG98P007x7wiiOmfI0fi3eIKyWiLTGJ2MDnVi/E04lWGbf+JzrRHMm0rgIIZJGtHpKpbVgLWHrv8xXpc3Q== sha1-8NZtA2cqglyxtzvbP+YjEMjlUrc="
  },
  "registry": "npm",
  "hash": "0ed08e2c6f7c3f4d3bc7bc2288e99f2347e2dde20ac9688b4c62763039d58bf134e255866dff89ceb447326d2b808219246b47a4aa5b5602d61ebbfcc57a5cdd"
}