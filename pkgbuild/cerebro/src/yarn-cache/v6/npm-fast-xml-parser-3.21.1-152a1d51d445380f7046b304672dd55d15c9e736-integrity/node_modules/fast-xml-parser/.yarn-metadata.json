{
  "manifest": {
    "name": "fast-xml-parser",
    "version": "3.21.1",
    "description": "Validate XML or Parse XML to JS/JSON very fast without C/C++ based libraries",
    "main": "./src/parser.js",
    "scripts": {
      "test": "nyc --reporter=lcov --reporter=text jasmine spec/*spec.js",
      "unit": "jasmine",
      "coverage": "nyc report --reporter html --reporter text -t .nyc_output --report-dir .nyc_output/summary",
      "perf": "node ./benchmark/perfTest3.js",
      "lint": "eslint src/*.js spec/*.js",
      "bundle": "webpack && webpack --config webpack-prod.config.js",
      "prettier": "prettier --write src/**/*.js",
      "publish-please": "publish-please",
      "checkReadiness": "publish-please --dry-run"
    },
    "bin": {
      "xml2js": "cli.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/NaturalIntelligence/fast-xml-parser"
    },
    "keywords": [
      "fast",
      "xml",
      "json",
      "parser",
      "xml2js",
      "x2js",
      "xml2json",
      "js",
      "traversable",
      "cli",
      "command",
      "validator",
      "validate",
      "transformer",
      "checker",
      "assert",
      "big",
      "js2xml",
      "json2xml",
      "nimn",
      "xml2nimn",
      "locale",
      "html"
    ],
    "author": {
      "name": "Amit Gupta",
      "url": "https://amitkumargupta.work/"
    },
    "contributors": [
      {
        "name": "Alfonso Mu√±oz-Pomer Fuentes",
        "email": "amunoz@ebi.ac.uk",
        "url": "https://github.com/alfonsomunozpomer"
      },
      {
        "name": "Steve Reichenbach",
        "url": "https://github.com/EyesOnlyNet"
      },
      {
        "name": "Vohmyanin Sergey Vasilevich",
        "url": "http://delagen.livejournal.com"
      },
      {
        "name": "Andrew Udvare",
        "url": "https://github.com/Tatsh"
      }
    ],
    "license": "MIT",
    "devDependencies": {
      "@babel/core": "^7.13.10",
      "@babel/plugin-transform-runtime": "^7.13.10",
      "@babel/preset-env": "^7.13.10",
      "@babel/register": "^7.13.8",
      "babel-loader": "^8.2.2",
      "eslint": "^5.16.0",
      "he": "^1.2.0",
      "jasmine": "^3.6.4",
      "nimnjs": "^1.3.2",
      "nyc": "^15.1.0",
      "prettier": "^1.19.1",
      "publish-please": "^5.5.2",
      "webpack": "^4.46.0",
      "webpack-cli": "^3.3.12"
    },
    "typings": "src/parser.d.ts",
    "funding": {
      "type": "paypal",
      "url": "https://paypal.me/naturalintelligence"
    },
    "dependencies": {
      "strnum": "^1.0.4"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-fast-xml-parser-3.21.1-152a1d51d445380f7046b304672dd55d15c9e736-integrity/node_modules/fast-xml-parser/package.json",
    "readmeFilename": "README.md",
    "readme": "\n\n# [fast-xml-parser](https://www.npmjs.com/package/fast-xml-parser)\n[![Backers on Open Collective](https://opencollective.com/fast-xml-parser/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/fast-xml-parser/sponsors/badge.svg)](#sponsors) [![Known Vulnerabilities](https://snyk.io/test/github/naturalintelligence/fast-xml-parser/badge.svg)](https://snyk.io/test/github/naturalintelligence/fast-xml-parser)\n[![NPM quality][quality-image]][quality-url]\n[![Travis ci Build Status](https://travis-ci.org/NaturalIntelligence/fast-xml-parser.svg?branch=master)](https://travis-ci.org/NaturalIntelligence/fast-xml-parser)\n[![Coverage Status](https://coveralls.io/repos/github/NaturalIntelligence/fast-xml-parser/badge.svg?branch=master)](https://coveralls.io/github/NaturalIntelligence/fast-xml-parser?branch=master)\n[<img src=\"https://img.shields.io/badge/Try-me-blue.svg?colorA=FFA500&colorB=0000FF\" alt=\"Try me\"/>](https://naturalintelligence.github.io/fast-xml-parser/)\n[![NPM total downloads](https://img.shields.io/npm/dt/fast-xml-parser.svg)](https://npm.im/fast-xml-parser)\n\n[quality-image]: http://npm.packagequality.com/shield/fast-xml-parser.svg?style=flat-square\n[quality-url]: http://packagequality.com/#?package=fast-xml-parser\n\n\nValidate XML, Parse XML to JS/JSON and vice versa, or parse XML to Nimn rapidly without C/C++ based libraries and no callback\n\nTo cover expenses, we're planning to launch [FXP Enterprise](https://github.com/NaturalIntelligence/fxp-ent) edition in parallel. Watch it for further updates, if you're interested.\n\n![Donate $5](static/img/donation_quote.png)\n\n<a href=\"https://opencollective.com/fast-xml-parser/donate\" target=\"_blank\">\n  <img src=\"https://opencollective.com/fast-xml-parser/donate/button@2x.png?color=blue\" width=200 />\n</a>\n<a href=\"https://paypal.me/naturalintelligence\"> <img src=\"static/img/support_paypal.svg\" alt=\"Stubmatic donate button\" width=\"200\"/></a>\n\nCheck [ThankYouBackers](https://github.com/NaturalIntelligence/ThankYouBackers) for our contributors\n\n## Users\nList of some applications/projects using Fast XML Parser. (Raise an issue to submit yours)\n\n<a href=\"https://github.com/NaturalIntelligence/imglab\" title=\"imglab\" ><img src=\"https://github.com/NaturalIntelligence/imglab/blob/master/img/imglab_logo.png?raw=true\" width=\"80px\" ></a>\n<a href=\"https://github.com/NaturalIntelligence/Stubmatic\" title=\"stubmatic\" ><img src=\"https://camo.githubusercontent.com/ff711425dc2286cd215637b7114eb43e571f001d/68747470733a2f2f6e61747572616c696e74656c6c6967656e63652e6769746875622e696f2f537475626d617469632f696d672f737475626d617469635f6c6f676f2e706e673f7261773d74727565\" width=\"80px\" ></a>\n<a href=\"https://github.com/muneem4node/muneem\" title=\"Muneem\" ><img src=\"https://github.com/muneem4node/muneem/raw/master/static/muneem.png?raw=true\" width=\"80px\" ></a>\n<a href=\"https://github.com/badges/shields\" title=\"shields\" ><img src=\"https://avatars2.githubusercontent.com/u/6254238\" width=\"80px\" ></a>\n<a href=\"https://github.com/renovatebot/renovate\" title=\"renovate\" ><img src=\"https://avatars1.githubusercontent.com/u/38656520\" width=\"80px\" ></a>\n<a href=\"https://vmware.com/\" title=\"vmware\" > <img src=\"https://avatars0.githubusercontent.com/u/473334\" width=\"80px\" ></a>\n<a href=\"https://opensource.microsoft.com/\" title=\"microsoft\" > <img src=\"https://avatars0.githubusercontent.com/u/6154722\" width=\"80px\" ></a>\n<a href=\"https://github.com/notable/notable\" title=\"notable\" > <img src=\"https://avatars3.githubusercontent.com/u/46467536\" width=\"80px\" ></a>\n<a href=\"http://ibm.github.io/\" title=\"IBM\" > <img src=\"https://avatars2.githubusercontent.com/u/1459110\" width=\"80px\" ></a>\n<a href=\"https://www.ft.com/\" title=\"Financial Times\" > <img src=\"https://avatars2.githubusercontent.com/u/3502508\" width=\"80px\" ></a>\n<a href=\"https://github.com/camunda\" title=\"camunda BPM\" > <img src=\"https://avatars3.githubusercontent.com/u/2443838\" width=\"80px\" ></a>\n<a href=\"https://github.com/AnyChart\" title=\"AnyChart\" > <img src=\"https://avatars0.githubusercontent.com/u/703373\" width=\"80px\" ></a>\n<a href=\"https://github.com/magda-io\" title=\"magda-io\" > <img src=\"https://avatars0.githubusercontent.com/u/40348684\" width=\"80px\" ></a>\n<a href=\"https://github.com/geistinteractive\" title=\"Geist Interactive\" > <img src=\"https://avatars0.githubusercontent.com/u/11617965\" width=\"80px\" ></a>\n<a href=\"https://www.tourstream.eu/\" title=\"tourstream\" > <img src=\"https://avatars1.githubusercontent.com/u/23242088\" width=\"80px\" ></a>\n<a href=\"https://www.atomist.com/\" title=\"Atomist\" > <img src=\"https://avatars3.githubusercontent.com/u/19392\" width=\"80px\" ></a>\n<a href=\"http://www.opuscapita.com/\" title=\"OpusCapita\" > <img src=\"https://avatars1.githubusercontent.com/u/23256480\" width=\"80px\" ></a>\n<a href=\"https://nevatrip.ru/\" title=\"nevatrip\" > <img src=\"https://avatars2.githubusercontent.com/u/35730984\" width=\"80px\" ></a>\n<a href=\"http://www.smartbear.com\" title=\"SmartBear Software\" > <img src=\"https://avatars2.githubusercontent.com/u/1644671\" width=\"80px\" ></a>\n<a href=\"http://eosnavigator.com/\" title=\"nevatrip\" > <img src=\"https://avatars1.githubusercontent.com/u/40260563\" width=\"80px\" ></a>\n<a href=\"http://nasa.github.io/\" title=\"NASA\" > <img src=\"https://avatars0.githubusercontent.com/u/848102\" width=\"80px\" ></a>\n<a href=\"http://qgis.org/\" title=\"QGIS\" > <img src=\"https://avatars2.githubusercontent.com/u/483444\" width=\"80px\" ></a>\n<a href=\"http://www.craft.ai/\" title=\"craft ai\" > <img src=\"https://avatars1.githubusercontent.com/u/12046764\" width=\"80px\" ></a>\n<a href=\"http://brownspace.org/\" title=\"Brown Space Engineering\" > <img src=\"https://avatars2.githubusercontent.com/u/5504507\" width=\"80px\" ></a>\n<a href=\"http://www.appcelerator.com/\" title=\"Team Appcelerator\" > <img src=\"https://avatars1.githubusercontent.com/u/82188\" width=\"80px\" ></a>\n<a href=\"https://xmllint.com/\" title=\"XML Lint\" > <img src=\"https://xmllint.com/assets/logo.png\" width=\"80px\" ></a>\n<a href=\"https://github.com/prettier\" title=\"Prettier\" > <img src=\"https://avatars0.githubusercontent.com/u/25822731\" width=\"80px\" ></a>\n<a href=\"https://github.com/dolanmiu/docx\" title=\"docx\" > <img src=\"https://i.imgur.com/37uBGhO.gif\" width=\"80px\" ></a>\n<a href=\"http://orange-opensource.github.io/\" title=\"Open Source by Orange\" > <img src=\"https://avatars3.githubusercontent.com/u/1506386\" width=\"80px\" ></a>\n<a href=\"http://www.ybrain.com/\" title=\"YBRAIN Inc.\" > <img src=\"https://avatars2.githubusercontent.com/u/38232440\" width=\"80px\" ></a>\n<a href=\"http://99bitcoins.com/\" title=\"99 bitcoins\" > <img src=\"https://avatars0.githubusercontent.com/u/9527779\" width=\"80px\" ></a>\n<a href=\"https://wechaty.github.io/wechaty/\" title=\"Wechaty\" > <img src=\"https://avatars0.githubusercontent.com/u/21285357\" width=\"80px\" ></a>\n<a href=\"https://opendatakit.org\" title=\"Open Data Kit\" > <img src=\"https://avatars0.githubusercontent.com/u/6222985\" width=\"80px\" ></a>\n<a href=\"https://ridibooks.com\" title=\"RIDI Books\" > <img src=\"https://avatars1.githubusercontent.com/u/24955411\" width=\"80px\" ></a>\n<a href=\"http://signalk.org\" title=\"Signal K\" > <img src=\"https://avatars1.githubusercontent.com/u/7126740\" width=\"80px\" ></a>\n<a href=\"http://brain.js.org/\" title=\"brain.js\" > <img src=\"https://avatars2.githubusercontent.com/u/23732838\" width=\"80px\" ></a>\n<a href=\"https://skygear.io/\" title=\"Skegear\" > <img src=\"https://avatars1.githubusercontent.com/u/15025887\" width=\"80px\" ></a>\n<a href=\"https://npmjs.com/\" title=\"npm\" > <img src=\"https://avatars0.githubusercontent.com/u/6078720\" width=\"80px\" ></a>\n<a href=\" https://www.mindpointgroup.com\" title=\"mindpointgroup\" > <img src=\"https://avatars1.githubusercontent.com/u/6413533\" width=\"80px\" ></a>\n<a href=\"http://www.acuantcorp.com/\" title=\"Acuant Inc\" > <img src=\"https://avatars3.githubusercontent.com/u/11580319?s=200&v=4\" width=\"80px\" ></a>\n<a href=\"https://www.wazuh.com/\" title=\"wazuh\" > <img src=\"https://avatars2.githubusercontent.com/u/13752566\" width=\"80px\" ></a>\n<a href=\"https://orbs.com/\" title=\"ORBS The Hybrid Blockchain\" > <img src=\"https://avatars1.githubusercontent.com/u/33665977\" width=\"80px\" ></a>\n<a href=\"https://texlab.netlify.com/\" title=\"latex-lsp\" > <img src=\"https://avatars1.githubusercontent.com/u/48360002\" width=\"80px\" ></a>\n<a href=\"https://frontside.io/\" title=\"The Frontside \" > <img src=\"https://avatars1.githubusercontent.com/u/223096\" width=\"80px\" ></a>\n<a href=\"https://creditsense.com.au/\" title=\"Credit Sense Australia \" > <img src=\"https://avatars0.githubusercontent.com/u/46947118\" width=\"80px\" ></a>\n<a href=\"https://www.hustunique.com/\" title=\"UniqueStudio\" > <img src=\"https://avatars1.githubusercontent.com/u/4847684\" width=\"80px\" ></a>\n<a href=\"http://www.openforis.org/\" title=\"Open Foris\" > <img src=\"https://avatars2.githubusercontent.com/u/1212750\" width=\"80px\" ></a>\n<a href=\"#\" title=\"NHS Connect\" > <img src=\"https://avatars3.githubusercontent.com/u/20316669\" width=\"80px\" ></a>\n<a href=\"https://tradle.io/\" title=\"Tradle\" > <img src=\"https://avatars2.githubusercontent.com/u/9482126\" width=\"80px\" ></a>\n<a href=\"http://www.anl.gov/\" title=\"Argonne National Laboratory\" > <img src=\"https://avatars0.githubusercontent.com/u/10468712\" width=\"80px\" ></a>\n<a href=\"https://simpleicons.org/\" title=\"Simple Icons\" > <img src=\"https://avatars2.githubusercontent.com/u/29872746\" width=\"80px\" ></a>\n<a href=\"https://stoplight.io/\" title=\"Stoplight\" > <img src=\"https://avatars1.githubusercontent.com/u/10767217\" width=\"80px\" ></a>\n<a href=\"http://www.fda.gov/\" title=\"Food and Drug Administration \" > <img src=\"https://avatars2.githubusercontent.com/u/6471964\" width=\"80px\" ></a>\n<a href=\"http://www.magento.com/\" title=\"Magento\" > <img src=\"https://avatars2.githubusercontent.com/u/168457\" width=\"80px\" ></a>\n\n\nThe list of users is collected either from the list published by Github, cummunicated directly through mails/chat , or from other resources. If you feel that your name in the above list is incorrectly published or you're not the user of this library anymore then you can inform us to remove it. We'll do the necessary changes ASAP.\n\n### Main Features\n\n<img align=\"right\" src=\"static/img/fxp_logo.png\" width=\"180px\" alt=\"FXP logo\"/>\n\n* Validate XML data syntactically\n* Transform XML to JSON or Nimn\n* Transform JSON back to XML\n* Works with node packages, in browser, and in CLI (press try me button above for demo)\n* Faster than any pure JS implementation.\n* It can handle big files (tested up to 100mb).\n* Various options are available to customize the transformation\n    * You can parse CDATA as a separate property.\n    * You can prefix attributes or group them to a separate property. Or they can be ignored from the result completely.\n    * You can parse tag's or attribute's value to primitive type: string, integer, float, hexadecimal, or boolean. And can optionally decode for HTML char.\n    * You can remove namespace from tag or attribute name while parsing\n    * It supports boolean attributes, if configured.\n\n## How to use\n\n### Installation\n\nTo use it as an **NPM package**:\n\n`npm install fast-xml-parser`\n\nOr using [yarn](https://yarnpkg.com/):\n\n`yarn add fast-xml-parser`\n\nTo use it from a **CLI** install it globally with the `-g` option.\n\n`npm install fast-xml-parser -g`\n\nTo use it on a **webpage** include it from a [CDN](https://cdnjs.com/libraries/fast-xml-parser)\n\n### XML to JSON\n\n\n```js\nconst jsonObj = parser.parse(xmlData [,options] );\n```\n\n```js\nconst parser = require('fast-xml-parser');\nconst he = require('he');\n\nconst options = {\n    attributeNamePrefix : \"@_\",\n    attrNodeName: \"attr\", //default is 'false'\n    textNodeName : \"#text\",\n    ignoreAttributes : true,\n    ignoreNameSpace : false,\n    allowBooleanAttributes : false,\n    parseNodeValue : true,\n    parseAttributeValue : false,\n    trimValues: true,\n    cdataTagName: \"__cdata\", //default is 'false'\n    cdataPositionChar: \"\\\\c\",\n    parseTrueNumberOnly: false,\n    numParseOptions:{\n      hex: true,\n      leadingZeros: true,\n      //skipLike: /\\+[0-9]{10}/\n    },\n    arrayMode: false, //\"strict\"\n    attrValueProcessor: (val, attrName) => he.decode(val, {isAttributeValue: true}),//default is a=>a\n    tagValueProcessor : (val, tagName) => he.decode(val), //default is a=>a\n    stopNodes: [\"parse-me-as-string\"],\n    alwaysCreateTextNode: false\n};\n\nif( parser.validate(xmlData) === true) { //optional (it'll return an object in case it's not valid)\n    let jsonObj = parser.parse(xmlData,options);\n}\n\n// Intermediate obj\nconst tObj = parser.getTraversalObj(xmlData,options);\nlet jsonObj = parser.convertToJson(tObj,options);\n\n```\nAs you can notice in the above code, validator is not embedded with in the parser and expected to be called separately. However, you can pass `true` or validation options as 3rd parameter to the parser to trigger validator internally. It is same as above example.\n\n```js\ntry{\n  let jsonObj = parser.parse(xmlData,options, true);\n}catch(error){\n  console.log(error.message)\n}\n```\n\nValidator returns the following object in case of error;\n```js\n{\n  err: {\n    code: code,\n    msg: message,\n    line: lineNumber,\n  },\n};\n```\n\n\n#### Note: [he](https://www.npmjs.com/package/he) library is used in this example\n\n<details>\n\t<summary>OPTIONS :</summary>\n\n* **attributeNamePrefix** : prepend given string to attribute name for identification\n* **attrNodeName**: (Valid name) Group all the attributes as properties of given name.\n* **ignoreAttributes** : Ignore attributes to be parsed.\n* **ignoreNameSpace** : Remove namespace string from tag and attribute names.\n* **allowBooleanAttributes** : a tag can have attributes without any value\n* **parseNodeValue** : Parse the value of text node to float, integer, or boolean.\n* **parseAttributeValue** : Parse the value of an attribute to float, integer, or boolean.\n* **trimValues** : trim string values of an attribute or node\n* **decodeHTMLchar** : This options has been removed from 3.3.4. Instead, use tagValueProcessor, and attrValueProcessor. See above example.\n* **cdataTagName** : If specified, parser parse CDATA as nested tag instead of adding it's value to parent tag.\n* **cdataPositionChar** : It'll help to covert JSON back to XML without losing CDATA position.\n* **parseTrueNumberOnly**: if true then values like \"+123\", or \"0123\" will not be parsed as number.\n* **arrayMode** : When `false`, a tag with single occurrence is parsed as an object but as an array in case of multiple occurences. When `true`, a tag will be parsed as an array always excluding leaf nodes. When `strict`, all the tags will be parsed as array only. When instance of `RegEx`, only tags will be parsed as array that match the regex. When `function` a tag name is passed to the callback that can be checked.\n* **tagValueProcessor** : Process tag value during transformation. Like HTML decoding, word capitalization, etc. Applicable in case of string only.\n* **attrValueProcessor** : Process attribute value during transformation. Like HTML decoding, word capitalization, etc. Applicable in case of string only.\n* **stopNodes** : an array of tag names which are not required to be parsed. Instead their values are parsed as string.\n* **alwaysCreateTextNode** : When `true`, forces the parser always return a property for the `textNodeName` even if there are no attributes or node children.\n</details>\n\n<details>\n\t<summary>To use from <b>command line</b></summary>\n\n```bash\n$xml2js [-ns|-a|-c|-v|-V] <filename> [-o outputfile.json]\n$cat xmlfile.xml | xml2js [-ns|-a|-c|-v|-V] [-o outputfile.json]\n```\n\n* -ns : To include namespaces (by default ignored)\n* -a : To ignore attributes\n* -c : To ignore value conversion (i.e. \"-3\" will not be converted to number -3)\n* -v : validate before parsing\n* -V : only validate\n</details>\n\n\n<details>\n\t<summary>To use it <b>on webpage</b></summary>\n\n```js\nconst result = parser.validate(xmlData);\nif (result !== true) console.log(result.err);\nconst jsonObj = parser.parse(xmlData);\n```\n</details>\n\n### JSON / JS Object to XML\n\n```js\nconst Parser = require(\"fast-xml-parser\").j2xParser;\n//default options need not to set\nconst defaultOptions = {\n    attributeNamePrefix : \"@_\",\n    attrNodeName: \"@\", //default is false\n    textNodeName : \"#text\",\n    ignoreAttributes : true,\n    cdataTagName: \"__cdata\", //default is false\n    cdataPositionChar: \"\\\\c\",\n    format: false,\n    indentBy: \"  \",\n    supressEmptyNode: false,\n    tagValueProcessor: a=> he.encode(a, { useNamedReferences: true}),// default is a=>a\n    attrValueProcessor: a=> he.encode(a, {isAttributeValue: isAttribute, useNamedReferences: true}),// default is a=>a\n    rootNodeName: \"element\"\n};\nconst parser = new Parser(defaultOptions);\nconst xml = parser.parse(json_or_js_obj);\n```\n\n<details>\n\t<summary>OPTIONS :</summary>\n\nWith the correct options, you can get the almost original XML without losing any information.\n\n* **attributeNamePrefix** : Identify attributes with this prefix otherwise treat them as a tag.\n* **attrNodeName**: Identify attributes when they are grouped under single property.\n* **ignoreAttributes** : Don't check for attributes. Treats everything as tag.\n* **encodeHTMLchar** : This option has been removed from 3.3.4. Use tagValueProcessor, and attrValueProcessor instead. See above example.\n* **cdataTagName** : If specified, parse matching tag as CDATA\n* **cdataPositionChar** : Identify the position where CDATA tag should be placed. If it is blank then CDATA will be added in the last of tag's value.\n* **format** : If set to true, then format the XML output.\n* **indentBy** : indent by this char `when` format is set to `true`\n* **supressEmptyNode** : If set to `true`, tags with no value (text or nested tags) are written as self closing tags.\n* **tagValueProcessor** : Process tag value during transformation. Like HTML encoding, word capitalization, etc. Applicable in case of string only.\n* **attrValueProcessor** : Process attribute value during transformation. Like HTML encoding, word capitalization, etc. Applicable in case of string only.\n* **rootNodeName** : When input js object is array, parser uses array index by default as tag name. You can set this property for proper response.\n</details>\n\n## Benchmark\n\n#### XML to JSON\n\n![npm_xml2json_compare](static/img/fxpv3-vs-xml2jsv0419_chart.png)\n\n<details>\n\t<summary>report</summary>\n\n| file size | fxp 3.0 validator (rps) | fxp 3.0 parser (rps) | xml2js 0.4.19 (rps) |\n| ---------- | ----------------------- | ------------------- | ------------------- |\n| 1.5k | 16581.06758 | 14032.09323 | 4615.930805 |\n| 1.5m | 14918.47793 | 13.23366098 | 5.90682005 |\n| 13m | 1.834479235 | 1.135582008 | -1 |\n| 1.3k with CDATA | 30583.35319 | 43160.52342 | 8398.556349 |\n| 1.3m with CDATA | 27.29266471 | 52.68877009 | 7.966000795 |\n| 1.6k with cdata,prolog,doctype | 27690.26082 | 41433.98547 | 7872.399268 |\n| 98m | 0.08473858148 | 0.2600104004 | -1 |\n\n* -1 indicates error or incorrect output.\n</details>\n\n\n#### JSON to XML\n\n![npm_xml2json_compare](static/img/j2x.png)\n\n<details>\n\t<summary>report</summary>\n\n| file size | fxp 3.2 js to xml | xml2js 0.4.19 builder |\n|------------|-----------------|-----------------|\n| 1.3k | 160148.9801 | 10384.99401|\n| 1.1m | 173.6374831 | 8.611884025|\n\n</details>\n\n### Worth to mention\n\n- **[BigBit standard)](https://github.com/amitguptagwl/bigbit)** : A standard to represent any number in the universe in comparatively less space and without precision loss. A standard to save memory to represent any text string in comparision of UTF encodings.\n- **[imglab](https://github.com/NaturalIntelligence/imglab)** : Speedup and simplify image labeling / annotation. Supports multiple formats, one click annotation, easy interface and much more. There are more than half million images are being annotated every month using this tool.\n- [stubmatic](https://github.com/NaturalIntelligence/Stubmatic) : Create fake webservices, DynamoDB or S3 servers, Manage fake/mock stub data, Or fake any HTTP(s) call.\n- **[‡§Ö‡§®‡•Å‡§Æ‡§æ‡§∞‡•ç‡§ó‡§ï (anumargak)](https://github.com/NaturalIntelligence/anumargak)** : The fastest and simple router for node js web frameworks with many unique features.\n- [‡§Æ‡•Å‡§®‡•Ä‡§Æ (Muneem)](https://github.com/muneem4node/muneem) : A webframework made for all team members. Fast and Featured.\n- [‡§∂‡§¨‡•ç‡§¶‡§æ‡§µ‡§≤‡•Ä (shabdawali)](https://github.com/amitguptagwl/shabdawali) : Amazing human like typing effects beyond your imagination.\n\n\n\n## Contributors\n\nThis project exists thanks to [all](graphs/contributors) the people who contribute. [[Contribute](docs/CONTRIBUTING.md)].\n<!-- <a href=\"graphs/contributors\"><img src=\"https://opencollective.com/fast-xml-parser/contributors.svg?width=890&button=false\" /></a> -->\n<!--\n### Lead Maintainers\n![Amit Gupta](https://avatars1.githubusercontent.com/u/7692328?s=100&v=4)\n[![Vohmyanin Sergey Vasilevich](https://avatars3.githubusercontent.com/u/783335?s=100&v=4)](https://github.com/Delagen)\n\n### All Contributors -->\n<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/fast-xml-parser/contributors.svg?width=890&button=false\" /></a>\n\n## Backers\n\nThank you to all our backers! üôè [[Become a backer](https://opencollective.com/fast-xml-parser#backer)]\n\n<a href=\"https://opencollective.com/fast-xml-parser#backers\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/fast-xml-parser#sponsor)]\n\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/fast-xml-parser/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/fast-xml-parser/sponsor/9/avatar.svg\"></a>\n\n# License\n\n* MIT License\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Amit Kumar Gupta\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/fast-xml-parser/-/fast-xml-parser-3.21.1.tgz#152a1d51d445380f7046b304672dd55d15c9e736",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/fast-xml-parser/-/fast-xml-parser-3.21.1.tgz",
    "hash": "152a1d51d445380f7046b304672dd55d15c9e736",
    "integrity": "sha512-FTFVjYoBOZTJekiUsawGsSYV9QL0A+zDYCRj7y34IO6Jg+2IMYEtQa+bbictpdpV8dHxXywqU7C0gRDEOFtBFg==",
    "registry": "npm",
    "packageName": "fast-xml-parser",
    "cacheIntegrity": "sha512-FTFVjYoBOZTJekiUsawGsSYV9QL0A+zDYCRj7y34IO6Jg+2IMYEtQa+bbictpdpV8dHxXywqU7C0gRDEOFtBFg== sha1-FSodUdRFOA9wRrMEZy3VXRXJ5zY="
  },
  "registry": "npm",
  "hash": "152a1d51d445380f7046b304672dd55d15c9e736"
}