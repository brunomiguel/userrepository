{
  "manifest": {
    "name": "@openid/appauth",
    "version": "1.3.1",
    "description": "A general purpose OAuth client.",
    "author": {
      "name": "The OpenID Foundation"
    },
    "license": "Apache-2.0",
    "repository": {
      "type": "git",
      "url": "https://github.com/openid/AppAuth-JS.git"
    },
    "bugs": {
      "url": "https://github.com/openid/AppAuth-JS/issues"
    },
    "files": [
      "src/**",
      "app/**",
      "built/**"
    ],
    "main": "built/index.js",
    "types": "built/index.d.ts",
    "scripts": {
      "preapp": "npm run-script --silent watch",
      "app": "node_modules/.bin/watchify built/app/index.js -o built/app/bundle.js & http-server -p 8000",
      "prenode-app": "npm run-script --silent compile",
      "node-app": "node ./built/node_app/index.js",
      "prebuild-app": "npm run-script --silent compile",
      "build-app": "node_modules/.bin/browserify built/app/index.js -o built/app/bundle.js",
      "preminify": "npm run-script --silent build-app",
      "minify": "java -jar node_modules/google-closure-compiler/compiler.jar --js built/app/bundle.js --js_output_file built/app/bundle_minified.js",
      "precompile": "npm run-script --silent clean && npm run-script --silent format",
      "compile": "node_modules/.bin/tsc",
      "prepare": "npm run-script --silent build-app",
      "format": "node_modules/.bin/clang-format -i -style=file --glob=src/**.ts",
      "clean": "rm -rf built",
      "pretest": "npm run-script --silent compile",
      "test": "node_modules/.bin/karma start karma.conf --browsers=Chrome --single-run=false --debug",
      "pregzipSize": "npm run-script --silent minify",
      "gzipSize": "gzip -c built/app/bundle_minified.js | wc -c",
      "prewatch": "npm run-script --silent format",
      "watch": "node_modules/.bin/tsc --watch &"
    },
    "keywords": [
      "OAuth",
      "AppAuth",
      "JavaScript",
      "Node"
    ],
    "devDependencies": {
      "@types/hapi": "^18.0.5",
      "@types/jasmine": "^3.6.9",
      "@types/node": "^14.14.41",
      "@types/opener": "^1.4.0",
      "@types/react": "^17.0.3",
      "@types/react-dom": "^17.0.3",
      "browserify": "^17.0.0",
      "clang-format": "^1.5.0",
      "google-closure-compiler": "^20210406.0.0",
      "http-server": "^0.12.3",
      "jasmine-core": "^3.7.1",
      "karma": "^6.3.2",
      "karma-browserify": "^8.0.0",
      "karma-chrome-launcher": "^3.1.0",
      "karma-jasmine": "^4.0.1",
      "typescript": "^4.2.4",
      "watchify": "^4.0.0"
    },
    "dependencies": {
      "@types/base64-js": "^1.3.0",
      "@types/jquery": "^3.5.5",
      "base64-js": "^1.5.1",
      "follow-redirects": "^1.13.3",
      "form-data": "^4.0.0",
      "opener": "^1.5.2"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@openid-appauth-1.3.1-851e86507b95f9bbe1d05374eb62aaf9b2378f9b-integrity/node_modules/@openid/appauth/package.json",
    "readmeFilename": "README.md",
    "readme": "![AppAuth for JS](assets/logo.png)\n\nAppAuth for JavaScript is a client SDK for [public clients](https://tools.ietf.org/html/rfc6749#section-2.1)\nfor communicating with [OAuth 2.0](https://tools.ietf.org/html/rfc6749)\nand [OpenID Connect](http://openid.net/specs/openid-connect-core-1_0.html) providers\nfollowing the best practice\n[RFC 8252 - OAuth 2.0 for Native Apps](https://tools.ietf.org/html/rfc8252).\nThe library is designed for use in `Web Apps`, `Node.js` CLI applications,\n`Chrome Apps` and applications that use `Electron` or similar frameworks.\n\nIt strives to directly map the requests and responses of those specifications,\nwhile following the idiomatic style of the implementation language.\n\nThe library also supports the [PKCE](https://tools.ietf.org/html/rfc7636)\nextension to OAuth which was created to secure authorization codes in public\nclients when custom URI scheme redirects are used. The library is friendly to\nother extensions (standard or otherwise) with the ability to handle additional\nparameters in all protocol requests and responses.\n\n### Examples\n\n\nAn example application using the library is included in the `src/node_app` folder and at https://github.com/googlesamples/appauth-js-electron-sample.\n\n\n#### Auth Flow\nAppAuth supports manual interaction with the Authorization Server where you need to perform\nyour own token exchanges. This example performs a manual exchange.\n\n##### Fetch Service Configuration\n\n```typescript\nAuthorizationServiceConfiguration.fetchFromIssuer(openIdConnectUrl)\n  .then(response => {\n    log('Fetched service configuration', response);\n    this.configuration = response;\n    this.showMessage('Completed fetching configuration');\n  })\n  .catch(error => {\n    log('Something bad happened', error);\n    this.showMessage(`Something bad happened ${error}`)\n  });\n```\n\n##### Make Authorization Requests\n\n```typescript\nthis.notifier = new AuthorizationNotifier();\n// uses a redirect flow\nthis.authorizationHandler = new RedirectRequestHandler();\n// set notifier to deliver responses\nthis.authorizationHandler.setAuthorizationNotifier(this.notifier);\n// set a listener to listen for authorization responses\nthis.notifier.setAuthorizationListener((request, response, error) => {\n  log('Authorization request complete ', request, response, error);\n  if (response) {\n    this.code = response.code;\n    this.showMessage(`Authorization Code ${response.code}`);\n  }\n});\n\n// create a request\nlet request = new AuthorizationRequest({\n    client_id: clientId,\n    redirect_uri: redirectUri,\n    scope: scope,\n    response_type: AuthorizationRequest.RESPONSE_TYPE_CODE,\n    state: undefined,\n    extras: {'prompt': 'consent', 'access_type': 'offline'}\n  });\n\n// make the authorization request\nthis.authorizationHandler.performAuthorizationRequest(this.configuration, request);\n```\n\n##### Making Token Requests\n\n```typescript\nthis.tokenHandler = new BaseTokenRequestHandler();\n\nlet request: TokenRequest|null = null;\n\nif (this.code) {\n  let extras: StringMap|undefined = undefined;\n  if (this.request && this.request.internal) {\n    extras = {};\n    extras['code_verifier'] = this.request.internal['code_verifier'];\n  }\n  // use the code to make the token request.\n  request = new TokenRequest({\n      client_id: clientId,\n      redirect_uri: redirectUri,\n      grant_type: GRANT_TYPE_AUTHORIZATION_CODE,\n      code: this.code,\n      refresh_token: undefined,\n      extras: extras\n    });\n} else if (this.tokenResponse) {\n  // use the token response to make a request for an access token\n  request = new TokenRequest({\n      client_id: clientId,\n      redirect_uri: redirectUri,\n      grant_type: GRANT_TYPE_REFRESH_TOKEN,\n      code: undefined,\n      refresh_token: this.tokenResponse.refreshToken,\n      extras: undefined\n    });\n}\n\nthis.tokenHandler.performTokenRequest(this.configuration, request)\n  .then(response => {\n    // ... do something with token response\n  });\n```\n\n### Development\n\n#### Preamble\n\nThis client has been written with [TypeScript](https://typescriptlang.org).\n\n### Setup\n\n* Install the latest version of [Node](https://nodejs.org/en/).\n  [NVM](https://github.com/creationix/nvm)\n  (Node Version Manager is highly recommended).\n\n* Use `nvm install` to install the recommended Node.js version.\n\n* Download the latest version of Visual Studio Code from\n  [here](https://code.visualstudio.com/).\n\n#### Provision Dependencies\n\nThis app uses `npm` to provision it dependencies.\n\n* `git clone` the `AppAuthJS` library and go to the root folder of\n   the project containing `package.json` file.\n* `npm install` to install all the dev and project dependencies.\n\nThats it! You are now ready to start working on `AppAuthJS`.\n\n#### Development Workflow\n\nThe project uses `npm` scripts to automate development workflows.\nThese scripts are made available via the `package.json` file.\n\nThe following scripts are included:\n\n* `npm run-script compile` or `tsc` will compile all your TypeScript files.\n   All compiled files go into the `built/` folder.\n\n* `npm run-script watch` or `tsc --watch` will compile your TypeScript files\n   in `watch` mode. Recommended if you want to get continuous feedback.\n\n* `npm run-script build-app` generates the output `bundle.js` file in the `built/`\n   directory. This includes the full `AppAuthJS` library including all\n   its dependencies.\n\n* `npm test` provisions the `Karma` test runner to run all unit tests.\n   All tests are written using [Jasmine](http://jasmine.github.io/).\n   To _DEBUG_ your tests, click on the `Debug` button in the Karma test runner\n   to look at the actual source of the tests. You can attach break points here.\n\n* `npm run-script app` builds the test app on a local web server.\n   This is an end-to-end app which uses AppAuthJS and is a demonstration\n   on how to use the library.\n\n* `npm run-script node-app` builds a Node.js CLI sample app. This is an end-to-end app\n   which uses AppAuthJS in a Node.js context.\n\n",
    "licenseText": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@openid/appauth/-/appauth-1.3.1.tgz#851e86507b95f9bbe1d05374eb62aaf9b2378f9b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@openid/appauth/-/appauth-1.3.1.tgz",
    "hash": "851e86507b95f9bbe1d05374eb62aaf9b2378f9b",
    "integrity": "sha512-e54kpi219wES2ijPzeHe1kMnT8VKH8YeTd1GAn9BzVBmutz3tBgcG1y8a4pziNr4vNjFnuD4W446Ua7ELnNDiA==",
    "registry": "npm",
    "packageName": "@openid/appauth",
    "cacheIntegrity": "sha512-e54kpi219wES2ijPzeHe1kMnT8VKH8YeTd1GAn9BzVBmutz3tBgcG1y8a4pziNr4vNjFnuD4W446Ua7ELnNDiA== sha1-hR6GUHuV+bvh0FN062Kq+bI3j5s="
  },
  "registry": "npm",
  "hash": "851e86507b95f9bbe1d05374eb62aaf9b2378f9b"
}