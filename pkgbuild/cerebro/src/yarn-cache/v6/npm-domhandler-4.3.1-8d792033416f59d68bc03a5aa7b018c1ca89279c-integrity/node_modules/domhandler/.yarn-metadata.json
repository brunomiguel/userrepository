{
  "manifest": {
    "name": "domhandler",
    "version": "4.3.1",
    "description": "Handler for htmlparser2 that turns pages into a dom",
    "author": {
      "name": "Felix Boehm",
      "email": "me@feedic.com"
    },
    "funding": {
      "url": "https://github.com/fb55/domhandler?sponsor=1"
    },
    "license": "BSD-2-Clause",
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "sideEffects": false,
    "files": [
      "lib"
    ],
    "scripts": {
      "test": "npm run test:jest && npm run lint",
      "test:jest": "jest",
      "lint": "eslint src",
      "format": "prettier --write '**/*.{ts,md,json}'",
      "build": "tsc",
      "prepare": "npm run build"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/fb55/domhandler.git"
    },
    "keywords": [
      "dom",
      "htmlparser2"
    ],
    "engines": {
      "node": ">= 4"
    },
    "dependencies": {
      "domelementtype": "^2.2.0"
    },
    "devDependencies": {
      "@types/jest": "^27.4.1",
      "@types/node": "^17.0.21",
      "@typescript-eslint/eslint-plugin": "^5.15.0",
      "@typescript-eslint/parser": "^5.15.0",
      "eslint": "^8.11.0",
      "eslint-config-prettier": "^8.5.0",
      "htmlparser2": "^7.2.0",
      "jest": "^27.5.1",
      "prettier": "^2.6.0",
      "ts-jest": "^27.1.3",
      "typescript": "^4.6.2"
    },
    "jest": {
      "preset": "ts-jest",
      "testEnvironment": "node"
    },
    "prettier": {
      "tabWidth": 4
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-domhandler-4.3.1-8d792033416f59d68bc03a5aa7b018c1ca89279c-integrity/node_modules/domhandler/package.json",
    "readmeFilename": "readme.md",
    "readme": "# domhandler [![Build Status](https://travis-ci.com/fb55/domhandler.svg?branch=master)](https://travis-ci.com/fb55/domhandler)\n\nThe DOM handler creates a tree containing all nodes of a page.\nThe tree can be manipulated using the [domutils](https://github.com/fb55/domutils)\nor [cheerio](https://github.com/cheeriojs/cheerio) libraries and\nrendered using [dom-serializer](https://github.com/cheeriojs/dom-serializer) .\n\n## Usage\n\n```javascript\nconst handler = new DomHandler([ <func> callback(err, dom), ] [ <obj> options ]);\n// const parser = new Parser(handler[, options]);\n```\n\nAvailable options are described below.\n\n## Example\n\n```javascript\nconst { Parser } = require(\"htmlparser2\");\nconst { DomHandler } = require(\"domhandler\");\nconst rawHtml =\n    \"Xyz <script language= javascript>var foo = '<<bar>>';</script><!--<!-- Waah! -- -->\";\nconst handler = new DomHandler((error, dom) => {\n    if (error) {\n        // Handle error\n    } else {\n        // Parsing completed, do something\n        console.log(dom);\n    }\n});\nconst parser = new Parser(handler);\nparser.write(rawHtml);\nparser.end();\n```\n\nOutput:\n\n```javascript\n[\n    {\n        data: \"Xyz \",\n        type: \"text\",\n    },\n    {\n        type: \"script\",\n        name: \"script\",\n        attribs: {\n            language: \"javascript\",\n        },\n        children: [\n            {\n                data: \"var foo = '<bar>';<\",\n                type: \"text\",\n            },\n        ],\n    },\n    {\n        data: \"<!-- Waah! -- \",\n        type: \"comment\",\n    },\n];\n```\n\n## Option: `withStartIndices`\n\nAdd a `startIndex` property to nodes.\nWhen the parser is used in a non-streaming fashion, `startIndex` is an integer\nindicating the position of the start of the node in the document.\nThe default value is `false`.\n\n## Option: `withEndIndices`\n\nAdd an `endIndex` property to nodes.\nWhen the parser is used in a non-streaming fashion, `endIndex` is an integer\nindicating the position of the end of the node in the document.\nThe default value is `false`.\n\n## Option: `normalizeWhitespace` _(deprecated)_\n\nReplace all whitespace with single spaces.\nThe default value is `false`.\n\n**Note:** Enabling this might break your markup.\n\nFor the following examples, this HTML will be used:\n\n```html\n<font> <br />this is the text <font></font></font>\n```\n\n### Example: `normalizeWhitespace: true`\n\n```javascript\n[\n    {\n        type: \"tag\",\n        name: \"font\",\n        children: [\n            {\n                data: \" \",\n                type: \"text\",\n            },\n            {\n                type: \"tag\",\n                name: \"br\",\n            },\n            {\n                data: \"this is the text \",\n                type: \"text\",\n            },\n            {\n                type: \"tag\",\n                name: \"font\",\n            },\n        ],\n    },\n];\n```\n\n### Example: `normalizeWhitespace: false`\n\n```javascript\n[\n    {\n        type: \"tag\",\n        name: \"font\",\n        children: [\n            {\n                data: \"\\n\\t\",\n                type: \"text\",\n            },\n            {\n                type: \"tag\",\n                name: \"br\",\n            },\n            {\n                data: \"this is the text\\n\",\n                type: \"text\",\n            },\n            {\n                type: \"tag\",\n                name: \"font\",\n            },\n        ],\n    },\n];\n```\n\n---\n\nLicense: BSD-2-Clause\n\n## Security contact information\n\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure.\n\n## `domhandler` for enterprise\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of `domhandler` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-domhandler?utm_source=npm-domhandler&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n",
    "licenseText": "Copyright (c) Felix BÃ¶hm\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/domhandler/-/domhandler-4.3.1.tgz#8d792033416f59d68bc03a5aa7b018c1ca89279c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/domhandler/-/domhandler-4.3.1.tgz",
    "hash": "8d792033416f59d68bc03a5aa7b018c1ca89279c",
    "integrity": "sha512-GrwoxYN+uWlzO8uhUXRl0P+kHE4GtVPfYzVLcUxPL7KNdHKj66vvlhiweIHqYYXWlw+T8iLMp42Lm67ghw4WMQ==",
    "registry": "npm",
    "packageName": "domhandler",
    "cacheIntegrity": "sha512-GrwoxYN+uWlzO8uhUXRl0P+kHE4GtVPfYzVLcUxPL7KNdHKj66vvlhiweIHqYYXWlw+T8iLMp42Lm67ghw4WMQ== sha1-jXkgM0FvWdaLwDpap7AYwcqJJ5w="
  },
  "registry": "npm",
  "hash": "8d792033416f59d68bc03a5aa7b018c1ca89279c"
}