{
  "manifest": {
    "name": "eslint-import-resolver-webpack",
    "version": "0.13.2",
    "description": "Resolve paths to dependencies, given a webpack.config.js. Plugin for eslint-plugin-import.",
    "main": "index.js",
    "scripts": {
      "prepublishOnly": "cp ../../{LICENSE,.npmrc} ./",
      "tests-only": "nyc mocha -t 5s",
      "test": "npm run tests-only"
    },
    "files": [
      "index.js",
      "config.js"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/import-js/eslint-plugin-import.git"
    },
    "keywords": [
      "eslint-plugin-import",
      "eslint",
      "jsnext",
      "modules",
      "webpack"
    ],
    "author": {
      "name": "Ben Mosher",
      "url": "me@benmosher.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/import-js/eslint-plugin-import/issues"
    },
    "homepage": "https://github.com/import-js/eslint-plugin-import/tree/HEAD/resolvers/webpack",
    "dependencies": {
      "array-find": "^1.0.0",
      "debug": "^3.2.7",
      "enhanced-resolve": "^0.9.1",
      "find-root": "^1.1.0",
      "has": "^1.0.3",
      "interpret": "^1.4.0",
      "is-core-module": "^2.7.0",
      "is-regex": "^1.1.4",
      "lodash": "^4.17.21",
      "resolve": "^1.20.0",
      "semver": "^5.7.1"
    },
    "peerDependencies": {
      "eslint-plugin-import": ">=1.4.0",
      "webpack": ">=1.11.0"
    },
    "devDependencies": {
      "babel-plugin-istanbul": "^4.1.6",
      "babel-register": "^6.26.0",
      "chai": "^3.5.0",
      "mocha": "^3.5.3",
      "nyc": "^11.9.0",
      "webpack": "https://gist.github.com/ljharb/9cdb687f3806f8e6cb8a365d0b7840eb"
    },
    "engines": {
      "node": ">= 6"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-eslint-import-resolver-webpack-0.13.2-fc813df0d08b9265cc7072d22393bda5198bdc1e-integrity/node_modules/eslint-import-resolver-webpack/package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-import-resolver-webpack\n\n[![npm](https://img.shields.io/npm/v/eslint-import-resolver-webpack.svg)](https://www.npmjs.com/package/eslint-import-resolver-webpack)\n\nWebpack-literate module resolution plugin for [`eslint-plugin-import`](https://www.npmjs.com/package/eslint-plugin-import).\n\n> :boom: Only \"synchronous\" Webpack configs are supported at the moment.\n> If your config returns a `Promise`, this will cause problems.\n> Consider splitting your asynchronous configuration to a separate config.\n\nPublished separately to allow pegging to a specific version in case of breaking\nchanges.\n\nTo use with `eslint-plugin-import`, run:\n\n```\nnpm i eslint-import-resolver-webpack -g\n```\n\nor if you manage ESLint as a dev dependency:\n\n```\n# inside your project's working tree\nnpm install eslint-import-resolver-webpack --save-dev\n```\n\nWill look for `webpack.config.js` as a sibling of the first ancestral `package.json`,\nor a `config` parameter may be provided with another filename/path either relative to the\n`package.json`, or a complete, absolute path.\n\nIf multiple webpack configurations are found the first configuration containing a resolve section will be used. Optionally, the `config-index` (zero-based) setting can be used to select a specific configuration.\n\n```yaml\n---\nsettings:\n  import/resolver: webpack  # take all defaults\n```\n\nor with explicit config file name:\n\n```yaml\n---\nsettings:\n  import/resolver:\n    webpack:\n      config: 'webpack.dev.config.js'\n```\n\nor with explicit config file index:\n\n```yaml\n---\nsettings:\n  import/resolver:\n    webpack:\n      config: 'webpack.multiple.config.js'\n      config-index: 1   # take the config at index 1\n```\n\nor with explicit config file path relative to your projects's working directory:\n\n```yaml\n---\nsettings:\n  import/resolver:\n    webpack:\n      config: './configs/webpack.dev.config.js'\n```\n\nor with explicit config object:\n\n```yaml\n---\nsettings:\n  import/resolver:\n    webpack:\n      config:\n        resolve:\n          extensions:\n            - .js\n            - .jsx\n```\n\nIf your config relies on [environment variables](https://webpack.js.org/guides/environment-variables/), they can be specified using the `env` parameter.  If your config is a function, it will be invoked with the value assigned to `env`:\n\n```yaml\n---\nsettings:\n  import/resolver:\n    webpack:\n      config: 'webpack.config.js'\n      env:\n        NODE_ENV: 'local'\n        production: true\n```\n\n## Support\n\n[Get supported eslint-import-resolver-webpack with the Tidelift Subscription](https://tidelift.com/subscription/pkg/npm-eslint-import-resolver-webpack?utm_source=npm-eslint-import-resolver-webpack&utm_medium=referral&utm_campaign=readme)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Ben Mosher\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-import-resolver-webpack/-/eslint-import-resolver-webpack-0.13.2.tgz#fc813df0d08b9265cc7072d22393bda5198bdc1e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-import-resolver-webpack/-/eslint-import-resolver-webpack-0.13.2.tgz",
    "hash": "fc813df0d08b9265cc7072d22393bda5198bdc1e",
    "integrity": "sha512-XodIPyg1OgE2h5BDErz3WJoK7lawxKTJNhgPNafRST6csC/MZC+L5P6kKqsZGRInpbgc02s/WZMrb4uGJzcuRg==",
    "registry": "npm",
    "packageName": "eslint-import-resolver-webpack",
    "cacheIntegrity": "sha512-XodIPyg1OgE2h5BDErz3WJoK7lawxKTJNhgPNafRST6csC/MZC+L5P6kKqsZGRInpbgc02s/WZMrb4uGJzcuRg== sha1-/IE98NCLkmXMcHLSI5O9pRmL3B4="
  },
  "registry": "npm",
  "hash": "fc813df0d08b9265cc7072d22393bda5198bdc1e"
}