{
  "manifest": {
    "name": "color-convert",
    "description": "Plain color conversion functions",
    "version": "0.5.3",
    "author": {
      "name": "Heather Arthur",
      "email": "fayearthur@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "http://github.com/harthur/color-convert.git"
    },
    "devDependencies": {},
    "scripts": {
      "test": "node test/basic.js"
    },
    "keywords": [
      "color",
      "colour",
      "rgb"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-color-convert-0.5.3-bdb6c69ce660fadffe0b0007cc447e1b9f7282bd-integrity/node_modules/color-convert/package.json",
    "readmeFilename": "README.md",
    "readme": "# color-convert [![Build Status](https://travis-ci.org/harthur/color-convert.svg?branch=master)](https://travis-ci.org/harthur/color-convert)\nColor-convert is a color conversion library for JavaScript and node. It converts all ways between `rgb`, `hsl`, `hsv`, `hwb`, `cmyk`, and CSS keywords:\n\n```js\nvar converter = require(\"color-convert\")();\n\nconverter.rgb(140, 200, 100).hsl()   // [96, 48, 59]\n\nconverter.keyword(\"blue\").rgb()      // [0, 0, 255]\n```\n\n# Install\n\n```console\nnpm install color-convert\n```\n\n# API\n\nColor-convert exports a converter object with getter/setter methods for each color space. It caches conversions:\n\n```js\nvar converter = require(\"color-convert\")();\n\nconverter.rgb(140, 200, 100).hsl()   // [96, 48, 59]\n\nconverter.rgb([140, 200, 100])       // args can be an array\n```\n\n### Plain functions\nGet direct conversion functions with no fancy objects:\n\n```js\nrequire(\"color-convert\").rgb2hsl([140, 200, 100]);   // [96, 48, 59]\n```\n\n### Unrounded\nTo get the unrounded conversion, append `Raw` to the function name:\n\n```js\nconvert.rgb2hslRaw([140, 200, 100]);   // [95.99999999999999, 47.619047619047606, 58.82352941176471]\n```\n\n### Hash\nThere's also a hash of the conversion functions keyed first by the \"from\" color space, then by the \"to\" color space:\n\n```js\nconvert[\"hsl\"][\"hsv\"]([160, 0, 20]) == convert.hsl2hsv([160, 0, 20])\n```\n\n### Other spaces\n\nThere are some conversions from rgb (sRGB) to XYZ and LAB too, available as `rgb2xyz()`, `rgb2lab()`, `xyz2rgb()`, and `xyz2lab()`.\n\n# Contribute\n\nPlease fork, add conversions, figure out color profile stuff for XYZ, LAB, etc. This is meant to be a basic library that can be used by other libraries to wrap color calculations in some cool way.\n",
    "licenseText": "Copyright (c) 2011 Heather Arthur <fayearthur@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n",
    "license": "MIT"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/color-convert/-/color-convert-0.5.3.tgz#bdb6c69ce660fadffe0b0007cc447e1b9f7282bd",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/color-convert/-/color-convert-0.5.3.tgz",
    "hash": "bdb6c69ce660fadffe0b0007cc447e1b9f7282bd",
    "integrity": "sha512-RwBeO/B/vZR3dfKL1ye/vx8MHZ40ugzpyfeVG5GsiuGnrlMWe2o8wxBbLCpw9CsxV+wHuzYlCiWnybrIA0ling==",
    "registry": "npm",
    "packageName": "color-convert",
    "cacheIntegrity": "sha512-RwBeO/B/vZR3dfKL1ye/vx8MHZ40ugzpyfeVG5GsiuGnrlMWe2o8wxBbLCpw9CsxV+wHuzYlCiWnybrIA0ling== sha1-vbbGnOZg+t/+CwAHzER+G59ygr0="
  },
  "registry": "npm",
  "hash": "bdb6c69ce660fadffe0b0007cc447e1b9f7282bd"
}