{
  "manifest": {
    "name": "prettier-plugin-jsdoc",
    "version": "0.4.2",
    "description": "A Prettier plugin to format JSDoc comments.",
    "private": false,
    "workspaces": {
      "prettier-plugin-fake": "./prettier-plugin-fake"
    },
    "main": "dist/index.js",
    "module": "dist/index.min.mjs",
    "unpkg": "dist/index.umd.min.js",
    "types": "dist/index.d.ts",
    "files": [
      "dist/index.js",
      "dist/index.min.mjs",
      "dist/index.umd.min.js",
      "dist/index.d.ts"
    ],
    "scripts": {
      "prepare": "yarn build",
      "lint": "eslint --ext '.ts' ./src",
      "test": "yarn build --test && jest",
      "release": "standard-version && yarn publish && git push --follow-tags origin master",
      "prettierAll": "prettier --write \"**/*.ts\"",
      "clean": "rm -fr dist",
      "build": "node script.mjs"
    },
    "keywords": [
      "prettier",
      "plugin",
      "jsdoc",
      "comment"
    ],
    "author": {
      "name": "Hossein mohammadi",
      "url": "hosseinm.developer@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/hosseinmd/prettier-plugin-jsdoc/issues"
    },
    "homepage": "https://github.com/hosseinmd/prettier-plugin-jsdoc#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/hosseinmd/prettier-plugin-jsdoc.git"
    },
    "devDependencies": {
      "@babel/core": "^7.18.5",
      "@babel/preset-env": "^7.18.2",
      "@commitlint/config-conventional": "^14.1.0",
      "@rollup/plugin-commonjs": "^21.0.3",
      "@rollup/plugin-json": "^4.1.0",
      "@rollup/plugin-node-resolve": "^13.1.3",
      "@types/jest": "^27.4.1",
      "@types/mdast": "^3.0.10",
      "@typescript-eslint/eslint-plugin": "^5.3.0",
      "@typescript-eslint/parser": "^5.3.0",
      "babel-jest": "^28.1.1",
      "commitlint": "^14.1.0",
      "eslint": "^8.1.0",
      "eslint-config-prettier": "^8.5.0",
      "eslint-plugin-prettier": "^4.0.0",
      "husky": "^7.0.4",
      "jest": "^27.5.1",
      "jest-specific-snapshot": "^5.0.0",
      "prettier": "^2.6.1",
      "rollup": "^2.70.1",
      "standard-version": "^9.3.2",
      "terser": "^5.12.1",
      "ts-jest": "^27.1.4",
      "typescript": "^4.4.4"
    },
    "peerDependencies": {
      "prettier": ">=2.1.2"
    },
    "dependencies": {
      "binary-searching": "^2.0.5",
      "comment-parser": "^1.3.1",
      "mdast-util-from-markdown": "^1.2.0"
    },
    "engines": {
      "node": ">=12.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-prettier-plugin-jsdoc-0.4.2-c5668fc622ed10b87d988279476f96af96b058b7-integrity/node_modules/prettier-plugin-jsdoc/package.json",
    "readmeFilename": "README.md",
    "readme": "[![NPM](https://nodei.co/npm/prettier-plugin-jsdoc.png)](https://nodei.co/npm/prettier-plugin-jsdoc/)\n\n[![install size](https://packagephobia.now.sh/badge?p=prettier-plugin-jsdoc)](https://packagephobia.now.sh/result?p=prettier-plugin-jsdoc)\n[![dependencies](https://david-dm.org/hosseinmd/prettier-plugin-jsdoc.svg)](https://david-dm.org/hosseinmd/prettier-plugin-jsdoc.svg)\n\n![Prettier Banner](https://raw.githubusercontent.com/prettier/prettier-logo/master/images/prettier-banner-light.png)\n\n# prettier-plugin-jsdoc\n\nPrettier plugin for format comment blocks and convert to standard\nMatch with Visual studio and other IDE which support jsdoc and comments as markdown.\n\nMany good examples of how this plugin work, are in tests directory.\nCompare tests and their snapshot\n\nConfigured with best practices of jsDoc style guides.\n\n## TOC\n\n- [Installation](#Installation)\n- [Examples](#Examples)\n- [Links](#Links)\n- [Options](#Options)\n- [Support](#Support)\n\n## Installation\n\n1. Install and configure Prettier as usual\n2. Install prettier-plugin-jsdoc\n\n```npm\nnpm i prettier-plugin-jsdoc --save\n```\n\n```yarn\nyarn add prettier-plugin-jsdoc\n```\n\n## Config\n\nSet `prettier-plugin-jsdoc` to your plugins list.\n\n.prettierrc\n\n```json\n{\n  \"plugins\": [\"prettier-plugin-jsdoc\"],\n};\n```\n\nIf you want ignore some type of files remove \"prettier-plugin-jsdoc\" from plugins or add empty plugins\n\n```.prettierrc.js\nmodule.exports = {\n  \"plugins\": [\"prettier-plugin-jsdoc\"]\n  overrides: [\n    {\n      files: '*.tsx',\n      options: {\n        \"plugins\": []\n      },\n    },\n  ],\n};\n```\n\n## Ignore\n\nTo ignore prettier use `/* */` or `//` instead of /\\*\\* \\*/\n\n## Examples\n\n#### Single line\n\n```js\n/**\n * @param {  string   }    param0 description\n */\nfunction fun(param0) {}\n```\n\nFormat to\n\n```js\n/** @param {string} param0 Description */\nfunction fun(param0) {}\n```\n\n#### React Component\n\n```js\n/**\n * @type {React.FC<{   message:string}   >}\n */\nconst Component = memo(({ message }) => {\n  return <p>{message}</p>;\n});\n```\n\nFormat to\n\n```js\n/** @type {React.FC<{message: string}>} */\nconst Component = memo(({ message }) => {\n  return <p>{message}</p>;\n});\n```\n\n#### Typescript Objects\n\n```js\n/**\n @typedef {\n    {\n        \"userId\": {\n        \"profileImageLink\": *,\n        \"isBusinessUser\": \"isResellerUser\"|\"isBoolean\"|  \"isSubUser\" |    \"isNot\",\n        \"shareCode\": number,\n        \"referredBy\": any,\n        },\n        id:number\n      }\n     } User\n     */\n```\n\nFormat to\n\n```js\n/**\n * @typedef {{\n *   userId: {\n *     profileImageLink: any;\n *     isBusinessUser: \"isResellerUser\" | \"isBoolean\" | \"isSubUser\" | \"isNot\";\n *     shareCode: number;\n *     referredBy: any;\n *   };\n *   id: number;\n * }} User\n */\n```\n\n#### Example\n\nAdd code to example tag\n\n```js\n/**\n * @examples\n *   var one= 5\n *   var two=10\n *\n *   if(one > 2) { two += one }\n */\n```\n\nto\n\n```js\n/**\n * @example\n *   var one = 5;\n *   var two = 10;\n *\n *   if (one > 2) {\n *     two += one;\n *   }\n */\n```\n\n#### Description\n\nDescription is formatting as Markdown, so you could use any features of Markdown on that. Like code tags (\"```js\"), header tags like \"# AHeader\" or other markdown features.\n\n## Options\n\n| Key                               | type    | Default   | description                                                                                 |\n| :-------------------------------- | :------ | :-------- | ------------------------------------------------------------------------------------------- |\n| jsdocSpaces                       | Number  | 1         |\n| jsdocDescriptionWithDot           | Boolean | false     |\n| jsdocDescriptionTag               | Boolean | false     |\n| jsdocVerticalAlignment            | Boolean | false     |\n| jsdocKeepUnParseAbleExampleIndent | Boolean | false     |\n| jsdocSingleLineComment            | Boolean | true      |\n| jsdocCapitalizeDescription        | Boolean | true      |\n| jsdocSeparateReturnsFromParam     | Boolean | false     | Add an space between last @param and @returns                                              |\n| jsdocSeparateTagGroups            | Boolean | false     | Add an space between tag groups                                                            |\n| jsdocPreferCodeFences             | Boolean | false     | Always fence code blocks (surround them by triple backticks)                               |\n| tsdoc                             | Boolean | false     |\n| jsdocPrintWidth                   | Number  | undefined | If You don't set value to jsdocPrintWidth, the printWidth will be use as jsdocPrintWidth.  |\n| jsdocLineWrappingStyle            | String  | \"greedy\"  | \"greedy\": Lines wrap as soon as they reach the print width                                 |\n\nFull up to date list and description of options can be found in Prettier help. First install plugin then run Prettier with \"--help\" option.\n\n`$ prettier --help` # global installation\n\n`$ ./node_modules/.bin/prettier --help` # local installation\n\n## ESLint\n\nInstall [eslint-plugin-prettier](https://github.com/prettier/eslint-plugin-prettier)\n\n```\n$ yarn add eslint eslint-plugin-prettier\n```\n\nThen, in your .eslintrc.json:\n\n```json\n{\n  \"plugins\": [\"prettier\"],\n  \"rules\": {\n    \"prettier/prettier\": \"error\"\n  }\n}\n```\n\n## Tsdoc\n\nWe hope to support whole tsdoc, if we missed somethings please create an issue.\n\n```json\n{\n  \"tsdoc\": true\n};\n```\n\n## Contribute\n\n1- Get a clone/fork of repo\n\n2- Install yarn\n\n3- Add your changes\n\n4- Add a test to your change if needed\n\n5- Create PR\n\nThis project extended from @gum3n worked project on GitLab.\n\n## Links\n\n[Prettier](https://prettier.io)\n\n[JSDoc](https://jsdoc.app)\n\n## Support\n\n[![Donate with Bitcoin](https://en.cryptobadges.io/badge/big/3APtLaZxL9Dk4enQmSY4qWBo5TctWuvW5T)](https://en.cryptobadges.io/donate/3APtLaZxL9Dk4enQmSY4qWBo5TctWuvW5T)\n\n[![Donate with Ethereum](https://en.cryptobadges.io/badge/big/0x90a68640d77c8a03d1a5b55f49a5175c756cc3a3)](https://en.cryptobadges.io/donate/0x90a68640d77c8a03d1a5b55f49a5175c756cc3a3)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Hossein Mohammadi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/prettier-plugin-jsdoc/-/prettier-plugin-jsdoc-0.4.2.tgz#c5668fc622ed10b87d988279476f96af96b058b7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/prettier-plugin-jsdoc/-/prettier-plugin-jsdoc-0.4.2.tgz",
    "hash": "c5668fc622ed10b87d988279476f96af96b058b7",
    "integrity": "sha512-w2jnAQm3z0GAG0bhzVJeehzDtrhGMSxJjit5ApCc2oxWfc7+jmLAkbtdOXaSpfwZz3IWkk+PiQPeRrLNpbM+Mw==",
    "registry": "npm",
    "packageName": "prettier-plugin-jsdoc",
    "cacheIntegrity": "sha512-w2jnAQm3z0GAG0bhzVJeehzDtrhGMSxJjit5ApCc2oxWfc7+jmLAkbtdOXaSpfwZz3IWkk+PiQPeRrLNpbM+Mw== sha1-xWaPxiLtELh9mIJ5R2+Wr5awWLc="
  },
  "registry": "npm",
  "hash": "c5668fc622ed10b87d988279476f96af96b058b7"
}