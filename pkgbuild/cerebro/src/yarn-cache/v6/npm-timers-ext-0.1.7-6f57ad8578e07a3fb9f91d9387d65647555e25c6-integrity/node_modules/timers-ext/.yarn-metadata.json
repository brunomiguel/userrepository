{
  "manifest": {
    "name": "timers-ext",
    "version": "0.1.7",
    "description": "Timers extensions",
    "author": {
      "name": "Mariusz Nowak",
      "email": "medyk@medikoo.com",
      "url": "http://www.medikoo.com/"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/medikoo/timers-ext.git"
    },
    "keywords": [
      "timeout",
      "delay",
      "interval",
      "time",
      "timer",
      "timers"
    ],
    "dependencies": {
      "es5-ext": "~0.10.46",
      "next-tick": "1"
    },
    "devDependencies": {
      "eslint": "^5.6.1",
      "eslint-config-medikoo-es5": "^1.7.2",
      "tad": "^0.2.8"
    },
    "eslintConfig": {
      "extends": "medikoo-es5",
      "root": true,
      "globals": {
        "clearInterval": true,
        "clearTimeout": true,
        "setInterval": true,
        "setTimeout": true
      }
    },
    "scripts": {
      "lint": "eslint --ignore-path=.gitignore .",
      "test": "node node_modules/tad/bin/tad"
    },
    "license": "ISC",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-timers-ext-0.1.7-6f57ad8578e07a3fb9f91d9387d65647555e25c6-integrity/node_modules/timers-ext/package.json",
    "readmeFilename": "README.md",
    "readme": "[![Build status][nix-build-image]][nix-build-url]\n[![Windows status][win-build-image]][win-build-url]\n![Transpilation status][transpilation-image]\n[![npm version][npm-image]][npm-url]\n\n# timers-ext\n\n## Timers extensions\n\n### Installation\n\n    $ npm install timers-ext\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### API\n\n#### MAX*TIMEOUT *(timers-ext/max-timeout)\\_\n\nMaximum possible timeout value in milliseconds. It equals to maximum positive value for 32bit signed integer, so _2³¹ (2147483647)_, which makes it around 24.9 days\n\n#### delay(fn[, timeout]) _(timers-ext/delay)_\n\nReturns function which when invoked will call _fn_ function after specified\n_timeout_. If _timeout_ is not provided [nextTick](https://github.com/medikoo/next-tick/#next-tick) propagation is used.\n\n#### once(fn[, timeout]) _(timers-ext/once)_\n\nMakes sure to execute _fn_ function only once after a defined interval of time (debounce). If _timeout_ is not provided [nextTick](https://github.com/medikoo/next-tick/#next-tick) propagation is used.\n\n```javascript\nvar nextTick = require(\"next-tick\");\nvar logFoo = function() {\n\tconsole.log(\"foo\");\n};\nvar logFooOnce = require(\"timers-ext/once\")(logFoo);\n\nlogFooOnce();\nlogFooOnce(); // ignored, logFoo will be logged only once\nlogFooOnce(); // ignored\n\nnextTick(function() {\n\tlogFooOnce(); // Invokes another log (as tick passed)\n\tlogFooOnce(); // ignored\n\tlogFooOnce(); // ignored\n});\n```\n\n#### validTimeout(timeout) _(timers-ext/valid-timeout)_\n\nValidates timeout value.  \nFor `NaN` resolved _timeout_ `0` is returned.\nIf _timeout_ resolves to a number:\n\n-   for _timeout < 0_ `0` is returned\n-   for _0 >= timeout <= [MAX_TIMEOUT](#max_timeout-timers-extmax-timeout)_, `timeout` value is returned\n-   for _timeout > [MAX_TIMEOUT](#max_timeout-timers-extmax-timeout)_ exception is thrown\n\n### Tests\n\n    $ npm test\n\n[nix-build-image]: https://semaphoreci.com/api/v1/medikoo-org/timers-ext/branches/master/shields_badge.svg\n[nix-build-url]: https://semaphoreci.com/medikoo-org/timers-ext\n[win-build-image]: https://ci.appveyor.com/api/projects/status/2i5nerowov2ho3o9?svg=true\n[win-build-url]: https://ci.appveyor.com/project/medikoo/timers-ext\n[transpilation-image]: https://img.shields.io/badge/transpilation-free-brightgreen.svg\n[npm-image]: https://img.shields.io/npm/v/timers-ext.svg\n[npm-url]: https://www.npmjs.com/package/timers-ext\n",
    "licenseText": "ISC License\n\nCopyright (c) 2013-2018, Mariusz Nowak, @medikoo, medikoo.com\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\nOR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/timers-ext/-/timers-ext-0.1.7.tgz#6f57ad8578e07a3fb9f91d9387d65647555e25c6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/timers-ext/-/timers-ext-0.1.7.tgz",
    "hash": "6f57ad8578e07a3fb9f91d9387d65647555e25c6",
    "integrity": "sha512-b85NUNzTSdodShTIbky6ZF02e8STtVVfD+fu4aXXShEELpozH+bCpJLYMPZbsABN2wDH7fJpqIoXxJpzbf0NqQ==",
    "registry": "npm",
    "packageName": "timers-ext",
    "cacheIntegrity": "sha512-b85NUNzTSdodShTIbky6ZF02e8STtVVfD+fu4aXXShEELpozH+bCpJLYMPZbsABN2wDH7fJpqIoXxJpzbf0NqQ== sha1-b1ethXjgej+5+R2Th9ZWR1VeJcY="
  },
  "registry": "npm",
  "hash": "6f57ad8578e07a3fb9f91d9387d65647555e25c6"
}