{
  "manifest": {
    "name": "babel-register",
    "version": "6.26.0",
    "description": "babel require hook",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/babel/babel/tree/master/packages/babel-register"
    },
    "author": {
      "name": "Sebastian McKenzie",
      "email": "sebmck@gmail.com"
    },
    "main": "lib/node.js",
    "browser": "lib/browser.js",
    "dependencies": {
      "babel-core": "^6.26.0",
      "babel-runtime": "^6.26.0",
      "core-js": "^2.5.0",
      "home-or-tmp": "^2.0.0",
      "lodash": "^4.17.4",
      "mkdirp": "^0.5.1",
      "source-map-support": "^0.4.15"
    },
    "devDependencies": {
      "decache": "^4.1.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-babel-register-6.26.0-6ed021173e2fcb486d7acb45c6009a856f647071-integrity/node_modules/babel-register/package.json",
    "readmeFilename": "README.md",
    "readme": "# babel-register\n\n> The require hook will bind itself to node's require and automatically compile files on the fly.\n\nOne of the ways you can use Babel is through the require hook. The require hook\nwill bind itself to node's `require` and automatically compile files on the\nfly. This is equivalent to CoffeeScript's\n[coffee-script/register](http://coffeescript.org/v2/annotated-source/register.html).\n\n## Install\n\n```sh\nnpm install babel-register --save-dev\n```\n\n## Usage\n\n```js\nrequire(\"babel-register\");\n```\n\nAll subsequent files required by node with the extensions `.es6`, `.es`, `.jsx`\nand `.js` will be transformed by Babel.\n\n<blockquote class=\"babel-callout babel-callout-info\">\n  <h4>Polyfill not included</h4>\n  <p>\n    You must include the <a href=\"https://babeljs.io/docs/usage/polyfill/\">polyfill</a> separately\n    when using features that require it, like generators.\n  </p>\n</blockquote>\n\n### Ignores `node_modules` by default\n\n**NOTE:** By default all requires to `node_modules` will be ignored. You can\noverride this by passing an ignore regex via:\n\n```js\nrequire(\"babel-register\")({\n  // This will override `node_modules` ignoring - you can alternatively pass\n  // an array of strings to be explicitly matched or a regex / glob\n  ignore: false\n});\n```\n\n## Specifying options\n\n```javascript\nrequire(\"babel-register\")({\n  // Optional ignore regex - if any filenames **do** match this regex then they\n  // aren't compiled.\n  ignore: /regex/,\n\n  // Ignore can also be specified as a function.\n  ignore: function(filename) {\n    if (filename === \"/path/to/es6-file.js\") {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  // Optional only regex - if any filenames **don't** match this regex then they\n  // aren't compiled\n  only: /my_es6_folder/,\n\n  // Setting this will remove the currently hooked extensions of .es6, `.es`, `.jsx`\n  // and .js so you'll have to add them back if you want them to be used again.\n  extensions: [\".es6\", \".es\", \".jsx\", \".js\"],\n\n  // Setting this to false will disable the cache.\n  cache: true\n});\n```\n\nYou can pass in all other [options](https://babeljs.io/docs/usage/api/#options) as well,\nincluding `plugins` and `presets`. But note that the closest [`.babelrc`](https://babeljs.io/docs/usage/babelrc/)\nto each file still applies, and takes precedence over any options you pass in here.\n\n## Environment variables\n\nBy default `babel-node` and `babel-register` will save to a json cache in your\ntemporary directory.\n\nThis will heavily improve with the startup and compilation of your files. There\nare however scenarios where you want to change this behaviour and there are\nenvironment variables exposed to allow you to do this.\n\n### BABEL_CACHE_PATH\n\nSpecify a different cache location.\n\n```sh\nBABEL_CACHE_PATH=/foo/my-cache.json babel-node script.js\n```\n\n### BABEL_DISABLE_CACHE\n\nDisable the cache.\n\n```sh\nBABEL_DISABLE_CACHE=1 babel-node script.js\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-register/-/babel-register-6.26.0.tgz#6ed021173e2fcb486d7acb45c6009a856f647071",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-register/-/babel-register-6.26.0.tgz",
    "hash": "6ed021173e2fcb486d7acb45c6009a856f647071",
    "integrity": "sha1-btAhFz4vy0htestFxgCahW9kcHE=",
    "registry": "npm",
    "packageName": "babel-register",
    "cacheIntegrity": "sha512-veliHlHX06wjaeY8xNITbveXSiI+ASFnOqvne/LaIJIqOWi2Ogmj91KOugEz/hoh/fwMhXNBJPCv8Xaz5CyM4A== sha1-btAhFz4vy0htestFxgCahW9kcHE="
  },
  "registry": "npm",
  "hash": "6ed021173e2fcb486d7acb45c6009a856f647071"
}