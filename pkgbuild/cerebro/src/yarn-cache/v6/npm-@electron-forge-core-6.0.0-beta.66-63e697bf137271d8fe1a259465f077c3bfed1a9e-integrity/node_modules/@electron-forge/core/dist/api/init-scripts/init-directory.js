"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _asyncOra = require("@electron-forge/async-ora");
var _debug = _interopRequireDefault(require("debug"));
var _fsExtra = _interopRequireDefault(require("fs-extra"));
var _logSymbols = _interopRequireDefault(require("log-symbols"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const d = (0, _debug).default('electron-forge:init:directory');
var _default = async (dir, force = false)=>{
    await (0, _asyncOra).asyncOra('Initializing Project Directory', async (initSpinner)=>{
        d('creating directory:', dir);
        await _fsExtra.default.mkdirs(dir);
        const files = await _fsExtra.default.readdir(dir);
        if (files.length !== 0) {
            d(`found ${files.length} files in the directory.  warning the user`);
            if (force) {
                initSpinner.warn(`The specified path "${dir}" is not empty. "force" was set to true, so proceeding to initialize. Files may be overwritten`);
            } else {
                initSpinner.stop(_logSymbols.default.warning);
                throw new Error(`The specified path: "${dir}" is not empty.  Please ensure it is empty before initializing a new project`);
            }
        }
    });
};
exports.default = _default;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hcGkvaW5pdC1zY3JpcHRzL2luaXQtZGlyZWN0b3J5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzeW5jT3JhIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL2FzeW5jLW9yYSc7XG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzLWV4dHJhJztcbmltcG9ydCBsb2dTeW1ib2xzIGZyb20gJ2xvZy1zeW1ib2xzJztcblxuY29uc3QgZCA9IGRlYnVnKCdlbGVjdHJvbi1mb3JnZTppbml0OmRpcmVjdG9yeScpO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoZGlyOiBzdHJpbmcsIGZvcmNlID0gZmFsc2UpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgYXdhaXQgYXN5bmNPcmEoJ0luaXRpYWxpemluZyBQcm9qZWN0IERpcmVjdG9yeScsIGFzeW5jIChpbml0U3Bpbm5lcikgPT4ge1xuICAgIGQoJ2NyZWF0aW5nIGRpcmVjdG9yeTonLCBkaXIpO1xuICAgIGF3YWl0IGZzLm1rZGlycyhkaXIpO1xuXG4gICAgY29uc3QgZmlsZXMgPSBhd2FpdCBmcy5yZWFkZGlyKGRpcik7XG4gICAgaWYgKGZpbGVzLmxlbmd0aCAhPT0gMCkge1xuICAgICAgZChgZm91bmQgJHtmaWxlcy5sZW5ndGh9IGZpbGVzIGluIHRoZSBkaXJlY3RvcnkuICB3YXJuaW5nIHRoZSB1c2VyYCk7XG5cbiAgICAgIGlmIChmb3JjZSkge1xuICAgICAgICBpbml0U3Bpbm5lci53YXJuKGBUaGUgc3BlY2lmaWVkIHBhdGggXCIke2Rpcn1cIiBpcyBub3QgZW1wdHkuIFwiZm9yY2VcIiB3YXMgc2V0IHRvIHRydWUsIHNvIHByb2NlZWRpbmcgdG8gaW5pdGlhbGl6ZS4gRmlsZXMgbWF5IGJlIG92ZXJ3cml0dGVuYCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpbml0U3Bpbm5lci5zdG9wKGxvZ1N5bWJvbHMud2FybmluZyk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIHNwZWNpZmllZCBwYXRoOiBcIiR7ZGlyfVwiIGlzIG5vdCBlbXB0eS4gIFBsZWFzZSBlbnN1cmUgaXQgaXMgZW1wdHkgYmVmb3JlIGluaXRpYWxpemluZyBhIG5ldyBwcm9qZWN0YCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn07XG4iXSwibmFtZXMiOlsiZCIsImRlYnVnIiwiZGlyIiwiZm9yY2UiLCJhc3luY09yYSIsImluaXRTcGlubmVyIiwiZnMiLCJta2RpcnMiLCJmaWxlcyIsInJlYWRkaXIiLCJsZW5ndGgiLCJ3YXJuIiwic3RvcCIsImxvZ1N5bWJvbHMiLCJ3YXJuaW5nIiwiRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQXlCLEdBQTJCLENBQTNCLFNBQTJCO0FBQ2xDLEdBQU8sQ0FBUCxNQUFPO0FBQ1YsR0FBVSxDQUFWLFFBQVU7QUFDRixHQUFhLENBQWIsV0FBYTs7Ozs7O0FBRXBDLEtBQUssQ0FBQ0EsQ0FBQyxPQUFHQyxNQUFLLFVBQUMsQ0FBK0I7c0JBRXpCQyxHQUFXLEVBQUVDLEtBQUssR0FBRyxLQUFLLEdBQW9CLENBQUM7SUFDbkUsS0FBSyxLQUFDQyxTQUFRLFdBQUMsQ0FBZ0Msd0NBQVNDLFdBQVcsR0FBSyxDQUFDO1FBQ3ZFTCxDQUFDLENBQUMsQ0FBcUIsc0JBQUVFLEdBQUc7UUFDNUIsS0FBSyxDQUFDSSxRQUFFLFNBQUNDLE1BQU0sQ0FBQ0wsR0FBRztRQUVuQixLQUFLLENBQUNNLEtBQUssR0FBRyxLQUFLLENBQUNGLFFBQUUsU0FBQ0csT0FBTyxDQUFDUCxHQUFHO1FBQ2xDLEVBQUUsRUFBRU0sS0FBSyxDQUFDRSxNQUFNLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDdkJWLENBQUMsRUFBRSxNQUFNLEVBQUVRLEtBQUssQ0FBQ0UsTUFBTSxDQUFDLDBDQUEwQztZQUVsRSxFQUFFLEVBQUVQLEtBQUssRUFBRSxDQUFDO2dCQUNWRSxXQUFXLENBQUNNLElBQUksRUFBRSxvQkFBb0IsRUFBRVQsR0FBRyxDQUFDLDhGQUE4RjtZQUM1SSxDQUFDLE1BQU0sQ0FBQztnQkFDTkcsV0FBVyxDQUFDTyxJQUFJLENBQUNDLFdBQVUsU0FBQ0MsT0FBTztnQkFDbkMsS0FBSyxDQUFDLEdBQUcsQ0FBQ0MsS0FBSyxFQUFFLHFCQUFxQixFQUFFYixHQUFHLENBQUMsNEVBQTRFO1lBQzFILENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztBQUNILENBQUMifQ==