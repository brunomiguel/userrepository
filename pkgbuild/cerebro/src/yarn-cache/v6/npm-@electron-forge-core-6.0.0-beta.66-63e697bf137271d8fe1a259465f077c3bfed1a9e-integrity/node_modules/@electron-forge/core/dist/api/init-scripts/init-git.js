"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _asyncOra = require("@electron-forge/async-ora");
var _childProcess = require("child_process");
var _debug = _interopRequireDefault(require("debug"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const d = (0, _debug).default('electron-forge:init:git');
var _default = async (dir)=>{
    await (0, _asyncOra).asyncOra('Initializing Git Repository', async ()=>{
        await new Promise((resolve, reject)=>{
            (0, _childProcess).exec('git rev-parse --show-toplevel', {
                cwd: dir
            }, (err)=>{
                if (err) {
                    // not run within a Git repository
                    d('executing "git init" in directory:', dir);
                    (0, _childProcess).exec('git init', {
                        cwd: dir
                    }, (initErr)=>initErr ? reject(initErr) : resolve()
                    );
                } else {
                    d('.git directory already exists, skipping git initialization');
                    resolve();
                }
            });
        });
    });
};
exports.default = _default;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hcGkvaW5pdC1zY3JpcHRzL2luaXQtZ2l0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzeW5jT3JhIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL2FzeW5jLW9yYSc7XG5pbXBvcnQgeyBleGVjIH0gZnJvbSAnY2hpbGRfcHJvY2Vzcyc7XG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuXG5jb25zdCBkID0gZGVidWcoJ2VsZWN0cm9uLWZvcmdlOmluaXQ6Z2l0Jyk7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIChkaXI6IHN0cmluZyk6IFByb21pc2U8dm9pZD4gPT4ge1xuICBhd2FpdCBhc3luY09yYSgnSW5pdGlhbGl6aW5nIEdpdCBSZXBvc2l0b3J5JywgYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IG5ldyBQcm9taXNlPHZvaWQ+KChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGV4ZWMoXG4gICAgICAgICdnaXQgcmV2LXBhcnNlIC0tc2hvdy10b3BsZXZlbCcsXG4gICAgICAgIHtcbiAgICAgICAgICBjd2Q6IGRpcixcbiAgICAgICAgfSxcbiAgICAgICAgKGVycikgPT4ge1xuICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIC8vIG5vdCBydW4gd2l0aGluIGEgR2l0IHJlcG9zaXRvcnlcbiAgICAgICAgICAgIGQoJ2V4ZWN1dGluZyBcImdpdCBpbml0XCIgaW4gZGlyZWN0b3J5OicsIGRpcik7XG4gICAgICAgICAgICBleGVjKCdnaXQgaW5pdCcsIHsgY3dkOiBkaXIgfSwgKGluaXRFcnIpID0+IChpbml0RXJyID8gcmVqZWN0KGluaXRFcnIpIDogcmVzb2x2ZSgpKSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGQoJy5naXQgZGlyZWN0b3J5IGFscmVhZHkgZXhpc3RzLCBza2lwcGluZyBnaXQgaW5pdGlhbGl6YXRpb24nKTtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfSk7XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6WyJkIiwiZGVidWciLCJkaXIiLCJhc3luY09yYSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZXhlYyIsImN3ZCIsImVyciIsImluaXRFcnIiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQXlCLEdBQTJCLENBQTNCLFNBQTJCO0FBQy9CLEdBQWUsQ0FBZixhQUFlO0FBQ2xCLEdBQU8sQ0FBUCxNQUFPOzs7Ozs7QUFFekIsS0FBSyxDQUFDQSxDQUFDLE9BQUdDLE1BQUssVUFBQyxDQUF5QjtzQkFFbkJDLEdBQVcsR0FBb0IsQ0FBQztJQUNwRCxLQUFLLEtBQUNDLFNBQVEsV0FBQyxDQUE2Qix3Q0FBYyxDQUFDO1FBQ3pELEtBQUssQ0FBQyxHQUFHLENBQUNDLE9BQU8sRUFBUUMsT0FBTyxFQUFFQyxNQUFNLEdBQUssQ0FBQztnQkFDNUNDLGFBQUksT0FDRixDQUErQixnQ0FDL0IsQ0FBQztnQkFDQ0MsR0FBRyxFQUFFTixHQUFHO1lBQ1YsQ0FBQyxHQUNBTyxHQUFHLEdBQUssQ0FBQztnQkFDUixFQUFFLEVBQUVBLEdBQUcsRUFBRSxDQUFDO29CQUNSLEVBQWtDLEFBQWxDLGdDQUFrQztvQkFDbENULENBQUMsQ0FBQyxDQUFvQyxxQ0FBRUUsR0FBRzt3QkFDM0NLLGFBQUksT0FBQyxDQUFVLFdBQUUsQ0FBQzt3QkFBQ0MsR0FBRyxFQUFFTixHQUFHO29CQUFDLENBQUMsR0FBR1EsT0FBTyxHQUFNQSxPQUFPLEdBQUdKLE1BQU0sQ0FBQ0ksT0FBTyxJQUFJTCxPQUFPOztnQkFDbEYsQ0FBQyxNQUFNLENBQUM7b0JBQ05MLENBQUMsQ0FBQyxDQUE0RDtvQkFDOURLLE9BQU87Z0JBQ1QsQ0FBQztZQUNILENBQUM7UUFFTCxDQUFDO0lBQ0gsQ0FBQztBQUNILENBQUMifQ==