"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.runMutatingHook = runMutatingHook;
exports.runHook = void 0;
var _debug = _interopRequireDefault(require("debug"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const d = (0, _debug).default('electron-forge:hook');
const runHook = async (forgeConfig, hookName, ...hookArgs)=>{
    const { hooks  } = forgeConfig;
    if (hooks) {
        d(`hook triggered: ${hookName}`);
        if (typeof hooks[hookName] === 'function') {
            d('calling hook:', hookName, 'with args:', hookArgs);
            await hooks[hookName](forgeConfig, ...hookArgs);
        }
    }
    await forgeConfig.pluginInterface.triggerHook(hookName, hookArgs);
};
exports.runHook = runHook;
async function runMutatingHook(forgeConfig, hookName, item) {
    const { hooks  } = forgeConfig;
    if (hooks) {
        d(`hook triggered: ${hookName}`);
        if (typeof hooks[hookName] === 'function') {
            d('calling mutating hook:', hookName, 'with item:', item);
            const result = await hooks[hookName](forgeConfig, item);
            if (typeof result !== 'undefined') {
                item = result;
            }
        }
    }
    return forgeConfig.pluginInterface.triggerMutatingHook(hookName, item);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2hvb2sudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9yZ2VDb25maWcgfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2Uvc2hhcmVkLXR5cGVzJztcbmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5cbmNvbnN0IGQgPSBkZWJ1ZygnZWxlY3Ryb24tZm9yZ2U6aG9vaycpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZXhwb3J0IGNvbnN0IHJ1bkhvb2sgPSBhc3luYyAoZm9yZ2VDb25maWc6IEZvcmdlQ29uZmlnLCBob29rTmFtZTogc3RyaW5nLCAuLi5ob29rQXJnczogYW55W10pOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgY29uc3QgeyBob29rcyB9ID0gZm9yZ2VDb25maWc7XG4gIGlmIChob29rcykge1xuICAgIGQoYGhvb2sgdHJpZ2dlcmVkOiAke2hvb2tOYW1lfWApO1xuICAgIGlmICh0eXBlb2YgaG9va3NbaG9va05hbWVdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBkKCdjYWxsaW5nIGhvb2s6JywgaG9va05hbWUsICd3aXRoIGFyZ3M6JywgaG9va0FyZ3MpO1xuICAgICAgYXdhaXQgaG9va3NbaG9va05hbWVdKGZvcmdlQ29uZmlnLCAuLi5ob29rQXJncyk7XG4gICAgfVxuICB9XG4gIGF3YWl0IGZvcmdlQ29uZmlnLnBsdWdpbkludGVyZmFjZS50cmlnZ2VySG9vayhob29rTmFtZSwgaG9va0FyZ3MpO1xufTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJ1bk11dGF0aW5nSG9vazxUPihmb3JnZUNvbmZpZzogRm9yZ2VDb25maWcsIGhvb2tOYW1lOiBzdHJpbmcsIGl0ZW06IFQpOiBQcm9taXNlPFQ+IHtcbiAgY29uc3QgeyBob29rcyB9ID0gZm9yZ2VDb25maWc7XG4gIGlmIChob29rcykge1xuICAgIGQoYGhvb2sgdHJpZ2dlcmVkOiAke2hvb2tOYW1lfWApO1xuICAgIGlmICh0eXBlb2YgaG9va3NbaG9va05hbWVdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBkKCdjYWxsaW5nIG11dGF0aW5nIGhvb2s6JywgaG9va05hbWUsICd3aXRoIGl0ZW06JywgaXRlbSk7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBob29rc1tob29rTmFtZV0oZm9yZ2VDb25maWcsIGl0ZW0pO1xuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGl0ZW0gPSByZXN1bHQ7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBmb3JnZUNvbmZpZy5wbHVnaW5JbnRlcmZhY2UudHJpZ2dlck11dGF0aW5nSG9vayhob29rTmFtZSwgaXRlbSk7XG59XG4iXSwibmFtZXMiOlsicnVuTXV0YXRpbmdIb29rIiwiZCIsImRlYnVnIiwicnVuSG9vayIsImZvcmdlQ29uZmlnIiwiaG9va05hbWUiLCJob29rQXJncyIsImhvb2tzIiwicGx1Z2luSW50ZXJmYWNlIiwidHJpZ2dlckhvb2siLCJpdGVtIiwicmVzdWx0IiwidHJpZ2dlck11dGF0aW5nSG9vayJdLCJtYXBwaW5ncyI6Ijs7OztRQWtCc0JBLGVBQWUsR0FBZkEsZUFBZTs7QUFqQm5CLEdBQU8sQ0FBUCxNQUFPOzs7Ozs7QUFFekIsS0FBSyxDQUFDQyxDQUFDLE9BQUdDLE1BQUssVUFBQyxDQUFxQjtBQUc5QixLQUFLLENBQUNDLE9BQU8sVUFBVUMsV0FBd0IsRUFBRUMsUUFBZ0IsS0FBS0MsUUFBUSxHQUEyQixDQUFDO0lBQy9HLEtBQUssQ0FBQyxDQUFDLENBQUNDLEtBQUssRUFBQyxDQUFDLEdBQUdILFdBQVc7SUFDN0IsRUFBRSxFQUFFRyxLQUFLLEVBQUUsQ0FBQztRQUNWTixDQUFDLEVBQUUsZ0JBQWdCLEVBQUVJLFFBQVE7UUFDN0IsRUFBRSxFQUFFLE1BQU0sQ0FBQ0UsS0FBSyxDQUFDRixRQUFRLE1BQU0sQ0FBVSxXQUFFLENBQUM7WUFDMUNKLENBQUMsQ0FBQyxDQUFlLGdCQUFFSSxRQUFRLEVBQUUsQ0FBWSxhQUFFQyxRQUFRO1lBQ25ELEtBQUssQ0FBQ0MsS0FBSyxDQUFDRixRQUFRLEVBQUVELFdBQVcsS0FBS0UsUUFBUTtRQUNoRCxDQUFDO0lBQ0gsQ0FBQztJQUNELEtBQUssQ0FBQ0YsV0FBVyxDQUFDSSxlQUFlLENBQUNDLFdBQVcsQ0FBQ0osUUFBUSxFQUFFQyxRQUFRO0FBQ2xFLENBQUM7UUFWWUgsT0FBTyxHQUFQQSxPQUFPO2VBWUVILGVBQWUsQ0FBSUksV0FBd0IsRUFBRUMsUUFBZ0IsRUFBRUssSUFBTyxFQUFjLENBQUM7SUFDekcsS0FBSyxDQUFDLENBQUMsQ0FBQ0gsS0FBSyxFQUFDLENBQUMsR0FBR0gsV0FBVztJQUM3QixFQUFFLEVBQUVHLEtBQUssRUFBRSxDQUFDO1FBQ1ZOLENBQUMsRUFBRSxnQkFBZ0IsRUFBRUksUUFBUTtRQUM3QixFQUFFLEVBQUUsTUFBTSxDQUFDRSxLQUFLLENBQUNGLFFBQVEsTUFBTSxDQUFVLFdBQUUsQ0FBQztZQUMxQ0osQ0FBQyxDQUFDLENBQXdCLHlCQUFFSSxRQUFRLEVBQUUsQ0FBWSxhQUFFSyxJQUFJO1lBQ3hELEtBQUssQ0FBQ0MsTUFBTSxHQUFHLEtBQUssQ0FBQ0osS0FBSyxDQUFDRixRQUFRLEVBQUVELFdBQVcsRUFBRU0sSUFBSTtZQUN0RCxFQUFFLEVBQUUsTUFBTSxDQUFDQyxNQUFNLEtBQUssQ0FBVyxZQUFFLENBQUM7Z0JBQ2xDRCxJQUFJLEdBQUdDLE1BQU07WUFDZixDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUM7SUFDRCxNQUFNLENBQUNQLFdBQVcsQ0FBQ0ksZUFBZSxDQUFDSSxtQkFBbUIsQ0FBQ1AsUUFBUSxFQUFFSyxJQUFJO0FBQ3ZFLENBQUMifQ==