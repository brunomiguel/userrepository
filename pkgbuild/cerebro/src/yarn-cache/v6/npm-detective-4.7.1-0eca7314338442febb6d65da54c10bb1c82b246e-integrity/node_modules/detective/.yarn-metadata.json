{
  "manifest": {
    "name": "detective",
    "description": "find all require() calls by walking the AST",
    "version": "4.7.1",
    "repository": {
      "type": "git",
      "url": "git://github.com/browserify/detective.git"
    },
    "main": "index.js",
    "keywords": [
      "require",
      "source",
      "analyze",
      "ast"
    ],
    "scripts": {
      "test": "tap test/*.js"
    },
    "dependencies": {
      "acorn": "^5.2.1",
      "defined": "^1.0.0"
    },
    "devDependencies": {
      "tap": "^10.7.3"
    },
    "license": "MIT",
    "author": {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "http://substack.net"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-detective-4.7.1-0eca7314338442febb6d65da54c10bb1c82b246e-integrity/node_modules/detective/package.json",
    "readmeFilename": "readme.markdown",
    "readme": "# detective\n\nfind all calls to `require()` by walking the AST\n\n[![build status](https://secure.travis-ci.org/browserify/detective.png)](http://travis-ci.org/browserify/detective)\n\n# example\n\n## strings\n\nstrings_src.js:\n\n``` js\nvar a = require('a');\nvar b = require('b');\nvar c = require('c');\n```\n\nstrings.js:\n\n``` js\nvar detective = require('detective');\nvar fs = require('fs');\n\nvar src = fs.readFileSync(__dirname + '/strings_src.js');\nvar requires = detective(src);\nconsole.dir(requires);\n```\n\noutput:\n\n```\n$ node examples/strings.js\n[ 'a', 'b', 'c' ]\n```\n\n# methods\n\n``` js\nvar detective = require('detective');\n```\n\n## detective(src, opts)\n\nGive some source body `src`, return an array of all the `require()` calls with\nstring arguments.\n\nThe options parameter `opts` is passed along to `detective.find()`.\n\n## var found = detective.find(src, opts)\n\nGive some source body `src`, return `found` with:\n\n* `found.strings` - an array of each string found in a `require()`\n* `found.expressions` - an array of each stringified expression found in a\n`require()` call\n* `found.nodes` (when `opts.nodes === true`) - an array of AST nodes for each\nargument found in a `require()` call\n\nOptionally:\n\n* `opts.word` - specify a different function name instead of `\"require\"`\n* `opts.nodes` - when `true`, populate `found.nodes`\n* `opts.isRequire(node)` - a function returning whether an AST `CallExpression`\nnode is a require call\n* `opts.parse` - supply options directly to\n[acorn](https://npmjs.org/package/acorn) with some support for esprima-style\noptions `range` and `loc`\n* `opts.ecmaVersion` - default: 9\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install detective\n```\n\n# license\n\nMIT\n",
    "licenseText": "This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/detective/-/detective-4.7.1.tgz#0eca7314338442febb6d65da54c10bb1c82b246e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/detective/-/detective-4.7.1.tgz",
    "hash": "0eca7314338442febb6d65da54c10bb1c82b246e",
    "integrity": "sha512-H6PmeeUcZloWtdt4DAkFyzFL94arpHr3NOwwmVILFiy+9Qd4JTxxXrzfyGk/lmct2qVGBwTSwSXagqu2BxmWig==",
    "registry": "npm",
    "packageName": "detective",
    "cacheIntegrity": "sha512-H6PmeeUcZloWtdt4DAkFyzFL94arpHr3NOwwmVILFiy+9Qd4JTxxXrzfyGk/lmct2qVGBwTSwSXagqu2BxmWig== sha1-DspzFDOEQv67bWXaVMELscgrJG4="
  },
  "registry": "npm",
  "hash": "0eca7314338442febb6d65da54c10bb1c82b246e"
}