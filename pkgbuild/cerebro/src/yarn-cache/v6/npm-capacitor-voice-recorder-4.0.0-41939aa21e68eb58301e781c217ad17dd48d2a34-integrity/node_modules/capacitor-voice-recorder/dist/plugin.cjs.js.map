{"version":3,"file":"plugin.cjs.js","sources":["esm/index.js","esm/predefined-web-responses.js","esm/VoiceRecorderImpl.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst VoiceRecorder = registerPlugin('VoiceRecorder', {\n    web: () => import('./web').then(m => new m.VoiceRecorderWeb()),\n});\nexport * from './definitions';\nexport { VoiceRecorder };\n//# sourceMappingURL=index.js.map","export const successResponse = () => ({ value: true });\nexport const failureResponse = () => ({ value: false });\nexport const missingPermissionError = () => new Error('MISSING_PERMISSION');\nexport const alreadyRecordingError = () => new Error('ALREADY_RECORDING');\nexport const microphoneBeingUsedError = () => new Error('MICROPHONE_BEING_USED');\nexport const deviceCannotVoiceRecordError = () => new Error('DEVICE_CANNOT_VOICE_RECORD');\nexport const failedToRecordError = () => new Error('FAILED_TO_RECORD');\nexport const recordingHasNotStartedError = () => new Error('RECORDING_HAS_NOT_STARTED');\nexport const failedToFetchRecordingError = () => new Error('FAILED_TO_FETCH_RECORDING');\nexport const couldNotQueryPermissionStatusError = () => new Error('COULD_NOT_QUERY_PERMISSION_STATUS');\n//# sourceMappingURL=predefined-web-responses.js.map","import getBlobDuration from 'get-blob-duration';\nimport { alreadyRecordingError, couldNotQueryPermissionStatusError, deviceCannotVoiceRecordError, failedToFetchRecordingError, failedToRecordError, failureResponse, missingPermissionError, recordingHasNotStartedError, successResponse, } from './predefined-web-responses';\n// these mime types will be checked one by one in order until one of them is found to be supported by the current browser\nconst possibleMimeTypes = ['audio/aac', 'audio/webm;codecs=opus', 'audio/mp4', 'audio/webm', 'audio/ogg;codecs=opus'];\nconst neverResolvingPromise = () => new Promise(() => undefined);\nexport class VoiceRecorderImpl {\n    constructor() {\n        this.mediaRecorder = null;\n        this.chunks = [];\n        this.pendingResult = neverResolvingPromise();\n    }\n    static async canDeviceVoiceRecord() {\n        var _a;\n        if (((_a = navigator === null || navigator === void 0 ? void 0 : navigator.mediaDevices) === null || _a === void 0 ? void 0 : _a.getUserMedia) == null || VoiceRecorderImpl.getSupportedMimeType() == null) {\n            return failureResponse();\n        }\n        else {\n            return successResponse();\n        }\n    }\n    async startRecording() {\n        if (this.mediaRecorder != null) {\n            throw alreadyRecordingError();\n        }\n        const deviceCanRecord = await VoiceRecorderImpl.canDeviceVoiceRecord();\n        if (!deviceCanRecord.value) {\n            throw deviceCannotVoiceRecordError();\n        }\n        const havingPermission = await VoiceRecorderImpl.hasAudioRecordingPermission().catch(() => successResponse());\n        if (!havingPermission.value) {\n            throw missingPermissionError();\n        }\n        navigator.mediaDevices.getUserMedia({ audio: true })\n            .then(this.onSuccessfullyStartedRecording.bind(this))\n            .catch(this.onFailedToStartRecording.bind(this));\n        return successResponse();\n    }\n    async stopRecording() {\n        if (this.mediaRecorder == null) {\n            throw recordingHasNotStartedError();\n        }\n        try {\n            this.mediaRecorder.stop();\n            this.mediaRecorder.stream.getTracks().forEach(track => track.stop());\n            return this.pendingResult;\n        }\n        catch (ignore) {\n            throw failedToFetchRecordingError();\n        }\n        finally {\n            this.prepareInstanceForNextOperation();\n        }\n    }\n    static async hasAudioRecordingPermission() {\n        return navigator.permissions.query({ name: 'microphone' })\n            .then(result => ({ value: result.state === 'granted' }))\n            .catch(() => { throw couldNotQueryPermissionStatusError(); });\n    }\n    static async requestAudioRecordingPermission() {\n        const havingPermission = await VoiceRecorderImpl.hasAudioRecordingPermission().catch(() => failureResponse());\n        if (havingPermission.value) {\n            return successResponse();\n        }\n        return navigator.mediaDevices.getUserMedia({ audio: true })\n            .then(() => successResponse())\n            .catch(() => failureResponse());\n    }\n    pauseRecording() {\n        if (this.mediaRecorder == null) {\n            throw recordingHasNotStartedError();\n        }\n        else if (this.mediaRecorder.state === 'recording') {\n            this.mediaRecorder.pause();\n            return Promise.resolve(successResponse());\n        }\n        else {\n            return Promise.resolve(failureResponse());\n        }\n    }\n    resumeRecording() {\n        if (this.mediaRecorder == null) {\n            throw recordingHasNotStartedError();\n        }\n        else if (this.mediaRecorder.state === 'paused') {\n            this.mediaRecorder.resume();\n            return Promise.resolve(successResponse());\n        }\n        else {\n            return Promise.resolve(failureResponse());\n        }\n    }\n    getCurrentStatus() {\n        if (this.mediaRecorder == null) {\n            return Promise.resolve({ status: 'NONE' });\n        }\n        else if (this.mediaRecorder.state === 'recording') {\n            return Promise.resolve({ status: 'RECORDING' });\n        }\n        else if (this.mediaRecorder.state === 'paused') {\n            return Promise.resolve({ status: 'PAUSED' });\n        }\n        else {\n            return Promise.resolve({ status: 'NONE' });\n        }\n    }\n    static getSupportedMimeType() {\n        if ((MediaRecorder === null || MediaRecorder === void 0 ? void 0 : MediaRecorder.isTypeSupported) == null)\n            return null;\n        const foundSupportedType = possibleMimeTypes.find(type => MediaRecorder.isTypeSupported(type));\n        return foundSupportedType !== null && foundSupportedType !== void 0 ? foundSupportedType : null;\n    }\n    onSuccessfullyStartedRecording(stream) {\n        this.pendingResult = new Promise((resolve, reject) => {\n            this.mediaRecorder = new MediaRecorder(stream);\n            this.mediaRecorder.onerror = () => {\n                reject(failedToRecordError());\n                this.prepareInstanceForNextOperation();\n            };\n            this.mediaRecorder.onstop = async () => {\n                const mimeType = VoiceRecorderImpl.getSupportedMimeType();\n                if (mimeType == null) {\n                    reject(failedToFetchRecordingError());\n                }\n                else {\n                    const blobVoiceRecording = new Blob(this.chunks, { 'type': mimeType });\n                    const recordDataBase64 = await VoiceRecorderImpl.blobToBase64(blobVoiceRecording);\n                    const recordingDuration = await getBlobDuration(blobVoiceRecording);\n                    this.prepareInstanceForNextOperation();\n                    resolve({ value: { recordDataBase64, mimeType, msDuration: recordingDuration * 1000 } });\n                }\n            };\n            this.mediaRecorder.ondataavailable = (event) => this.chunks.push(event.data);\n            this.mediaRecorder.start();\n        });\n    }\n    onFailedToStartRecording() {\n        this.prepareInstanceForNextOperation();\n        throw failedToRecordError();\n    }\n    static blobToBase64(blob) {\n        return new Promise(resolve => {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                const recordingResult = String(reader.result);\n                const splitResult = recordingResult.split('base64,');\n                const toResolve = (splitResult.length > 1) ? splitResult[1] : recordingResult;\n                resolve(toResolve.trim());\n            };\n            reader.readAsDataURL(blob);\n        });\n    }\n    prepareInstanceForNextOperation() {\n        if (this.mediaRecorder != null && this.mediaRecorder.state === 'recording') {\n            try {\n                this.mediaRecorder.stop();\n            }\n            catch (ignore) { }\n        }\n        this.pendingResult = neverResolvingPromise();\n        this.mediaRecorder = null;\n        this.chunks = [];\n    }\n}\n//# sourceMappingURL=VoiceRecorderImpl.js.map","import { WebPlugin } from '@capacitor/core';\nimport { VoiceRecorderImpl } from './VoiceRecorderImpl';\nexport class VoiceRecorderWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.voiceRecorderInstance = new VoiceRecorderImpl();\n    }\n    canDeviceVoiceRecord() {\n        return VoiceRecorderImpl.canDeviceVoiceRecord();\n    }\n    hasAudioRecordingPermission() {\n        return VoiceRecorderImpl.hasAudioRecordingPermission();\n    }\n    requestAudioRecordingPermission() {\n        return VoiceRecorderImpl.requestAudioRecordingPermission();\n    }\n    startRecording() {\n        return this.voiceRecorderInstance.startRecording();\n    }\n    stopRecording() {\n        return this.voiceRecorderInstance.stopRecording();\n    }\n    pauseRecording() {\n        return this.voiceRecorderInstance.pauseRecording();\n    }\n    resumeRecording() {\n        return this.voiceRecorderInstance.resumeRecording();\n    }\n    getCurrentStatus() {\n        return this.voiceRecorderInstance.getCurrentStatus();\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","getBlobDuration","WebPlugin"],"mappings":"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"}