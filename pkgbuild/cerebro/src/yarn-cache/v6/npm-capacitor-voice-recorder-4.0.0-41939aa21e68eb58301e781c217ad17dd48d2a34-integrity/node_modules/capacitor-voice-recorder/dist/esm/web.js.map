{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAGxD,MAAM,OAAO,gBAAiB,SAAQ,SAAS;IAA/C;;QAEU,0BAAqB,GAAG,IAAI,iBAAiB,EAAE,CAAC;IAkC1D,CAAC;IAhCQ,oBAAoB;QACzB,OAAO,iBAAiB,CAAC,oBAAoB,EAAE,CAAC;IAClD,CAAC;IAEM,2BAA2B;QAChC,OAAO,iBAAiB,CAAC,2BAA2B,EAAE,CAAC;IACzD,CAAC;IAEM,+BAA+B;QACpC,OAAO,iBAAiB,CAAC,+BAA+B,EAAE,CAAC;IAC7D,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;IACrD,CAAC;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,CAAC;IACpD,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;IACrD,CAAC;IAEM,eAAe;QACpB,OAAO,IAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,CAAC;IACtD,CAAC;IAEM,gBAAgB;QACrB,OAAO,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,CAAC;IACvD,CAAC;CAEF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport { VoiceRecorderImpl } from './VoiceRecorderImpl';\nimport type { CurrentRecordingStatus, GenericResponse, RecordingData, VoiceRecorderPlugin } from './definitions';\n\nexport class VoiceRecorderWeb extends WebPlugin implements VoiceRecorderPlugin {\n\n  private voiceRecorderInstance = new VoiceRecorderImpl();\n\n  public canDeviceVoiceRecord (): Promise<GenericResponse> {\n    return VoiceRecorderImpl.canDeviceVoiceRecord();\n  }\n\n  public hasAudioRecordingPermission (): Promise<GenericResponse> {\n    return VoiceRecorderImpl.hasAudioRecordingPermission();\n  }\n\n  public requestAudioRecordingPermission (): Promise<GenericResponse> {\n    return VoiceRecorderImpl.requestAudioRecordingPermission();\n  }\n\n  public startRecording (): Promise<GenericResponse> {\n    return this.voiceRecorderInstance.startRecording();\n  }\n\n  public stopRecording (): Promise<RecordingData> {\n    return this.voiceRecorderInstance.stopRecording();\n  }\n\n  public pauseRecording (): Promise<GenericResponse> {\n    return this.voiceRecorderInstance.pauseRecording();\n  }\n\n  public resumeRecording (): Promise<GenericResponse> {\n    return this.voiceRecorderInstance.resumeRecording();\n  }\n\n  public getCurrentStatus (): Promise<CurrentRecordingStatus> {\n    return this.voiceRecorderInstance.getCurrentStatus();\n  }\n\n}\n"]}