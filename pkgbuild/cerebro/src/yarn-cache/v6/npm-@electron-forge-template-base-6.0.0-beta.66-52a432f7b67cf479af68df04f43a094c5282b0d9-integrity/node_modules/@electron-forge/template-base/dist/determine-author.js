"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _debug = _interopRequireDefault(require("debug"));
var _crossSpawnPromise = require("@malept/cross-spawn-promise");
var _username = _interopRequireDefault(require("username"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const d = (0, _debug).default('electron-forge:determine-author');
async function getGitConfig(name, cwd) {
    const value = await (0, _crossSpawnPromise).spawn('git', [
        'config',
        '--get',
        name
    ], {
        cwd
    });
    return value.trim();
}
const getAuthorFromGitConfig = async (dir)=>{
    try {
        const name = await getGitConfig('user.name', dir);
        const email = await getGitConfig('user.email', dir);
        return {
            name,
            email
        };
    } catch (err) {
        d('Error when getting git config:', err);
        return undefined;
    }
};
var _default = async (dir)=>await getAuthorFromGitConfig(dir) || (0, _username).default()
;
exports.default = _default;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9kZXRlcm1pbmUtYXV0aG9yLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgeyBQYWNrYWdlUGVyc29uIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL3NoYXJlZC10eXBlcyc7XG5pbXBvcnQgeyBzcGF3biB9IGZyb20gJ0BtYWxlcHQvY3Jvc3Mtc3Bhd24tcHJvbWlzZSc7XG5pbXBvcnQgdXNlcm5hbWUgZnJvbSAndXNlcm5hbWUnO1xuXG5jb25zdCBkID0gZGVidWcoJ2VsZWN0cm9uLWZvcmdlOmRldGVybWluZS1hdXRob3InKTtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0R2l0Q29uZmlnKG5hbWU6IHN0cmluZywgY3dkOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICBjb25zdCB2YWx1ZSA9IGF3YWl0IHNwYXduKCdnaXQnLCBbJ2NvbmZpZycsICctLWdldCcsIG5hbWVdLCB7IGN3ZCB9KTtcbiAgcmV0dXJuIHZhbHVlLnRyaW0oKTtcbn1cblxuY29uc3QgZ2V0QXV0aG9yRnJvbUdpdENvbmZpZyA9IGFzeW5jIChkaXI6IHN0cmluZyk6IFByb21pc2U8UGFja2FnZVBlcnNvbj4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IG5hbWUgPSBhd2FpdCBnZXRHaXRDb25maWcoJ3VzZXIubmFtZScsIGRpcik7XG4gICAgY29uc3QgZW1haWwgPSBhd2FpdCBnZXRHaXRDb25maWcoJ3VzZXIuZW1haWwnLCBkaXIpO1xuICAgIHJldHVybiB7IG5hbWUsIGVtYWlsIH07XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGQoJ0Vycm9yIHdoZW4gZ2V0dGluZyBnaXQgY29uZmlnOicsIGVycik7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKGRpcjogc3RyaW5nKTogUHJvbWlzZTxQYWNrYWdlUGVyc29uPiA9PiAoYXdhaXQgZ2V0QXV0aG9yRnJvbUdpdENvbmZpZyhkaXIpKSB8fCB1c2VybmFtZSgpO1xuIl0sIm5hbWVzIjpbImQiLCJkZWJ1ZyIsImdldEdpdENvbmZpZyIsIm5hbWUiLCJjd2QiLCJ2YWx1ZSIsInNwYXduIiwidHJpbSIsImdldEF1dGhvckZyb21HaXRDb25maWciLCJkaXIiLCJlbWFpbCIsImVyciIsInVuZGVmaW5lZCIsInVzZXJuYW1lIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFrQixHQUFPLENBQVAsTUFBTztBQUVILEdBQTZCLENBQTdCLGtCQUE2QjtBQUM5QixHQUFVLENBQVYsU0FBVTs7Ozs7O0FBRS9CLEtBQUssQ0FBQ0EsQ0FBQyxPQUFHQyxNQUFLLFVBQUMsQ0FBaUM7ZUFFbENDLFlBQVksQ0FBQ0MsSUFBWSxFQUFFQyxHQUFXLEVBQW1CLENBQUM7SUFDdkUsS0FBSyxDQUFDQyxLQUFLLEdBQUcsS0FBSyxLQUFDQyxrQkFBSyxRQUFDLENBQUssTUFBRSxDQUFDO1FBQUEsQ0FBUTtRQUFFLENBQU87UUFBRUgsSUFBSTtJQUFBLENBQUMsRUFBRSxDQUFDO1FBQUNDLEdBQUc7SUFBQyxDQUFDO0lBQ25FLE1BQU0sQ0FBQ0MsS0FBSyxDQUFDRSxJQUFJO0FBQ25CLENBQUM7QUFFRCxLQUFLLENBQUNDLHNCQUFzQixVQUFVQyxHQUFXLEdBQTZCLENBQUM7SUFDN0UsR0FBRyxDQUFDLENBQUM7UUFDSCxLQUFLLENBQUNOLElBQUksR0FBRyxLQUFLLENBQUNELFlBQVksQ0FBQyxDQUFXLFlBQUVPLEdBQUc7UUFDaEQsS0FBSyxDQUFDQyxLQUFLLEdBQUcsS0FBSyxDQUFDUixZQUFZLENBQUMsQ0FBWSxhQUFFTyxHQUFHO1FBQ2xELE1BQU0sQ0FBQyxDQUFDO1lBQUNOLElBQUk7WUFBRU8sS0FBSztRQUFDLENBQUM7SUFDeEIsQ0FBQyxDQUFDLEtBQUssRUFBRUMsR0FBRyxFQUFFLENBQUM7UUFDYlgsQ0FBQyxDQUFDLENBQWdDLGlDQUFFVyxHQUFHO1FBQ3ZDLE1BQU0sQ0FBQ0MsU0FBUztJQUNsQixDQUFDO0FBQ0gsQ0FBQztzQkFFcUJILEdBQVcsR0FBOEIsS0FBSyxDQUFDRCxzQkFBc0IsQ0FBQ0MsR0FBRyxTQUFNSSxTQUFRIn0=