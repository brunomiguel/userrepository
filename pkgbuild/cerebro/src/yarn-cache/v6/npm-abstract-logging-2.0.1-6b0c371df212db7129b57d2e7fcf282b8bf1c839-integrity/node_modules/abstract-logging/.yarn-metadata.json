{
  "manifest": {
    "name": "abstract-logging",
    "version": "2.0.1",
    "description": "A noop logger that conforms to the Log4j interface for modules to stub out internal logging",
    "main": "index.js",
    "scripts": {
      "test": "node test.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/jsumners/abstract-logging.git"
    },
    "keywords": [
      "log",
      "logging",
      "logger",
      "pino"
    ],
    "author": {
      "name": "James Sumners",
      "email": "james.sumners@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/jsumners/abstract-logging/issues"
    },
    "homepage": "https://github.com/jsumners/abstract-logging#readme",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-abstract-logging-2.0.1-6b0c371df212db7129b57d2e7fcf282b8bf1c839-integrity/node_modules/abstract-logging/package.json",
    "readmeFilename": "Readme.md",
    "readme": "# abstract-logging\n\nThis module provides an interface for modules to include so that they can\nsupport logging via an external logger that conforms to the standard Log4j\ninterface. One such logger is [Pino](https://npm.im/pino). This module\nis intended for modules that are meant to be used by other modules.\n\nExample:\n\n```js\n'use strict'\n\nfunction AwesomeLibrary (options) {\n  this.log = (options.logger) ? options.logger : require('abstract-logging')\n}\n\nAwesomeLibrary.prototype.coolMethod = function () {\n  this.log.trace('AwesomeLibrary.coolMethod was invoked')\n  return {}\n}\n\nmodule.exports = AwesomeLibrary\n```\n\n## Interface\n\nAvailable methods:\n\n+ `fatal`\n+ `error`\n+ `warn`\n+ `info`\n+ `debug`\n+ `trace`\n\nAll methods are no operation functions.\n\nSome loggers, like [Pino](https://getpino.io/), implement a `child()` method. This method can be easily added to an `abstract-logging` instance when stubbing out such loggers:\n\n```js\nconst logger = require('abstract-logging')\nlogger.child = () => logger\n```\n\n## License\n\n[MIT License](http://jsumners.mit-license.org/)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/abstract-logging/-/abstract-logging-2.0.1.tgz#6b0c371df212db7129b57d2e7fcf282b8bf1c839",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/abstract-logging/-/abstract-logging-2.0.1.tgz",
    "hash": "6b0c371df212db7129b57d2e7fcf282b8bf1c839",
    "integrity": "sha512-2BjRTZxTPvheOvGbBslFSYOUkr+SjPtOnrLP33f+VIWLzezQpZcqVg7ja3L4dBXmzzgwT+a029jRx5PCi3JuiA==",
    "registry": "npm",
    "packageName": "abstract-logging",
    "cacheIntegrity": "sha512-2BjRTZxTPvheOvGbBslFSYOUkr+SjPtOnrLP33f+VIWLzezQpZcqVg7ja3L4dBXmzzgwT+a029jRx5PCi3JuiA== sha1-aww3HfIS23EptX0uf88oK4vxyDk="
  },
  "registry": "npm",
  "hash": "6b0c371df212db7129b57d2e7fcf282b8bf1c839"
}