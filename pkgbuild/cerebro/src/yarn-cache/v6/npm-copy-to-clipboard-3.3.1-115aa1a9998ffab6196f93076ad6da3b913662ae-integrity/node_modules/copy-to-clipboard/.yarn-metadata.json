{
  "manifest": {
    "name": "copy-to-clipboard",
    "version": "3.3.1",
    "description": "Copy stuff into clipboard using JS with fallbacks",
    "main": "index.js",
    "types": "index.d.ts",
    "scripts": {
      "pretest": "browserify ./index.js --standalone copyToClipboard | uglifyjs -cm > example/index.js",
      "test": "nightwatch"
    },
    "keywords": [
      "clipboard",
      "copy",
      "browser"
    ],
    "author": {
      "name": "sudodoki",
      "email": "smd.deluzion@gmail.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/sudodoki/copy-to-clipboard"
    },
    "contributors": [
      {
        "name": "Aleksej Shvajka",
        "url": "https://github.com/shvaikalesh"
      }
    ],
    "dependencies": {
      "toggle-selection": "^1.0.6"
    },
    "devDependencies": {
      "browserify": "^13.0.1",
      "nightwatch": "^0.9.1",
      "node-static": "^0.7.7",
      "selenium-server-standalone-jar": "2.53.0",
      "uglify-js": "^3.5.3"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-copy-to-clipboard-3.3.1-115aa1a9998ffab6196f93076ad6da3b913662ae-integrity/node_modules/copy-to-clipboard/package.json",
    "readmeFilename": "README.md",
    "readme": "# Copy to clipboard [![Build Status](https://travis-ci.org/sudodoki/copy-to-clipboard.svg?branch=master)](https://travis-ci.org/sudodoki/copy-to-clipboard)\n\nSimple module exposing `copy` function that will try to use [execCommand](https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand#) with fallback to IE-specific `clipboardData` interface and finally, resort to usual `prompt` with proper text content and message.\n\n# Example\n\n```js\nimport copy from 'copy-to-clipboard';\n\ncopy('Text');\n\n// Copy with options\ncopy('Text', {\n  debug: true,\n  message: 'Press #{key} to copy',\n});\n```\n\n# API\n\n`copy(text: string, options: object): boolean` &mdash; tries to copy text to clipboard. Returns `true` if no additional keystrokes were required from user (so, `execCommand`, IE's `clipboardData` worked) or `false`.\n\n|Value |Default |Notes|\n|------|--------|-----|\n|options.debug  |false| `Boolean`. Optional. Enable output to console. |\n|options.message|Copy to clipboard: `#{key}`, Enter| `String`. Optional. Prompt message. `*` |\n|options.format|\"text/html\"| `String`. Optional. Set the MIME type of what you want to copy as. Use `text/html` to copy as HTML, `text/plain` to avoid inherited styles showing when pasted into rich text editor. |\n|options.onCopy|null| `function onCopy(clipboardData: object): void`. Optional. Receives the clipboardData element for adding custom behavior such as additional formats |\n\n`*` all occurrences of `#{key}` are replaced with `⌘+C` for macOS/iOS users, and `Ctrl+C` otherwise.\n\n# [Browser support](http://caniuse.com/#feat=document-execcommand)\n\nWorks everywhere where `prompt`* is available. Works best (i.e. without additional keystrokes) in Chrome, FF, Safari 10+, and, supposedly, IE/Edge.\n\nNote: **does not work on some older iOS devices.**  \n`*` – even though **Safari 8** has `prompt`, you cannot specify prefilled content for prompt modal – thus it **doesn't work** as expected.\n\n# Installation\n\n+ Can be used as npm package and then leveraged using commonjs bundler/loader:\n```\nnpm i --save copy-to-clipboard\n```\n+ Can be utilized using [wzrd.in](https://wzrd.in/). Add following script to your page:\n```html\n<script src=\"https://wzrd.in/standalone/copy-to-clipboard@latest\" async></script>\n```\nYou will have `window.copyToClipboard` exposed for you to use.\n\n# UI components based on this package:\n+ [react-copy-to-clipboard](https://github.com/nkbt/react-copy-to-clipboard)\n+ [copy-button](https://github.com/sudodoki/copy-button)\n\n# See also:\n+ [clipboard-copy](https://github.com/feross/clipboard-copy) by [@feross](https://github.com/feross)\n+ [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand#Browser_Compatibility)\n+ [April 2015 update on Cut and Copy Commands](http://updates.html5rocks.com/2015/04/cut-and-copy-commands)\n\n# Running Tests\nThis project has some automated tests, that will run using [nightwatch](nightwatchjs.org) on top of [selenium](http://www.seleniumhq.org/).\n\n```\nnpm i\nnpm test\n```\n# Typescript\nThis library has built-in Typescript definitions.\n\n```\nimport * as copy from 'copy-to-clipboard';\n```\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 sudodoki <smd.deluzion@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/copy-to-clipboard/-/copy-to-clipboard-3.3.1.tgz#115aa1a9998ffab6196f93076ad6da3b913662ae",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/copy-to-clipboard/-/copy-to-clipboard-3.3.1.tgz",
    "hash": "115aa1a9998ffab6196f93076ad6da3b913662ae",
    "integrity": "sha512-i13qo6kIHTTpCm8/Wup+0b1mVWETvu2kIMzKoK8FpkLkFxlt0znUAHcMzox+T8sPlqtZXq3CulEjQHsYiGFJUw==",
    "registry": "npm",
    "packageName": "copy-to-clipboard",
    "cacheIntegrity": "sha512-i13qo6kIHTTpCm8/Wup+0b1mVWETvu2kIMzKoK8FpkLkFxlt0znUAHcMzox+T8sPlqtZXq3CulEjQHsYiGFJUw== sha1-EVqhqZmP+rYZb5MHatbaO5E2Yq4="
  },
  "registry": "npm",
  "hash": "115aa1a9998ffab6196f93076ad6da3b913662ae"
}