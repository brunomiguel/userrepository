{
  "manifest": {
    "name": "duplexer3",
    "version": "0.1.5",
    "description": "Like duplexer but using streams3",
    "engine": {
      "node": ">=4"
    },
    "files": [
      "index.js"
    ],
    "scripts": {
      "test": "mocha -R tap"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/duplexer3.git"
    },
    "keywords": [
      "duplex",
      "duplexer",
      "stream",
      "stream3",
      "join",
      "combine"
    ],
    "license": "BSD-3-Clause",
    "devDependencies": {
      "mocha": "^2.2.5"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-duplexer3-0.1.5-0b5e4d7bad5de8901ea4440624c8e1d20099217e-integrity/node_modules/duplexer3/package.json",
    "readmeFilename": "readme.md",
    "readme": "# duplexer3\n\nLike [`duplexer2`](https://github.com/deoxxa/duplexer2) but using Streams3 without readable-stream dependency\n\n```js\nvar stream = require(\"stream\");\nvar duplexer3 = require(\"duplexer3\");\n\nvar writable = new stream.Writable({objectMode: true}),\n\t\treadable = new stream.Readable({objectMode: true});\n\nwritable._write = function _write(input, encoding, done) {\n\tif (readable.push(input)) {\n\t\treturn done();\n\t} else {\n\t\treadable.once(\"drain\", done);\n\t}\n};\n\nreadable._read = function _read(n) {\n\t// no-op\n};\n\n// simulate the readable thing closing after a bit\nwritable.once(\"finish\", function() {\n\tsetTimeout(function() {\n\t\treadable.push(null);\n\t}, 500);\n});\n\nvar duplex = duplexer3(writable, readable);\n\nduplex.on(\"data\", function(e) {\n\tconsole.log(\"got data\", JSON.stringify(e));\n});\n\nduplex.on(\"finish\", function() {\n\tconsole.log(\"got finish event\");\n});\n\nduplex.on(\"end\", function() {\n\tconsole.log(\"got end event\");\n});\n\nduplex.write(\"oh, hi there\", function() {\n\tconsole.log(\"finished writing\");\n});\n\nduplex.end(function() {\n\tconsole.log(\"finished ending\");\n});\n```\n\n```\ngot data \"oh, hi there\"\nfinished writing\ngot finish event\nfinished ending\ngot end event\n```\n\n## Overview\n\nThis is a reimplementation of [duplexer](https://www.npmjs.com/package/duplexer) using the\nStreams3 API which is standard in Node as of v4. Everything largely\nworks the same.\n\n## Install\n\n```sh\nnpm install duplexer3\n```\n\n## API\n\n### duplexer3\n\nCreates a new `DuplexWrapper` object, which is the actual class that implements\nmost of the fun stuff. All that fun stuff is hidden. DON'T LOOK.\n\n```js\nduplexer3([options], writable, readable)\n```\n\n```js\nconst duplex = duplexer3(new stream.Writable(), new stream.Readable());\n```\n\nArguments\n\n* __options__ - an object specifying the regular `stream.Duplex` options, as\n\twell as the properties described below.\n* __writable__ - a writable stream\n* __readable__ - a readable stream\n\nOptions\n\n* __bubbleErrors__ - a boolean value that specifies whether to bubble errors\n\tfrom the underlying readable/writable streams. Default is `true`.\n",
    "licenseText": "Copyright (c) 2022, Sindre Sorhus.\nCopyright (c) 2020, Vsevolod Strukchinsky.\nCopyright (c) 2013, Deoxxa Development.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/duplexer3/-/duplexer3-0.1.5.tgz#0b5e4d7bad5de8901ea4440624c8e1d20099217e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/duplexer3/-/duplexer3-0.1.5.tgz",
    "hash": "0b5e4d7bad5de8901ea4440624c8e1d20099217e",
    "integrity": "sha512-1A8za6ws41LQgv9HrE/66jyC5yuSjQ3L/KOpFtoBilsAK2iA2wuS5rTt1OCzIvtS2V7nVmedsUU+DGRcjBmOYA==",
    "registry": "npm",
    "packageName": "duplexer3",
    "cacheIntegrity": "sha512-1A8za6ws41LQgv9HrE/66jyC5yuSjQ3L/KOpFtoBilsAK2iA2wuS5rTt1OCzIvtS2V7nVmedsUU+DGRcjBmOYA== sha1-C15Ne61d6JAepEQGJMjh0gCZIX4="
  },
  "registry": "npm",
  "hash": "0b5e4d7bad5de8901ea4440624c8e1d20099217e"
}