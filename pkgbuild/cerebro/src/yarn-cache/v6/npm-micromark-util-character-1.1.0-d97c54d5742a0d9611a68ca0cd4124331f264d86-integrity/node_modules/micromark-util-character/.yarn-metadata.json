{
  "manifest": {
    "name": "micromark-util-character",
    "version": "1.1.0",
    "description": "micromark utility to handle character codes",
    "license": "MIT",
    "keywords": [
      "micromark",
      "util",
      "utility",
      "character"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/micromark/micromark/tree/main/packages/micromark-util-character"
    },
    "bugs": {
      "url": "https://github.com/micromark/micromark/issues"
    },
    "funding": [
      {
        "type": "GitHub Sponsors",
        "url": "https://github.com/sponsors/unifiedjs"
      },
      {
        "type": "OpenCollective",
        "url": "https://opencollective.com/unified"
      }
    ],
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "dev/index.d.ts",
    "files": [
      "dev/",
      "lib/",
      "index.d.ts",
      "index.js"
    ],
    "exports": {
      "development": "./dev/index.js",
      "default": "./index.js"
    },
    "dependencies": {
      "micromark-util-symbol": "^1.0.0",
      "micromark-util-types": "^1.0.0"
    },
    "scripts": {
      "build": "rimraf \"*.d.ts\" \"{dev/,lib/}**/*.d.ts\" && tsc && micromark-build && type-coverage"
    },
    "xo": false,
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-micromark-util-character-1.1.0-d97c54d5742a0d9611a68ca0cd4124331f264d86-integrity/node_modules/micromark-util-character/package.json",
    "readmeFilename": "readme.md",
    "readme": "# micromark-util-character\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][bundle-size-badge]][bundle-size]\n[![Sponsors][sponsors-badge]][opencollective]\n[![Backers][backers-badge]][opencollective]\n[![Chat][chat-badge]][chat]\n\nmicromark utility to handle [character codes](https://github.com/micromark/micromark#preprocess).\n\n## Contents\n\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`asciiAlpha(code)`](#asciialphacode)\n    *   [`asciiDigit(code)`](#asciidigitcode)\n    *   [`asciiHexDigit(code)`](#asciihexdigitcode)\n    *   [`asciiAlphanumeric(code)`](#asciialphanumericcode)\n    *   [`asciiPunctuation(code)`](#asciipunctuationcode)\n    *   [`asciiAtext(code)`](#asciiatextcode)\n    *   [`asciiControl(code)`](#asciicontrolcode)\n    *   [`markdownLineEndingOrSpace(code)`](#markdownlineendingorspacecode)\n    *   [`markdownLineEnding(code)`](#markdownlineendingcode)\n    *   [`markdownSpace(code)`](#markdownspacecode)\n    *   [`unicodeWhitespace(code)`](#unicodewhitespacecode)\n    *   [`unicodePunctuation(code)`](#unicodepunctuationcode)\n*   [Security](#security)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install micromark-util-character\n```\n\n## Use\n\n```js\nimport {asciiAlpha} from 'micromark-util-character'\n\nconsole.log(asciiAlpha(64)) // false\nconsole.log(asciiAlpha(65)) // true\n```\n\n## API\n\nThis module exports the following identifiers: `asciiAlpha`,\n`asciiAlphanumeric`, `asciiAtext`, `asciiControl`, `asciiDigit`,\n`asciiHexDigit`, `asciiPunctuation`, `markdownLineEnding`,\n`markdownLineEndingOrSpace`, `markdownSpace`, `unicodePunctuation`,\n`unicodeWhitespace`.\nThere is no default export.\n\n### `asciiAlpha(code)`\n\nCheck whether the\n[character code](https://github.com/micromark/micromark#preprocess)\nrepresents an ASCII alpha (`a` through `z`,\ncase insensitive).\n\nAn **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n\nAn **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\nto U+005A (`Z`).\n\nAn **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\nto U+007A (`z`).\n\n### `asciiDigit(code)`\n\nCheck whether the\n[character code](https://github.com/micromark/micromark#preprocess)\nrepresents an ASCII digit (`0` through `9`).\n\nAn **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\nU+0039 (`9`).\n\n### `asciiHexDigit(code)`\n\nCheck whether the\n[character code](https://github.com/micromark/micromark#preprocess)\nrepresents an ASCII hex digit (`a` through `f`, case insensitive, or `0` through\n`9`).\n\nAn **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\ndigit, or an ASCII lower hex digit.\n\nAn **ASCII upper hex digit** is a character in the inclusive range U+0041\n(`A`) to U+0046 (`F`).\n\nAn **ASCII lower hex digit** is a character in the inclusive range U+0061\n(`a`) to U+0066 (`f`).\n\n### `asciiAlphanumeric(code)`\n\nCheck whether the\n[character code](https://github.com/micromark/micromark#preprocess)\nrepresents an ASCII alphanumeric (`a` through `z`, case insensitive, or `0`\nthrough `9`).\n\nAn **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n(see `asciiAlpha`).\n\n### `asciiPunctuation(code)`\n\nCheck whether the\n[character code](https://github.com/micromark/micromark#preprocess)\nrepresents ASCII punctuation.\n\nAn **ASCII punctuation** is a character in the inclusive ranges U+0021\nEXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\nSIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n(`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n\n### `asciiAtext(code)`\n\nCheck whether the\n[character code](https://github.com/micromark/micromark#preprocess)\nrepresents an ASCII atext.\n\natext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\nthe inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\nU+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\nSLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\nCARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n(`{`) to U+007E TILDE (`~`) (**\\[RFC5322]**).\n\nSee **\\[RFC5322]**:\\\n[Internet Message Format](https://tools.ietf.org/html/rfc5322).\\\nP. Resnick.\\\nIETF.\n\n### `asciiControl(code)`\n\nCheck whether a\n[character code](https://github.com/micromark/micromark#preprocess)\nis an ASCII control character.\n\nAn **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\nto U+001F (US), or U+007F (DEL).\n\n### `markdownLineEndingOrSpace(code)`\n\nCheck whether a\n[character code](https://github.com/micromark/micromark#preprocess)\nis a markdown line ending (see `markdownLineEnding`) or markdown space (see\n`markdownSpace`).\n\n### `markdownLineEnding(code)`\n\nCheck whether a\n[character code](https://github.com/micromark/micromark#preprocess)\nis a markdown line ending.\n\nA **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\nLINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n\nIn micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\nRETURN (CR) are replaced by these virtual characters depending on whether\nthey occurred together.\n\n### `markdownSpace(code)`\n\nCheck whether a\n[character code](https://github.com/micromark/micromark#preprocess)\nis a markdown space.\n\nA **markdown space** is the concrete character U+0020 SPACE (SP) and the\nvirtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n\nIn micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\nreplaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\nSPACE (VS) characters, depending on the column at which the tab occurred.\n\n### `unicodeWhitespace(code)`\n\nCheck whether the\n[character code](https://github.com/micromark/micromark#preprocess)\nrepresents Unicode whitespace.\n\nNote that this does handle micromark specific markdown whitespace characters.\nSee `markdownLineEndingOrSpace` to check that.\n\nA **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\nSpace) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\nU+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n\nSee **\\[UNICODE]**:\\\n[The Unicode Standard](https://www.unicode.org/versions/).\\\nUnicode Consortium.\n\n### `unicodePunctuation(code)`\n\nCheck whether the\n[character code](https://github.com/micromark/micromark#preprocess)\nrepresents Unicode punctuation.\n\nA **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\nConnector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n(Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n(Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\npunctuation (see `asciiPunctuation`) (**\\[UNICODE]**).\n\nSee **\\[UNICODE]**:\\\n[The Unicode Standard](https://www.unicode.org/versions/).\\\nUnicode Consortium.\n\n## Security\n\nSee [`security.md`][securitymd] in [`micromark/.github`][health] for how to\nsubmit a security report.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`micromark/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organisation, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] Â© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/micromark/micromark/workflows/main/badge.svg\n\n[build]: https://github.com/micromark/micromark/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/micromark/micromark.svg\n\n[coverage]: https://codecov.io/github/micromark/micromark\n\n[downloads-badge]: https://img.shields.io/npm/dm/micromark-util-character.svg\n\n[downloads]: https://www.npmjs.com/package/micromark-util-character\n\n[bundle-size-badge]: https://img.shields.io/bundlephobia/minzip/micromark-util-character.svg\n\n[bundle-size]: https://bundlephobia.com/result?p=micromark-util-character\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[opencollective]: https://opencollective.com/unified\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/micromark/micromark/discussions\n\n[license]: https://github.com/micromark/micromark/blob/main/license\n\n[author]: https://wooorm.com\n\n[health]: https://github.com/micromark/.github\n\n[securitymd]: https://github.com/micromark/.github/blob/HEAD/security.md\n\n[contributing]: https://github.com/micromark/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/micromark/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/micromark/.github/blob/HEAD/code-of-conduct.md\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/micromark-util-character/-/micromark-util-character-1.1.0.tgz#d97c54d5742a0d9611a68ca0cd4124331f264d86",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/micromark-util-character/-/micromark-util-character-1.1.0.tgz",
    "hash": "d97c54d5742a0d9611a68ca0cd4124331f264d86",
    "integrity": "sha512-agJ5B3unGNJ9rJvADMJ5ZiYjBRyDpzKAOk01Kpi1TKhlT1APx3XZk6eN7RtSz1erbWHC2L8T3xLZ81wdtGRZzg==",
    "registry": "npm",
    "packageName": "micromark-util-character",
    "cacheIntegrity": "sha512-agJ5B3unGNJ9rJvADMJ5ZiYjBRyDpzKAOk01Kpi1TKhlT1APx3XZk6eN7RtSz1erbWHC2L8T3xLZ81wdtGRZzg== sha1-2XxU1XQqDZYRpoygzUEkMx8mTYY="
  },
  "registry": "npm",
  "hash": "d97c54d5742a0d9611a68ca0cd4124331f264d86"
}