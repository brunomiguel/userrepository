{
  "manifest": {
    "name": "abab",
    "version": "2.0.5",
    "description": "WHATWG spec-compliant implementations of window.atob and window.btoa.",
    "main": "index.js",
    "files": [
      "index.d.ts",
      "index.js",
      "lib/"
    ],
    "scripts": {
      "mocha": "mocha test/node",
      "karma": "karma start",
      "test": "npm run lint && npm run mocha && npm run karma",
      "lint": "eslint ."
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/jsdom/abab.git"
    },
    "keywords": [
      "atob",
      "btoa",
      "browser"
    ],
    "author": {
      "name": "Jeff Carpenter",
      "email": "gcarpenterv@gmail.com"
    },
    "license": "BSD-3-Clause",
    "bugs": {
      "url": "https://github.com/jsdom/abab/issues"
    },
    "homepage": "https://github.com/jsdom/abab#readme",
    "devDependencies": {
      "eslint": "^4.19.1",
      "karma": "^2.0.0",
      "karma-cli": "^1.0.1",
      "karma-firefox-launcher": "^1.1.0",
      "karma-mocha": "^1.3.0",
      "karma-webpack": "^3.0.0",
      "mocha": "^5.1.0",
      "webpack": "^4.5.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-abab-2.0.5-integrity/node_modules/abab/package.json",
    "readmeFilename": "README.md",
    "readme": "# abab [![npm version](https://badge.fury.io/js/abab.svg)](https://www.npmjs.com/package/abab) [![Build Status](https://travis-ci.org/jsdom/abab.svg?branch=master)](https://travis-ci.org/jsdom/abab)\n\nA JavaScript module that implements `window.atob` and `window.btoa` according the forgiving-base64 algorithm in the [Infra Standard](https://infra.spec.whatwg.org/#forgiving-base64). The original code was forked from [w3c/web-platform-tests](https://github.com/w3c/web-platform-tests/blob/master/html/webappapis/atob/base64.html).\n\nCompatibility: Node.js version 3+ and all major browsers.\n\nInstall with `npm`:\n\n```sh\nnpm install abab\n```\n\n## API\n\n### `btoa` (base64 encode)\n\n```js\nconst { btoa } = require('abab');\nbtoa('Hello, world!'); // 'SGVsbG8sIHdvcmxkIQ=='\n```\n\n### `atob` (base64 decode)\n\n```js \nconst { atob } = require('abab');\natob('SGVsbG8sIHdvcmxkIQ=='); // 'Hello, world!'\n```\n\n#### Valid characters\n\n[Per the spec](https://html.spec.whatwg.org/multipage/webappapis.html#atob:dom-windowbase64-btoa-3), `btoa` will accept strings \"containing only characters in the range `U+0000` to `U+00FF`.\" If passed a string with characters above `U+00FF`, `btoa` will return `null`. If `atob` is passed a string that is not base64-valid, it will also return `null`. In both cases when `null` is returned, the spec calls for throwing a `DOMException` of type `InvalidCharacterError`.\n\n## Browsers\n\nIf you want to include just one of the methods to save bytes in your client-side code, you can `require` the desired module directly.\n\n```js\nconst atob = require('abab/lib/atob');\nconst btoa = require('abab/lib/btoa');\n```\n\n## Development\n\nIf you're **submitting a PR** or **deploying to npm**, please use the [checklists in CONTRIBUTING.md](CONTRIBUTING.md#checklists).\n\n## Remembering what `atob` and `btoa` stand for\n\nBase64 comes from IETF [RFC 4648](https://tools.ietf.org/html/rfc4648#section-4) (2006). \n\n- **`btoa`**, the encoder function, stands for **binary** to **ASCII**, meaning it converts any binary input into a subset of **ASCII** (Base64).\n- **`atob`**, the decoder function, converts **ASCII** (or Base64) to its original **binary** format. \n",
    "licenseText": "Copyright Â© 2019 W3C and Jeff Carpenter \\<jeffcarp@chromium.org\\>\n\nBoth the original source code and new contributions in this repository are released under the [3-Clause BSD license](https://opensource.org/licenses/BSD-3-Clause).\n\n# The 3-Clause BSD License\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/abab/-/abab-2.0.5.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/abab/-/abab-2.0.5.tgz",
    "hash": "",
    "integrity": "sha512-9IK9EadsbHo6jLWIpxpR6pL0sazTXV6+SQv25ZB+F7Bj9mJNaOc4nCRabwd5M/JwmUa8idz6Eci6eKfJryPs6Q==",
    "registry": "npm",
    "packageName": "abab",
    "cacheIntegrity": "sha512-9IK9EadsbHo6jLWIpxpR6pL0sazTXV6+SQv25ZB+F7Bj9mJNaOc4nCRabwd5M/JwmUa8idz6Eci6eKfJryPs6Q== sha1-wLZ4+zLWD8EhnHhNaoJv44Wut5o="
  },
  "registry": "npm",
  "hash": "f482bd11a76c6c7a3a8cb588a71a51ea92f4b1acd35d5ebe490bf6e5907e17b063f6624d68e7389c245a6f077933f2709946bc89dcfa11c8ba78a7c9af23ece9"
}