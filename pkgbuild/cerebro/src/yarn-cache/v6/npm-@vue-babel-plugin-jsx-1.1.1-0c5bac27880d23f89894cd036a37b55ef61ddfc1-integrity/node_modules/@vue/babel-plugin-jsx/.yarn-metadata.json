{
  "manifest": {
    "name": "@vue/babel-plugin-jsx",
    "version": "1.1.1",
    "description": "Babel plugin for Vue 3.0 JSX",
    "author": {
      "name": "Amour1688",
      "email": "lcz_1996@foxmail.com"
    },
    "homepage": "https://github.com/vuejs/jsx-next/tree/dev/packages/babel-plugin-jsx#readme",
    "license": "MIT",
    "main": "dist/index.js",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/vuejs/jsx-next.git"
    },
    "scripts": {
      "build": "rm -rf dist && tsc",
      "watch": "rm -rf dist && tsc --watch",
      "lint": "eslint 'src/*.ts'",
      "test": "yarn build && jest --coverage",
      "prepublishOnly": "yarn build"
    },
    "bugs": {
      "url": "https://github.com/vuejs/jsx-next/issues"
    },
    "files": [
      "dist"
    ],
    "dependencies": {
      "@babel/helper-module-imports": "^7.0.0",
      "@babel/plugin-syntax-jsx": "^7.0.0",
      "@babel/template": "^7.0.0",
      "@babel/traverse": "^7.0.0",
      "@babel/types": "^7.0.0",
      "@vue/babel-helper-vue-transform-on": "^1.0.2",
      "camelcase": "^6.0.0",
      "html-tags": "^3.1.0",
      "svg-tags": "^1.0.0"
    },
    "devDependencies": {
      "@babel/core": "^7.15.5",
      "@babel/preset-env": "^7.15.4",
      "@types/jest": "^26.0.24",
      "@types/svg-tags": "^1.0.0",
      "@typescript-eslint/eslint-plugin": "^4.30.0",
      "@typescript-eslint/parser": "^4.30.0",
      "@vue/compiler-dom": "3.2.8",
      "@vue/test-utils": "2.0.0-beta.2",
      "jest": "^26.0.1",
      "regenerator-runtime": "^0.13.9",
      "ts-jest": "^26.1.3",
      "typescript": "^4.4.2",
      "vue": "3.2.8"
    },
    "gitHead": "04fb7f7780a47a7c82f8c7f34b548950f288b4e5",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@vue-babel-plugin-jsx-1.1.1-0c5bac27880d23f89894cd036a37b55ef61ddfc1-integrity/node_modules/@vue/babel-plugin-jsx/package.json",
    "readmeFilename": "README.md",
    "readme": "# Babel Plugin JSX for Vue 3.0\n\n[![CircleCI](https://circleci.com/gh/vuejs/jsx-next.svg?style=svg)](https://circleci.com/gh/vuejs/vue-next) [![npm package](https://img.shields.io/npm/v/@vue/babel-plugin-jsx.svg?style=flat-square)](https://www.npmjs.com/package/@vue/babel-plugin-jsx)\n[![issues-helper](https://img.shields.io/badge/Issues%20Manage%20By-issues--helper-blueviolet?style=flat-square)](https://github.com/actions-cool/issues-helper)\n\nTo add Vue JSX support.\n\nEnglish | [简体中文](/packages/babel-plugin-jsx/README-zh_CN.md)\n\n## Installation\n\nInstall the plugin with:\n\n```bash\nnpm install @vue/babel-plugin-jsx -D\n```\n\nThen add the plugin to your babel config:\n\n```json\n{\n  \"plugins\": [\"@vue/babel-plugin-jsx\"]\n}\n```\n\n## Usage\n\n### options\n\n#### transformOn\n\nType: `boolean`\n\nDefault: `false`\n\ntransform `on: { click: xx }` to `onClick: xxx`\n\n#### optimize\n\nType: `boolean`\n\nDefault: `false`\n\nenable optimization or not. It's not recommended to enable it If you are not familiar with Vue 3.\n\n#### isCustomElement\n\nType: `(tag: string) => boolean`\n\nDefault: `undefined`\n\nconfiguring custom elements\n\n#### mergeProps\n\nType: `boolean`\n\nDefault: `true`\n\nmerge static and dynamic class / style attributes / onXXX handlers\n\n#### enableObjectSlots\n\nType: `boolean`\n\nDefault: `true`\n\nWhether to enable `object slots` (mentioned below the document) syntax\". It might be useful in JSX, but it will add a lot of `_isSlot` condition expressions which increase your bundle size. And `v-slots` is still available even if `enableObjectSlots` is turned off.\n\n#### pragma\n\nType: `string`\n\nDefault: `createVNode`\n\nReplace the function used when compiling JSX expressions.\n\n## Syntax\n\n### Content\n\nfunctional component\n\n```jsx\nconst App = () => <div>Vue 3.0</div>;\n```\n\nwith render\n\n```jsx\nconst App = {\n  render() {\n    return <div>Vue 3.0</div>;\n  },\n};\n```\n\n```jsx\nimport { withModifiers, defineComponent } from \"vue\";\n\nconst App = defineComponent({\n  setup() {\n    const count = ref(0);\n\n    const inc = () => {\n      count.value++;\n    };\n\n    return () => (\n      <div onClick={withModifiers(inc, [\"self\"])}>{count.value}</div>\n    );\n  },\n});\n```\n\nFragment\n\n```jsx\nconst App = () => (\n  <>\n    <span>I'm</span>\n    <span>Fragment</span>\n  </>\n);\n```\n\n### Attributes / Props\n\n```jsx\nconst App = () => <input type=\"email\" />;\n```\n\nwith a dynamic binding:\n\n```jsx\nconst placeholderText = \"email\";\nconst App = () => <input type=\"email\" placeholder={placeholderText} />;\n```\n\n### Directives\n\n#### v-show\n\n```jsx\nconst App = {\n  data() {\n    return { visible: true };\n  },\n  render() {\n    return <input v-show={this.visible} />;\n  },\n};\n```\n\n#### v-model\n\n> Note: You should pass the second param as string for using `arg`.\n\n```jsx\n<input v-model={val} />\n```\n\n```jsx\n<input v-model:argument={val} />\n```\n\n```jsx\n<input v-model={[val, [\"modifier\"]]} />\n```\n\n```jsx\n<A v-model={[val, \"argument\", [\"modifier\"]]} />\n```\n\nWill compile to:\n\n```js\nh(A, {\n  argument: val,\n  argumentModifiers: {\n    modifier: true,\n  },\n  \"onUpdate:argument\": ($event) => (val = $event),\n});\n```\n\n#### v-models (Not recommended since v1.1.0)\n\n> Note: You should pass a Two-dimensional Arrays to v-models.\n\n```jsx\n<A v-models={[[foo], [bar, \"bar\"]]} />\n```\n\n```jsx\n<A\n  v-models={[\n    [foo, \"foo\"],\n    [bar, \"bar\"],\n  ]}\n/>\n```\n\n```jsx\n<A\n  v-models={[\n    [foo, [\"modifier\"]],\n    [bar, \"bar\", [\"modifier\"]],\n  ]}\n/>\n```\n\nWill compile to:\n\n```js\nh(A, {\n  modelValue: foo,\n  modelModifiers: {\n    modifier: true,\n  },\n  \"onUpdate:modelValue\": ($event) => (foo = $event),\n  bar: bar,\n  barModifiers: {\n    modifier: true,\n  },\n  \"onUpdate:bar\": ($event) => (bar = $event),\n});\n```\n\n#### custom directive\n\nRecommended when using string arguments\n\n```jsx\nconst App = {\n  directives: { custom: customDirective },\n  setup() {\n    return () => <a v-custom:arg={val} />;\n  },\n};\n```\n\n```jsx\nconst App = {\n  directives: { custom: customDirective },\n  setup() {\n    return () => <a v-custom={[val, \"arg\", [\"a\", \"b\"]]} />;\n  },\n};\n```\n\n### Slot\n\n> Note: In `jsx`, _`v-slot`_ should be replace with **`v-slots`**\n\n```jsx\nconst A = (props, { slots }) => (\n  <>\n    <h1>{ slots.default ? slots.default() : 'foo' }</h1>\n    <h2>{ slots.bar?.() }</h2>\n  </>\n);\n\nconst App = {\n  setup() {\n    const slots = {\n      bar: () => <span>B</span>,\n    };\n    return () => (\n      <A v-slots={slots}>\n        <div>A</div>\n      </A>\n    );\n  },\n};\n\n// or\n\nconst App = {\n  setup() {\n    const slots = {\n      default: () => <div>A</div>,\n      bar: () => <span>B</span>,\n    };\n    return () => <A v-slots={slots} />;\n  },\n};\n\n// or you can use object slots when `enableObjectSlots` is not false.\nconst App = {\n  setup() {\n    return () => (\n      <>\n        <A>\n          {{\n            default: () => <div>A</div>,\n            bar: () => <span>B</span>,\n          }}\n        </A>\n        <B>{() => \"foo\"}</B>\n      </>\n    );\n  },\n};\n```\n\n### In TypeScript\n\n`tsconfig.json`:\n\n```json\n{\n  \"compilerOptions\": {\n    \"jsx\": \"preserve\"\n  }\n}\n```\n\n## Who is using\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <a target=\"_blank\" href=\"https://www.antdv.com/\">\n          <img\n            width=\"32\"\n            src=\"https://qn.antdv.com/logo.png\"\n          />\n          <br>\n          <strong>Ant Design Vue</strong>\n        </a>\n      </td>\n      <td align=\"center\">\n        <a target=\"_blank\" href=\"https://youzan.github.io/vant/#/zh-CN/\">\n          <img\n            width=\"32\"\n            style=\"vertical-align: -0.32em; margin-right: 8px;\"\n            src=\"https://img.yzcdn.cn/vant/logo.png\"\n          />\n          <br>\n          <strong>Vant</strong>\n        </a>\n      </td>\n      <td align=\"center\">\n        <a target=\"_blank\" href=\"https://github.com/element-plus/element-plus\">\n          <img\n            height=\"32\"\n            style=\"vertical-align: -0.32em; margin-right: 8px;\"\n            src=\"https://user-images.githubusercontent.com/10731096/91267529-259f3680-e7a6-11ea-9a60-3286f750de01.png\"\n          />\n          <br>\n          <strong>Element Plus</strong>\n        </a>\n      </td>\n      <td align=\"center\">\n        <a target=\"_blank\" href=\"https://github.com/leezng/vue-json-pretty\">\n          <img\n            height=\"32\"\n            style=\"vertical-align: -0.32em; margin-right: 8px;\"\n            src=\"https://raw.githubusercontent.com/leezng/vue-json-pretty/master/static/logo.svg\"\n          />\n          <br>\n          <strong>Vue Json Pretty</strong>\n        </a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n## Compatibility\n\nThis repo is only compatible with:\n\n- **Babel 7+**\n- **Vue 3+**\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020-present vuejs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@vue/babel-plugin-jsx/-/babel-plugin-jsx-1.1.1.tgz#0c5bac27880d23f89894cd036a37b55ef61ddfc1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@vue/babel-plugin-jsx/-/babel-plugin-jsx-1.1.1.tgz",
    "hash": "0c5bac27880d23f89894cd036a37b55ef61ddfc1",
    "integrity": "sha512-j2uVfZjnB5+zkcbc/zsOc0fSNGCMMjaEXP52wdwdIfn0qjFfEYpYZBFKFg+HHnQeJCVrjOeO0YxgaL7DMrym9w==",
    "registry": "npm",
    "packageName": "@vue/babel-plugin-jsx",
    "cacheIntegrity": "sha512-j2uVfZjnB5+zkcbc/zsOc0fSNGCMMjaEXP52wdwdIfn0qjFfEYpYZBFKFg+HHnQeJCVrjOeO0YxgaL7DMrym9w== sha1-DFusJ4gNI/iYlM0Daje1XvYd38E="
  },
  "registry": "npm",
  "hash": "0c5bac27880d23f89894cd036a37b55ef61ddfc1"
}