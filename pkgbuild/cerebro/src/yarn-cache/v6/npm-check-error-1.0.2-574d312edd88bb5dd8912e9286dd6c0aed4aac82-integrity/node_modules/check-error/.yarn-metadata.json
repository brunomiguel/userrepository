{
  "manifest": {
    "name": "check-error",
    "description": "Error comparison and information related utility for node and the browser",
    "keywords": [
      "check-error",
      "error",
      "chai util"
    ],
    "license": "MIT",
    "author": {
      "name": "Jake Luer",
      "email": "jake@alogicalparadox.com",
      "url": "http://alogicalparadox.com"
    },
    "contributors": [
      {
        "name": "David Losert",
        "url": "https://github.com/davelosert"
      },
      {
        "name": "Keith Cirkel",
        "url": "https://github.com/keithamus"
      },
      {
        "name": "Miroslav Bajto≈°",
        "url": "https://github.com/bajtos"
      },
      {
        "name": "Lucas Fernandes da Costa",
        "url": "https://github.com/lucasfcosta"
      }
    ],
    "files": [
      "index.js",
      "check-error.js"
    ],
    "main": "./index.js",
    "repository": {
      "type": "git",
      "url": "git+ssh://git@github.com/chaijs/check-error.git"
    },
    "scripts": {
      "build": "browserify --bare $npm_package_main --standalone checkError -o check-error.js",
      "lint": "eslint --ignore-path .gitignore .",
      "prepublish": "npm run build",
      "semantic-release": "semantic-release pre && npm publish && semantic-release post",
      "pretest": "npm run lint",
      "test": "npm run test:node && npm run test:browser && npm run upload-coverage",
      "test:browser": "karma start --singleRun=true",
      "test:node": "istanbul cover _mocha",
      "upload-coverage": "lcov-result-merger 'coverage/**/lcov.info' | coveralls; exit 0"
    },
    "config": {
      "ghooks": {
        "commit-msg": "validate-commit-msg"
      }
    },
    "eslintConfig": {
      "extends": [
        "strict/es5"
      ],
      "env": {
        "es6": true
      },
      "globals": {
        "HTMLElement": false
      },
      "rules": {
        "complexity": 0,
        "max-statements": 0
      }
    },
    "dependencies": {},
    "devDependencies": {
      "browserify": "^13.0.0",
      "browserify-istanbul": "^1.0.0",
      "coveralls": "2.11.9",
      "eslint": "^2.4.0",
      "eslint-config-strict": "^8.5.0",
      "eslint-plugin-filenames": "^0.2.0",
      "ghooks": "^1.0.1",
      "istanbul": "^0.4.2",
      "karma": "^0.13.22",
      "karma-browserify": "^5.0.2",
      "karma-coverage": "^0.5.5",
      "karma-mocha": "^0.2.2",
      "karma-phantomjs-launcher": "^1.0.0",
      "karma-sauce-launcher": "^0.3.1",
      "lcov-result-merger": "^1.0.2",
      "mocha": "^2.4.5",
      "phantomjs-prebuilt": "^2.1.5",
      "semantic-release": "^4.3.5",
      "simple-assert": "^1.0.0",
      "travis-after-all": "^1.4.4",
      "validate-commit-msg": "^2.3.1"
    },
    "engines": {
      "node": "*"
    },
    "version": "1.0.2",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-check-error-1.0.2-574d312edd88bb5dd8912e9286dd6c0aed4aac82-integrity/node_modules/check-error/package.json",
    "readmeFilename": "README.md",
    "readme": "<h1 align=center>\n  <a href=\"http://chaijs.com\" title=\"Chai Documentation\">\n    <img alt=\"ChaiJS\" src=\"http://chaijs.com/img/chai-logo.png\"/> check-error\n  </a>\n</h1>\n\n<p align=center>\n  Error comparison and information related utility for <a href=\"http://nodejs.org\">node</a> and the browser.\n</p>\n\n<p align=center>\n  <a href=\"./LICENSE\">\n    <img\n      alt=\"license:mit\"\n      src=\"https://img.shields.io/badge/license-mit-green.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://github.com/chaijs/check-error/releases\">\n    <img\n      alt=\"tag:?\"\n      src=\"https://img.shields.io/github/tag/chaijs/check-error.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://travis-ci.org/chaijs/check-error\">\n    <img\n      alt=\"build:?\"\n      src=\"https://img.shields.io/travis/chaijs/check-error/master.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://coveralls.io/r/chaijs/check-error\">\n    <img\n      alt=\"coverage:?\"\n      src=\"https://img.shields.io/coveralls/chaijs/check-error/master.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://www.npmjs.com/packages/check-error\">\n    <img\n      alt=\"npm:?\"\n      src=\"https://img.shields.io/npm/v/check-error.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://www.npmjs.com/packages/check-error\">\n    <img\n      alt=\"dependencies:?\"\n      src=\"https://img.shields.io/npm/dm/check-error.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"\">\n    <img\n      alt=\"devDependencies:?\"\n      src=\"https://img.shields.io/david/chaijs/check-error.svg?style=flat-square\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://saucelabs.com/u/chaijs-check-error\">\n    <img\n      alt=\"Selenium Test Status\"\n      src=\"https://saucelabs.com/browser-matrix/chaijs-check-error.svg\"\n    />\n  </a>\n  <br>\n  <a href=\"https://chai-slack.herokuapp.com/\">\n    <img\n      alt=\"Join the Slack chat\"\n      src=\"https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://gitter.im/chaijs/chai\">\n    <img\n      alt=\"Join the Gitter chat\"\n      src=\"https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square\"\n    />\n  </a>\n</p>\n\n## What is Check-Error?\n\nCheck-Error is a module which you can use to retrieve an Error's information such as its `message` or `constructor` name and also to check whether two Errors are compatible based on their messages, constructors or even instances.\n\n## Installation\n\n### Node.js\n\n`check-error` is available on [npm](http://npmjs.org). To install it, type:\n\n    $ npm install check-error\n\n### Browsers\n\nYou can also use it within the browser; install via npm and use the `check-error.js` file found within the download. For example:\n\n```html\n<script src=\"./node_modules/check-error/check-error.js\"></script>\n```\n\n## Usage\n\nThe primary export of `check-error` is an object which has the following methods:\n\n* `compatibleInstance(err, errorLike)` - Checks if an error is compatible with another `errorLike` object. If `errorLike` is an error instance we do a strict comparison, otherwise we return `false` by default, because instances of objects can only be compatible if they're both error instances.\n* `compatibleConstructor(err, errorLike)` - Checks if an error's constructor is compatible with another `errorLike` object. If `err` has the same constructor as `errorLike` or if `err` is an instance of `errorLike`.\n* `compatibleMessage(err, errMatcher)` - Checks if an error message is compatible with an `errMatcher` RegExp or String (we check if the message contains the String).\n* `getConstructorName(errorLike)` - Retrieves the name of a constructor, an error's constructor or `errorLike` itself if it's not an error instance or constructor.\n* `getMessage(err)` - Retrieves the message of an error or `err` itself if it's a String. If `err` or `err.message` is undefined we return an empty String.\n\n```js\nvar checkError = require('check-error');\n```\n\n#### .compatibleInstance(err, errorLike)\n\n```js\nvar checkError = require('check-error');\n\nvar funcThatThrows = function() { throw new TypeError('I am a TypeError') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\nvar sameInstance = caughtErr;\n\ncheckError.compatibleInstance(caughtErr, sameInstance); // true\ncheckError.compatibleInstance(caughtErr, new TypeError('Another error')); // false\n```\n\n#### .compatibleConstructor(err, errorLike)\n\n```js\nvar checkError = require('check-error');\n\nvar funcThatThrows = function() { throw new TypeError('I am a TypeError') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\ncheckError.compatibleConstructor(caughtErr, Error); // true\ncheckError.compatibleConstructor(caughtErr, TypeError); // true\ncheckError.compatibleConstructor(caughtErr, RangeError); // false\n```\n\n#### .compatibleMessage(err, errMatcher)\n\n```js\nvar checkError = require('check-error');\n\nvar funcThatThrows = function() { throw new TypeError('I am a TypeError') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\nvar sameInstance = caughtErr;\n\ncheckError.compatibleMessage(caughtErr, /TypeError$/); // true\ncheckError.compatibleMessage(caughtErr, 'I am a'); // true\ncheckError.compatibleMessage(caughtErr, /unicorn/); // false\ncheckError.compatibleMessage(caughtErr, 'I do not exist'); // false\n```\n\n#### .getConstructorName(errorLike)\n\n```js\nvar checkError = require('check-error');\n\nvar funcThatThrows = function() { throw new TypeError('I am a TypeError') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\nvar sameInstance = caughtErr;\n\ncheckError.getConstructorName(caughtErr) // 'TypeError'\n```\n\n#### .getMessage(err)\n\n```js\nvar checkError = require('check-error');\n\nvar funcThatThrows = function() { throw new TypeError('I am a TypeError') };\nvar caughtErr;\n\ntry {\n  funcThatThrows();\n} catch(e) {\n  caughtErr = e;\n}\n\nvar sameInstance = caughtErr;\n\ncheckError.getMessage(caughtErr) // 'I am a TypeError'\n```\n",
    "licenseText": "Copyright (c) 2013 Jake Luer <jake@alogicalparadox.com> (http://alogicalparadox.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/check-error/-/check-error-1.0.2.tgz#574d312edd88bb5dd8912e9286dd6c0aed4aac82",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/check-error/-/check-error-1.0.2.tgz",
    "hash": "574d312edd88bb5dd8912e9286dd6c0aed4aac82",
    "integrity": "sha1-V00xLt2Iu13YkS6Sht1sCu1KrII=",
    "registry": "npm",
    "packageName": "check-error",
    "cacheIntegrity": "sha512-BrgHpW9NURQgzoNyjfq0Wu6VFO6D7IZEmJNdtgNqpzGG8RuNFHt2jQxWlAs4HMe119chBnv+34syEZtc6IhLtA== sha1-V00xLt2Iu13YkS6Sht1sCu1KrII="
  },
  "registry": "npm",
  "hash": "574d312edd88bb5dd8912e9286dd6c0aed4aac82"
}