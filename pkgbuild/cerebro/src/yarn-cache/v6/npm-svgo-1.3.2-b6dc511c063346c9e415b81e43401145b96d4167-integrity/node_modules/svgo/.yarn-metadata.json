{
  "manifest": {
    "name": "svgo",
    "version": "1.3.2",
    "description": "Nodejs-based tool for optimizing SVG vector graphics files",
    "keywords": [
      "svgo",
      "svg",
      "optimize",
      "minify"
    ],
    "homepage": "https://github.com/svg/svgo",
    "bugs": {
      "url": "https://github.com/svg/svgo/issues"
    },
    "author": {
      "name": "Kir Belevich",
      "email": "kir@belevi.ch",
      "url": "https://github.com/deepsweet"
    },
    "contributors": [
      {
        "name": "Sergey Belov",
        "email": "peimei@ya.ru",
        "url": "http://github.com/arikon"
      },
      {
        "name": "Lev Solntsev",
        "email": "lev.sun@ya.ru",
        "url": "http://github.com/GreLI"
      }
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/svg/svgo.git"
    },
    "main": "./lib/svgo.js",
    "bin": {
      "svgo": "bin/svgo"
    },
    "scripts": {
      "test": "set NODE_ENV=test && mocha",
      "lint": "jshint --show-non-errors .",
      "jshint": "npm run lint"
    },
    "dependencies": {
      "chalk": "^2.4.1",
      "coa": "^2.0.2",
      "css-select": "^2.0.0",
      "css-select-base-adapter": "^0.1.1",
      "css-tree": "1.0.0-alpha.37",
      "csso": "^4.0.2",
      "js-yaml": "^3.13.1",
      "mkdirp": "~0.5.1",
      "object.values": "^1.1.0",
      "sax": "~1.2.4",
      "stable": "^0.1.8",
      "unquote": "~1.1.1",
      "util.promisify": "~1.0.0"
    },
    "devDependencies": {
      "coveralls": "^3.0.7",
      "fs-extra": "~8.1.0",
      "istanbul": "~0.4.5",
      "jshint": "~2.10.2",
      "mocha": "~6.2.2",
      "mocha-istanbul": "~0.3.0",
      "mock-stdin": "~0.3.1",
      "should": "~13.2.3"
    },
    "engines": {
      "node": ">=4.0.0"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-svgo-1.3.2-b6dc511c063346c9e415b81e43401145b96d4167-integrity/node_modules/svgo/package.json",
    "readmeFilename": "README.md",
    "readme": "**english** | [русский](https://github.com/svg/svgo/blob/master/README.ru.md)\n- - -\n\n<img src=\"https://svg.github.io/svgo-logo.svg\" width=\"200\" height=\"200\" alt=\"logo\"/>\n\n## SVGO [![NPM version](https://badge.fury.io/js/svgo.svg)](https://npmjs.org/package/svgo) [![Build Status](https://secure.travis-ci.org/svg/svgo.svg)](https://travis-ci.org/svg/svgo) [![Coverage Status](https://img.shields.io/coveralls/svg/svgo.svg)](https://coveralls.io/r/svg/svgo?branch=master)\n\n**SVG O**ptimizer is a Nodejs-based tool for optimizing SVG vector graphics files.\n![](https://mc.yandex.ru/watch/18431326)\n\n## Why?\n\nSVG files, especially those exported from various editors, usually contain a lot of redundant and useless information. This can include editor metadata, comments, hidden elements, default or non-optimal values and other stuff that can be safely removed or converted without affecting the SVG rendering result.\n\n## What it can do\n\nSVGO has a plugin-based architecture, so almost every optimization is a separate plugin.\n\nToday we have:\n\n| Plugin | Description | Default |\n| ------ | ----------- | ------- |\n| [cleanupAttrs](https://github.com/svg/svgo/blob/master/plugins/cleanupAttrs.js) | cleanup attributes from newlines, trailing, and repeating spaces | `enabled` |\n| [inlineStyles](https://github.com/svg/svgo/blob/master/plugins/inlineStyles.js) | move and merge styles from `<style>` elements to element `style` attributes | `enabled` |\n| [removeDoctype](https://github.com/svg/svgo/blob/master/plugins/removeDoctype.js) | remove doctype declaration | `enabled` |\n| [removeXMLProcInst](https://github.com/svg/svgo/blob/master/plugins/removeXMLProcInst.js) | remove XML processing instructions | `enabled` |\n| [removeComments](https://github.com/svg/svgo/blob/master/plugins/removeComments.js) | remove comments | `enabled` |\n| [removeMetadata](https://github.com/svg/svgo/blob/master/plugins/removeMetadata.js) | remove `<metadata>` | `enabled` |\n| [removeTitle](https://github.com/svg/svgo/blob/master/plugins/removeTitle.js) | remove `<title>` | `enabled` |\n| [removeDesc](https://github.com/svg/svgo/blob/master/plugins/removeDesc.js) | remove `<desc>` | `enabled` |\n| [removeUselessDefs](https://github.com/svg/svgo/blob/master/plugins/removeUselessDefs.js) | remove elements of `<defs>` without `id` | `enabled` |\n| [removeXMLNS](https://github.com/svg/svgo/blob/master/plugins/removeXMLNS.js) | removes `xmlns` attribute (for inline svg) | `disabled` |\n| [removeEditorsNSData](https://github.com/svg/svgo/blob/master/plugins/removeEditorsNSData.js) | remove editors namespaces, elements, and attributes | `enabled` |\n| [removeEmptyAttrs](https://github.com/svg/svgo/blob/master/plugins/removeEmptyAttrs.js) | remove empty attributes | `enabled` |\n| [removeHiddenElems](https://github.com/svg/svgo/blob/master/plugins/removeHiddenElems.js) | remove hidden elements | `enabled` |\n| [removeEmptyText](https://github.com/svg/svgo/blob/master/plugins/removeEmptyText.js) | remove empty Text elements | `enabled` |\n| [removeEmptyContainers](https://github.com/svg/svgo/blob/master/plugins/removeEmptyContainers.js) | remove empty Container elements | `enabled` |\n| [removeViewBox](https://github.com/svg/svgo/blob/master/plugins/removeViewBox.js) | remove `viewBox` attribute when possible | `enabled` |\n| [cleanupEnableBackground](https://github.com/svg/svgo/blob/master/plugins/cleanupEnableBackground.js) | remove or cleanup `enable-background` attribute when possible | `enabled` |\n| [minifyStyles](https://github.com/svg/svgo/blob/master/plugins/minifyStyles.js) | minify `<style>` elements content with [CSSO](https://github.com/css/csso) | `enabled` |\n| [convertStyleToAttrs](https://github.com/svg/svgo/blob/master/plugins/convertStyleToAttrs.js) | convert styles into attributes | `enabled` |\n| [convertColors](https://github.com/svg/svgo/blob/master/plugins/convertColors.js) | convert colors (from `rgb()` to `#rrggbb`, from `#rrggbb` to `#rgb`) | `enabled` |\n| [convertPathData](https://github.com/svg/svgo/blob/master/plugins/convertPathData.js) | convert Path data to relative or absolute (whichever is shorter), convert one segment to another, trim useless delimiters, smart rounding, and much more | `enabled` |\n| [convertTransform](https://github.com/svg/svgo/blob/master/plugins/convertTransform.js) | collapse multiple transforms into one, convert matrices to the short aliases, and much more | `enabled` |\n| [removeUnknownsAndDefaults](https://github.com/svg/svgo/blob/master/plugins/removeUnknownsAndDefaults.js) | remove unknown elements content and attributes, remove attrs with default values | `enabled` |\n| [removeNonInheritableGroupAttrs](https://github.com/svg/svgo/blob/master/plugins/removeNonInheritableGroupAttrs.js) | remove non-inheritable group's \"presentation\" attributes | `enabled` |\n| [removeUselessStrokeAndFill](https://github.com/svg/svgo/blob/master/plugins/removeUselessStrokeAndFill.js) | remove useless `stroke` and `fill` attrs | `enabled` |\n| [removeUnusedNS](https://github.com/svg/svgo/blob/master/plugins/removeUnusedNS.js) | remove unused namespaces declaration | `enabled` |\n| [prefixIds](https://github.com/svg/svgo/blob/master/plugins/prefixIds.js) | prefix IDs and classes with the SVG filename or an arbitrary string | `disabled` |\n| [cleanupIDs](https://github.com/svg/svgo/blob/master/plugins/cleanupIDs.js) | remove unused and minify used IDs | `enabled` |\n| [cleanupNumericValues](https://github.com/svg/svgo/blob/master/plugins/cleanupNumericValues.js) | round numeric values to the fixed precision, remove default `px` units | `enabled` |\n| [cleanupListOfValues](https://github.com/svg/svgo/blob/master/plugins/cleanupListOfValues.js) | round numeric values in attributes that take a list of numbers (like `viewBox` or `enable-background`) | `disabled` |\n| [moveElemsAttrsToGroup](https://github.com/svg/svgo/blob/master/plugins/moveElemsAttrsToGroup.js) | move elements' attributes to their enclosing group | `enabled` |\n| [moveGroupAttrsToElems](https://github.com/svg/svgo/blob/master/plugins/moveGroupAttrsToElems.js) | move some group attributes to the contained elements | `enabled` |\n| [collapseGroups](https://github.com/svg/svgo/blob/master/plugins/collapseGroups.js) | collapse useless groups | `enabled` |\n| [removeRasterImages](https://github.com/svg/svgo/blob/master/plugins/removeRasterImages.js) | remove raster images | `disabled` |\n| [mergePaths](https://github.com/svg/svgo/blob/master/plugins/mergePaths.js) | merge multiple Paths into one | `enabled` |\n| [convertShapeToPath](https://github.com/svg/svgo/blob/master/plugins/convertShapeToPath.js) | convert some basic shapes to `<path>` | `enabled` |\n| [convertEllipseToCircle](https://github.com/svg/svgo/blob/master/plugins/convertEllipseToCircle.js) | convert non-eccentric `<ellipse>` to `<circle>` | `enabled` |\n| [sortAttrs](https://github.com/svg/svgo/blob/master/plugins/sortAttrs.js) | sort element attributes for epic readability | `disabled` |\n| [sortDefsChildren](https://github.com/svg/svgo/blob/master/plugins/sortDefsChildren.js) | sort children of `<defs>` in order to improve compression | `enabled` |\n| [removeDimensions](https://github.com/svg/svgo/blob/master/plugins/removeDimensions.js) | remove `width`/`height` and add `viewBox` if it's missing (opposite to removeViewBox, disable it first) | `disabled` |\n| [removeAttrs](https://github.com/svg/svgo/blob/master/plugins/removeAttrs.js) | remove attributes by pattern | `disabled` |\n| [removeAttributesBySelector](https://github.com/svg/svgo/blob/master/plugins/removeAttributesBySelector.js) | removes attributes of elements that match a css selector | `disabled` |\n| [removeElementsByAttr](https://github.com/svg/svgo/blob/master/plugins/removeElementsByAttr.js) | remove arbitrary elements by ID or className | `disabled` |\n| [addClassesToSVGElement](https://github.com/svg/svgo/blob/master/plugins/addClassesToSVGElement.js) | add classnames to an outer `<svg>` element | `disabled` |\n| [addAttributesToSVGElement](https://github.com/svg/svgo/blob/master/plugins/addAttributesToSVGElement.js) | adds attributes to an outer `<svg>` element | `disabled` |\n| [removeOffCanvasPaths](https://github.com/svg/svgo/blob/master/plugins/removeOffCanvasPaths.js) | removes elements that are drawn outside of the viewbox | `disabled` |\n| [removeStyleElement](https://github.com/svg/svgo/blob/master/plugins/removeStyleElement.js) | remove `<style>` elements | `disabled` |\n| [removeScriptElement](https://github.com/svg/svgo/blob/master/plugins/removeScriptElement.js) | remove `<script>` elements | `disabled` |\n| [reusePaths](https://github.com/svg/svgo/blob/master/plugins/reusePaths.js) | Find duplicated <path> elements and replace them with <use> links | `disabled` |\n\nWant to know how it works and how to write your own plugin? [Of course you want to](https://github.com/svg/svgo/blob/master/docs/how-it-works/en.md). ([동작방법](https://github.com/svg/svgo/blob/master/docs/how-it-works/ko.md))\n\n\n## Installation\n\n```sh\n$ [sudo] npm install -g svgo\n```\n\n## Usage\n\n### <abbr title=\"Command Line Interface\">CLI</abbr>\n\n```\nUsage:\n  svgo [OPTIONS] [ARGS]\n\nOptions:\n  -h, --help : Help\n  -v, --version : Version\n  -i INPUT, --input=INPUT : Input file, \"-\" for STDIN\n  -s STRING, --string=STRING : Input SVG data string\n  -f FOLDER, --folder=FOLDER : Input folder, optimize and rewrite all *.svg files\n  -o OUTPUT, --output=OUTPUT : Output file or folder (by default the same as the input), \"-\" for STDOUT\n  -p PRECISION, --precision=PRECISION : Set number of digits in the fractional part, overrides plugins params\n  --config=CONFIG : Config file or JSON string to extend or replace default\n  --disable=PLUGIN : Disable plugin by name, \"--disable=PLUGIN1,PLUGIN2\" for multiple plugins\n  --enable=PLUGIN : Enable plugin by name, \"--enable=PLUGIN3,PLUGIN4\" for multiple plugins\n  --datauri=DATAURI : Output as Data URI string (base64, URI encoded or unencoded)\n  --multipass : Pass over SVGs multiple times to ensure all optimizations are applied\n  --pretty : Make SVG pretty printed\n  --indent=INDENT : Indent number when pretty printing SVGs\n  -r, --recursive : Use with '-f'. Optimizes *.svg files in folders recursively.\n  -q, --quiet : Only output error messages, not regular status messages\n  --show-plugins : Show available plugins and exit\n\nArguments:\n  INPUT : Alias to --input\n```\n\n* with files:\n\n    ```sh\n    $ svgo test.svg\n    ```\n\n    or:\n\n    ```sh\n    $ svgo *.svg\n    ```\n\n    ```sh\n    $ svgo test.svg -o test.min.svg\n    ```\n\n    ```sh\n    $ svgo test.svg other.svg third.svg\n    ```\n\n    ```sh\n    $ svgo test.svg other.svg third.svg -o test.min.svg -o other.min.svg -o third.min.svg\n    ```\n\n* with STDIN / STDOUT:\n\n    ```sh\n    $ cat test.svg | svgo -i - -o - > test.min.svg\n    ```\n\n* with folder\n\n    ```sh\n    $ svgo -f ../path/to/folder/with/svg/files\n    ```\n\n    or:\n\n    ```sh\n    $ svgo -f ../path/to/folder/with/svg/files -o ../path/to/folder/with/svg/output\n    ```\n\n    ```sh\n    $ svgo *.svg -o ../path/to/folder/with/svg/output\n    ```\n\n* with strings:\n\n    ```sh\n    $ svgo -s '<svg version=\"1.1\">test</svg>' -o test.min.svg\n    ```\n\n    or even with Data URI base64:\n\n    ```sh\n    $ svgo -s 'data:image/svg+xml;base64,...' -o test.min.svg\n    ```\n\n* with SVGZ:\n\n    from `.svgz` to `.svg`:\n\n    ```sh\n    $ gunzip -c test.svgz | svgo -i - -o test.min.svg\n    ```\n\n    from `.svg` to `.svgz`:\n\n    ```sh\n    $ svgo test.svg -o - | gzip -cfq9 > test.svgz\n    ```\n\n### Other Ways to Use SVGO\n\n* as a web app – [SVGOMG](https://jakearchibald.github.io/svgomg/)\n* as a Nodejs module – [examples](https://github.com/svg/svgo/tree/master/examples)\n* as a Grunt task – [grunt-svgmin](https://github.com/sindresorhus/grunt-svgmin)\n* as a Gulp task – [gulp-svgmin](https://github.com/ben-eb/gulp-svgmin)\n* as a Mimosa module – [mimosa-minify-svg](https://github.com/dbashford/mimosa-minify-svg)\n* as an OSX Folder Action – [svgo-osx-folder-action](https://github.com/svg/svgo-osx-folder-action)\n* as a webpack loader – [image-webpack-loader](https://github.com/tcoopman/image-webpack-loader)\n* as a Telegram Bot – [svgo_bot](https://github.com/maksugr/svgo_bot)\n* as a PostCSS plugin – [postcss-svgo](https://github.com/ben-eb/postcss-svgo)\n* as an Inkscape plugin – [inkscape-svgo](https://github.com/konsumer/inkscape-svgo)\n* as a Sketch plugin - [svgo-compressor](https://github.com/BohemianCoding/svgo-compressor)\n* as macOS app - [Image Shrinker](https://image-shrinker.com)\n* as a Rollup plugin - [rollup-plugin-svgo](https://github.com/porsager/rollup-plugin-svgo)\n\n## Backers\n\n| [<img src=\"https://sheetjs.com/sketch128.png\" width=\"80\">](https://sheetjs.com/) | [<img src=\"https://rawgithub.com/fontello/fontello/master/fontello-image.svg\" width=\"80\">](http://fontello.com/) |\n|:-:|:-:|\n| [SheetJS LLC](https://sheetjs.com/) | [Fontello](http://fontello.com/) |\n\n## Donations\n\n- PayPal: https://www.paypal.me/deepsweet\n\n## License and Copyright\n\nThis software is released under the terms of the [MIT license](https://github.com/svg/svgo/blob/master/LICENSE).\n\nLogo by [Yegor Bolshakov](http://xizzzy.ru/).\n",
    "licenseText": "The MIT License\n\nCopyright © 2012–2016 Kir Belevich\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nЛицензия MIT\n\nCopyright © 2012–2016 Кир Белевич\n\nДанная лицензия разрешает лицам, получившим копию данного\nпрограммного обеспечения и сопутствующей документации\n(в дальнейшем именуемыми «Программное Обеспечение»), безвозмездно\nиспользовать Программное Обеспечение без ограничений, включая\nнеограниченное право на использование, копирование, изменение,\nдобавление, публикацию, распространение, сублицензирование\nи/или продажу копий Программного Обеспечения, также как и лицам,\nкоторым предоставляется данное Программное Обеспечение,\nпри соблюдении следующих условий:\n\nУказанное выше уведомление об авторском праве и данные условия\nдолжны быть включены во все копии или значимые части данного\nПрограммного Обеспечения.\n\nДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ «КАК ЕСТЬ»,\nБЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, ЯВНО ВЫРАЖЕННЫХ ИЛИ ПОДРАЗУМЕВАЕМЫХ,\nВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ГАРАНТИЯМИ ТОВАРНОЙ ПРИГОДНОСТИ,\nСООТВЕТСТВИЯ ПО ЕГО КОНКРЕТНОМУ НАЗНАЧЕНИЮ И ОТСУТСТВИЯ НАРУШЕНИЙ\nПРАВ. НИ В КАКОМ СЛУЧАЕ АВТОРЫ ИЛИ ПРАВООБЛАДАТЕЛИ НЕ НЕСУТ\nОТВЕТСТВЕННОСТИ ПО ИСКАМ О ВОЗМЕЩЕНИИ УЩЕРБА, УБЫТКОВ ИЛИ ДРУГИХ\nТРЕБОВАНИЙ ПО ДЕЙСТВУЮЩИМ КОНТРАКТАМ, ДЕЛИКТАМ ИЛИ ИНОМУ,\nВОЗНИКШИМ ИЗ, ИМЕЮЩИМ ПРИЧИНОЙ ИЛИ СВЯЗАННЫМ С ПРОГРАММНЫМ\nОБЕСПЕЧЕНИЕМ ИЛИ ИСПОЛЬЗОВАНИЕМ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ\nИЛИ ИНЫМИ ДЕЙСТВИЯМИ С ПРОГРАММНЫМ ОБЕСПЕЧЕНИЕМ.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/svgo/-/svgo-1.3.2.tgz#b6dc511c063346c9e415b81e43401145b96d4167",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/svgo/-/svgo-1.3.2.tgz",
    "hash": "b6dc511c063346c9e415b81e43401145b96d4167",
    "integrity": "sha512-yhy/sQYxR5BkC98CY7o31VGsg014AKLEPxdfhora76l36hD9Rdy5NZA/Ocn6yayNPgSamYdtX2rFJdcv07AYVw==",
    "registry": "npm",
    "packageName": "svgo",
    "cacheIntegrity": "sha512-yhy/sQYxR5BkC98CY7o31VGsg014AKLEPxdfhora76l36hD9Rdy5NZA/Ocn6yayNPgSamYdtX2rFJdcv07AYVw== sha1-ttxRHAYzRsnkFbgeQ0ARRbltQWc="
  },
  "registry": "npm",
  "hash": "b6dc511c063346c9e415b81e43401145b96d4167"
}