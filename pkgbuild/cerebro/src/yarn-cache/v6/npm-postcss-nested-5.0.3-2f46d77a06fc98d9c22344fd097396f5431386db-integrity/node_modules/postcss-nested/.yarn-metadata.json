{
  "manifest": {
    "name": "postcss-nested",
    "version": "5.0.3",
    "description": "PostCSS plugin to unwrap nested rules like how Sass does it",
    "keywords": [
      "postcss",
      "css",
      "postcss-plugin",
      "sass",
      "nested"
    ],
    "author": {
      "name": "Andrey Sitnik",
      "email": "andrey@sitnik.ru"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/postcss/postcss-nested.git"
    },
    "engines": {
      "node": ">=10.0"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/postcss/"
    },
    "peerDependencies": {
      "postcss": "^8.1.13"
    },
    "dependencies": {
      "postcss-selector-parser": "^6.0.4"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-postcss-nested-5.0.3-2f46d77a06fc98d9c22344fd097396f5431386db-integrity/node_modules/postcss-nested/package.json",
    "readmeFilename": "README.md",
    "readme": "# PostCSS Nested\n\n<img align=\"right\" width=\"135\" height=\"95\"\n     title=\"Philosopherâ€™s stone, logo of PostCSS\"\n     src=\"https://postcss.org/logo-leftp.svg\">\n\n[PostCSS] plugin to unwrap nested rules like how Sass does it.\n\n```css\n.phone {\n    &_title {\n        width: 500px;\n        @media (max-width: 500px) {\n            width: auto;\n        }\n        body.is_dark & {\n            color: white;\n        }\n    }\n    img {\n        display: block;\n    }\n}\n\n.title {\n  font-size: var(--font);\n\n  @at-root html {\n      --font: 16px\n    }\n  }\n}\n```\n\nwill be processed to:\n\n```css\n.phone_title {\n    width: 500px;\n}\n@media (max-width: 500px) {\n    .phone_title {\n        width: auto;\n    }\n}\nbody.is_dark .phone_title {\n    color: white;\n}\n.phone img {\n    display: block;\n}\n\n.title {\n  font-size: var(--font);\n}\nhtml {\n  --font: 16px\n}\n```\n\nRelated plugins:\n\n* Use [`postcss-current-selector`] **after** this plugin if you want\nto use current selector in properties or variables values.\n* Use [`postcss-nested-ancestors`] **before** this plugin if you want\nto reference any ancestor element directly in your selectors with `^&`.\n\nAlternatives:\n\n* See also [`postcss-nesting`], which implements [CSSWG draft]\n  (requires the `&` and introduces `@nest`).\n* [`postcss-nested-props`] for nested properties like `font-size`.\n\n<a href=\"https://evilmartians.com/?utm_source=postcss-nested\">\n  <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n       alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[`postcss-current-selector`]: https://github.com/komlev/postcss-current-selector\n[`postcss-nested-ancestors`]: https://github.com/toomuchdesign/postcss-nested-ancestors\n[`postcss-nested-props`]:     https://github.com/jedmao/postcss-nested-props\n[`postcss-nesting`]:          https://github.com/jonathantneal/postcss-nesting\n[CSSWG draft]:              https://drafts.csswg.org/css-nesting-1/\n[PostCSS]:                  https://github.com/postcss/postcss\n\n\n## Usage\n\n**Step 1:** Install plugin:\n\n```sh\nnpm install --save-dev postcss postcss-nested\n```\n\n**Step 2:** Check you project for existed PostCSS config: `postcss.config.js`\nin the project root, `\"postcss\"` section in `package.json`\nor `postcss` in bundle config.\n\nIf you do not use PostCSS, add it according to [official docs]\nand set this plugin in settings.\n\n**Step 3:** Add the plugin to plugins list:\n\n```diff\nmodule.exports = {\n  plugins: [\n+   require('postcss-nested'),\n    require('autoprefixer')\n  ]\n}\n```\n\n[official docs]: https://github.com/postcss/postcss#usage\n\n\n## Options\n\n### `bubble`\n\nBy default, plugin will bubble only `@media` and `@supports` at-rules.\nYou can add your custom at-rules to this list by `bubble` option:\n\n```js\npostcss([ require('postcss-nested')({ bubble: ['phone'] }) ])\n```\n\n```css\n/* input */\na {\n  color: white;\n  @phone {\n    color: black;\n  }\n}\n/* output */\na {\n  color: white;\n}\n@phone {\n  a {\n    color: black;\n  }\n}\n```\n\n\n### `unwrap`\n\nBy default, plugin will unwrap only `@font-face`, `@keyframes` and `@document`\nat-rules. You can add your custom at-rules to this list by `unwrap` option:\n\n```js\npostcss([ require('postcss-nested')({ unwrap: ['phone'] }) ])\n```\n\n```css\n/* input */\na {\n  color: white;\n  @phone {\n    color: black;\n  }\n}\n/* output */\na {\n  color: white;\n}\n@phone {\n  color: black;\n}\n```\n\n\n### `preserveEmpty`\n\nBy default, plugin will strip out any empty selector generated by intermediate\nnesting levels. You can set `preserveEmpty` to `true` to preserve them.\n\n```css\n.a {\n    .b {\n        color: black;\n    }\n}\n```\n\nWill be compiled to:\n\n```css\n.a { }\n.a .b {\n    color: black;\n}\n```\n\nThis is especially useful if you want to export the empty classes with `postcss-modules`.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright 2014 Andrey Sitnik <andrey@sitnik.ru>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-nested/-/postcss-nested-5.0.3.tgz#2f46d77a06fc98d9c22344fd097396f5431386db",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-nested/-/postcss-nested-5.0.3.tgz",
    "hash": "2f46d77a06fc98d9c22344fd097396f5431386db",
    "integrity": "sha512-R2LHPw+u5hFfDgJG748KpGbJyTv7Yr33/2tIMWxquYuHTd9EXu27PYnKi7BxMXLtzKC0a0WVsqHtd7qIluQu/g==",
    "registry": "npm",
    "packageName": "postcss-nested",
    "cacheIntegrity": "sha512-R2LHPw+u5hFfDgJG748KpGbJyTv7Yr33/2tIMWxquYuHTd9EXu27PYnKi7BxMXLtzKC0a0WVsqHtd7qIluQu/g== sha1-L0bXegb8mNnCI0T9CXOW9UMThts="
  },
  "registry": "npm",
  "hash": "2f46d77a06fc98d9c22344fd097396f5431386db"
}