{
  "manifest": {
    "name": "interpret",
    "version": "3.1.1",
    "description": "A dictionary of file extensions and associated module loaders.",
    "author": {
      "name": "Gulp Team",
      "email": "team@gulpjs.com",
      "url": "https://gulpjs.com/"
    },
    "contributors": [
      {
        "name": "Blaine Bublitz",
        "email": "blaine.bublitz@gmail.com"
      },
      {
        "name": "Tyler Kellen",
        "email": "tyler@sleekcode.net",
        "url": "http://goingslowly.com/"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/gulpjs/interpret.git"
    },
    "license": "MIT",
    "engines": {
      "node": ">=10.13.0"
    },
    "main": "index.js",
    "files": [
      "LICENSE",
      "index.js",
      "cjs-stub.js",
      "mjs-stub.js"
    ],
    "scripts": {
      "readme": "remark README.md --use ./scripts/plugin.mjs --output",
      "lint": "eslint .",
      "pretest": "npm run lint",
      "test": "nyc mocha --async-only"
    },
    "devDependencies": {
      "eslint": "^7.0.0",
      "eslint-config-gulp": "^5.0.0",
      "eslint-plugin-node": "^11.1.0",
      "expect": "^27.0.0",
      "js-yaml": "^4.1.0",
      "mocha": "^8.0.0",
      "nyc": "^15.0.0",
      "parse-node-version": "^2.0.0",
      "rechoir": "^0.8.0",
      "remark-cli": "^10.0.1",
      "remark-code-import": "^1.1.0",
      "shelljs": "0.8.5"
    },
    "nyc": {
      "extension": [
        ".js"
      ],
      "reporter": [
        "lcov",
        "text-summary"
      ]
    },
    "prettier": {
      "singleQuote": true
    },
    "keywords": [
      "coffee",
      "coffee.md",
      "coffeescript",
      "es",
      "es6",
      "js",
      "json",
      "json5",
      "jsx",
      "react",
      "litcoffee",
      "toml",
      "ts",
      "typescript",
      "xml",
      "yaml",
      "yml"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-interpret-3.1.1-5be0ceed67ca79c6c4bc5cf0d7ee843dcea110c4-integrity/node_modules/interpret/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n  <a href=\"http://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n</p>\n\n# interpret\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][ci-image]][ci-url] [![Coveralls Status][coveralls-image]][coveralls-url]\n\nA dictionary of file extensions and associated module loaders.\n\n## What is it\n\nThis is used by [Liftoff] to automatically require dependencies for configuration files, and by [rechoir] for registering module loaders.\n\n## How to use it\n\nConsumers should use the exported `extensions` or `jsVariants` object to determine which module should be loaded for a given extension. If a matching extension is found, consumers should do the following:\n\n1.  If the value is null, do nothing.\n2.  If the value is a string, try to require it.\n3.  If the value is an object, try to require the `module` property. If successful, the `register` property (a function) should be called with the module passed as the first argument. **Advanced:** An optional second argument can be provided to replace the default configuration for a hook.\n4.  If the value is an array, iterate over it, attempting step #2 or #3 until one of the attempts does not throw.\n\n## API\n\nThis module provides two top-level properties: `extensions` and `jsVariants`.\n\n**Note:** This module does not depend on any of the loaders it recommends; instead, end-users are expected to install the hooks they want to use for the file types they want to use. See supported extensions and their hooks in the sections below.\n\n### `extensions`\n\nA mapping of file extensions to modules which provide a [require.extensions] loader.\n\nFile extension keys are all in the format of `'.foo'` or `'.foo.bar'` and module loader values are either `null` if the loader should fallthrough to node's loader,\nor a string representing the module to be required, an object of `{ module: 'foobar', register: function }`, or an array containing those strings and/or objects.\n\nA sample of an entry containing multiple hooks would look like:\n\n```js\n{\n  '.ts': [\n    'ts-node/register',\n    'sucrase/register/ts',\n    {\n      module: '@babel/register',\n      register: function(hook) {\n        hook({\n          extensions: '.ts',\n          rootMode: 'upward-optional',\n          ignore: [ignoreNonBabelAndNodeModules],\n        });\n      },\n    },\n  ],\n}\n```\n\n**Supported extensions and their hooks**\n\n```yaml file=scripts/extensions.yaml\n.babel.js:\n  - '@babel/register'\n.babel.jsx:\n  - '@babel/register'\n.babel.ts:\n  - '@babel/register'\n.babel.tsx:\n  - '@babel/register'\n.cjs:\n  - interpret/cjs-stub\n.coffee:\n  - coffeescript/register\n.coffee.md:\n  - coffeescript/register\n.cts:\n  - ts-node/register\n.esbuild.js:\n  - esbuild-register/dist/node\n.esbuild.jsx:\n  - esbuild-register/dist/node\n.esbuild.ts:\n  - esbuild-register/dist/node\n.esbuild.tsx:\n  - esbuild-register/dist/node\n.esm.js:\n  - esm\n.js:\n  - built-in node.js loader\n.json:\n  - built-in node.js loader\n.json5:\n  - json5/lib/register\n.jsx:\n  - '@babel/register'\n  - sucrase/register/jsx\n.litcoffee:\n  - coffeescript/register\n.mdx:\n  - '@mdx-js/register'\n.mjs:\n  - interpret/mjs-stub\n.node:\n  - built-in node.js loader\n.sucrase.js:\n  - sucrase/dist/register\n.sucrase.jsx:\n  - sucrase/dist/register\n.sucrase.ts:\n  - sucrase/dist/register\n.sucrase.tsx:\n  - sucrase/dist/register\n.swc.js:\n  - '@swc/register'\n.swc.jsx:\n  - '@swc/register'\n.swc.ts:\n  - '@swc/register'\n.swc.tsx:\n  - '@swc/register'\n.toml:\n  - toml-require\n.ts:\n  - ts-node/register\n  - sucrase/register/ts\n  - '@babel/register'\n  - esbuild-register/dist/node\n  - '@swc/register'\n.tsx:\n  - ts-node/register\n  - sucrase/register/tsx\n  - '@babel/register'\n  - esbuild-register/dist/node\n  - '@swc/register'\n.yaml:\n  - yaml-hook/register\n.yml:\n  - yaml-hook/register\n```\n\n### `jsVariants`\n\nThe `jsVariants` is the same mapping as above, but only include the extensions which are variants of JavaScript.\n\n**Supported extensions and their hooks**\n\n```yaml file=scripts/jsVariants.yaml\n.babel.js:\n  - '@babel/register'\n.babel.jsx:\n  - '@babel/register'\n.babel.ts:\n  - '@babel/register'\n.babel.tsx:\n  - '@babel/register'\n.cjs:\n  - interpret/cjs-stub\n.coffee:\n  - coffeescript/register\n.coffee.md:\n  - coffeescript/register\n.esbuild.js:\n  - esbuild-register/dist/node\n.esbuild.jsx:\n  - esbuild-register/dist/node\n.esbuild.ts:\n  - esbuild-register/dist/node\n.esbuild.tsx:\n  - esbuild-register/dist/node\n.esm.js:\n  - esm\n.js:\n  - built-in node.js loader\n.jsx:\n  - '@babel/register'\n  - sucrase/register/jsx\n.litcoffee:\n  - coffeescript/register\n.mdx:\n  - '@mdx-js/register'\n.mjs:\n  - interpret/mjs-stub\n.sucrase.js:\n  - sucrase/dist/register\n.sucrase.jsx:\n  - sucrase/dist/register\n.sucrase.ts:\n  - sucrase/dist/register\n.sucrase.tsx:\n  - sucrase/dist/register\n.swc.js:\n  - '@swc/register'\n.swc.jsx:\n  - '@swc/register'\n.swc.ts:\n  - '@swc/register'\n.swc.tsx:\n  - '@swc/register'\n.ts:\n  - ts-node/register\n  - sucrase/register/ts\n  - '@babel/register'\n  - esbuild-register/dist/node\n  - '@swc/register'\n.tsx:\n  - ts-node/register\n  - sucrase/register/tsx\n  - '@babel/register'\n  - esbuild-register/dist/node\n  - '@swc/register'\n```\n\n## License\n\nMIT\n\n<!-- prettier-ignore-start -->\n\n[downloads-image]: https://img.shields.io/npm/dm/interpret.svg?style=flat-square\n\n[npm-url]: https://www.npmjs.com/package/interpret\n\n[npm-image]: https://img.shields.io/npm/v/interpret.svg?style=flat-square\n\n[ci-url]: https://github.com/gulpjs/interpret/actions?query=workflow:dev\n\n[ci-image]: https://img.shields.io/github/workflow/status/gulpjs/interpret/dev?style=flat-square\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/interpret\n\n[coveralls-image]: https://img.shields.io/coveralls/gulpjs/interpret/master.svg?style=flat-square\n\n<!-- prettier-ignore-end -->\n\n<!-- prettier-ignore-start -->\n\n[Liftoff]: http://github.com/gulpjs/liftoff\n\n[rechoir]: http://github.com/gulpjs/rechoir\n\n[require.extensions]: https://nodejs.org/api/modules.html#requireextensions\n\n<!-- prettier-ignore-end -->\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014-2018, 2022 Tyler Kellen <tyler@sleekcode.net>, Blaine Bublitz <blaine.bublitz@gmail.com>, and Eric Schoffstall <yo@contra.io>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/interpret/-/interpret-3.1.1.tgz#5be0ceed67ca79c6c4bc5cf0d7ee843dcea110c4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/interpret/-/interpret-3.1.1.tgz",
    "hash": "5be0ceed67ca79c6c4bc5cf0d7ee843dcea110c4",
    "integrity": "sha512-6xwYfHbajpoF0xLW+iwLkhwgvLoZDfjYfoFNu8ftMoXINzwuymNLd9u/KmwtdT2GbR+/Cz66otEGEVVUHX9QLQ==",
    "registry": "npm",
    "packageName": "interpret",
    "cacheIntegrity": "sha512-6xwYfHbajpoF0xLW+iwLkhwgvLoZDfjYfoFNu8ftMoXINzwuymNLd9u/KmwtdT2GbR+/Cz66otEGEVVUHX9QLQ== sha1-W+DO7WfKecbEvFzw1+6EPc6hEMQ="
  },
  "registry": "npm",
  "hash": "5be0ceed67ca79c6c4bc5cf0d7ee843dcea110c4"
}