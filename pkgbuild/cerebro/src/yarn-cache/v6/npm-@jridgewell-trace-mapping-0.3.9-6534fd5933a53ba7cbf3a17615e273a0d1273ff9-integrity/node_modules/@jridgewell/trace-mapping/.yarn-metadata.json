{
  "manifest": {
    "name": "@jridgewell/trace-mapping",
    "version": "0.3.9",
    "description": "Trace the original position through a source map",
    "keywords": [
      "source",
      "map"
    ],
    "main": "dist/trace-mapping.umd.js",
    "module": "dist/trace-mapping.mjs",
    "typings": "dist/types/trace-mapping.d.ts",
    "files": [
      "dist"
    ],
    "exports": {
      ".": {
        "browser": "./dist/trace-mapping.umd.js",
        "require": "./dist/trace-mapping.umd.js",
        "import": "./dist/trace-mapping.mjs"
      },
      "./package.json": "./package.json"
    },
    "author": {
      "name": "Justin Ridgewell",
      "email": "justin@ridgewell.name"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/jridgewell/trace-mapping.git"
    },
    "license": "MIT",
    "scripts": {
      "benchmark": "run-s build:rollup benchmark:*",
      "benchmark:install": "cd benchmark && npm install",
      "benchmark:only": "node benchmark/index.mjs",
      "build": "run-s -n build:*",
      "build:rollup": "rollup -c rollup.config.js",
      "build:ts": "tsc --project tsconfig.build.json",
      "lint": "run-s -n lint:*",
      "lint:prettier": "npm run test:lint:prettier -- --write",
      "lint:ts": "npm run test:lint:ts -- --fix",
      "prebuild": "rm -rf dist",
      "prepublishOnly": "npm run preversion",
      "preversion": "run-s test build",
      "test": "run-s -n test:lint test:only",
      "test:debug": "ava debug",
      "test:lint": "run-s -n test:lint:*",
      "test:lint:prettier": "prettier --check '{src,test}/**/*.ts' '**/*.md'",
      "test:lint:ts": "eslint '{src,test}/**/*.ts'",
      "test:only": "c8 ava",
      "test:watch": "ava --watch"
    },
    "devDependencies": {
      "@rollup/plugin-typescript": "8.3.0",
      "@typescript-eslint/eslint-plugin": "5.10.0",
      "@typescript-eslint/parser": "5.10.0",
      "ava": "4.0.1",
      "benchmark": "2.1.4",
      "c8": "7.11.0",
      "esbuild": "0.14.14",
      "esbuild-node-loader": "0.6.4",
      "eslint": "8.7.0",
      "eslint-config-prettier": "8.3.0",
      "npm-run-all": "4.1.5",
      "prettier": "2.5.1",
      "rollup": "2.64.0",
      "typescript": "4.5.4"
    },
    "dependencies": {
      "@jridgewell/resolve-uri": "^3.0.3",
      "@jridgewell/sourcemap-codec": "^1.4.10"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@jridgewell-trace-mapping-0.3.9-6534fd5933a53ba7cbf3a17615e273a0d1273ff9-integrity/node_modules/@jridgewell/trace-mapping/package.json",
    "readmeFilename": "README.md",
    "readme": "# @jridgewell/trace-mapping\n\n> Trace the original position through a source map\n\n`trace-mapping` allows you to take the line and column of an output file and trace it to the\noriginal location in the source file through a source map.\n\nYou may already be familiar with the [`source-map`][source-map] package's `SourceMapConsumer`. This\nprovides the same `originalPositionFor` and `generatedPositionFor` API, without requiring WASM.\n\n## Installation\n\n```sh\nnpm install @jridgewell/trace-mapping\n```\n\n## Usage\n\n```typescript\nimport { TraceMap, originalPositionFor, generatedPositionFor } from '@jridgewell/trace-mapping';\n\nconst tracer = new TraceMap({\n  version: 3,\n  sources: ['input.js'],\n  names: ['foo'],\n  mappings: 'KAyCIA',\n});\n\n// Lines start at line 1, columns at column 0.\nconst traced = originalPositionFor(tracer, { line: 1, column: 5 });\nassert.deepEqual(traced, {\n  source: 'input.js',\n  line: 42,\n  column: 4,\n  name: 'foo',\n});\n\nconst generated = generatedPositionFor(tracer, {\n  source: 'input.js',\n  line: 42,\n  column: 4,\n});\nassert.deepEqual(generated, {\n  line: 1,\n  column: 5,\n});\n```\n\nWe also provide a lower level API to get the actual segment that matches our line and column. Unlike\n`originalPositionFor`, `traceSegment` uses a 0-base for `line`:\n\n```typescript\nimport { traceSegment } from '@jridgewell/trace-mapping';\n\n// line is 0-base.\nconst traced = traceSegment(tracer, /* line */ 0, /* column */ 5);\n\n// Segments are [outputColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex]\n// Again, line is 0-base and so is sourceLine\nassert.deepEqual(traced, [5, 0, 41, 4, 0]);\n```\n\n### SectionedSourceMaps\n\nThe sourcemap spec defines a special `sections` field that's designed to handle concatenation of\noutput code with associated sourcemaps. This type of sourcemap is rarely used (no major build tool\nproduces it), but if you are hand coding a concatenation you may need it. We provide an `AnyMap`\nhelper that can receive either a regular sourcemap or a `SectionedSourceMap` and returns a\n`TraceMap` instance:\n\n```typescript\nimport { AnyMap } from '@jridgewell/trace-mapping';\nconst fooOutput = 'foo';\nconst barOutput = 'bar';\nconst output = [fooOutput, barOutput].join('\\n');\n\nconst sectioned = new AnyMap({\n  version: 3,\n  sections: [\n    {\n      // 0-base line and column\n      offset: { line: 0, column: 0 },\n      // fooOutput's sourcemap\n      map: {\n        version: 3,\n        sources: ['foo.js'],\n        names: ['foo'],\n        mappings: 'AAAAA',\n      },\n    },\n    {\n      // barOutput's sourcemap will not affect the first line, only the second\n      offset: { line: 1, column: 0 },\n      map: {\n        version: 3,\n        sources: ['bar.js'],\n        names: ['bar'],\n        mappings: 'AAAAA',\n      },\n    },\n  ],\n});\n\nconst traced = originalPositionFor(sectioned, {\n  line: 2,\n  column: 0,\n});\n\nassert.deepEqual(traced, {\n  source: 'bar.js',\n  line: 1,\n  column: 0,\n  name: 'bar',\n});\n```\n\n## Benchmarks\n\n```\nnode v18.0.0\n\namp.js.map\ntrace-mapping:    decoded JSON input x 183 ops/sec ±0.41% (87 runs sampled)\ntrace-mapping:    encoded JSON input x 384 ops/sec ±0.89% (89 runs sampled)\ntrace-mapping:    decoded Object input x 3,085 ops/sec ±0.24% (100 runs sampled)\ntrace-mapping:    encoded Object input x 452 ops/sec ±0.80% (84 runs sampled)\nsource-map-js:    encoded Object input x 88.82 ops/sec ±0.45% (77 runs sampled)\nsource-map-0.6.1: encoded Object input x 38.39 ops/sec ±1.88% (52 runs sampled)\nFastest is trace-mapping:    decoded Object input\n\ntrace-mapping:    decoded originalPositionFor x 4,025,347 ops/sec ±0.15% (97 runs sampled)\ntrace-mapping:    encoded originalPositionFor x 3,333,136 ops/sec ±1.26% (90 runs sampled)\nsource-map-js:    encoded originalPositionFor x 824,978 ops/sec ±1.06% (94 runs sampled)\nsource-map-0.6.1: encoded originalPositionFor x 741,300 ops/sec ±0.93% (92 runs sampled)\nsource-map-0.8.0: encoded originalPositionFor x 2,587,603 ops/sec ±0.75% (97 runs sampled)\nFastest is trace-mapping:    decoded originalPositionFor\n\n***\n\nbabel.min.js.map\ntrace-mapping:    decoded JSON input x 17.43 ops/sec ±8.81% (33 runs sampled)\ntrace-mapping:    encoded JSON input x 34.18 ops/sec ±4.67% (50 runs sampled)\ntrace-mapping:    decoded Object input x 1,010 ops/sec ±0.41% (98 runs sampled)\ntrace-mapping:    encoded Object input x 39.45 ops/sec ±4.01% (52 runs sampled)\nsource-map-js:    encoded Object input x 6.57 ops/sec ±3.04% (21 runs sampled)\nsource-map-0.6.1: encoded Object input x 4.23 ops/sec ±2.93% (15 runs sampled)\nFastest is trace-mapping:    decoded Object input\n\ntrace-mapping:    decoded originalPositionFor x 7,576,265 ops/sec ±0.74% (96 runs sampled)\ntrace-mapping:    encoded originalPositionFor x 5,019,743 ops/sec ±0.74% (94 runs sampled)\nsource-map-js:    encoded originalPositionFor x 3,396,137 ops/sec ±42.32% (95 runs sampled)\nsource-map-0.6.1: encoded originalPositionFor x 3,753,176 ops/sec ±0.72% (95 runs sampled)\nsource-map-0.8.0: encoded originalPositionFor x 6,423,633 ops/sec ±0.74% (95 runs sampled)\nFastest is trace-mapping:    decoded originalPositionFor\n\n***\n\npreact.js.map\ntrace-mapping:    decoded JSON input x 3,499 ops/sec ±0.18% (98 runs sampled)\ntrace-mapping:    encoded JSON input x 6,078 ops/sec ±0.25% (99 runs sampled)\ntrace-mapping:    decoded Object input x 254,788 ops/sec ±0.13% (100 runs sampled)\ntrace-mapping:    encoded Object input x 14,063 ops/sec ±0.27% (94 runs sampled)\nsource-map-js:    encoded Object input x 2,465 ops/sec ±0.25% (98 runs sampled)\nsource-map-0.6.1: encoded Object input x 1,174 ops/sec ±1.90% (95 runs sampled)\nFastest is trace-mapping:    decoded Object input\n\ntrace-mapping:    decoded originalPositionFor x 7,720,171 ops/sec ±0.14% (97 runs sampled)\ntrace-mapping:    encoded originalPositionFor x 6,864,485 ops/sec ±0.16% (101 runs sampled)\nsource-map-js:    encoded originalPositionFor x 2,387,219 ops/sec ±0.28% (98 runs sampled)\nsource-map-0.6.1: encoded originalPositionFor x 1,565,339 ops/sec ±0.32% (101 runs sampled)\nsource-map-0.8.0: encoded originalPositionFor x 3,819,732 ops/sec ±0.38% (98 runs sampled)\nFastest is trace-mapping:    decoded originalPositionFor\n\n***\n\nreact.js.map\ntrace-mapping:    decoded JSON input x 1,719 ops/sec ±0.19% (99 runs sampled)\ntrace-mapping:    encoded JSON input x 4,284 ops/sec ±0.51% (99 runs sampled)\ntrace-mapping:    decoded Object input x 94,668 ops/sec ±0.08% (99 runs sampled)\ntrace-mapping:    encoded Object input x 5,287 ops/sec ±0.24% (99 runs sampled)\nsource-map-js:    encoded Object input x 814 ops/sec ±0.20% (98 runs sampled)\nsource-map-0.6.1: encoded Object input x 429 ops/sec ±0.24% (94 runs sampled)\nFastest is trace-mapping:    decoded Object input\n\ntrace-mapping:    decoded originalPositionFor x 28,927,989 ops/sec ±0.61% (94 runs sampled)\ntrace-mapping:    encoded originalPositionFor x 27,394,475 ops/sec ±0.55% (97 runs sampled)\nsource-map-js:    encoded originalPositionFor x 16,856,730 ops/sec ±0.45% (96 runs sampled)\nsource-map-0.6.1: encoded originalPositionFor x 12,258,950 ops/sec ±0.41% (97 runs sampled)\nsource-map-0.8.0: encoded originalPositionFor x 22,272,990 ops/sec ±0.58% (95 runs sampled)\nFastest is trace-mapping:    decoded originalPositionFor\n```\n\n[source-map]: https://www.npmjs.com/package/source-map\n",
    "licenseText": "Copyright 2022 Justin Ridgewell <justin@ridgewell.name>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz#6534fd5933a53ba7cbf3a17615e273a0d1273ff9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",
    "hash": "6534fd5933a53ba7cbf3a17615e273a0d1273ff9",
    "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",
    "registry": "npm",
    "packageName": "@jridgewell/trace-mapping",
    "cacheIntegrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ== sha1-ZTT9WTOlO6fL86F2FeJzoNEnP/k="
  },
  "registry": "npm",
  "hash": "6534fd5933a53ba7cbf3a17615e273a0d1273ff9"
}