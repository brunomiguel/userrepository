{"version":3,"file":"threads-plugin.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport * as Types from '@babel/types';\nimport path from 'path';\nlet ParserHelpers;\ntry {\n  ParserHelpers = require('webpack/lib/javascript/JavascriptParserHelpers'); // Webpack 5\n} catch (e) {}\nParserHelpers = ParserHelpers || require('webpack/lib/ParserHelpers'); // Webpack 4\nimport WORKER_PLUGIN_SYMBOL from './symbol';\n\nconst NAME = 'WorkerPlugin';\nconst JS_TYPES = ['auto', 'esm', 'dynamic'];\nconst workerLoader = path.resolve(__dirname, 'loader.js');\n\nexport default class WorkerPlugin {\n  constructor (options) {\n    this.options = options || {};\n    this[WORKER_PLUGIN_SYMBOL] = true;\n  }\n\n  apply (compiler) {\n    let workerId = 0;\n\n    compiler.hooks.normalModuleFactory.tap(NAME, factory => {\n      for (const type of JS_TYPES) {\n        factory.hooks.parser.for(`javascript/${type}`).tap(NAME, parser => {\n          parser.hooks.new.for('imported var').tap(NAME, expr => {\n            if (expr.callee.name !== 'Worker') return false\n\n            const dep = parser.evaluateExpression(expr.arguments[0]);\n\n            if (!dep.isString()) {\n              parser.state.module.warnings.push({\n                message: 'new Worker() will only be bundled if passed a String.'\n              });\n              return false;\n            }\n            if (/^(https?:)?\\/\\//i.test(dep.string)) {\n              // Ignore absolute URL workers\n              return false;\n            }\n\n            const optsExpr = expr.arguments[1];\n            let typeModuleExpr = Types.objectProperty(\n              Types.identifier(\"type\"),\n              Types.stringLiteral(\"module\")\n            )\n            typeModuleExpr.range=[0, 0]\n\n            let opts = {};\n            if (optsExpr) {\n              opts = {};\n              for (let i = optsExpr.properties.length; i--;) {\n                const prop = optsExpr.properties[i];\n                if (prop.type === 'Property' && !prop.computed && !prop.shorthand && !prop.method) {\n                  opts[prop.key.name] = parser.evaluateExpression(prop.value).string;\n\n                  if (prop.key.name === 'type') {\n                    typeModuleExpr = prop;\n                  }\n                }\n              }\n            }\n\n            const loaderOptions = { name: opts.name || workerId + '' };\n            const req = `require(${JSON.stringify(workerLoader + '?' + JSON.stringify(loaderOptions) + '!' + dep.string)})`;\n            const id = `__webpack__worker__${workerId++}`;\n            ParserHelpers.toConstantDependency(parser, id)(expr.arguments[0]);\n\n            ParserHelpers.addParsedVariableToModule(parser, id, req);\n          });\n        });\n      }\n    });\n\n    compiler.hooks.afterEmit.tap(NAME, compilation => {\n      if (workerId === 0) {\n        compilation.warnings.push({\n          message:\n            'No instantiations of threads.js workers found.\\n' +\n            'Please check that:\\n' +\n            '  1. You have configured Babel / TypeScript to not transpile ES modules\\n' +\n            '  2. You import `Worker` from `threads` where you use it\\n\\n' +\n            'For more details see: https://github.com/andywer/threads-plugin\\n'\n        })\n      }\n    })\n  }\n}\n"],"names":["let","ParserHelpers","require","e","const","NAME","JS_TYPES","workerLoader","path","resolve","__dirname","WorkerPlugin","constructor","options","WORKER_PLUGIN_SYMBOL","apply","compiler","workerId","hooks","normalModuleFactory","tap","factory","type","parser","for","new","expr","callee","name","dep","evaluateExpression","arguments","isString","state","module","warnings","push","message","test","string","optsExpr","typeModuleExpr","Types","range","opts","i","properties","length","prop","computed","shorthand","method","key","value","loaderOptions","req","JSON","stringify","id","toConstantDependency","addParsedVariableToModule","afterEmit","compilation"],"mappings":"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"}