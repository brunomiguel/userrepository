{
  "manifest": {
    "name": "object.map",
    "description": "Similar to map for arrays, this creates a new object by calling the callback on each property of the original object.",
    "version": "1.0.1",
    "homepage": "https://github.com/jonschlinkert/object.map",
    "author": {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert"
    },
    "contributors": [
      {
        "name": "Blaine Bublitz",
        "url": "https://twitter.com/BlaineBublitz"
      },
      {
        "name": "Brian Woodward",
        "url": "https://twitter.com/doowb"
      },
      {
        "name": "Jon Schlinkert",
        "url": "http://twitter.com/jonschlinkert"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/jonschlinkert/object.map.git"
    },
    "bugs": {
      "url": "https://github.com/jonschlinkert/object.map/issues"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "mocha"
    },
    "dependencies": {
      "for-own": "^1.0.0",
      "make-iterator": "^1.0.0"
    },
    "devDependencies": {
      "gulp-format-md": "^0.1.11",
      "mocha": "^3.2.0"
    },
    "keywords": [
      "map",
      "object"
    ],
    "verb": {
      "toc": false,
      "layout": "default",
      "tasks": [
        "readme"
      ],
      "plugins": [
        "gulp-format-md"
      ],
      "related": {
        "list": [
          "arr-map",
          "array-each",
          "collection-map"
        ]
      },
      "lint": {
        "reflinks": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-object-map-1.0.1-integrity/node_modules/object.map/package.json",
    "readmeFilename": "README.md",
    "readme": "# object.map [![NPM version](https://img.shields.io/npm/v/object.map.svg?style=flat)](https://www.npmjs.com/package/object.map) [![NPM monthly downloads](https://img.shields.io/npm/dm/object.map.svg?style=flat)](https://npmjs.org/package/object.map)  [![NPM total downloads](https://img.shields.io/npm/dt/object.map.svg?style=flat)](https://npmjs.org/package/object.map) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/object.map.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/object.map) [![Windows Build Status](https://img.shields.io/appveyor/ci/jonschlinkert/object.map.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/jonschlinkert/object.map)\n\n> Similar to map for arrays, this creates a new object by calling the callback on each property of the original object.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save object.map\n```\n\n## Usage\n\n```js\nvar mapValues = require('object.map');\n\nvar result = mapValues({a: 'a', b: 'b'}, function(val, key, obj) {\n  return val + val;\n});\nconsole.log(result);\n//=> {a: 'aa', b: 'bb'}\n```\n\nOptionally specify a `thisArg` as the last argument:\n\n```js\nvar result = mapValues({a: 'b'}, function(val, key, obj) {\n  return this.foo;\n}, {foo: 'bar'});\nconsole.log(result);\n//=> {a: 'bar'}\n```\n\n## About\n\n### Related projects\n\n* [arr-map](https://www.npmjs.com/package/arr-map): Faster, node.js focused alternative to JavaScript's native array map. | [homepage](https://github.com/jonschlinkert/arr-map \"Faster, node.js focused alternative to JavaScript's native array map.\")\n* [array-each](https://www.npmjs.com/package/array-each): Loop over each item in an array and call the given function on every element. | [homepage](https://github.com/jonschlinkert/array-each \"Loop over each item in an array and call the given function on every element.\")\n* [collection-map](https://www.npmjs.com/package/collection-map): Returns an array of mapped values from an array or object. | [homepage](https://github.com/jonschlinkert/collection-map \"Returns an array of mapped values from an array or object.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 4 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 1 | [phated](https://github.com/phated) |  \n| 1 | [doowb](https://github.com/doowb) |  \n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright Â© 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on December 20, 2017._",
    "licenseText": "\n\nCopyright (c) 2014-2017, Jon Schlinkert, contributors.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/object.map/-/object.map-1.0.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/object.map/-/object.map-1.0.1.tgz",
    "hash": "",
    "integrity": "sha1-z4Plncj8wK1fQlDh94s7gb2AHTc=",
    "registry": "npm",
    "packageName": "object.map",
    "cacheIntegrity": "sha512-3+mAJu2PLfnSVGHwIWubpOFLscJANBKuB/6A4CxBstc4aqwQY0FWcsppuy4jU5GSB95yES5JHSI+33AWuS4k6w== sha1-z4Plncj8wK1fQlDh94s7gb2AHTc="
  },
  "registry": "npm",
  "hash": "dfe98026ed8f2df9d25461f0216b9ba4e14bb1c2403412ae07fe80e02c41b2d7386aac1063415672ca69bb2e2353919207de72112e491d223edf7016b92e24eb"
}