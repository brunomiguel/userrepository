{
  "manifest": {
    "author": {
      "name": "Steve Mao",
      "email": "maochenyan@gmail.com",
      "url": "https://github.com/stevemao"
    },
    "bin": {
      "get-pkg-repo": "src/cli.js"
    },
    "bugs": {
      "url": "https://github.com/conventional-changelog/get-pkg-repo/issues"
    },
    "description": "Get repository user and project information from package.json file contents.",
    "engines": {
      "node": ">=6.9.0"
    },
    "files": [
      "src/"
    ],
    "homepage": "https://github.com/conventional-changelog/get-pkg-repo#readme",
    "keywords": [
      "repository-url"
    ],
    "license": "MIT",
    "main": "src/index.js",
    "name": "get-pkg-repo",
    "renovate": {
      "extends": [
        "config:base",
        ":maintainLockFilesWeekly",
        ":rebaseStalePrs",
        ":automergeDigest",
        ":gitSignOff",
        ":preserveSemverRanges"
      ]
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/conventional-changelog/get-pkg-repo.git"
    },
    "scripts": {
      "dev": "docker run --rm --user node -v \"$(pwd)\":/app -w /app -it node:6 sh -c \"yarn install; yarn test; bash\"",
      "test": "eslint src/ && nyc mocha --opts mocha.opts src/**/*.spec.js"
    },
    "version": "4.2.1",
    "dependencies": {
      "@hutson/parse-repository-url": "^3.0.0",
      "hosted-git-info": "^4.0.0",
      "through2": "^2.0.0",
      "yargs": "^16.2.0"
    },
    "devDependencies": {
      "@hutson/conventional-changelog-config": "^2.0.0",
      "@hutson/eslint-config": "^3.0.0",
      "@hutson/nyc-config": "^2.0.0",
      "chai": "^4.0.2",
      "codecov": "^3.0.0",
      "debug": "^4.0.0",
      "eslint": "^5.3.0",
      "mocha": "^6.0.0",
      "npm-publish-git-tag": "^3.0.0",
      "nyc": "^13.0.0",
      "semantic-release-github": "^4.0.17"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-get-pkg-repo-4.2.1-integrity/node_modules/get-pkg-repo/package.json",
    "readmeFilename": "README.md",
    "readme": "# get-pkg-repo\n\n> Get repository SCM platform, domain, user, and project information from package.json file contents.\n\nExtracts information from the `repository` field contained in the content of a `package.json` file using [`@hutson/parse-repository-url`](https://www.npmjs.com/package/@hutson/parse-repository-url) and [`hosted-git-info`](https://www.npmjs.com/package/hosted-git-info).\n\n## Table of Contents\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Features](#features)\n- [Installation](#installation)\n- [Usage](#usage)\n- [API](#api)\n  - [pkgData](#pkgdata)\n  - [fixTypo](#fixtypo)\n- [CLI](#cli)\n- [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Features\n\n* [x] Return `browse` function that returns URL usable in a browser. (Similar to [`hosted-git-info`](https://github.com/npm/hosted-git-info/blob/5d2cc4a8c93012387a86a0afa1384ccf7ac31084/README.md#methods))\n* [x] Return `domain` property containing the fully qualified domain name and port.\n* [x] Return `project` property.\n* [x] Return `type` property indicating the SCM host, such as `github` or `gitlab`.\n* [x] Return `user` property.\n\n> **Note:* Returns `null` for any property where the information could not be extracted from the repository URL.\n\n## Installation\n\nTo install the `get-pkg-repo` tool please run the following command:\n\n```bash\nyarn [global] add [--dev] get-pkg-repo\n```\n\n## Usage\n\nThere are two ways to use `get-pkg-repo`, either as a CLI tool, or programmatically.\n\n**Programmatically**\n\nPackage data must be passed as an object to `get-pkg-repo` function. If the contents of the `package.json` are a string, please pass it through `JSON.parse` first.\n\n```javascript\nconst getPkgRepo = require(`get-pkg-repo`);\n\n/* Assume the `package.json` file contains the following:\n{\n  \"repository\": {\n    \"url\": `https://github.com/conventional-changelog/get-pkg-repo`\n  }\n}\n*/\nfs.readFile(`package.json`, (err, packageData) => {\n  if (err) {\n    ...\n  }\n\n  // {domain: `github.com`, project: `get-pkg-repo`, type: `github`, user: `conventional-changelog`}\n  const repository = getPkgRepo(JSON.parse(packageData));\n\n  repository.browse(); // https://github.com/conventional-changelog/get-pkg-repo\n});\n```\n\n**CLI Tool**\n\nAfter you've installed `get-pkg-repo`, you can call the tool based on whether you installed it globally or locally:\n\n_Globally_\n```bash\nget-pkg-repo package.json\n```\n\n_Locally_\n```bash\n$(yarn bin)/get-pkg-repo package.json\n```\n\n```bash\n$ get-pkg-repo package.json\n\n{\n  domain: `github.com`,\n  project: `get-pkg-repo`,\n  type: `github`,\n  user: `conventional-changelog`\n}\n```\n\nThe contents of the `package.json` can also be piped to `get-pkg-repo`:\n\n```\n$ cat package.json | get-pkg-repo\n\n{\n  domain: `github.com`,\n  project: `get-pkg-repo`,\n  type: `github`,\n  user: `conventional-changelog`\n}\n```\n\n## Debugging\n\nTo assist users of `get-pkg-repo` with debugging the behavior of this module we use the [debug](https://www.npmjs.com/package/debug) utility package to print information about the publish process to the console. To enable debug message printing, the environment variable `DEBUG`, which is the variable used by the `debug` package, must be set to a value configured by the package containing the debug messages to be printed.\n\nTo print debug messages on a unix system set the environment variable `DEBUG` with the name of this package prior to executing `get-pkg-repo`:\n\n```bash\nDEBUG=get-pkg-repo get-pkg-repo\n```\n\nOn the Windows command line you may do:\n\n```bash\nset DEBUG=get-pkg-repo\nget-pkg-repo\n```\n\n## Node Support Policy\n\nWe only support [Long-Term Support](https://github.com/nodejs/LTS) versions of Node.\n\nWe specifically limit our support to LTS versions of Node, not because this package won't work on other versions, but because we have a limited amount of time, and supporting LTS offers the greatest return on that investment.\n\nIt's possible this package will work correctly on newer versions of Node. It may even be possible to use this package on older versions of Node, though that's more unlikely as we'll make every effort to take advantage of features available in the oldest LTS version we support.\n\nAs each Node LTS version reaches its end-of-life we will remove that version from the `node` `engines` property of our package's `package.json` file. Removing a Node version is considered a breaking change and will entail the publishing of a new major version of this package. We will not accept any requests to support an end-of-life version of Node. Any merge requests or issues supporting an end-of-life version of Node will be closed.\n\nWe will accept code that allows this package to run on newer, non-LTS, versions of Node. Furthermore, we will attempt to ensure our own changes work on the latest version of Node. To help in that commitment, our continuous integration setup runs against all LTS versions of Node in addition the most recent Node release; called _current_.\n\nJavaScript package managers should allow you to install this package with any version of Node, with, at most, a warning if your version of Node does not fall within the range specified by our `node` `engines` property. If you encounter issues installing this package, please report the issue to your package manager.\n\n## Contributing\n\nPlease read our [contributing](https://github.com/conventional-changelog/get-pkg-repo/blob/master/CONTRIBUTING.md) guide on how you can help improve this project.\n",
    "licenseText": "### MIT License\n\nCopyright Â© [Steve Mao](https://github.com/stevemao)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/get-pkg-repo/-/get-pkg-repo-4.2.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/get-pkg-repo/-/get-pkg-repo-4.2.1.tgz",
    "hash": "",
    "integrity": "sha512-2+QbHjFRfGB74v/pYWjd5OhU3TDIC2Gv/YKUTk/tCvAz0pkn/Mz6P3uByuBimLOcPvN2jYdScl3xGFSrx0jEcA==",
    "registry": "npm",
    "packageName": "get-pkg-repo",
    "cacheIntegrity": "sha512-2+QbHjFRfGB74v/pYWjd5OhU3TDIC2Gv/YKUTk/tCvAz0pkn/Mz6P3uByuBimLOcPvN2jYdScl3xGFSrx0jEcA== sha1-dZc+HIBQxz9IGQxSBHxM7jrL84U="
  },
  "registry": "npm",
  "hash": "dbe41b1e31517c607be2ffe96168dde4e854dd30c80b61affd82944e4fed0af033d29927fcccfa3f7b81cae06298b39c3ef3768d8752725df11854abc748c470"
}