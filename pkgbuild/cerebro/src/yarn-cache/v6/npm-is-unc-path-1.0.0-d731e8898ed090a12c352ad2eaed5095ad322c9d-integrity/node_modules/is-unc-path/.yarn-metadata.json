{
  "manifest": {
    "name": "is-unc-path",
    "description": "Returns true if a filepath is a windows UNC file path.",
    "version": "1.0.0",
    "homepage": "https://github.com/jonschlinkert/is-unc-path",
    "author": {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/jonschlinkert/is-unc-path.git"
    },
    "bugs": {
      "url": "https://github.com/jonschlinkert/is-unc-path/issues"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "mocha"
    },
    "dependencies": {
      "unc-path-regex": "^0.1.2"
    },
    "devDependencies": {
      "gulp-format-md": "^1.0.0",
      "mocha": "^3.4.2"
    },
    "keywords": [
      "absolute",
      "expression",
      "file",
      "filepath",
      "is",
      "match",
      "matching",
      "path",
      "regex",
      "regexp",
      "regular",
      "unc",
      "win",
      "windows"
    ],
    "verb": {
      "toc": false,
      "layout": "default",
      "tasks": [
        "readme"
      ],
      "plugins": [
        "gulp-format-md"
      ],
      "lint": {
        "reflinks": true
      },
      "related": {
        "list": [
          "is-relative",
          "is-absolute",
          "is-glob"
        ]
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-is-unc-path-1.0.0-d731e8898ed090a12c352ad2eaed5095ad322c9d-integrity/node_modules/is-unc-path/package.json",
    "readmeFilename": "README.md",
    "readme": "# is-unc-path [![NPM version](https://img.shields.io/npm/v/is-unc-path.svg?style=flat)](https://www.npmjs.com/package/is-unc-path) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-unc-path.svg?style=flat)](https://npmjs.org/package/is-unc-path) [![NPM total downloads](https://img.shields.io/npm/dt/is-unc-path.svg?style=flat)](https://npmjs.org/package/is-unc-path) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-unc-path.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-unc-path)\n\n> Returns true if a filepath is a windows UNC file path.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-unc-path\n```\n\n## Usage\n\n```js\nvar isUncPath = require('is-unc-path');\n```\n\n**true**\n\nReturns true for windows UNC paths:\n\n```js\nisUncPath('\\\\/foo/bar');\nisUncPath('\\\\\\\\foo/bar');\nisUncPath('\\\\\\\\foo\\\\admin$');\nisUncPath('\\\\\\\\foo\\\\admin$\\\\system32');\nisUncPath('\\\\\\\\foo\\\\temp');\nisUncPath('\\\\\\\\/foo/bar');\nisUncPath('\\\\\\\\\\\\/foo/bar');\n```\n\n**false**\n\nReturns false for non-UNC paths:\n\n```js\nisUncPath('/foo/bar');\nisUncPath('/');\nisUncPath('/foo');\nisUncPath('/foo/');\nisUncPath('c:');\nisUncPath('c:.');\nisUncPath('c:./');\nisUncPath('c:./file');\nisUncPath('c:/');\nisUncPath('c:/file');\n```\n\n**Customization**\n\nUse `.source` to use the regex as a component of another regex:\n\n```js\nvar myRegex = new RegExp(isUncPath.source + 'foo');\n```\n\n**[Rules for UNC paths](http://resources.esri.com/help/9.3/ArcGISDesktop/com/Gp_ToolRef/sharing_tools_and_toolboxes/pathnames_explained_colon_absolute_relative_unc_and_url.htm)**\n\n* The computer name is always preceded by a double backward-slash (`\\\\`).\n* UNC paths cannot contain a drive letter (such as `D:`)\n\n## Release history\n\n### v1.0.0 - 2017-07-12\n\n**Changes**\n\n* now throws a `TypeError` if value is not a string\n\n## About\n\n### Related projects\n\n* [is-absolute](https://www.npmjs.com/package/is-absolute): Polyfill for node.js `path.isAbolute`. Returns true if a file path is absolute. | [homepage](https://github.com/jonschlinkert/is-absolute \"Polyfill for node.js `path.isAbolute`. Returns true if a file path is absolute.\")\n* [is-glob](https://www.npmjs.com/package/is-glob): Returns `true` if the given string looks like a glob pattern or an extglob pattern… [more](https://github.com/jonschlinkert/is-glob) | [homepage](https://github.com/jonschlinkert/is-glob \"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a bet\")\n* [is-relative](https://www.npmjs.com/package/is-relative): Returns `true` if the path appears to be relative. | [homepage](https://github.com/jonschlinkert/is-relative \"Returns `true` if the path appears to be relative.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on July 13, 2017._",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015-2017, Jon Schlinkert.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/is-unc-path/-/is-unc-path-1.0.0.tgz#d731e8898ed090a12c352ad2eaed5095ad322c9d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/is-unc-path/-/is-unc-path-1.0.0.tgz",
    "hash": "d731e8898ed090a12c352ad2eaed5095ad322c9d",
    "integrity": "sha512-mrGpVd0fs7WWLfVsStvgF6iEJnbjDFZh9/emhRDcGWTduTfNHd9CHeUwH3gYIjdbwo4On6hunkztwOaAw0yllQ==",
    "registry": "npm",
    "packageName": "is-unc-path",
    "cacheIntegrity": "sha512-mrGpVd0fs7WWLfVsStvgF6iEJnbjDFZh9/emhRDcGWTduTfNHd9CHeUwH3gYIjdbwo4On6hunkztwOaAw0yllQ== sha1-1zHoiY7QkKEsNSrS6u1Qla0yLJ0="
  },
  "registry": "npm",
  "hash": "d731e8898ed090a12c352ad2eaed5095ad322c9d"
}