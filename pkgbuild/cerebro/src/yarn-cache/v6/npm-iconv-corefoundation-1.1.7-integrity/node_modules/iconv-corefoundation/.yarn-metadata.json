{
  "manifest": {
    "name": "iconv-corefoundation",
    "version": "1.1.7",
    "description": "Character set conversion using the macOS CoreFoundation API",
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "scripts": {
      "prepare": "tsc && make -f native.mk",
      "test": "node -r ts-node/register --expose-gc node_modules/.bin/_mocha test/**.spec.ts",
      "docs": "api-extractor run && api-documenter markdown --input-folder temp --output-folder docs && ln -s iconv-corefoundation.md docs/index.md",
      "prepublishOnly": "npm test"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/argv-minus-one/iconv-corefoundation.git"
    },
    "keywords": [
      "corefoundation",
      "iconv",
      "convert",
      "charset",
      "mac"
    ],
    "author": {
      "name": "argv-minus-one"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/argv-minus-one/iconv-corefoundation/issues"
    },
    "homepage": "https://github.com/argv-minus-one/iconv-corefoundation#readme",
    "os": [
      "darwin"
    ],
    "engines": {
      "node": "^8.11.2 || >=10"
    },
    "devDependencies": {
      "@microsoft/api-documenter": "^7.2.1",
      "@microsoft/api-extractor": "^7.1.6",
      "@types/bindings": "^1.3.0",
      "@types/chai": "^4.1.7",
      "@types/mocha": "^9.0.0",
      "@types/node": "^12.0.2",
      "chai": "^4.2.0",
      "chai-bytes": "^0.1.2",
      "mocha": "^9.1.3",
      "ts-node": "^8.1.0",
      "typescript": "^3.4.5"
    },
    "dependencies": {
      "cli-truncate": "^2.1.0",
      "node-addon-api": "^1.6.3"
    },
    "files": [
      "lib/**/*.js",
      "lib/**/*.d.ts",
      "lib/**/*.node"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-iconv-corefoundation-1.1.7-integrity/node_modules/iconv-corefoundation/package.json",
    "readmeFilename": "README.md",
    "readme": "# iconv-corefoundation\n\nA Node.js library for character set conversion (like [iconv-lite](https://www.npmjs.com/package/iconv-lite)), using the macOS “Core Foundation” API.\n\nThis package contains a pre-compiled native add-on for Node.js, using N-API. See “System Requirements” below for details.\n\n## Why?\n\n`CoreFoundation.framework` contains, to my knowledge, the only character set converter supporting *all* of the legacy Macintosh scripts, including non-Apple ones (such as Mac OS Inuit) and double-byte scripts (such as Mac OS Japanese). If your Node.js program needs to handle these, and runs only on macOS, this package may be your best bet.\n\nThis is not intended for general character set conversion needs. Use iconv-lite for that; it's not limited to a single platform, it doesn't have any native code, and it's probably faster. This package is for when you specifically need to use Core Foundation's character set conversion facilities.\n\n## License\n\niconv-corefoundation is provided under the terms of the MIT license. You can find the text of the MIT license in the [LICENSE](LICENSE) file.\n\n## System Requirements\n\n### Using\n\nThis package requires macOS, because it uses a macOS platform API (the Core Foundation framework) to do the actual work.\n\nThe native code portion of this package requires macOS 10.10 or newer.\n\nThis package requires [N-API](https://nodejs.org/dist/latest-v12.x/docs/api/n-api.html) version 3, which is available in Node.js versions 8.11.2, 10, and newer (but not 9).\n\n### Building\n\nBuilding this package isn't required to use it. Because this package only works on one platform, the native code is pre-compiled.\n\nIn addition to the system requirements for using this package, building it also requires the Xcode command-line tools to be installed. If they aren't, a window should appear offering to install them. If that doesn't work, run the command `xcode-select --install` to explicitly install them.\n\nGCC does not seem to work; it fails to compile Core Foundation header files.\n\n## API\n\n[API documentation is in the `docs` folder.](docs/iconv-corefoundation.md)\n\nThe API for this package centers around the `StringEncoding` class. Each instance of this class represents a character encoding, such as ASCII or Mac OS Roman. To get a `StringEncoding` instance, call one of the static methods starting with `by`, such as `byCFStringEncoding`. (`StringEncoding` may not be constructed directly. It is instantiated only by native code.) Instances of `StringEncoding` have several informational properties (such as `ianaCharSetName`, the corresponding IANA character set name) and the methods `encode` and `decode`.\n\nThere are also several top-level functions exported by this package, like `transcode` (which converts one buffer to another, without creating a JavaScript string in between) and `encodeSmallest` (which encodes a string in the byte-wise smallest available encoding).\n\n## Caveats\n\nI have not benchmarked this code. I do not expect it to be fast. Encoding and decoding strings involves copying the string at least once, which is a fairly expensive operation, especially with large strings.\n\nThere is no streaming API. Core Foundation does not seem to have any notion of streaming character set conversion, so neither does this package.\n",
    "licenseText": "MIT License\n\nCopyright © 2019 argv-minus-one\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/iconv-corefoundation/-/iconv-corefoundation-1.1.7.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/iconv-corefoundation/-/iconv-corefoundation-1.1.7.tgz",
    "hash": "",
    "integrity": "sha512-T10qvkw0zz4wnm560lOEg0PovVqUXuOFhhHAkixw8/sycy7TJt7v/RrkEKEQnAw2viPSJu6iAkErxnzR0g8PpQ==",
    "registry": "npm",
    "packageName": "iconv-corefoundation",
    "cacheIntegrity": "sha512-T10qvkw0zz4wnm560lOEg0PovVqUXuOFhhHAkixw8/sycy7TJt7v/RrkEKEQnAw2viPSJu6iAkErxnzR0g8PpQ== sha1-MQZearLJJyFUyLCCEVHiyI8bACo="
  },
  "registry": "npm",
  "hash": "4f5d2abe4c34cf3e309e6e7ad253848343e8bd5a945ee3858611c0922c70f3fb32732ed326deeffd1ae410a1109c0c36be23d226eea202412bc67cd1d20f0fa5"
}