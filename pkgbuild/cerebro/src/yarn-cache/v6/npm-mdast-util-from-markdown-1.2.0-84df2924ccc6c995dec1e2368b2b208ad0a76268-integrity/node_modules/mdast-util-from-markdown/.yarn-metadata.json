{
  "manifest": {
    "name": "mdast-util-from-markdown",
    "version": "1.2.0",
    "description": "mdast utility to parse markdown",
    "license": "MIT",
    "keywords": [
      "unist",
      "mdast",
      "mdast-util",
      "util",
      "utility",
      "markdown",
      "markup",
      "parse",
      "syntax",
      "tree",
      "ast"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/mdast-util-from-markdown.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/mdast-util-from-markdown/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "dev/",
      "lib/",
      "index.d.ts",
      "index.js"
    ],
    "exports": {
      "development": "./dev/index.js",
      "default": "./index.js"
    },
    "dependencies": {
      "@types/mdast": "^3.0.0",
      "@types/unist": "^2.0.0",
      "decode-named-character-reference": "^1.0.0",
      "mdast-util-to-string": "^3.1.0",
      "micromark": "^3.0.0",
      "micromark-util-decode-numeric-character-reference": "^1.0.0",
      "micromark-util-decode-string": "^1.0.0",
      "micromark-util-normalize-identifier": "^1.0.0",
      "micromark-util-symbol": "^1.0.0",
      "micromark-util-types": "^1.0.0",
      "unist-util-stringify-position": "^3.0.0",
      "uvu": "^0.5.0"
    },
    "devDependencies": {
      "@types/power-assert": "^1.0.0",
      "@types/tape": "^4.0.0",
      "c8": "^7.0.0",
      "commonmark.json": "^0.30.0",
      "esbuild": "^0.13.0",
      "gzip-size-cli": "^5.0.0",
      "hast-util-to-html": "^8.0.0",
      "mdast-util-to-hast": "^12.0.0",
      "micromark-build": "^1.0.0",
      "prettier": "^2.0.0",
      "rehype-parse": "^8.0.0",
      "rehype-stringify": "^9.0.0",
      "remark-cli": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "terser": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "unified": "^10.0.0",
      "xo": "^0.46.0"
    },
    "scripts": {
      "build": "rimraf \"dev/**/*.d.ts\" \"test/**/*.d.ts\" && tsc && type-coverage && micromark-build && esbuild . --bundle --minify | terser | gzip-size --raw",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test/index.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --conditions development test/index.js",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "rules": {
        "complexity": "off",
        "node/file-extension-in-import": "off",
        "unicorn/prefer-switch": "off",
        "unicorn/prefer-node-protocol": "off"
      }
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-mdast-util-from-markdown-1.2.0-84df2924ccc6c995dec1e2368b2b208ad0a76268-integrity/node_modules/mdast-util-from-markdown/package.json",
    "readmeFilename": "readme.md",
    "readme": "# mdast-util-from-markdown\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**[mdast][]** utility to parse markdown.\n\n## When to use this\n\nUse this if you want to use **[micromark][]** but need an AST.\nUse **[remark][]** instead, which includes both to provide a nice interface and\nhundreds of plugins.\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install mdast-util-from-markdown\n```\n\n## Use\n\nSay we have the following markdown file, `example.md`:\n\n```markdown\n## Hello, *World*!\n```\n\nAnd our script, `example.js`, looks as follows:\n\n```js\nimport fs from 'node:fs'\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\nconst doc = fs.readFileSync('example.md')\n\nconst tree = fromMarkdown(doc)\n\nconsole.log(tree)\n```\n\nNow, running `node example` yields (positional info removed for brevity):\n\n```js\n{\n  type: 'root',\n  children: [\n    {\n      type: 'heading',\n      depth: 2,\n      children: [\n        {type: 'text', value: 'Hello, '},\n        {\n          type: 'emphasis',\n          children: [{type: 'text', value: 'World'}]\n        },\n        {type: 'text', value: '!'}\n      ]\n    }\n  ]\n}\n```\n\n## API\n\nThis package exports the following identifier: `fromMarkdown`.\nThere is no default export.\n\nThe export map supports the endorsed\n[`development` condition](https://nodejs.org/api/packages.html#packages_resolving_user_conditions).\nRun `node --conditions development module.js` to get instrumented dev code.\nWithout this condition, production code is loaded.\n\n### `fromMarkdown(doc[, encoding][, options])`\n\nParse markdown to a **[mdast][]** tree.\n\n##### Parameters\n\n###### `doc`\n\nValue to parse (`string` or [`Buffer`][buffer]).\n\n###### `encoding`\n\n[Character encoding][encoding] to understand `doc` as when it’s a\n[`Buffer`][buffer] (`string`, default: `'utf8'`).\n\n###### `options.extensions`\n\nArray of syntax extensions (`Array<MicromarkSyntaxExtension>`, default: `[]`).\nPassed to [`micromark` as `extensions`][micromark-extensions].\n\n###### `options.mdastExtensions`\n\nArray of mdast extensions (`Array<MdastExtension>`, default: `[]`).\n\n##### Returns\n\n[`Root`][root].\n\n## List of extensions\n\n*   [`syntax-tree/mdast-util-directive`](https://github.com/syntax-tree/mdast-util-directive)\n    — parse directives\n*   [`syntax-tree/mdast-util-frontmatter`](https://github.com/syntax-tree/mdast-util-frontmatter)\n    — parse frontmatter (YAML, TOML, more)\n*   [`syntax-tree/mdast-util-gfm`](https://github.com/syntax-tree/mdast-util-gfm)\n    — parse GFM\n*   [`syntax-tree/mdast-util-gfm-autolink-literal`](https://github.com/syntax-tree/mdast-util-gfm-autolink-literal)\n    — parse GFM autolink literals\n*   [`syntax-tree/mdast-util-gfm-footnote`](https://github.com/syntax-tree/mdast-util-gfm-footnote)\n    — parse GFM footnotes\n*   [`syntax-tree/mdast-util-gfm-strikethrough`](https://github.com/syntax-tree/mdast-util-gfm-strikethrough)\n    — parse GFM strikethrough\n*   [`syntax-tree/mdast-util-gfm-table`](https://github.com/syntax-tree/mdast-util-gfm-table)\n    — parse GFM tables\n*   [`syntax-tree/mdast-util-gfm-task-list-item`](https://github.com/syntax-tree/mdast-util-gfm-task-list-item)\n    — parse GFM task list items\n*   [`syntax-tree/mdast-util-math`](https://github.com/syntax-tree/mdast-util-math)\n    — parse math\n*   [`syntax-tree/mdast-util-mdx`](https://github.com/syntax-tree/mdast-util-mdx)\n    — parse MDX or MDX.js\n*   [`syntax-tree/mdast-util-mdx-expression`](https://github.com/syntax-tree/mdast-util-mdx-expression)\n    — parse MDX or MDX.js expressions\n*   [`syntax-tree/mdast-util-mdx-jsx`](https://github.com/syntax-tree/mdast-util-mdx-jsx)\n    — parse MDX or MDX.js JSX\n*   [`syntax-tree/mdast-util-mdxjs-esm`](https://github.com/syntax-tree/mdast-util-mdxjs-esm)\n    — parse MDX.js ESM\n\n## Security\n\nAs markdown is sometimes used for HTML, and improper use of HTML can open you up\nto a [cross-site scripting (XSS)][xss] attack, use of `mdast-util-from-markdown`\ncan also be unsafe.\nWhen going to HTML, use this utility in combination with\n[`hast-util-sanitize`][sanitize] to make the tree safe.\n\n## Related\n\n*   [`micromark/micromark`](https://github.com/micromark/micromark)\n    — the smallest commonmark-compliant markdown parser that exists\n*   [`remarkjs/remark`](https://github.com/remarkjs/remark)\n    — markdown processor powered by plugins\n*   [`syntax-tree/mdast-util-to-markdown`](https://github.com/syntax-tree/mdast-util-to-markdown)\n    — serialize mdast to markdown\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/syntax-tree/mdast-util-from-markdown/workflows/main/badge.svg\n\n[build]: https://github.com/syntax-tree/mdast-util-from-markdown/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/mdast-util-from-markdown.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/mdast-util-from-markdown\n\n[downloads-badge]: https://img.shields.io/npm/dm/mdast-util-from-markdown.svg\n\n[downloads]: https://www.npmjs.com/package/mdast-util-from-markdown\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/mdast-util-from-markdown.svg\n\n[size]: https://bundlephobia.com/result?p=mdast-util-from-markdown\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/syntax-tree/unist/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/syntax-tree/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/HEAD/code-of-conduct.md\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[root]: https://github.com/syntax-tree/mdast#root\n\n[encoding]: https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings\n\n[buffer]: https://nodejs.org/api/buffer.html\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n\n[sanitize]: https://github.com/syntax-tree/hast-util-sanitize\n\n[micromark]: https://github.com/micromark/micromark\n\n[micromark-extensions]: https://github.com/micromark/micromark#optionsextensions\n\n[remark]: https://github.com/remarkjs/remark\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2020 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mdast-util-from-markdown/-/mdast-util-from-markdown-1.2.0.tgz#84df2924ccc6c995dec1e2368b2b208ad0a76268",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mdast-util-from-markdown/-/mdast-util-from-markdown-1.2.0.tgz",
    "hash": "84df2924ccc6c995dec1e2368b2b208ad0a76268",
    "integrity": "sha512-iZJyyvKD1+K7QX1b5jXdE7Sc5dtoTry1vzV28UZZe8Z1xVnB/czKntJ7ZAkG0tANqRnBF6p3p7GpU1y19DTf2Q==",
    "registry": "npm",
    "packageName": "mdast-util-from-markdown",
    "cacheIntegrity": "sha512-iZJyyvKD1+K7QX1b5jXdE7Sc5dtoTry1vzV28UZZe8Z1xVnB/czKntJ7ZAkG0tANqRnBF6p3p7GpU1y19DTf2Q== sha1-hN8pJMzGyZXeweI2iysgitCnYmg="
  },
  "registry": "npm",
  "hash": "84df2924ccc6c995dec1e2368b2b208ad0a76268"
}