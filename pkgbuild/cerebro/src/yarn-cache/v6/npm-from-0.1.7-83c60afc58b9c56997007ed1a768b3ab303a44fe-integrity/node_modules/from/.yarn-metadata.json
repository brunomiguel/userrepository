{
  "manifest": {
    "name": "from",
    "version": "0.1.7",
    "description": "Easy way to make a Readable Stream",
    "main": "index.js",
    "scripts": {
      "test": "asynct test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/dominictarr/from.git"
    },
    "keywords": [
      "stream",
      "streams",
      "readable",
      "easy"
    ],
    "devDependencies": {
      "asynct": "1",
      "stream-spec": "0",
      "assertions": "~2.3.0"
    },
    "author": {
      "name": "Dominic Tarr",
      "email": "dominic.tarr@gmail.com",
      "url": "dominictarr.com"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-from-0.1.7-83c60afc58b9c56997007ed1a768b3ab303a44fe-integrity/node_modules/from/package.json",
    "readmeFilename": "readme.markdown",
    "readme": "[![TravisCI Build Status](https://travis-ci.org/nmhnmh/from.svg?branch=master)](https://travis-ci.org/nmhnmh/from)\n\n# from\n\nAn easy way to create a `readable Stream`.\n\n## from(function getChunk(count, next))\n\nfrom takes a `getChunk` function and returns a stream.  \n\n`getChunk` is called again and again, after each time the user calls `next()`, \nuntil the user emits `'end'`\n\nif `pause()` is called, the `getChunk` won't be called again untill `resume()` is called.\n\n\n```js\nvar from = require('from')\n\nvar stream = \n  from(function getChunk(count, next) {\n    //do some sort of data\n    this.emit('data', whatever)\n    \n    if(itsOver)\n      this.emit('end')\n\n    //ready to handle the next chunk\n    next()\n    //or, if it's sync:\n    return true \n  })\n```\n\n## from(array)\n\nfrom also takes an `Array` whose elements it emits one after another.\n\n## License\nMIT / Apache2\n",
    "licenseText": "Apache License, Version 2.0\n\nCopyright (c) 2011 Dominic Tarr\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/from/-/from-0.1.7.tgz#83c60afc58b9c56997007ed1a768b3ab303a44fe",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/from/-/from-0.1.7.tgz",
    "hash": "83c60afc58b9c56997007ed1a768b3ab303a44fe",
    "integrity": "sha512-twe20eF1OxVxp/ML/kq2p1uc6KvFK/+vs8WjEbeKmV2He22MKm7YF2ANIt+EOqhJ5L3K/SuuPhk0hWQDjOM23g==",
    "registry": "npm",
    "packageName": "from",
    "cacheIntegrity": "sha512-twe20eF1OxVxp/ML/kq2p1uc6KvFK/+vs8WjEbeKmV2He22MKm7YF2ANIt+EOqhJ5L3K/SuuPhk0hWQDjOM23g== sha1-g8YK/Fi5xWmXAH7Rp2izqzA6RP4="
  },
  "registry": "npm",
  "hash": "83c60afc58b9c56997007ed1a768b3ab303a44fe"
}