{
  "manifest": {
    "name": "stylelint-config-standard",
    "version": "29.0.0",
    "description": "Standard shareable config for Stylelint",
    "keywords": [
      "stylelint",
      "stylelint-config",
      "standard"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/stylelint/stylelint-config-standard.git"
    },
    "license": "MIT",
    "author": {
      "name": "Stylelint"
    },
    "main": "index.js",
    "files": [
      "index.js"
    ],
    "scripts": {
      "format": "prettier . --write",
      "prepare": "husky install",
      "lint:formatting": "prettier . --check",
      "lint:js": "eslint . --ignore-path .gitignore",
      "lint:md": "remark . --quiet --frail --ignore-path .gitignore",
      "lint": "npm-run-all --parallel lint:*",
      "release": "np",
      "pretest": "npm run lint",
      "test": "jest",
      "watch": "jest --watch"
    },
    "lint-staged": {
      "*.js": "eslint --cache --fix",
      "*.{js,md,yml}": "prettier --write"
    },
    "prettier": "@stylelint/prettier-config",
    "eslintConfig": {
      "extends": [
        "stylelint"
      ],
      "globals": {
        "module": true,
        "require": true
      }
    },
    "remarkConfig": {
      "plugins": [
        "@stylelint/remark-preset"
      ]
    },
    "dependencies": {
      "stylelint-config-recommended": "^9.0.0"
    },
    "devDependencies": {
      "@stylelint/prettier-config": "^2.0.0",
      "@stylelint/remark-preset": "^4.0.0",
      "eslint": "^8.25.0",
      "eslint-config-stylelint": "^17.0.0",
      "husky": "^8.0.1",
      "jest": "^28.1.3",
      "lint-staged": "^13.0.3",
      "np": "^7.6.2",
      "npm-run-all": "^4.1.5",
      "prettier": "^2.7.1",
      "remark-cli": "^11.0.0",
      "stylelint": "^14.14.0"
    },
    "peerDependencies": {
      "stylelint": "^14.14.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-stylelint-config-standard-29.0.0-4cc0e0f05512a39bb8b8e97853247d3a95d66fa2-integrity/node_modules/stylelint-config-standard/package.json",
    "readmeFilename": "README.md",
    "readme": "# stylelint-config-standard\n\n[![NPM version](https://img.shields.io/npm/v/stylelint-config-standard.svg)](https://www.npmjs.org/package/stylelint-config-standard) [![Build Status](https://github.com/stylelint/stylelint-config-standard/workflows/CI/badge.svg)](https://github.com/stylelint/stylelint-config-standard/actions)\n\n> The standard shareable config for Stylelint.\n\nExtends [`stylelint-config-recommended`](https://github.com/stylelint/stylelint-config-recommended).\n\nTurns on additional rules to enforce common conventions found in the specifications and in a handful of CSS styleguides, including: [The Idiomatic CSS Principles](https://github.com/necolas/idiomatic-css),\n[Google's CSS Style Guide](https://google.github.io/styleguide/htmlcssguide.html#CSS_Formatting_Rules), [Airbnb's Styleguide](https://github.com/airbnb/css#css), and [@mdo's Code Guide](https://codeguide.co/#css).\n\nIt favours flexibility over strictness for things like multi-line lists and single-line rulesets.\n\nTo see the rules that this config uses, please read the [config itself](./index.js).\n\n## Example\n\n<!-- prettier-ignore -->\n```css\n@import url(\"x.css\");\n@import url(\"y.css\");\n\n/**\n * Multi-line comment\n */\n\n:root {\n  --brand-red: hsl(5deg 10% 40%);\n}\n\n.selector-1,\n.selector-2,\n.selector-3[type=\"text\"] {\n  background: linear-gradient(#fff, rgb(0 0 0 / 80%));\n  box-sizing: border-box;\n  display: block;\n  color: var(--brand-red);\n}\n\n.selector-a,\n.selector-b:not(:first-child) {\n  padding: 10px !important;\n  top: calc(100% - 2rem);\n}\n\n.selector-x { width: 10%; }\n.selector-y { width: 20%; }\n.selector-z { width: 30%; }\n\n/* Single-line comment */\n\n@media (width >= 60em) {\n  .selector {\n    /* Flush to parent comment */\n    transform: translate(1, 1) scale(3);\n  }\n}\n\n@media (orientation: portrait), projection and (color) {\n  .selector-i + .selector-ii {\n    background: hsl(20deg 25% 33%);\n    font-family: Helvetica, \"Arial Black\", sans-serif;\n  }\n}\n\n/* Flush single line comment */\n@media\n  screen and (min-resolution: 192dpi),\n  screen and (min-resolution: 2dppx) {\n  .selector {\n    animation: 3s none fade-in;\n    background-image:\n      repeating-linear-gradient(\n        -45deg,\n        transparent,\n        #fff 25px,\n        rgb(255 255 255 / 100%) 50px\n      );\n    margin: 10px;\n    margin-bottom: 5px;\n    box-shadow:\n      0 1px 1px #000,\n      0 1px 0 #fff,\n      2px 2px 1px 1px #ccc inset;\n    height: 10rem;\n  }\n\n  /* Flush nested single line comment */\n  .selector::after {\n    content: \"â†’\";\n    background-image: url(\"x.svg\");\n  }\n}\n\n@keyframes fade-in {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n```\n\n_Note: the config is tested against this example, as such the example contains plenty of CSS syntax, formatting and features._\n\n## Installation\n\n```bash\nnpm install stylelint-config-standard --save-dev\n```\n\n## Usage\n\nSet your stylelint config to:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\"\n}\n```\n\n### Extending the config\n\nAdd a `\"rules\"` key to your config, then add your overrides and additions there.\n\nYou can turn off rules by setting its value to `null`. For example:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\",\n  \"rules\": {\n    \"selector-class-pattern\": null\n  }\n}\n```\n\nOr lower the severity of a rule to a warning using the `severity` secondary option. For example:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\",\n  \"rules\": {\n    \"property-no-vendor-prefix\": [\n      true,\n      {\n        \"severity\": \"warning\"\n      }\n    ]\n  }\n}\n```\n\nA more complete example, to change the `at-rule-no-unknown` rule to use its `ignoreAtRules` option, change the `indentation` to tabs, turn off the `number-leading-zero` rule, set the severity of the `number-max-precision` rule to `warning`, and add the `unit-allowed-list` rule:\n\n```json\n{\n  \"extends\": \"stylelint-config-standard\",\n  \"rules\": {\n    \"at-rule-no-unknown\": [\n      true,\n      {\n        \"ignoreAtRules\": [\"--my-at-rule\"]\n      }\n    ],\n    \"indentation\": \"tab\",\n    \"number-leading-zero\": null,\n    \"number-max-precision\": [\n      4,\n      {\n        \"severity\": \"warning\"\n      }\n    ],\n    \"unit-allowed-list\": [\"em\", \"rem\", \"s\"]\n  }\n}\n```\n\n#### Suggested additions\n\n`stylelint-config-standard` is a great foundation for your own config. You can extend it to create a tailored and much stricter config:\n\n- Manage specificity using:\n  - [`max-nesting-depth`](https://github.com/stylelint/stylelint/blob/main/lib/rules/max-nesting-depth/README.md)\n  - [`selector-max-attribute`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-max-attribute/README.md)\n  - [`selector-max-class`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-max-class/README.md)\n  - [`selector-max-combinators`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-max-combinators/README.md)\n  - [`selector-max-compound-selectors`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-max-compound-selectors/README.md)\n  - [`selector-max-id`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-max-id/README.md)\n  - [`selector-max-pseudo-class`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-max-pseudo-class/README.md)\n  - [`selector-max-specificity`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-max-specificity/README.md)\n  - [`selector-max-type`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-max-type/README.md)\n  - [`selector-max-universal`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-max-universal/README.md)\n  - [`selector-no-qualifying-type`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-no-qualifying-type/README.md)\n- Specify acceptable selector types, units, properties, functions and words in comments using:\n  - [`at-rule-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/at-rule-disallowed-list/README.md)\n  - [`at-rule-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/at-rule-allowed-list/README.md)\n  - [`at-rule-property-required-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/at-rule-property-required-list/README.md)\n  - [`color-named`](https://github.com/stylelint/stylelint/blob/main/lib/rules/color-named/README.md)\n  - [`color-no-hex`](https://github.com/stylelint/stylelint/blob/main/lib/rules/color-no-hex/README.md)\n  - [`comment-word-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/comment-word-disallowed-list/README.md)\n  - [`declaration-no-important`](https://github.com/stylelint/stylelint/blob/main/lib/rules/declaration-no-important/README.md)\n  - [`declaration-property-unit-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/declaration-property-unit-disallowed-list/README.md)\n  - [`declaration-property-unit-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/declaration-property-unit-allowed-list/README.md)\n  - [`declaration-property-value-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/declaration-property-value-disallowed-list/README.md)\n  - [`declaration-property-value-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/declaration-property-value-allowed-list/README.md)\n  - [`function-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/function-disallowed-list/README.md)\n  - [`function-url-scheme-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/function-url-scheme-disallowed-list/README.md)\n  - [`function-url-scheme-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/function-url-scheme-allowed-list/README.md)\n  - [`function-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/function-allowed-list/README.md)\n  - [`media-feature-name-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/media-feature-name-disallowed-list/README.md)\n  - [`media-feature-name-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/media-feature-name-allowed-list/README.md)\n  - [`property-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/property-disallowed-list/README.md)\n  - [`property-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/property-allowed-list/README.md)\n  - [`selector-attribute-operator-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-attribute-operator-disallowed-list/README.md)\n  - [`selector-attribute-operator-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-attribute-operator-allowed-list/README.md)\n  - [`selector-combinator-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-combinator-disallowed-list/README.md)\n  - [`selector-combinator-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-combinator-allowed-list/README.md)\n  - [`selector-pseudo-class-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-pseudo-class-disallowed-list/README.md)\n  - [`selector-pseudo-class-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-pseudo-class-allowed-list/README.md)\n  - [`selector-pseudo-element-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-pseudo-element-disallowed-list/README.md)\n  - [`selector-pseudo-element-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-pseudo-element-allowed-list/README.md)\n  - [`unit-disallowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/unit-disallowed-list/README.md)\n  - [`unit-allowed-list`](https://github.com/stylelint/stylelint/blob/main/lib/rules/unit-allowed-list/README.md)\n- Specify acceptable patterns using:\n  - [`selector-nested-pattern`](https://github.com/stylelint/stylelint/blob/main/lib/rules/selector-nested-pattern/README.md)\n- Specify a notation for font weights using:\n  - [`font-weight-notation`](https://github.com/stylelint/stylelint/blob/main/lib/rules/font-weight-notation/README.md)\n- Specify what types of URLs are allowed using:\n  - [`function-url-no-scheme-relative`](https://github.com/stylelint/stylelint/blob/main/lib/rules/function-url-no-scheme-relative/README.md)\n\n## [Changelog](CHANGELOG.md)\n\n## [License](LICENSE)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 - present stylelint authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/stylelint-config-standard/-/stylelint-config-standard-29.0.0.tgz#4cc0e0f05512a39bb8b8e97853247d3a95d66fa2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/stylelint-config-standard/-/stylelint-config-standard-29.0.0.tgz",
    "hash": "4cc0e0f05512a39bb8b8e97853247d3a95d66fa2",
    "integrity": "sha512-uy8tZLbfq6ZrXy4JKu3W+7lYLgRQBxYTUUB88vPgQ+ZzAxdrvcaSUW9hOMNLYBnwH+9Kkj19M2DHdZ4gKwI7tg==",
    "registry": "npm",
    "packageName": "stylelint-config-standard",
    "cacheIntegrity": "sha512-uy8tZLbfq6ZrXy4JKu3W+7lYLgRQBxYTUUB88vPgQ+ZzAxdrvcaSUW9hOMNLYBnwH+9Kkj19M2DHdZ4gKwI7tg== sha1-TMDg8FUSo5u4uOl4UyR9OpXWb6I="
  },
  "registry": "npm",
  "hash": "4cc0e0f05512a39bb8b8e97853247d3a95d66fa2"
}