{
  "manifest": {
    "name": "mobx",
    "version": "6.7.0",
    "description": "Simple, scalable state management.",
    "source": "src/mobx.ts",
    "main": "dist/index.js",
    "umd:main": "dist/mobx.umd.production.min.js",
    "unpkg": "dist/mobx.umd.production.min.js",
    "jsdelivr": "dist/mobx.umd.production.min.js",
    "jsnext:main": "dist/mobx.esm.production.min.js",
    "module": "dist/mobx.esm.js",
    "react-native": "dist/mobx.esm.js",
    "types": "dist/mobx.d.ts",
    "typings": "dist/mobx.d.ts",
    "files": [
      "src",
      "dist",
      "LICENSE",
      "CHANGELOG.md",
      "README.md"
    ],
    "sideEffects": false,
    "repository": {
      "type": "git",
      "url": "https://github.com/mobxjs/mobx.git"
    },
    "author": {
      "name": "Michel Weststrate"
    },
    "license": "MIT",
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/mobx"
    },
    "bugs": {
      "url": "https://github.com/mobxjs/mobx/issues"
    },
    "homepage": "https://mobx.js.org/",
    "dependencies": {},
    "devDependencies": {
      "@babel/core": "^7.9.0",
      "@babel/plugin-proposal-class-properties": "^7.8.3",
      "@babel/plugin-proposal-decorators": "^7.8.3",
      "@babel/plugin-transform-runtime": "^7.9.0",
      "@babel/preset-env": "^7.9.5",
      "@babel/preset-typescript": "^7.9.0",
      "@babel/runtime": "^7.9.2",
      "conditional-type-checks": "^1.0.5",
      "flow-bin": "^0.123.0"
    },
    "keywords": [
      "mobx",
      "mobservable",
      "observable",
      "react-component",
      "react",
      "reactjs",
      "reactive",
      "model",
      "frp",
      "functional-reactive-programming",
      "state management",
      "data flow"
    ],
    "scripts": {
      "test": "jest",
      "lint": "eslint src/**/*",
      "build": "node ../../scripts/build.js mobx",
      "build:test": "yarn build --target test",
      "perf": "scripts/perf.sh",
      "perf-legacy": "node --expose-gc ./__tests__/perf/index.js legacy",
      "perf-proxy": "node --expose-gc ./__tests__/perf/index.js proxy",
      "test:performance": "yarn perf proxy && yarn perf legacy",
      "test:mixed-versions": "yarn test --testRegex mixed-versions",
      "test:types": "tsc --noEmit",
      "test:flow": "flow check",
      "test:coverage": "yarn test -i --coverage",
      "test:size": "yarn import-size --report . observable computed autorun action",
      "test:check": "yarn test:types",
      "prepublish": "node ./scripts/prepublish.js && yarn build --target publish"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-mobx-6.7.0-2d805610fee1801fd015c54fd5400d2601aa3768-integrity/node_modules/mobx/package.json",
    "readmeFilename": "README.md",
    "readme": "<img src=\"https://mobx.js.org/assets/mobx.png\" alt=\"logo\" height=\"120\" align=\"right\" />\n\n# MobX\n\n_Simple, scalable state management._\n\n[![npm version](https://badge.fury.io/js/mobx.svg)](https://badge.fury.io/js/mobx)\n[![OpenCollective](https://opencollective.com/mobx/backers/badge.svg)](docs/backers-sponsors.md#backers)\n[![OpenCollective](https://opencollective.com/mobx/sponsors/badge.svg)](docs/backers-sponsors.md#sponsors)\n[![Discuss on Github](https://img.shields.io/badge/discuss%20on-GitHub-orange)](https://github.com/mobxjs/mobx/discussions)\n[![Coverage Status](https://coveralls.io/repos/github/mobxjs/mobx/badge.svg?branch=main)](https://coveralls.io/github/mobxjs/mobx?branch=main)\n[![View changelog](https://img.shields.io/badge/changelogs.xyz-Explore%20Changelog-brightgreen)](https://changelogs.xyz/mobx)\n\n---\n\n## Documentation\n\nDocumentation can be found at **[mobx.js.org](https://mobx.js.org/)**.\n\n---\n\n## Sponsors\n\nMobX is made possible by the generosity of the sponsors below, and many other [individual backers](https://github.com/mobxjs/mobx/blob/main/docs/backers-sponsors.md#backers). Sponsoring directly impacts the longevity of this project.\n\n**ü•á Gold sponsors (\\$3000+ total contribution):** <br/>\n<a href=\"https://mendix.com/\"><img src=\"https://mobx.js.org/assets/mendix-logo.png\" align=\"center\" width=\"100\" title=\"Mendix\" alt=\"Mendix\" /></a>\n<a href=\"https://frontendmasters.com/\"><img src=\"https://mobx.js.org/assets/frontendmasters.jpg\" align=\"center\" width=\"100\" title=\"Frontend Masters\" alt=\"Frontend Masters\"></a>\n<a href=\"https://opensource.facebook.com/\"><img src=\"https://mobx.js.org/assets/fbos.jpeg\" align=\"center\" width=\"100\" title=\"Facebook Open Source\" alt=\"Facebook Open Source\" /></a>\n<a href=\"http://auctionfrontier.com/\"><img src=\"https://mobx.js.org/assets/auctionfrontier.jpeg\" align=\"center\" width=\"100\" title=\"Auction Frontier\" alt=\"Auction Frontier\"></a>\n<a href=\"https://www.guilded.gg/\"><img src=\"https://mobx.js.org/assets/guilded.jpg\" align=\"center\" width=\"100\" title=\"Guilded\" alt=\"Guilded\" /></a>\n<a href=\"https://coinbase.com/\"><img src=\"https://mobx.js.org/assets/coinbase.jpeg\" align=\"center\" width=\"100\" title=\"Coinbase\" alt=\"Coinbase\" /></a>\n<a href=\"https://www.canva.com/\"><img src=\"https://mobx.js.org/assets/canva.png\" align=\"center\" width=\"100\" title=\"Canva\" alt=\"Canva\" /></a>\n\n**ü•à Silver sponsors (\\$100+ per month):**<br/>\n<a href=\"https://www.codefirst.co.uk/\"><img src=\"https://mobx.js.org/assets/codefirst.png\" align=\"center\" width=\"100\" title=\"CodeFirst\" alt=\"CodeFirst\"/></a>\n<a href=\"https://www.one-beyond.com\"><img src=\"https://mobx.js.org/assets/dcsl.png\" align=\"center\" width=\"100\" title=\"One Beyond\" alt=\"One Beyond\"/></a>\n<a href=\"https://www.bugsnag.com/platforms/react-error-reporting?utm_source=MobX&utm_medium=Website&utm_content=open-source&utm_campaign=2019-community&utm_term=20190913\"><img src=\"https://mobx.js.org/assets/bugsnag.jpg\" align=\"center\" width=\"100\" title=\"Bugsnag\" alt=\"Bugsnag\"/></a>\n<a href=\"https://curology.com/blog/tech\"><img src=\"https://mobx.js.org/assets/curology.png\" align=\"center\" width=\"100\" title=\"Curology\" alt=\"Curology\"/></a>\n<a href=\"https://modulz.app/\"><img src=\"https://mobx.js.org/assets/modulz.png\" align=\"center\" width=\"100\" title=\"Modulz\" alt=\"Modulz\"/></a>\n<a href=\"https://space307.com/?utm_source=sponsorship&utm_medium=mobx&utm_campaign=readme\"><img src=\"https://mobx.js.org/assets/space307.png\" align=\"center\" width=\"100\" title=\"Space307\" alt=\"Space307\"/></a>\n<a href=\"https://casinosites.ltd.uk/?utm_source=sponsorship&utm_medium=mobx&utm_campaign=readme\"><img src=\"https://mobx.js.org/assets/casino2.png\" align=\"center\" width=\"100\" title=\"Casino Sites\" alt=\"Casino Sites\"/></a>\n\n**ü•â Bronze sponsors (\\$500+ total contributions):**<br/>\n<a href=\"https://mantro.net/jobs/warlock\"><img src=\"https://mobx.js.org/assets/mantro.png\" align=\"center\" width=\"100\" title=\"mantro GmbH\" alt=\"mantro GmbH\"></a>\n<a href=\"https://www.algolia.com/\"><img src=\"https://mobx.js.org/assets/algolia.jpg\" align=\"center\" width=\"100\" title=\"Algolia\" alt=\"Algolia\" /></a>\n<a href=\"https://talentplot.com/\"><img src=\"https://mobx.js.org/assets/talentplot.png\" align=\"center\" width=\"100\" title=\"talentplot\" alt=\"talentplot\"></a>\n<a href=\"https://careers.dazn.com/\"><img src=\"https://mobx.js.org/assets/dazn.png\" align=\"center\" width=\"100\" title=\"DAZN\" alt=\"DAZN\"></a>\n<a href=\"https://blokt.com/\"><img src=\"https://mobx.js.org/assets/blokt.jpg\" align=\"center\" width=\"100\" title=\"Blokt\" alt=\"Blokt\"/></a>\n\n---\n\n## Introduction\n\n_Anything that can be derived from the application state, should be. Automatically._\n\nMobX is a battle-tested library that makes state management simple and scalable by transparently applying functional reactive programming.\nThe philosophy behind MobX is simple:\n\n<div class=\"benefits\">\n    <div>\n        <div class=\"pic\">üòô</div>\n        <div>\n            <h4>Straightforward</h4>\n            <p>Write minimalistic, boilerplate-free code that captures your intent.\n            Trying to update a record field? Simply use a normal JavaScript assignment ‚Äî\n            the reactivity system will detect all your changes and propagate them out to where they are being used.\n            No special tools are required when updating data in an asynchronous process.\n            </p>\n        </div>\n    </div>\n    <div>\n        <div class=\"pic\">üöÖ</div>\n        <div>\n            <h4>Effortless optimal rendering</h4>\n            <p>\n                All changes to and uses of your data are tracked at runtime, building a dependency tree that captures all relations between state and output.\n                This guarantees that computations that depend on your state, like React components, run only when strictly needed.\n                There is no need to manually optimize components with error-prone and sub-optimal techniques like memoization and selectors.\n            </p>\n        </div>\n    </div>\n    <div>\n        <div class=\"pic\">ü§πüèª‚Äç‚ôÇÔ∏è</div>\n        <div>\n            <h4>Architectural freedom</h4>\n            <p>\n                MobX is unopinionated and allows you to manage your application state outside of any UI framework.\n                This makes your code decoupled, portable, and above all, easily testable.\n            </p>\n        </div>\n    </div>\n</div>\n\n---\n\n## A quick example\n\nSo what does code that uses MobX look like?\n\n```javascript\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { makeAutoObservable } from \"mobx\"\nimport { observer } from \"mobx-react\"\n\n// Model the application state.\nclass Timer {\n    secondsPassed = 0\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    increase() {\n        this.secondsPassed += 1\n    }\n\n    reset() {\n        this.secondsPassed = 0\n    }\n}\n\nconst myTimer = new Timer()\n\n// Build a \"user interface\" that uses the observable state.\nconst TimerView = observer(({ timer }) => (\n    <button onClick={() => timer.reset()}>Seconds passed: {timer.secondsPassed}</button>\n))\n\nReactDOM.render(<TimerView timer={myTimer} />, document.body)\n\n// Update the 'Seconds passed: X' text every second.\nsetInterval(() => {\n    myTimer.increase()\n}, 1000)\n```\n\nThe `observer` wrapper around the `TimerView` React component will automatically detect that rendering\ndepends on the `timer.secondsPassed` observable, even though this relationship is not explicitly defined. The reactivity system will take care of re-rendering the component when _precisely that_ field is updated in the future.\n\nEvery event (`onClick` / `setInterval`) invokes an _action_ (`myTimer.increase` / `myTimer.reset`) that updates _observable state_ (`myTimer.secondsPassed`).\nChanges in the observable state are propagated precisely to all _computations_ and _side effects_ (`TimerView`) that depend on the changes being made.\n\n<img alt=\"MobX unidirectional flow\" src=\"https://mobx.js.org/assets/flow2.png\" align=\"center\" />\n\nThis conceptual picture can be applied to the above example, or any other application using MobX.\n\n## Getting started\n\nTo learn about the core concepts of MobX using a larger example, check out **[The gist of MobX](https://mobx.js.org/the-gist-of-mobx.html)** page, or take the **[10 minute interactive introduction to MobX and React](https://mobx.js.org/getting-started)**.\nThe philosophy and benefits of the mental model provided by MobX are also described in great detail in the blog posts [UI as an afterthought](https://michel.codes/blogs/ui-as-an-afterthought) and [How to decouple state and UI (a.k.a. you don‚Äôt need componentWillMount)](https://hackernoon.com/how-to-decouple-state-and-ui-a-k-a-you-dont-need-componentwillmount-cc90b787aa37).\n\n## Further resources\n\n-   The [MobX cheat sheet](https://gum.co/fSocU) (¬£5) is both useful and sponsors the project\n-   [10 minute interactive introduction to MobX and React](https://mobx.js.org/getting-started)\n-   [Egghead.io course, based on MobX 3](https://egghead.io/courses/manage-complex-state-in-react-apps-with-mobx)\n-   The [MobX awesome list](https://github.com/mobxjs/awesome-mobx#awesome-mobx) ‚Äì a long list of MobX resources and example projects\n\n### The MobX book\n\n<a href=\"https://www.packtpub.com/product/mobx-quick-start-guide/9781789344837\"><img src=\"https://mobx.js.org/assets/book.jpg\" height=\"120px\" /></a>\n\nThe **[MobX Quick Start Guide](https://www.packtpub.com/product/mobx-quick-start-guide/9781789344837)** ($24.99) by [Pavan Podila](https://twitter.com/pavanpodila) and [Michel Weststrate](https://twitter.com/mweststrate) is available as an [ebook](https://www.packtpub.com/product/mobx-quick-start-guide/9781789344837), [paperback](https://www.amazon.com/MobX-Quick-Start-Guide-Supercharge/dp/1789344832), and on the [O'Reilly platform](https://www.oreilly.com/library/view/mobx-quick-start/9781789344837/) (see [preview](https://books.google.com/books?id=ALFmDwAAQBAJ&printsec=frontcover#v=onepage&q&f=false)).\n\n### Videos\n\n-   [Introduction to MobX & React in 2020](https://www.youtube.com/watch?v=pnhIJA64ByY) by Leigh Halliday, _17 min_.\n-   [ReactNext 2016: Real World MobX](https://www.youtube.com/watch?v=Aws40KOx90U) by Michel Weststrate, _40 min_, [slides](https://docs.google.com/presentation/d/1DrI6Hc2xIPTLBkfNH8YczOcPXQTOaCIcDESdyVfG_bE/edit?usp=sharing).\n-   [CityJS 2020: MobX, from mutable to immutable, to observable data](https://youtu.be/sP7dtZm_Wx0?t=27050) by Michel Weststrate, _30 min_.\n-   [OpenSourceNorth: Practical React with MobX (ES5)](https://www.youtube.com/watch?v=XGwuM_u7UeQ) by Matt Ruby, _42 min_.\n-   [HolyJS 2019: MobX and the unique symbiosis of predictability and speed](https://www.youtube.com/watch?v=NBYbBbjZeX4&list=PL8sJahqnzh8JJD7xahG5zXkjfM5GOgcPA&index=21&t=0s) by Michel Weststrate, _59 min_.\n-   [React Amsterdam 2016: State Management Is Easy](https://www.youtube.com/watch?v=ApmSsu3qnf0&feature=youtu.be) by Michel Weststrate, _20 min_, [slides](https://speakerdeck.com/mweststrate/state-management-is-easy-introduction-to-mobx).\n-   {üöÄ} [React Live 2019: Reinventing MobX](https://www.youtube.com/watch?v=P_WqKZxpX8g) by Max Gallo, _27 min_.\n\n## Credits\n\nMobX is inspired by reactive programming principles, which are for example used in spreadsheets. It is inspired by model‚Äìview‚Äìviewmodel frameworks like [MeteorJS's Tracker](https://docs.meteor.com/api/tracker.html), [Knockout](https://knockoutjs.com/) and [Vue.js](https://vuejs.org/), but MobX brings _transparent functional reactive programming_ (TFRP, a concept which is further explained in the [MobX book](https://www.packtpub.com/product/mobx-quick-start-guide/9781789344837)) to the next level and provides a standalone implementation. It implements TFRP in a glitch-free, synchronous, predictable and efficient manner.\n\nA ton of credit goes to [Mendix](https://github.com/mendix), for providing the flexibility and support to maintain MobX and the chance to prove the philosophy of MobX in a real, complex, performance critical applications.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Michel Weststrate\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mobx/-/mobx-6.7.0.tgz#2d805610fee1801fd015c54fd5400d2601aa3768",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mobx/-/mobx-6.7.0.tgz",
    "hash": "2d805610fee1801fd015c54fd5400d2601aa3768",
    "integrity": "sha512-1kBLBdSNG2bA522HQdbsTvwAwYf9hq9FWxmlhX7wTsJUAI54907J+ozfGW+LoYUo06vjit748g6QH1AAGLNebw==",
    "registry": "npm",
    "packageName": "mobx",
    "cacheIntegrity": "sha512-1kBLBdSNG2bA522HQdbsTvwAwYf9hq9FWxmlhX7wTsJUAI54907J+ozfGW+LoYUo06vjit748g6QH1AAGLNebw== sha1-LYBWEP7hgB/QFcVP1UANJgGqN2g="
  },
  "registry": "npm",
  "hash": "2d805610fee1801fd015c54fd5400d2601aa3768"
}