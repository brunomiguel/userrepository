{
  "manifest": {
    "name": "@capacitor/filesystem",
    "version": "4.1.1",
    "description": "The Filesystem API provides a NodeJS-like API for working with files on the device.",
    "main": "dist/plugin.cjs.js",
    "module": "dist/esm/index.js",
    "types": "dist/esm/index.d.ts",
    "unpkg": "dist/plugin.js",
    "files": [
      "android/src/main/",
      "android/build.gradle",
      "dist/",
      "ios/Plugin/",
      "CapacitorFilesystem.podspec"
    ],
    "author": {
      "name": "Ionic",
      "email": "hi@ionicframework.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/ionic-team/capacitor-plugins"
    },
    "bugs": {
      "url": "https://github.com/ionic-team/capacitor-plugins/issues"
    },
    "keywords": [
      "capacitor",
      "plugin",
      "native"
    ],
    "scripts": {
      "verify": "npm run verify:ios && npm run verify:android && npm run verify:web",
      "verify:ios": "cd ios && pod install && xcodebuild -workspace Plugin.xcworkspace -scheme Plugin -destination generic/platform=iOS && cd ..",
      "verify:android": "cd android && ./gradlew clean build test && cd ..",
      "verify:web": "npm run build",
      "lint": "npm run eslint && npm run prettier -- --check && npm run swiftlint -- lint",
      "fmt": "npm run eslint -- --fix && npm run prettier -- --write && npm run swiftlint -- --fix --format",
      "eslint": "eslint . --ext ts",
      "prettier": "prettier \"**/*.{css,html,ts,js,java}\"",
      "swiftlint": "node-swiftlint",
      "docgen": "docgen --api FilesystemPlugin --output-readme README.md --output-json dist/docs.json",
      "build": "npm run clean && npm run docgen && tsc && rollup -c rollup.config.js",
      "clean": "rimraf ./dist",
      "watch": "tsc --watch",
      "prepublishOnly": "npm run build",
      "publish:cocoapod": "pod trunk push ./CapacitorFilesystem.podspec --allow-warnings"
    },
    "devDependencies": {
      "@capacitor/android": "^4.0.0",
      "@capacitor/core": "^4.0.0",
      "@capacitor/docgen": "0.0.18",
      "@capacitor/ios": "^4.0.0",
      "@ionic/eslint-config": "^0.3.0",
      "@ionic/prettier-config": "~1.0.1",
      "@ionic/swiftlint-config": "^1.1.2",
      "eslint": "^7.11.0",
      "prettier": "~2.3.0",
      "prettier-plugin-java": "~1.0.2",
      "rimraf": "^3.0.0",
      "rollup": "^2.29.0",
      "swiftlint": "^1.0.1",
      "typescript": "~4.1.5"
    },
    "peerDependencies": {
      "@capacitor/core": "^4.0.0"
    },
    "prettier": "@ionic/prettier-config",
    "swiftlint": "@ionic/swiftlint-config",
    "eslintConfig": {
      "extends": "@ionic/eslint-config/recommended"
    },
    "capacitor": {
      "ios": {
        "src": "ios"
      },
      "android": {
        "src": "android"
      }
    },
    "publishConfig": {
      "access": "public"
    },
    "gitHead": "1bd77dcaf3894c798da78745599b66451ec618fc",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@capacitor-filesystem-4.1.1-8a0b4d543d131cc8a421af2d22a21f4577f09fbe-integrity/node_modules/@capacitor/filesystem/package.json",
    "readmeFilename": "README.md",
    "readme": "# @capacitor/filesystem\n\nThe Filesystem API provides a NodeJS-like API for working with files on the device.\n\n## Install\n\n```bash\nnpm install @capacitor/filesystem\nnpx cap sync\n```\n\n## iOS\n\nTo have files appear in the Files app, you must set the following keys to `YES` in `Info.plist`:\n\n- `UIFileSharingEnabled` (`Application supports iTunes file sharing`)\n- `LSSupportsOpeningDocumentsInPlace` (`Supports opening documents in place`)\n\nRead about [Configuring iOS](https://capacitorjs.com/docs/ios/configuration) for help.\n\n## Android\n\nIf using <a href=\"#directory\">`Directory.Documents`</a> or\n`Directory.ExternalStorage`, this API requires the following permissions be added to your `AndroidManifest.xml`:\n\n```xml\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n\nRead about [Setting Permissions](https://capacitorjs.com/docs/android/configuration#setting-permissions) in the [Android Guide](https://capacitorjs.com/docs/android) for more information on setting Android permissions.\n\nNote that <a href=\"#directory\">`Directory.Documents`</a> and\n`Directory.ExternalStorage` are only available on Android 9 or older.\n\n## Understanding Directories and Files\n\niOS and Android have additional layers of separation between files, such as special directories that are backed up to the Cloud, or ones for storing Documents. The Filesystem API offers a simple way to scope each operation to a specific special directory on the device.\n\nAdditionally, the Filesystem API supports using full `file://` paths, or reading `content://` files on Android. Simply leave out the `directory` param to use a full file path.\n\n## Example\n\n```typescript\nimport { Filesystem, Directory, Encoding } from '@capacitor/filesystem';\n\nconst writeSecretFile = async () => {\n  await Filesystem.writeFile({\n    path: 'secrets/text.txt',\n    data: \"This is a test\",\n    directory: Directory.Documents,\n    encoding: Encoding.UTF8,\n  });\n};\n\nconst readSecretFile = async () => {\n  const contents = await Filesystem.readFile({\n    path: 'secrets/text.txt',\n    directory: Directory.Documents,\n    encoding: Encoding.UTF8,\n  });\n\n  console.log('secrets:', contents);\n};\n\nconst deleteSecretFile = async () => {\n  await Filesystem.deleteFile({\n    path: 'secrets/text.txt',\n    directory: Directory.Documents,\n  });\n};\n\nconst readFilePath = async () => {\n  // Here's an example of reading a file with a full file path. Use this to\n  // read binary data (base64 encoded) from plugins that return File URIs, such as\n  // the Camera.\n  const contents = await Filesystem.readFile({\n    path: 'file:///var/mobile/Containers/Data/Application/22A433FD-D82D-4989-8BE6-9FC49DEA20BB/Documents/text.txt'\n  });\n\n  console.log('data:', contents);\n};\n```\n\n## API\n\n<docgen-index>\n\n* [`readFile(...)`](#readfile)\n* [`writeFile(...)`](#writefile)\n* [`appendFile(...)`](#appendfile)\n* [`deleteFile(...)`](#deletefile)\n* [`mkdir(...)`](#mkdir)\n* [`rmdir(...)`](#rmdir)\n* [`readdir(...)`](#readdir)\n* [`getUri(...)`](#geturi)\n* [`stat(...)`](#stat)\n* [`rename(...)`](#rename)\n* [`copy(...)`](#copy)\n* [`checkPermissions()`](#checkpermissions)\n* [`requestPermissions()`](#requestpermissions)\n* [Interfaces](#interfaces)\n* [Type Aliases](#type-aliases)\n* [Enums](#enums)\n\n</docgen-index>\n\n<docgen-api>\n<!--Update the source file JSDoc comments and rerun docgen to update the docs below-->\n\n### readFile(...)\n\n```typescript\nreadFile(options: ReadFileOptions) => Promise<ReadFileResult>\n```\n\nRead a file from disk\n\n| Param         | Type                                                        |\n| ------------- | ----------------------------------------------------------- |\n| **`options`** | <code><a href=\"#readfileoptions\">ReadFileOptions</a></code> |\n\n**Returns:** <code>Promise&lt;<a href=\"#readfileresult\">ReadFileResult</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### writeFile(...)\n\n```typescript\nwriteFile(options: WriteFileOptions) => Promise<WriteFileResult>\n```\n\nWrite a file to disk in the specified location on device\n\n| Param         | Type                                                          |\n| ------------- | ------------------------------------------------------------- |\n| **`options`** | <code><a href=\"#writefileoptions\">WriteFileOptions</a></code> |\n\n**Returns:** <code>Promise&lt;<a href=\"#writefileresult\">WriteFileResult</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### appendFile(...)\n\n```typescript\nappendFile(options: AppendFileOptions) => Promise<void>\n```\n\nAppend to a file on disk in the specified location on device\n\n| Param         | Type                                                            |\n| ------------- | --------------------------------------------------------------- |\n| **`options`** | <code><a href=\"#appendfileoptions\">AppendFileOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### deleteFile(...)\n\n```typescript\ndeleteFile(options: DeleteFileOptions) => Promise<void>\n```\n\nDelete a file from disk\n\n| Param         | Type                                                            |\n| ------------- | --------------------------------------------------------------- |\n| **`options`** | <code><a href=\"#deletefileoptions\">DeleteFileOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### mkdir(...)\n\n```typescript\nmkdir(options: MkdirOptions) => Promise<void>\n```\n\nCreate a directory.\n\n| Param         | Type                                                  |\n| ------------- | ----------------------------------------------------- |\n| **`options`** | <code><a href=\"#mkdiroptions\">MkdirOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### rmdir(...)\n\n```typescript\nrmdir(options: RmdirOptions) => Promise<void>\n```\n\nRemove a directory\n\n| Param         | Type                                                  |\n| ------------- | ----------------------------------------------------- |\n| **`options`** | <code><a href=\"#rmdiroptions\">RmdirOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### readdir(...)\n\n```typescript\nreaddir(options: ReaddirOptions) => Promise<ReaddirResult>\n```\n\nReturn a list of files from the directory (not recursive)\n\n| Param         | Type                                                      |\n| ------------- | --------------------------------------------------------- |\n| **`options`** | <code><a href=\"#readdiroptions\">ReaddirOptions</a></code> |\n\n**Returns:** <code>Promise&lt;<a href=\"#readdirresult\">ReaddirResult</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### getUri(...)\n\n```typescript\ngetUri(options: GetUriOptions) => Promise<GetUriResult>\n```\n\nReturn full File URI for a path and directory\n\n| Param         | Type                                                    |\n| ------------- | ------------------------------------------------------- |\n| **`options`** | <code><a href=\"#geturioptions\">GetUriOptions</a></code> |\n\n**Returns:** <code>Promise&lt;<a href=\"#geturiresult\">GetUriResult</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### stat(...)\n\n```typescript\nstat(options: StatOptions) => Promise<StatResult>\n```\n\nReturn data about a file\n\n| Param         | Type                                                |\n| ------------- | --------------------------------------------------- |\n| **`options`** | <code><a href=\"#statoptions\">StatOptions</a></code> |\n\n**Returns:** <code>Promise&lt;<a href=\"#statresult\">StatResult</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### rename(...)\n\n```typescript\nrename(options: RenameOptions) => Promise<void>\n```\n\nRename a file or directory\n\n| Param         | Type                                                |\n| ------------- | --------------------------------------------------- |\n| **`options`** | <code><a href=\"#copyoptions\">CopyOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### copy(...)\n\n```typescript\ncopy(options: CopyOptions) => Promise<CopyResult>\n```\n\nCopy a file or directory\n\n| Param         | Type                                                |\n| ------------- | --------------------------------------------------- |\n| **`options`** | <code><a href=\"#copyoptions\">CopyOptions</a></code> |\n\n**Returns:** <code>Promise&lt;<a href=\"#copyresult\">CopyResult</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### checkPermissions()\n\n```typescript\ncheckPermissions() => Promise<PermissionStatus>\n```\n\nCheck read/write permissions.\nRequired on Android, only when using <a href=\"#directory\">`Directory.Documents`</a> or\n`Directory.ExternalStorage`.\n\n**Returns:** <code>Promise&lt;<a href=\"#permissionstatus\">PermissionStatus</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### requestPermissions()\n\n```typescript\nrequestPermissions() => Promise<PermissionStatus>\n```\n\nRequest read/write permissions.\nRequired on Android, only when using <a href=\"#directory\">`Directory.Documents`</a> or\n`Directory.ExternalStorage`.\n\n**Returns:** <code>Promise&lt;<a href=\"#permissionstatus\">PermissionStatus</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### Interfaces\n\n\n#### ReadFileResult\n\n| Prop       | Type                | Description                                                 | Since |\n| ---------- | ------------------- | ----------------------------------------------------------- | ----- |\n| **`data`** | <code>string</code> | The string representation of the data contained in the file | 1.0.0 |\n\n\n#### ReadFileOptions\n\n| Prop            | Type                                            | Description                                                                                                                                                                 | Since |\n| --------------- | ----------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- |\n| **`path`**      | <code>string</code>                             | The path of the file to read                                                                                                                                                | 1.0.0 |\n| **`directory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> to read the file from                                                                                                              | 1.0.0 |\n| **`encoding`**  | <code><a href=\"#encoding\">Encoding</a></code>   | The encoding to read the file in, if not provided, data is read as binary and returned as base64 encoded. Pass <a href=\"#encoding\">Encoding.UTF8</a> to read data as string | 1.0.0 |\n\n\n#### WriteFileResult\n\n| Prop      | Type                | Description                             | Since |\n| --------- | ------------------- | --------------------------------------- | ----- |\n| **`uri`** | <code>string</code> | The uri where the file was written into | 1.0.0 |\n\n\n#### WriteFileOptions\n\n| Prop            | Type                                            | Description                                                                                                                                               | Default            | Since |\n| --------------- | ----------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------ | ----- |\n| **`path`**      | <code>string</code>                             | The path of the file to write                                                                                                                             |                    | 1.0.0 |\n| **`data`**      | <code>string</code>                             | The data to write                                                                                                                                         |                    | 1.0.0 |\n| **`directory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> to store the file in                                                                                             |                    | 1.0.0 |\n| **`encoding`**  | <code><a href=\"#encoding\">Encoding</a></code>   | The encoding to write the file in. If not provided, data is written as base64 encoded. Pass <a href=\"#encoding\">Encoding.UTF8</a> to write data as string |                    | 1.0.0 |\n| **`recursive`** | <code>boolean</code>                            | Whether to create any missing parent directories.                                                                                                         | <code>false</code> | 1.0.0 |\n\n\n#### AppendFileOptions\n\n| Prop            | Type                                            | Description                                                                                                                                               | Since |\n| --------------- | ----------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- |\n| **`path`**      | <code>string</code>                             | The path of the file to append                                                                                                                            | 1.0.0 |\n| **`data`**      | <code>string</code>                             | The data to write                                                                                                                                         | 1.0.0 |\n| **`directory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> to store the file in                                                                                             | 1.0.0 |\n| **`encoding`**  | <code><a href=\"#encoding\">Encoding</a></code>   | The encoding to write the file in. If not provided, data is written as base64 encoded. Pass <a href=\"#encoding\">Encoding.UTF8</a> to write data as string | 1.0.0 |\n\n\n#### DeleteFileOptions\n\n| Prop            | Type                                            | Description                                                      | Since |\n| --------------- | ----------------------------------------------- | ---------------------------------------------------------------- | ----- |\n| **`path`**      | <code>string</code>                             | The path of the file to delete                                   | 1.0.0 |\n| **`directory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> to delete the file from | 1.0.0 |\n\n\n#### MkdirOptions\n\n| Prop            | Type                                            | Description                                                           | Default            | Since |\n| --------------- | ----------------------------------------------- | --------------------------------------------------------------------- | ------------------ | ----- |\n| **`path`**      | <code>string</code>                             | The path of the new directory                                         |                    | 1.0.0 |\n| **`directory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> to make the new directory in |                    | 1.0.0 |\n| **`recursive`** | <code>boolean</code>                            | Whether to create any missing parent directories as well.             | <code>false</code> | 1.0.0 |\n\n\n#### RmdirOptions\n\n| Prop            | Type                                            | Description                                                           | Default            | Since |\n| --------------- | ----------------------------------------------- | --------------------------------------------------------------------- | ------------------ | ----- |\n| **`path`**      | <code>string</code>                             | The path of the directory to remove                                   |                    | 1.0.0 |\n| **`directory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> to remove the directory from |                    | 1.0.0 |\n| **`recursive`** | <code>boolean</code>                            | Whether to recursively remove the contents of the directory           | <code>false</code> | 1.0.0 |\n\n\n#### ReaddirResult\n\n| Prop        | Type                    | Description                                        | Since |\n| ----------- | ----------------------- | -------------------------------------------------- | ----- |\n| **`files`** | <code>FileInfo[]</code> | List of files and directories inside the directory | 1.0.0 |\n\n\n#### FileInfo\n\n| Prop        | Type                               | Description                                                                          | Since |\n| ----------- | ---------------------------------- | ------------------------------------------------------------------------------------ | ----- |\n| **`name`**  | <code>string</code>                | Name of the file or directory.                                                       |       |\n| **`type`**  | <code>'directory' \\| 'file'</code> | Type of the file.                                                                    | 4.0.0 |\n| **`size`**  | <code>number</code>                | Size of the file in bytes.                                                           | 4.0.0 |\n| **`ctime`** | <code>number</code>                | Time of creation in milliseconds. It's not available on Android 7 and older devices. | 4.0.0 |\n| **`mtime`** | <code>number</code>                | Time of last modification in milliseconds.                                           | 4.0.0 |\n| **`uri`**   | <code>string</code>                | The uri of the file.                                                                 | 4.0.0 |\n\n\n#### ReaddirOptions\n\n| Prop            | Type                                            | Description                                                 | Since |\n| --------------- | ----------------------------------------------- | ----------------------------------------------------------- | ----- |\n| **`path`**      | <code>string</code>                             | The path of the directory to read                           | 1.0.0 |\n| **`directory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> to list files from | 1.0.0 |\n\n\n#### GetUriResult\n\n| Prop      | Type                | Description         | Since |\n| --------- | ------------------- | ------------------- | ----- |\n| **`uri`** | <code>string</code> | The uri of the file | 1.0.0 |\n\n\n#### GetUriOptions\n\n| Prop            | Type                                            | Description                                                    | Since |\n| --------------- | ----------------------------------------------- | -------------------------------------------------------------- | ----- |\n| **`path`**      | <code>string</code>                             | The path of the file to get the URI for                        | 1.0.0 |\n| **`directory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> to get the file under | 1.0.0 |\n\n\n#### StatResult\n\n| Prop        | Type                               | Description                                                                          | Since |\n| ----------- | ---------------------------------- | ------------------------------------------------------------------------------------ | ----- |\n| **`type`**  | <code>'directory' \\| 'file'</code> | Type of the file.                                                                    | 1.0.0 |\n| **`size`**  | <code>number</code>                | Size of the file in bytes.                                                           | 1.0.0 |\n| **`ctime`** | <code>number</code>                | Time of creation in milliseconds. It's not available on Android 7 and older devices. | 1.0.0 |\n| **`mtime`** | <code>number</code>                | Time of last modification in milliseconds.                                           | 1.0.0 |\n| **`uri`**   | <code>string</code>                | The uri of the file                                                                  | 1.0.0 |\n\n\n#### StatOptions\n\n| Prop            | Type                                            | Description                                                    | Since |\n| --------------- | ----------------------------------------------- | -------------------------------------------------------------- | ----- |\n| **`path`**      | <code>string</code>                             | The path of the file to get data about                         | 1.0.0 |\n| **`directory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> to get the file under | 1.0.0 |\n\n\n#### CopyOptions\n\n| Prop              | Type                                            | Description                                                                                                                                                  | Since |\n| ----------------- | ----------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----- |\n| **`from`**        | <code>string</code>                             | The existing file or directory                                                                                                                               | 1.0.0 |\n| **`to`**          | <code>string</code>                             | The destination file or directory                                                                                                                            | 1.0.0 |\n| **`directory`**   | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> containing the existing file or directory                                                                           | 1.0.0 |\n| **`toDirectory`** | <code><a href=\"#directory\">Directory</a></code> | The <a href=\"#directory\">`Directory`</a> containing the destination file or directory. If not supplied will use the 'directory' parameter as the destination | 1.0.0 |\n\n\n#### CopyResult\n\n| Prop      | Type                | Description                            | Since |\n| --------- | ------------------- | -------------------------------------- | ----- |\n| **`uri`** | <code>string</code> | The uri where the file was copied into | 4.0.0 |\n\n\n#### PermissionStatus\n\n| Prop                | Type                                                        |\n| ------------------- | ----------------------------------------------------------- |\n| **`publicStorage`** | <code><a href=\"#permissionstate\">PermissionState</a></code> |\n\n\n### Type Aliases\n\n\n#### RenameOptions\n\n<code><a href=\"#copyoptions\">CopyOptions</a></code>\n\n\n#### PermissionState\n\n<code>'prompt' | 'prompt-with-rationale' | 'granted' | 'denied'</code>\n\n\n### Enums\n\n\n#### Directory\n\n| Members               | Value                           | Description                                                                                                                                                                                                                                                                                                                                                                                                                                       | Since |\n| --------------------- | ------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- |\n| **`Documents`**       | <code>'DOCUMENTS'</code>        | The Documents directory On iOS it's the app's documents directory. Use this directory to store user-generated content. On Android it's the Public Documents folder, so it's accessible from other apps. It's not accesible on Android 10 unless the app enables legacy External Storage by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag in the `AndroidManifest.xml`. It's not accesible on Android 11 or newer. | 1.0.0 |\n| **`Data`**            | <code>'DATA'</code>             | The Data directory On iOS it will use the Documents directory. On Android it's the directory holding application files. Files will be deleted when the application is uninstalled.                                                                                                                                                                                                                                                                | 1.0.0 |\n| **`Library`**         | <code>'LIBRARY'</code>          | The Library directory On iOS it will use the Library directory. On Android it's the directory holding application files. Files will be deleted when the application is uninstalled.                                                                                                                                                                                                                                                               | 1.1.0 |\n| **`Cache`**           | <code>'CACHE'</code>            | The Cache directory Can be deleted in cases of low memory, so use this directory to write app-specific files that your app can re-create easily.                                                                                                                                                                                                                                                                                                  | 1.0.0 |\n| **`External`**        | <code>'EXTERNAL'</code>         | The external directory On iOS it will use the Documents directory On Android it's the directory on the primary shared/external storage device where the application can place persistent files it owns. These files are internal to the applications, and not typically visible to the user as media. Files will be deleted when the application is uninstalled.                                                                                  | 1.0.0 |\n| **`ExternalStorage`** | <code>'EXTERNAL_STORAGE'</code> | The external storage directory On iOS it will use the Documents directory On Android it's the primary shared/external storage directory. It's not accesible on Android 10 unless the app enables legacy External Storage by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag in the `AndroidManifest.xml`. It's not accesible on Android 11 or newer.                                                                | 1.0.0 |\n\n\n#### Encoding\n\n| Members     | Value                | Description                                                                                                                              | Since |\n| ----------- | -------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- | ----- |\n| **`UTF8`**  | <code>'utf8'</code>  | Eight-bit UCS Transformation Format                                                                                                      | 1.0.0 |\n| **`ASCII`** | <code>'ascii'</code> | Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the Unicode character set This encoding is only supported on Android. | 1.0.0 |\n| **`UTF16`** | <code>'utf16'</code> | Sixteen-bit UCS Transformation Format, byte order identified by an optional byte-order mark This encoding is only supported on Android.  | 1.0.0 |\n\n</docgen-api>\n",
    "licenseText": "Copyright 2020-present Ionic\nhttps://ionic.io\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@capacitor/filesystem/-/filesystem-4.1.1.tgz#8a0b4d543d131cc8a421af2d22a21f4577f09fbe",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@capacitor/filesystem/-/filesystem-4.1.1.tgz",
    "hash": "8a0b4d543d131cc8a421af2d22a21f4577f09fbe",
    "integrity": "sha512-qpXIR4kxW2age91EiDFOh5KpZ5SUFs1rgWmNrO60wo+AT3Ok0Dzfol2aLSqvNAenDGUilA44ThJPeE+ArRPVzg==",
    "registry": "npm",
    "packageName": "@capacitor/filesystem",
    "cacheIntegrity": "sha512-qpXIR4kxW2age91EiDFOh5KpZ5SUFs1rgWmNrO60wo+AT3Ok0Dzfol2aLSqvNAenDGUilA44ThJPeE+ArRPVzg== sha1-igtNVD0THMikIa8tIqIfRXfwn74="
  },
  "registry": "npm",
  "hash": "8a0b4d543d131cc8a421af2d22a21f4577f09fbe"
}