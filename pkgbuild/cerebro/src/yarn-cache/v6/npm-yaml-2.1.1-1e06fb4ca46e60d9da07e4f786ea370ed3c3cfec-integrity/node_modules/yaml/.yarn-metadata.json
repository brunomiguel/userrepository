{
  "manifest": {
    "name": "yaml",
    "version": "2.1.1",
    "license": "ISC",
    "author": {
      "name": "Eemeli Aro",
      "email": "eemeli@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/eemeli/yaml.git"
    },
    "description": "JavaScript parser and stringifier for YAML",
    "keywords": [
      "YAML",
      "parser",
      "stringifier"
    ],
    "homepage": "https://eemeli.org/yaml/",
    "files": [
      "browser/",
      "dist/",
      "util.d.ts",
      "util.js"
    ],
    "type": "commonjs",
    "main": "./dist/index.js",
    "browser": {
      "./dist/index.js": "./browser/index.js",
      "./dist/util.js": "./browser/dist/util.js",
      "./util.js": "./browser/dist/util.js"
    },
    "exports": {
      ".": {
        "node": "./dist/index.js",
        "default": "./browser/index.js"
      },
      "./package.json": "./package.json",
      "./util": {
        "node": "./dist/util.js",
        "default": "./browser/dist/util.js"
      }
    },
    "scripts": {
      "build": "npm run build:node && npm run build:browser",
      "build:browser": "rollup -c config/rollup.browser-config.js",
      "build:node": "rollup -c config/rollup.node-config.js",
      "clean": "git clean -fdxe node_modules",
      "lint": "eslint src/",
      "prettier": "prettier --write .",
      "prestart": "npm run build:node",
      "start": "node -i -e 'YAML=require(\"./dist/index.js\")'",
      "test": "jest --config config/jest.config.js",
      "test:all": "npm test && npm run test:types && npm run test:dist && npm run test:dist:types",
      "test:browsers": "cd playground && npm test",
      "test:dist": "npm run build:node && jest --config config/jest.config.js",
      "test:dist:types": "tsc --allowJs --moduleResolution node --noEmit --target es5 dist/index.js",
      "test:types": "tsc --noEmit",
      "docs:install": "cd docs-slate && bundle install",
      "docs:deploy": "cd docs-slate && ./deploy.sh",
      "docs": "cd docs-slate && bundle exec middleman server",
      "preversion": "npm test && npm run build",
      "prepublishOnly": "npm run clean && npm test && npm run build"
    },
    "browserslist": "defaults, not ie 11",
    "prettier": {
      "arrowParens": "avoid",
      "semi": false,
      "singleQuote": true,
      "trailingComma": "none"
    },
    "devDependencies": {
      "@babel/core": "^7.12.10",
      "@babel/plugin-proposal-class-properties": "^7.12.1",
      "@babel/plugin-proposal-nullish-coalescing-operator": "^7.12.1",
      "@babel/plugin-transform-typescript": "^7.12.17",
      "@babel/preset-env": "^7.12.11",
      "@rollup/plugin-babel": "^5.2.3",
      "@rollup/plugin-replace": "^4.0.0",
      "@rollup/plugin-typescript": "^8.1.1",
      "@types/jest": "^27.0.1",
      "@types/node": "^12.20.47",
      "@typescript-eslint/eslint-plugin": "^5.3.1",
      "@typescript-eslint/parser": "^5.3.1",
      "babel-jest": "^28.1.0",
      "cross-env": "^7.0.3",
      "eslint": "^8.2.0",
      "eslint-config-prettier": "^8.1.0",
      "fast-check": "^2.12.0",
      "jest": "^28.1.0",
      "jest-ts-webcompat-resolver": "^1.0.0",
      "prettier": "^2.2.1",
      "rollup": "^2.38.2",
      "tslib": "^2.1.0",
      "typescript": "^4.3.5"
    },
    "engines": {
      "node": ">= 14"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-yaml-2.1.1-1e06fb4ca46e60d9da07e4f786ea370ed3c3cfec-integrity/node_modules/yaml/package.json",
    "readmeFilename": "README.md",
    "readme": "# YAML <a href=\"https://www.npmjs.com/package/yaml\"><img align=\"right\" src=\"https://badge.fury.io/js/yaml.svg\" title=\"npm package\" /></a>\n\n`yaml` is a definitive library for [YAML](http://yaml.org/), the human friendly data serialization standard.\nThis library:\n\n- Supports both YAML 1.1 and YAML 1.2 and all common data schemas,\n- Passes all of the [yaml-test-suite](https://github.com/yaml/yaml-test-suite) tests,\n- Can accept any string as input without throwing, parsing as much YAML out of it as it can, and\n- Supports parsing, modifying, and writing YAML comments and blank lines.\n\nThe library is released under the ISC open source license, and the code is [available on GitHub](https://github.com/eemeli/yaml/).\nIt has no external dependencies and runs on Node.js as well as modern browsers.\n\nFor the purposes of versioning, any changes that break any of the documented endpoints or APIs will be considered semver-major breaking changes.\nUndocumented library internals may change between minor versions, and previous APIs may be deprecated (but not removed).\n\nFor more information, see the project's documentation site: [**eemeli.org/yaml**](https://eemeli.org/yaml/)\n\nTo install:\n\n```sh\nnpm install yaml\n```\n\n**Note:** These docs are for `yaml@2`. For v1, see the [v1.10.0 tag](https://github.com/eemeli/yaml/tree/v1.10.0) for the source and [eemeli.org/yaml/v1](https://eemeli.org/yaml/v1/) for the documentation.\n\n## API Overview\n\nThe API provided by `yaml` has three layers, depending on how deep you need to go: [Parse & Stringify](https://eemeli.org/yaml/#parse-amp-stringify), [Documents](https://eemeli.org/yaml/#documents), and the underlying [Lexer/Parser/Composer](https://eemeli.org/yaml/#parsing-yaml).\nThe first has the simplest API and \"just works\", the second gets you all the bells and whistles supported by the library along with a decent [AST](https://eemeli.org/yaml/#content-nodes), and the third lets you get progressively closer to YAML source, if that's your thing.\n\n```js\nimport { parse, stringify } from 'yaml'\n// or\nimport YAML from 'yaml'\n// or\nconst YAML = require('yaml')\n```\n\n### Parse & Stringify\n\n- [`parse(str, reviver?, options?): value`](https://eemeli.org/yaml/#yaml-parse)\n- [`stringify(value, replacer?, options?): string`](https://eemeli.org/yaml/#yaml-stringify)\n\n### Documents\n\n- [`Document`](https://eemeli.org/yaml/#documents)\n  - [`constructor(value, replacer?, options?)`](https://eemeli.org/yaml/#creating-documents)\n  - [`#anchors`](https://eemeli.org/yaml/#working-with-anchors)\n  - [`#contents`](https://eemeli.org/yaml/#content-nodes)\n  - [`#directives`](https://eemeli.org/yaml/#stream-directives)\n  - [`#errors`](https://eemeli.org/yaml/#errors)\n  - [`#warnings`](https://eemeli.org/yaml/#errors)\n- [`isDocument(foo): boolean`](https://eemeli.org/yaml/#identifying-nodes)\n- [`parseAllDocuments(str, options?): Document[]`](https://eemeli.org/yaml/#parsing-documents)\n- [`parseDocument(str, options?): Document`](https://eemeli.org/yaml/#parsing-documents)\n\n### Content Nodes\n\n- [`isAlias(foo): boolean`](https://eemeli.org/yaml/#identifying-nodes)\n- [`isCollection(foo): boolean`](https://eemeli.org/yaml/#identifying-nodes)\n- [`isMap(foo): boolean`](https://eemeli.org/yaml/#identifying-nodes)\n- [`isNode(foo): boolean`](https://eemeli.org/yaml/#identifying-nodes)\n- [`isPair(foo): boolean`](https://eemeli.org/yaml/#identifying-nodes)\n- [`isScalar(foo): boolean`](https://eemeli.org/yaml/#identifying-nodes)\n- [`isSeq(foo): boolean`](https://eemeli.org/yaml/#identifying-nodes)\n- [`new Scalar(value)`](https://eemeli.org/yaml/#scalar-values)\n- [`new YAMLMap()`](https://eemeli.org/yaml/#collections)\n- [`new YAMLSeq()`](https://eemeli.org/yaml/#collections)\n- [`doc.createAlias(node, name?): Alias`](https://eemeli.org/yaml/#working-with-anchors)\n- [`doc.createNode(value, options?): Node`](https://eemeli.org/yaml/#creating-nodes)\n- [`doc.createPair(key, value): Pair`](https://eemeli.org/yaml/#creating-nodes)\n- [`visit(node, visitor)`](https://eemeli.org/yaml/#modifying-nodes)\n\n### Parsing YAML\n\n- [`new Lexer().lex(src)`](https://eemeli.org/yaml/#lexer)\n- [`new Parser(onNewLine?).parse(src)`](https://eemeli.org/yaml/#parser)\n- [`new Composer(options?).compose(tokens)`](https://eemeli.org/yaml/#composer)\n\n## YAML.parse\n\n```yaml\n# file.yml\nYAML:\n  - A human-readable data serialization language\n  - https://en.wikipedia.org/wiki/YAML\nyaml:\n  - A complete JavaScript implementation\n  - https://www.npmjs.com/package/yaml\n```\n\n```js\nimport fs from 'fs'\nimport YAML from 'yaml'\n\nYAML.parse('3.14159')\n// 3.14159\n\nYAML.parse('[ true, false, maybe, null ]\\n')\n// [ true, false, 'maybe', null ]\n\nconst file = fs.readFileSync('./file.yml', 'utf8')\nYAML.parse(file)\n// { YAML:\n//   [ 'A human-readable data serialization language',\n//     'https://en.wikipedia.org/wiki/YAML' ],\n//   yaml:\n//   [ 'A complete JavaScript implementation',\n//     'https://www.npmjs.com/package/yaml' ] }\n```\n\n## YAML.stringify\n\n```js\nimport YAML from 'yaml'\n\nYAML.stringify(3.14159)\n// '3.14159\\n'\n\nYAML.stringify([true, false, 'maybe', null])\n// `- true\n// - false\n// - maybe\n// - null\n// `\n\nYAML.stringify({ number: 3, plain: 'string', block: 'two\\nlines\\n' })\n// `number: 3\n// plain: string\n// block: |\n//   two\n//   lines\n// `\n```\n\n---\n\nBrowser testing provided by:\n\n<a href=\"https://www.browserstack.com/open-source\">\n<img width=200 src=\"https://eemeli.org/yaml/images/browserstack.svg\" />\n</a>\n",
    "licenseText": "Copyright Eemeli Aro <eemeli@gmail.com>\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/yaml/-/yaml-2.1.1.tgz#1e06fb4ca46e60d9da07e4f786ea370ed3c3cfec",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/yaml/-/yaml-2.1.1.tgz",
    "hash": "1e06fb4ca46e60d9da07e4f786ea370ed3c3cfec",
    "integrity": "sha512-o96x3OPo8GjWeSLF+wOAbrPfhFOGY0W00GNaxCDv+9hkcDJEnev1yh8S7pgHF0ik6zc8sQLuL8hjHjJULZp8bw==",
    "registry": "npm",
    "packageName": "yaml",
    "cacheIntegrity": "sha512-o96x3OPo8GjWeSLF+wOAbrPfhFOGY0W00GNaxCDv+9hkcDJEnev1yh8S7pgHF0ik6zc8sQLuL8hjHjJULZp8bw== sha1-Hgb7TKRuYNnaB+T3huo3DtPDz+w="
  },
  "registry": "npm",
  "hash": "1e06fb4ca46e60d9da07e4f786ea370ed3c3cfec"
}