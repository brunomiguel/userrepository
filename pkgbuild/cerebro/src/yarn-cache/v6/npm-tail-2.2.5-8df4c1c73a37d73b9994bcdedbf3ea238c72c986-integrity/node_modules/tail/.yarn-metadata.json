{
  "manifest": {
    "author": {
      "name": "Luca Grulla",
      "url": "https://www.lucagrulla.com"
    },
    "contributors": [
      {
        "name": "Luca Grulla"
      },
      {
        "name": "Tom Hall"
      }
    ],
    "name": "tail",
    "description": "tail a file in node",
    "keywords": [
      "tail",
      "file",
      "logs"
    ],
    "version": "2.2.5",
    "homepage": "https://www.lucagrulla.com/node-tail",
    "repository": {
      "type": "git",
      "url": "git://github.com/lucagrulla/node-tail.git"
    },
    "main": "lib/tail",
    "engines": {
      "node": ">= 6.0.0"
    },
    "scripts": {
      "build": "rm -f ./lib/** && cp src/tail.js ./lib/",
      "prepare": "npm run build",
      "prepublishOnly": "npm run test",
      "test": "mocha",
      "coverage": "nyc npm run test"
    },
    "license": "MIT",
    "devDependencies": {
      "chai": "4.x",
      "mocha": "10.x",
      "nyc": "^15.1.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-tail-2.2.5-8df4c1c73a37d73b9994bcdedbf3ea238c72c986-integrity/node_modules/tail/package.json",
    "readmeFilename": "README.md",
    "readme": "# Tail\n\nThe **zero** dependency Node.js module for tailing a file\n\n[![NPM](https://nodei.co/npm/tail.png?downloads=true&downloadRank=true)](https://nodei.co/npm/tail.png?downloads=true&downloadRank=true)\n\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](https://github.com/lucagrulla/node-tail/blob/master/LICENSE)\n[![npm](https://img.shields.io/npm/v/tail.svg?style=plastic)](https://www.npmjs.com/package/tail)\n![npm](https://img.shields.io/npm/dm/tail.svg)\n\nMade with ❤️ by [Luca Grulla](https://www.lucagrulla.com) \n\n1. TOC\n{:toc}\n\n## Installation\n\n```bash\nnpm install tail\n```\n\n## Use\n\n```javascript\nTail = require('tail').Tail;\n\ntail = new Tail(\"fileToTail\");\n\ntail.on(\"line\", function(data) {\n  console.log(data);\n});\n\ntail.on(\"error\", function(error) {\n  console.log('ERROR: ', error);\n});\n```\n\nIf you want to stop tail:\n\n```javascript\ntail.unwatch()\n```\n\nTo start watching again:\n\n```javascript\ntail.watch()\n```\n\n## Configuration\n\nThe only mandatory parameter is the path to the file to tail.\n\n```javascript\nvar fileToTail = \"/path/to/fileToTail.txt\";\nnew Tail(fileToTail)\n```\n\nIf the file is **missing or invalid** ```Tail``` constructor will throw an Exception and won't initialize.\n\n```javascript\ntry {\n  new Tail('missingFile.txt')\n} catch (ex) {\n  console.log(ex)\n}\n```\n\nOptional parameters can be passed via a hash:\n\n```javascript\nvar options= {separator: /[\\r]{0,1}\\n/, fromBeginning: false, fsWatchOptions: {}, follow: true, logger: console}\nnew Tail(fileToTail, options)\n```\n\n### Constructor parameters\n\n* `separator`:  the line separator token (default: `/[\\r]{0,1}\\n/` to handle linux/mac (9+)/windows). Pass `null` for is binary files with no line separator.\n* `fsWatchOptions`: the full set of options that can be passed to `fs.watch` as per node documentation (default: {}).\n* `fromBeginning`:  tail from the beginning of the file (default: `false`). If `fromBeginning` is true `nLines` will be ignored.\n* `follow`: simulate `tail -F` option. In the case the file is moved/renamed/logrotated, if set to `true`  will start tailing again after a 1 second delay; if set to `false` it will  emit an error event (default: `true`).\n* `logger`: a logger object(default: no logger). The passed logger should follow the folliwing signature:\n  * `info([data][, ...])`\n  * `error([data][, ...])`\n* `nLines`: tail from the last n lines. (default: `undefined`). Ignored if `fromBeginning` is set to `true`. \n* `useWatchFile`: if set to `true` will force the use of `fs.watchFile` over delegating to the library the choice between `fs.watch` and `fs.watchFile` (default: `false`).\n* `encoding`: the file encoding (default:`utf-8`).\n* `flushAtEOF`: set to `true` to force flush of content when end of file is reached. Useful when there's no separator character at the end of the file (default: `false`).\n\n## Emitted events\n\n`Tail` emits two events:\n\n* line\n\n```javascript\ntail.on('line', (data) => {\n  console.log(data)  \n})\n```\n\n* error\n\n```javascript\ntail.on('error', (err) => {\n  console.log(err)  \n})\n```\nThe error emitted is either the underline exception or a descriptive string.\n\n## How to contribute\nNode Tail code repo is [here](https://github.com/lucagrulla/node-tail/)\nTail is written in ES6. Pull Requests are welcome.\n\n## History\n\nTail was born as part of a data firehose. Read more about that project [here](https://www.lucagrulla.com/posts/building-a-firehose-with-nodejs/).\nTail originally was written in [CoffeeScript](https://coffeescript.org/). Since December 2020 it's pure ES6.\n\n## License\n\nMIT. Please see [License](https://github.com/lucagrulla/node-tail/blob/master/LICENSE) file for more details.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2011 2012 2013 Forward\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/tail/-/tail-2.2.5.tgz#8df4c1c73a37d73b9994bcdedbf3ea238c72c986",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/tail/-/tail-2.2.5.tgz",
    "hash": "8df4c1c73a37d73b9994bcdedbf3ea238c72c986",
    "integrity": "sha512-vsP7EaAEOr9H8qRfXMEiHvd+57XnAu9qxZw+4OsSGzHG5WYOA8wrOAaUCR3E0iE6Vxng1h34hgCyluyXc8ltng==",
    "registry": "npm",
    "packageName": "tail",
    "cacheIntegrity": "sha512-vsP7EaAEOr9H8qRfXMEiHvd+57XnAu9qxZw+4OsSGzHG5WYOA8wrOAaUCR3E0iE6Vxng1h34hgCyluyXc8ltng== sha1-jfTBxzo31zuZlLze2/PqI4xyyYY="
  },
  "registry": "npm",
  "hash": "8df4c1c73a37d73b9994bcdedbf3ea238c72c986"
}