{
  "manifest": {
    "name": "is-file-esm",
    "version": "1.0.0",
    "description": "Determines whether a Node file is a Module (`import`) or a Script (`require`)",
    "main": "index.js",
    "scripts": {
      "test": "tap -R classic --100",
      "ci": "npm test"
    },
    "keywords": [
      "esm",
      "cjs",
      "package.json",
      "module",
      "ecmascript modules",
      "native modules",
      "native ecmascript modules"
    ],
    "author": {
      "name": "David Mark Clements",
      "url": "@davidmarkclem"
    },
    "license": "MIT",
    "engineStrict": true,
    "engine": {
      "node": ">= 12.4.0"
    },
    "devDependencies": {
      "nonsynchronous": "^1.2.0",
      "standard": "^14.3.4",
      "tap": "^14.10.8"
    },
    "dependencies": {
      "read-pkg-up": "^7.0.1"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/davidmarkclements/is-file-esm.git"
    },
    "bugs": {
      "url": "https://github.com/davidmarkclements/is-file-esm/issues"
    },
    "homepage": "https://github.com/davidmarkclements/is-file-esm#readme",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-is-file-esm-1.0.0-987086b0f5a5318179e9d30f4f2f8d37321e1b5f-integrity/node_modules/is-file-esm/package.json",
    "readmeFilename": "readme.md",
    "readme": "# is-file-esm\n\n> Determines whether a Node file is a Module (`import`) or a Script (`require`)\n\n## Algorithm\n\nDetermining the module system of a file comes from three inputs, the `type` field \nof the closest `package.json` to that file, the file extension (`.js`, `.mjs` or `.cjs`)\nand the lesser know `--input-type` command-line flag. The latter only applies to \ndyamic input (via STDIN, `--eval` or `--print` flags) so is not considered with this library.\n\nSo to determine whether a file is an esm file (e.g. native EcmaScript modules) or not,\nwe use the following procedure:\n\n```\nread package.json for \"type\" field,\n  if type is \"module\"\n    if answer.mjs -> module \n    if answer.js -> module\n    if answer.cjs -> script\n  if type is \"commonjs\"\n    if answer.mjs -> module   \n    if answer.js -> script\n    if answer.cjs -> script\n  if type is not set\n    if answer.mjs -> module\n    if answer.js -> script\n    if answer.cjs -> script\n```\n\n## API\n\nThe `is-file-esm` module provides synchronous, awaitable (promise-based) and callback based APIs. \n\nIn each case the Result object has the following shape: \n\n```js\n{\n  esm: Boolean, // true if file is a Module, false if it is a Script\n  type: String,  // the determined package.json type, may be undefined, 'module', or 'commonjs'\n  extType: String, // the file extension type, may be 'c', 'm' or 'j'\n  path: String,  // the input path\n  pkgPath: String // the path to the package.json from which the type was determined\n}\n```\n\n### Awaitable (promise-based)\n\n#### `await isFileEsm(path) => Result`\n\n```js\n  import isFileEsm from 'is-file-esm'\n  const { esm, path } = await isFileEsm('/path/to/file.js')\n  if (esm) console.log(`File ${path} is a Module`)\n  else console.log(`File ${path} is a Script`)\n```\n\n### Callback-style\n\n#### `isFileEsm(path, cb(err, Result))`\n\n```js\n  const isFileEsm = require('is-file-esm')\n  isFileEsm('/path/to/file.js', (err,  result) => {\n    if (err) {\n      console.error(err)\n      return\n    }\n    if (result.esm) console.log(`File ${result.path} is a Module`)\n    else console.log(`File ${result.path} is a Script`)\n  })\n```\n\n### Synchronous\n\n#### `isFileEsm.sync(path) => Result`\n\n```js\n  import isFileEsm from 'is-file-esm'\n  const { esm, path } = isFileEsm.sync('/path/to/file.js')\n  if (esm) console.log(`File ${path} is a Module`)\n  else console.log(`File ${path} is a Script`)\n```\n\n### Test\n\n```sh\nnpm test\n```\n\n```\ntest/index.js ..................................... 213/213\ntotal ............................................. 213/213\n\n  213 passing (927.584ms)\n\n  ok\n----------|----------|----------|----------|----------|-------------------|\nFile      |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |\n----------|----------|----------|----------|----------|-------------------|\nAll files |      100 |      100 |      100 |      100 |                   |\n index.js |      100 |      100 |      100 |      100 |                   |\n----------|----------|----------|----------|----------|-------------------|\n```\n\n### License\n\nMIT",
    "licenseText": "MIT License Copyright (c) 2020 David Mark Clements\n\nPermission is hereby granted,\nfree of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice\n(including the next paragraph) shall be included in all copies or substantial\nportions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO\nEVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/is-file-esm/-/is-file-esm-1.0.0.tgz#987086b0f5a5318179e9d30f4f2f8d37321e1b5f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/is-file-esm/-/is-file-esm-1.0.0.tgz",
    "hash": "987086b0f5a5318179e9d30f4f2f8d37321e1b5f",
    "integrity": "sha512-rZlaNKb4Mr8WlRu2A9XdeoKgnO5aA53XdPHgCKVyCrQ/rWi89RET1+bq37Ru46obaQXeiX4vmFIm1vks41hoSA==",
    "registry": "npm",
    "packageName": "is-file-esm",
    "cacheIntegrity": "sha512-rZlaNKb4Mr8WlRu2A9XdeoKgnO5aA53XdPHgCKVyCrQ/rWi89RET1+bq37Ru46obaQXeiX4vmFIm1vks41hoSA== sha1-mHCGsPWlMYF56dMPTy+NNzIeG18="
  },
  "registry": "npm",
  "hash": "987086b0f5a5318179e9d30f4f2f8d37321e1b5f"
}