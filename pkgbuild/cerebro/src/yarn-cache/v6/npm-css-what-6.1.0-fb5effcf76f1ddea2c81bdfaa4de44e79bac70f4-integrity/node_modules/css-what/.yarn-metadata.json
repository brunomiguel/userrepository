{
  "manifest": {
    "author": {
      "name": "Felix Böhm",
      "email": "me@feedic.com",
      "url": "http://feedic.com"
    },
    "name": "css-what",
    "description": "a CSS selector parser",
    "version": "6.1.0",
    "funding": {
      "url": "https://github.com/sponsors/fb55"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/fb55/css-what"
    },
    "main": "lib/commonjs/index.js",
    "module": "lib/es/index.js",
    "types": "lib/es/index.d.ts",
    "sideEffects": false,
    "files": [
      "lib/**/*"
    ],
    "scripts": {
      "test": "npm run test:jest && npm run lint",
      "test:jest": "jest",
      "lint": "npm run lint:es && npm run lint:prettier",
      "lint:es": "eslint src",
      "lint:prettier": "npm run prettier -- --check",
      "format": "npm run format:es && npm run format:prettier",
      "format:es": "npm run lint:es -- --fix",
      "format:prettier": "npm run prettier -- --write",
      "prettier": "prettier '**/*.{ts,md,json,yml}'",
      "build": "tsc && tsc -p tsconfig.es.json",
      "prepare": "npm run build"
    },
    "devDependencies": {
      "@types/jest": "^27.4.1",
      "@types/node": "^17.0.23",
      "@typescript-eslint/eslint-plugin": "^5.17.0",
      "@typescript-eslint/parser": "^5.17.0",
      "eslint": "^8.12.0",
      "eslint-config-prettier": "^8.5.0",
      "eslint-plugin-node": "^11.1.0",
      "jest": "^27.5.1",
      "prettier": "^2.6.1",
      "ts-jest": "^27.1.4",
      "typescript": "^4.6.3"
    },
    "engines": {
      "node": ">= 6"
    },
    "license": "BSD-2-Clause",
    "jest": {
      "preset": "ts-jest",
      "roots": [
        "src"
      ]
    },
    "prettier": {
      "tabWidth": 4
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-css-what-6.1.0-fb5effcf76f1ddea2c81bdfaa4de44e79bac70f4-integrity/node_modules/css-what/package.json",
    "readmeFilename": "readme.md",
    "readme": "# css-what\n\n[![Build Status](https://img.shields.io/github/workflow/status/fb55/css-what/Node.js%20CI/master)](https://github.com/fb55/css-what/actions/workflows/nodejs-test.yml)\n[![Coverage](https://img.shields.io/coveralls/github/fb55/css-what/master)](https://coveralls.io/github/fb55/css-what?branch=master)\n\nA CSS selector parser.\n\n## Example\n\n```js\nimport * as CSSwhat from \"css-what\";\n\nCSSwhat.parse(\"foo[bar]:baz\")\n\n~> [\n    [\n        { type: \"tag\", name: \"foo\" },\n        {\n            type: \"attribute\",\n            name: \"bar\",\n            action: \"exists\",\n            value: \"\",\n            ignoreCase: null\n        },\n        { type: \"pseudo\", name: \"baz\", data: null }\n    ]\n]\n```\n\n## API\n\n**`CSSwhat.parse(selector)` - Parses `selector`.**\n\nThe function returns a two-dimensional array. The first array represents selectors separated by commas (eg. `sub1, sub2`), the second contains the relevant tokens for that selector. Possible token types are:\n\n| name                | properties                              | example       | output                                                                                   |\n| ------------------- | --------------------------------------- | ------------- | ---------------------------------------------------------------------------------------- |\n| `tag`               | `name`                                  | `div`         | `{ type: 'tag', name: 'div' }`                                                           |\n| `universal`         | -                                       | `*`           | `{ type: 'universal' }`                                                                  |\n| `pseudo`            | `name`, `data`                          | `:name(data)` | `{ type: 'pseudo', name: 'name', data: 'data' }`                                         |\n| `pseudo`            | `name`, `data`                          | `:name`       | `{ type: 'pseudo', name: 'name', data: null }`                                           |\n| `pseudo-element`    | `name`                                  | `::name`      | `{ type: 'pseudo-element', name: 'name' }`                                               |\n| `attribute`         | `name`, `action`, `value`, `ignoreCase` | `[attr]`      | `{ type: 'attribute', name: 'attr', action: 'exists', value: '', ignoreCase: false }`    |\n| `attribute`         | `name`, `action`, `value`, `ignoreCase` | `[attr=val]`  | `{ type: 'attribute', name: 'attr', action: 'equals', value: 'val', ignoreCase: false }` |\n| `attribute`         | `name`, `action`, `value`, `ignoreCase` | `[attr^=val]` | `{ type: 'attribute', name: 'attr', action: 'start', value: 'val', ignoreCase: false }`  |\n| `attribute`         | `name`, `action`, `value`, `ignoreCase` | `[attr$=val]` | `{ type: 'attribute', name: 'attr', action: 'end', value: 'val', ignoreCase: false }`    |\n| `child`             | -                                       | `>`           | `{ type: 'child' }`                                                                      |\n| `parent`            | -                                       | `<`           | `{ type: 'parent' }`                                                                     |\n| `sibling`           | -                                       | `~`           | `{ type: 'sibling' }`                                                                    |\n| `adjacent`          | -                                       | `+`           | `{ type: 'adjacent' }`                                                                   |\n| `descendant`        | -                                       |               | `{ type: 'descendant' }`                                                                 |\n| `column-combinator` | -                                       | `\\|\\|`        | `{ type: 'column-combinator' }`                                                          |\n\n**`CSSwhat.stringify(selector)` - Turns `selector` back into a string.**\n\n---\n\nLicense: BSD-2-Clause\n\n## Security contact information\n\nTo report a security vulnerability, please use the [Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure.\n\n## `css-what` for enterprise\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of `css-what` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-css-what?utm_source=npm-css-what&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n",
    "licenseText": "Copyright (c) Felix Böhm\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/css-what/-/css-what-6.1.0.tgz#fb5effcf76f1ddea2c81bdfaa4de44e79bac70f4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/css-what/-/css-what-6.1.0.tgz",
    "hash": "fb5effcf76f1ddea2c81bdfaa4de44e79bac70f4",
    "integrity": "sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw==",
    "registry": "npm",
    "packageName": "css-what",
    "cacheIntegrity": "sha512-HTUrgRJ7r4dsZKU6GjmpfRK1O76h97Z8MfS1G0FozR+oF2kG6Vfe8JE6zwrkbxigziPHinCJ+gCPjA9EaBDtRw== sha1-+17/z3bx3eosgb36pN5E55uscPQ="
  },
  "registry": "npm",
  "hash": "fb5effcf76f1ddea2c81bdfaa4de44e79bac70f4"
}