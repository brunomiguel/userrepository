{
  "manifest": {
    "name": "@sentry/tracing",
    "version": "6.7.1",
    "description": "Extensions for Sentry AM",
    "repository": {
      "type": "git",
      "url": "git://github.com/getsentry/sentry-javascript.git"
    },
    "homepage": "https://github.com/getsentry/sentry-javascript/tree/master/packages/tracing",
    "author": {
      "name": "Sentry"
    },
    "license": "MIT",
    "engines": {
      "node": ">=6"
    },
    "main": "dist/index.js",
    "module": "esm/index.js",
    "types": "dist/index.d.ts",
    "publishConfig": {
      "access": "public"
    },
    "dependencies": {
      "@sentry/hub": "6.7.1",
      "@sentry/minimal": "6.7.1",
      "@sentry/types": "6.7.1",
      "@sentry/utils": "6.7.1",
      "tslib": "^1.9.3"
    },
    "devDependencies": {
      "@sentry-internal/eslint-config-sdk": "6.7.1",
      "@sentry/browser": "6.7.1",
      "@types/express": "^4.17.1",
      "@types/jsdom": "^16.2.3",
      "jest": "^24.7.1",
      "jsdom": "^16.2.2",
      "npm-run-all": "^4.1.2",
      "prettier": "1.19.0",
      "rimraf": "^2.6.3",
      "rollup": "^1.10.1",
      "rollup-plugin-commonjs": "^9.3.4",
      "rollup-plugin-license": "^0.8.1",
      "rollup-plugin-node-resolve": "^4.2.3",
      "rollup-plugin-terser": "^4.0.4",
      "rollup-plugin-typescript2": "^0.21.0",
      "typescript": "3.7.5"
    },
    "scripts": {
      "build": "run-p build:es5 build:esm build:bundle",
      "build:bundle": "rollup --config",
      "build:bundle:watch": "rollup --config --watch",
      "build:es5": "tsc -p tsconfig.build.json",
      "build:esm": "tsc -p tsconfig.esm.json",
      "build:watch": "run-p build:watch:es5 build:watch:esm",
      "build:watch:es5": "tsc -p tsconfig.build.json -w --preserveWatchOutput",
      "build:watch:esm": "tsc -p tsconfig.esm.json -w --preserveWatchOutput",
      "clean": "rimraf dist coverage build esm",
      "link:yarn": "yarn link",
      "lint": "run-s lint:prettier lint:eslint",
      "lint:prettier": "prettier --check \"{src,test}/**/*.ts\"",
      "lint:eslint": "eslint . --cache --cache-location '../../eslintcache/' --format stylish",
      "fix": "run-s fix:eslint fix:prettier",
      "fix:prettier": "prettier --write \"{src,test}/**/*.ts\"",
      "fix:eslint": "eslint . --format stylish --fix",
      "test": "jest",
      "test:watch": "jest --watch",
      "pack": "npm pack",
      "circularDepCheck": "madge --circular src/index.ts"
    },
    "volta": {
      "extends": "../../package.json"
    },
    "jest": {
      "collectCoverage": true,
      "transform": {
        "^.+\\.ts$": "ts-jest"
      },
      "moduleFileExtensions": [
        "js",
        "ts"
      ],
      "testEnvironment": "node",
      "testMatch": [
        "**/*.test.ts"
      ],
      "globals": {
        "ts-jest": {
          "tsConfig": "./tsconfig.json",
          "diagnostics": false
        }
      }
    },
    "sideEffects": [
      "./dist/index.js",
      "./esm/index.js",
      "./src/index.ts"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@sentry-tracing-6.7.1-b11f0c17a6c5dc14ef44733e5436afb686683268-integrity/node_modules/@sentry/tracing/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n  <a href=\"https://sentry.io\" target=\"_blank\" align=\"center\">\n    <img src=\"https://sentry-brand.storage.googleapis.com/sentry-logo-black.png\" width=\"280\">\n  </a>\n  <br />\n</p>\n\n# Sentry Tracing Extensions\n\n[![npm version](https://img.shields.io/npm/v/@sentry/tracing.svg)](https://www.npmjs.com/package/@sentry/tracing)\n[![npm dm](https://img.shields.io/npm/dm/@sentry/tracing.svg)](https://www.npmjs.com/package/@sentry/tracing)\n[![npm dt](https://img.shields.io/npm/dt/@sentry/tracing.svg)](https://www.npmjs.com/package/@sentry/tracing)\n[![typedoc](https://img.shields.io/badge/docs-typedoc-blue.svg)](http://getsentry.github.io/sentry-javascript/)\n\n## Links\n\n- [Official SDK Docs](https://docs.sentry.io/quickstart/)\n- [TypeDoc](http://getsentry.github.io/sentry-javascript/)\n\n## General\n\nThis package contains extensions to the `@sentry/hub` to enable Sentry AM related functionality. It also provides integrations for Browser and Node that provide a good experience out of the box.\n\n## Migrating from @sentry/apm to @sentry/tracing\n\nThe tracing integration for JavaScript SDKs has moved from\n[`@sentry/apm`](https://www.npmjs.com/package/@sentry/apm) to\n[`@sentry/tracing`](https://www.npmjs.com/package/@sentry/tracing). While the\ntwo packages are similar, some imports and APIs have changed slightly.\n\nThe old package `@sentry/apm` is deprecated in favor of `@sentry/tracing`.\nFuture support for `@sentry/apm` is limited to bug fixes only.\n\n## Migrating from @sentry/apm to @sentry/tracing\n\n### Browser (CDN bundle)\n\nIf you were using the Browser CDN bundle, switch from the old\n`bundle.apm.min.js` to the new tracing bundle:\n\n```html\n<script\n  src=\"https://browser.sentry-cdn.com/{{ packages.version('sentry.javascript.browser') }}/bundle.tracing.min.js\"\n  integrity=\"sha384-{{ packages.checksum('sentry.javascript.browser', 'bundle.tracing.min.js', 'sha384-base64') }}\"\n  crossorigin=\"anonymous\"\n></script>\n```\n\nAnd then update `Sentry.init`:\n\n```diff\n Sentry.init({\n-  integrations: [new Sentry.Integrations.Tracing()]\n+  integrations: [new Sentry.Integrations.BrowserTracing()]\n });\n```\n\n### Browser (npm package)\n\nIf you were using automatic instrumentation, update the import statement and\nupdate `Sentry.init` to use the new `BrowserTracing` integration:\n\n```diff\n import * as Sentry from \"@sentry/browser\";\n-import { Integrations } from \"@sentry/apm\";\n+import { Integrations } from \"@sentry/tracing\";\n\n Sentry.init({\n   integrations: [\n-    new Integrations.Tracing(),\n+    new Integrations.BrowserTracing(),\n   ]\n });\n```\n\nIf you were using the `beforeNavigate` option from the `Tracing` integration,\nthe API in `BrowserTracing` has changed slightly. Instead of passing in a\nlocation and returning a string representing transaction name, `beforeNavigate`\nnow accepts a transaction context and is expected to return a transaction\ncontext. You can now add extra tags or change the `op` based on different\nparameters. If you want to access the location like before, you can get it from\n`window.location`.\n\nFor example, if you had a function like so that computed a custom transaction\nname:\n\n```javascript\nimport * as Sentry from \"@sentry/browser\";\nimport { Integrations } from \"@sentry/apm\";\n\nSentry.init({\n  integrations: [\n    new Integrations.Tracing({\n      beforeNavigate: location => {\n        return getTransactionName(location);\n      },\n    }),\n  ],\n});\n```\n\nYou would now leverage the context to do the same thing:\n\n```javascript\nimport * as Sentry from \"@sentry/browser\";\nimport { Integrations } from \"@sentry/tracing\";\n\nSentry.init({\n  integrations: [\n    new Integrations.BrowserTracing({\n      beforeNavigate: context => {\n        return {\n          ...context,\n          // Can even look at context tags or other data to adjust\n          // transaction name\n          name: getTransactionName(window.location),\n        };\n      },\n    }),\n  ],\n});\n```\n\nFor the full diff:\n\n```diff\n import * as Sentry from \"@sentry/browser\";\n-import { Integrations } from \"@sentry/apm\";\n+import { Integrations } from \"@sentry/tracing\";\n\n Sentry.init({\n   integrations: [\n-    new Integrations.Tracing({\n-      beforeNavigate: (location) => {\n-        return getTransactionName(location)\n+    new Integrations.BrowserTracing({\n+      beforeNavigate: (ctx) => {\n+        return {\n+          ...ctx,\n+          name: getTransactionName(ctx.name, window.location)\n+        }\n       }\n     }),\n   ]\n });\n```\n\n### Node\n\nIf you were using the Express integration for automatic instrumentation, the\nonly necessary change is to update the import statement:\n\n```diff\n import * as Sentry from \"@sentry/node\";\n-import { Integrations } from \"@sentry/apm\";\n+import { Integrations } from \"@sentry/tracing\";\n\n Sentry.init({\n   integrations: [\n     new Integrations.Express(),\n   ]\n });\n```\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Sentry (https://sentry.io/) and individual contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@sentry/tracing/-/tracing-6.7.1.tgz#b11f0c17a6c5dc14ef44733e5436afb686683268",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@sentry/tracing/-/tracing-6.7.1.tgz",
    "hash": "b11f0c17a6c5dc14ef44733e5436afb686683268",
    "integrity": "sha512-wyS3nWNl5mzaC1qZ2AIp1hjXnfO9EERjMIJjCihs2LWBz1r3efxrHxJHs8wXlNWvrT3KLhq/7vvF5CdU82uPeQ==",
    "registry": "npm",
    "packageName": "@sentry/tracing",
    "cacheIntegrity": "sha512-wyS3nWNl5mzaC1qZ2AIp1hjXnfO9EERjMIJjCihs2LWBz1r3efxrHxJHs8wXlNWvrT3KLhq/7vvF5CdU82uPeQ== sha1-sR8MF6bF3BTvRHM+VDavtoZoMmg="
  },
  "registry": "npm",
  "hash": "b11f0c17a6c5dc14ef44733e5436afb686683268"
}