{
  "manifest": {
    "name": "eslint-rule-docs",
    "version": "1.1.235",
    "description": "Find documentation url for a given ESLint rule",
    "main": "index.js",
    "scripts": {
      "update-plugins": "./scripts/update-plugins.js",
      "test": "mocha test.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/stefanbuck/eslint-rule-docs.git"
    },
    "keywords": [
      "eslint",
      "eslint-plugin",
      "docs",
      "documenation",
      "rules",
      "rule"
    ],
    "author": {
      "name": "Stefan Buck"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/stefanbuck/eslint-rule-docs/issues"
    },
    "homepage": "https://github.com/stefanbuck/eslint-rule-docs#readme",
    "devDependencies": {
      "async": "^3.1.0",
      "find-reachable-urls": "^1.1.1",
      "got": "^9.6.0",
      "mocha": "^6.2.1",
      "sort-keys": "^4.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-eslint-rule-docs-1.1.235-be6ef1fc3525f17b3c859ae2997fedadc89bfb9b-integrity/node_modules/eslint-rule-docs/package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-rule-docs \n[![Actions Status](https://github.com/stefanbuck/eslint-rule-docs/workflows/Cron/badge.svg)](https://github.com/stefanbuck/eslint-rule-docs/actions) [![NPM](https://badgen.net/npm/v/eslint-rule-docs)](https://npmjs.com/package/eslint-rule-docs) \n\n> Find documentation url for a given ESLint rule. Updated daily!\n\n## Install\n\n```bash\n$ npm install eslint-rule-docs\n```\n\n## Usage\n\n```js\nconst getRuleUrl = require('eslint-rule-docs');\n\n// Find url for core rules\ngetRuleUrl('no-undef');\n// => { exactMatch: true, url: 'https://eslint.org/docs/rules/no-undef' }\n\n// Find url for known plugins\ngetRuleUrl('react/sort-prop-types');\n// => { exactMatch: true, url: 'https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-prop-types.md' }\n\n// If the plugin has no documentation, return repository url \ngetRuleUrl('flowtype/semi');\n// => { exactMatch: false, url: 'https://github.com/gajus/eslint-plugin-flowtype' }\n\n// If the plugin is unknown, returns an empty object\ngetRuleUrl('unknown-foo/bar');\n// => {}\n```\n\n## License\n\nCopyright (c) 2018â€“present [Stefan Buck](https://stefanbuck.com/). Licensed under the MIT license.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-rule-docs/-/eslint-rule-docs-1.1.235.tgz#be6ef1fc3525f17b3c859ae2997fedadc89bfb9b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-rule-docs/-/eslint-rule-docs-1.1.235.tgz",
    "hash": "be6ef1fc3525f17b3c859ae2997fedadc89bfb9b",
    "integrity": "sha512-+TQ+x4JdTnDoFEXXb3fDvfGOwnyNV7duH8fXWTPD1ieaBmB8omj7Gw/pMBBu4uI2uJCCU8APDaQJzWuXnTsH4A==",
    "registry": "npm",
    "packageName": "eslint-rule-docs",
    "cacheIntegrity": "sha512-+TQ+x4JdTnDoFEXXb3fDvfGOwnyNV7duH8fXWTPD1ieaBmB8omj7Gw/pMBBu4uI2uJCCU8APDaQJzWuXnTsH4A== sha1-vm7x/DUl8Xs8hZrimX/trcib+5s="
  },
  "registry": "npm",
  "hash": "be6ef1fc3525f17b3c859ae2997fedadc89bfb9b"
}