{
  "manifest": {
    "name": "polished",
    "version": "4.2.2",
    "description": "A lightweight toolset for writing styles in Javascript.",
    "license": "MIT",
    "author": {
      "name": "Brian Hough",
      "email": "hello@brianhough.co",
      "url": "https://polished.js.org"
    },
    "homepage": "https://polished.js.org/",
    "bugs": {
      "url": "https://github.com/styled-components/polished/issues"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/styled-components/polished.git"
    },
    "keywords": [
      "styled-components",
      "polished",
      "emotion",
      "glamor",
      "css-in-js",
      "inline-styles",
      "react",
      "flow",
      "typescript",
      "color manipulate",
      "color manipulation",
      "curried color manipulation",
      "color",
      "colour"
    ],
    "main": "dist/polished.cjs.js",
    "module": "dist/polished.esm.js",
    "types": "lib/index.d.ts",
    "sideEffects": false,
    "scripts": {
      "build": "yarn build:lib && yarn build:dist && yarn build:flow && yarn build:docs && yarn build:typescript",
      "prebuild:lib": "shx rm -rf lib/*",
      "build:lib": "cross-env BABEL_ENV=cjs babel --out-dir lib src --ignore test.js",
      "prebuild:umd": "shx rm -rf dist/*",
      "prebuild:dist": "shx rm -rf dist/*",
      "build:dist": "rollup -c",
      "build:docs": "yarn build:docs:site",
      "prebuild:docs:site": "shx rm -rf docs/*",
      "build:docs:site": "documentation build src/** -t docs-theme --github -o docs -f html -c ./.documentation.json",
      "postbuild:docs:site": "shx cp CNAME docs/CNAME && shx cp dist/polished.js docs/assets/",
      "build:watch": "npm-watch",
      "build:flow": "flow-copy-source -v -i '{**/test/*.js,**/*.test.js}' src lib",
      "build:typescript": "tsgen \"lib/**/*.js.flow\" --ignore \"lib/**/_*.js.flow\"",
      "test": "jest src",
      "typescript": "tsc ./typescript-test.ts --noEmit --target es6 --module es2015 --moduleResolution node --allowJs",
      "lint": "eslint src",
      "flow": "flow check && flow batch-coverage src/ --show-all --strip-root",
      "docs": "pushstate-server -d docs",
      "prepare": "yarn build && yarn typescript && husky install",
      "semantic-release": "semantic-release"
    },
    "lint-staged": {
      "src/**/*.js": [
        "prettier --write",
        "eslint --fix"
      ]
    },
    "watch": {
      "build:docs": "src/**/*.js",
      "build:lib": "src/**/*.js"
    },
    "dependencies": {
      "@babel/runtime": "^7.17.8"
    },
    "devDependencies": {
      "@babel/cli": "^7.17.6",
      "@babel/core": "^7.17.8",
      "@babel/eslint-parser": "^7.17.0",
      "@babel/plugin-transform-runtime": "^7.17.0",
      "@babel/polyfill": "^7.12.1",
      "@babel/preset-env": "^7.16.11",
      "@babel/preset-flow": "^7.16.7",
      "@rollup/plugin-babel": "^5.3.1",
      "@rollup/plugin-node-resolve": "^13.1.3",
      "@rollup/plugin-replace": "^4.0.0",
      "babel-eslint": "^10.1.0",
      "babel-jest": "^27.5.1",
      "babel-plugin-add-module-exports": "^1.0.2",
      "babel-plugin-annotate-pure-calls": "^0.4.0",
      "babel-plugin-preval": "5.1.0",
      "cross-env": "^7.0.3",
      "cz-conventional-changelog": "^3.1.0",
      "documentation": "12.3.0",
      "eslint": "^8.12.0",
      "eslint-config-airbnb-base": "^15.0.0",
      "eslint-plugin-import": "^2.25.4",
      "flow-bin": "^0.133.0",
      "flow-copy-source": "^2.0.8",
      "husky": "^7.0.4",
      "jest": "^27.5.1",
      "lint-staged": "^12.3.7",
      "npm-watch": "^0.11.0",
      "prettier": "^2.6.2",
      "pushstate-server": "^3.1.0",
      "ramda": "^0.28.0",
      "rollup": "^2.70.1",
      "rollup-plugin-sourcemaps": "^0.6.3",
      "rollup-plugin-terser": "^7.0.2",
      "semantic-release": "^19.0.2",
      "shx": "^0.3.4",
      "tsgen": "1.3.0",
      "typescript": "4.6.3",
      "validate-commit-msg": "^2.14.0"
    },
    "config": {
      "commitizen": {
        "path": "./node_modules/cz-conventional-changelog"
      }
    },
    "jest": {
      "coverageDirectory": "./coverage/",
      "collectCoverage": true,
      "testURL": "http://localhost/",
      "verbose": true,
      "testEnvironment": "jsdom"
    },
    "collective": {
      "type": "opencollective",
      "url": "https://opencollective.com/polished"
    },
    "engines": {
      "node": ">=10"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-polished-4.2.2-2529bb7c3198945373c52e34618c8fe7b1aa84d1-integrity/node_modules/polished/package.json",
    "readmeFilename": "README.md",
    "readme": "<a href=\"https://github.com/styled-components/polished\">\n  <img alt=\"polished\" src=\"https://raw.githubusercontent.com/styled-components/brand/master/polished.png\" height=\"150px\" />\n</a>\n<br />\n\nA lightweight toolset for writing styles in JavaScript. ✨\n\n![Node CI Test](https://github.com/styled-components/polished/workflows/Node%20CI%20Test/badge.svg?branch=main)\n[![codecov](https://codecov.io/gh/styled-components/polished/branch/main/graph/badge.svg)](https://codecov.io/gh/styled-components/polished)\n[![Github All Releases](https://img.shields.io/npm/dm/polished.svg)](https://npmcharts.com/compare/polished)\n\n```sh\nnpm install --save polished\n# or if you're using yarn\nyarn add polished\n```\n\nWant to write styles in JavaScript, but also want Sass-style helper functions and mixins? Need a consistent color palette throughout your app? `✨ polished` is for you!\n\n- **Make your app look great without stress**\n- **Cross framework compatible**: No matter if you're using [`styled-components`](https://github.com/styled-components/styled-components), emotion, jss, aphrodite, radium, or plain inline styles, as long as you're writing your styles in JavaScript you can use polished!\n- **Switching from a pre-processor to styles in JS made easy**\n\n## Docs\n\n**See the full documentation at [polished.js.org](http://polished.js.org/docs)!**\n\n## Usage\n\n`✨ polished` modules are meant to be used as stand-alone imports. You should avoid importing the entire library directly:\n\n`import { clearFix, animation } from 'polished'`\n~`import * as polished from 'polished`~\n~`import polished from 'polished'`~\n\nWhen `✨ polished` modules are imported properly, tree shaking in [webpack](https://webpack.js.org/guides/tree-shaking/) and [Rollup](https://github.com/rollup/rollup#tree-shaking) can be leveraged to reduce your bundle size.\n\n## Browser Support\nAll Evergreen Browsers + IE11\n\nAs of v3.6.X we support `>0.5%, not dead, ie >= 11, not op_mini all` for all our builds.\n\n## Flow Type Definitions\n\n`✨ polished` has first-class [Flow](https://flow.org/) support with zero configuration to assist you in finding type errors while using our modules.\n\n### Ignore ✨ polished source\n\nFlow frequently updates and it is possible that the version you are running may cause you to run into errors coming from the `polished` package in your `node_modules` directory. You can add the following lines to your `.flowconfig` to ignore `polished` in those cases:\n\n```bash\n[ignore]\n.*/node_modules/polished/.*\n```\n\n## TypeScript Definitions\n\n`✨ polished` has [TypeScript](https://www.typescriptlang.org/) definitions to allow the library to be used in any TypeScript project. You will need to set `moduleResolution` to `node` in your `tsconfig.json` in order to use `✨ polished` with TypeScript.\n\n### Babel plugin\n\nYou can optionally also use [`babel-plugin-polished`](https://github.com/styled-components/babel-plugin-polished) to compile the static function calls out and remove the (already tiny) runtime performance impact of using `✨ polished`.\n\n### Object Spread Properties\n\nIn the documentation you will see examples using [object spread properties](https://github.com/tc39/proposal-object-rest-spread) (`{ ...other }`). To enable this syntax in your project add the [`transform-object-rest-spread` plugin](https://www.npmjs.com/package/babel-plugin-transform-object-rest-spread) (or the [`stage-3` preset](https://babeljs.io/docs/plugins/preset-stage-3/) to enable all stage three features) to your Babel configuration.\n\n## Why?\n\nWhen writing styles in JavaScript, many people need Sass-style helper functions to be productive. `✨ polished` brings them to you in a nice, lightweight package tailor-made for styles in JavaScript.\n\nThe main difference with Sass is that it's written in a functional style and all color functions are curried. This means you can compose them together into your own reusable helpers with a `compose` function of your choice:\n\n```JS\nimport { compose } from 'ramda' // Replace with any compose() function of your choice\nimport { lighten, desaturate } from 'polished'\n\n// Create tone() helper\nconst tone = compose(lighten(0.1), desaturate(0.1))\n```\n\n### Why not `package-xyz`?\n\nFirst of all, we didn't find another library that had everything we needed, and we don't care about installing a dozen packages separately.\n\nSpecifically most other packages that provide color functions do so in an object-oriented style, often with a fluent API that's very different from the Sass-style helpers. This means people that aren't very familiar with JavaScript might shy away from using them.\n\n`✨ polished` was made as a standard library for everybody, no matter if they know JS inside out or not.\n\n## Compatibility\n\n✨ polished is **compatible with any library that accepts styles as JS objects**. This includes, but is by far not limited to, `styled-components`, radium, aphrodite, glamor, glamorous, jss and many more!\n\nNo matter if you're using [inline styles or CSS-in-JS](http://mxstbr.blog/2016/11/inline-styles-vs-css-in-js/), polished is for you.\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/styled-components/polished/graphs/contributors\"><img src=\"https://opencollective.com/polished/contributors.svg?width=890&button=false\" /></a>\n\n\n## Backers\n\nThank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/polished#backer)]\n\n<a href=\"https://opencollective.com/polished#backers\" target=\"_blank\"><img src=\"https://opencollective.com/polished/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/polished#sponsor)]\n\n<a href=\"https://opencollective.com/polished/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/polished/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/polished/sponsor/9/avatar.svg\"></a>\n\n\n## License\n\nCopyright © 2016-2021 Brian Hough, Maximilian Stoiber, & Nik Graf. Licensed under the MIT License, see [LICENSE.md](LICENSE.md) for more information!\n\n<img src=\"https://static.scarf.sh/a.png?x-pxid=121e67af-0b5f-4132-a6e7-6ae63ebeedac\" />\n",
    "licenseText": "MIT License\n\nCopyright (c) 2016 - 2021 Brian Hough and Maximilian Stoiber\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/polished/-/polished-4.2.2.tgz#2529bb7c3198945373c52e34618c8fe7b1aa84d1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/polished/-/polished-4.2.2.tgz",
    "hash": "2529bb7c3198945373c52e34618c8fe7b1aa84d1",
    "integrity": "sha512-Sz2Lkdxz6F2Pgnpi9U5Ng/WdWAUZxmHrNPoVlm3aAemxoy2Qy7LGjQg4uf8qKelDAUW94F4np3iH2YPf2qefcQ==",
    "registry": "npm",
    "packageName": "polished",
    "cacheIntegrity": "sha512-Sz2Lkdxz6F2Pgnpi9U5Ng/WdWAUZxmHrNPoVlm3aAemxoy2Qy7LGjQg4uf8qKelDAUW94F4np3iH2YPf2qefcQ== sha1-JSm7fDGYlFNzxS40YYyP57GqhNE="
  },
  "registry": "npm",
  "hash": "2529bb7c3198945373c52e34618c8fe7b1aa84d1"
}