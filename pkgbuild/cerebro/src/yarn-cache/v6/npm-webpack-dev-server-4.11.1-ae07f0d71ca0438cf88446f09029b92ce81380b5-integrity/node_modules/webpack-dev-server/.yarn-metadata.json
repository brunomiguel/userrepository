{
  "manifest": {
    "name": "webpack-dev-server",
    "version": "4.11.1",
    "description": "Serves a webpack app. Updates the browser on changes.",
    "bin": {
      "webpack-dev-server": "bin/webpack-dev-server.js"
    },
    "main": "lib/Server.js",
    "types": "types/lib/Server.d.ts",
    "author": {
      "name": "Tobias Koppers @sokra"
    },
    "bugs": {
      "url": "https://github.com/webpack/webpack-dev-server/issues"
    },
    "homepage": "https://github.com/webpack/webpack-dev-server#readme",
    "repository": {
      "type": "git",
      "url": "https://github.com/webpack/webpack-dev-server"
    },
    "license": "MIT",
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/webpack"
    },
    "files": [
      "bin",
      "lib",
      "client",
      "types"
    ],
    "engines": {
      "node": ">= 12.13.0"
    },
    "scripts": {
      "fmt:check": "prettier \"{**/*,*}.{js,json,md,yml,css,ts}\" --list-different",
      "lint:js": "eslint . --cache",
      "lint:types": "tsc --pretty --noEmit",
      "lint": "npm-run-all -p \"fmt:**\" \"lint:**\"",
      "fmt": "npm run fmt:check -- --write",
      "fix:js": "npm run lint:js -- --fix",
      "fix": "npm-run-all fix:js fmt",
      "commitlint": "commitlint --from=master",
      "build:client": "rimraf ./client/* && babel client-src/ --out-dir client/ --ignore \"client-src/webpack.config.js\" --ignore \"client-src/modules\" && webpack --config client-src/webpack.config.js",
      "build:types": "rimraf ./types/* && tsc --declaration --emitDeclarationOnly --outDir types && node ./scripts/extend-webpack-types.js && prettier \"types/**/*.ts\" --write && prettier \"types/**/*.ts\" --write",
      "build": "npm-run-all -p \"build:**\"",
      "test:only": "jest",
      "test:coverage": "npm run test:only -- --coverage",
      "test:watch": "npm run test:coverage --watch",
      "test": "npm run test:coverage",
      "pretest": "npm run lint",
      "prepare": "husky install && npm run build",
      "release": "standard-version"
    },
    "dependencies": {
      "@types/bonjour": "^3.5.9",
      "@types/connect-history-api-fallback": "^1.3.5",
      "@types/express": "^4.17.13",
      "@types/serve-index": "^1.9.1",
      "@types/serve-static": "^1.13.10",
      "@types/sockjs": "^0.3.33",
      "@types/ws": "^8.5.1",
      "ansi-html-community": "^0.0.8",
      "bonjour-service": "^1.0.11",
      "chokidar": "^3.5.3",
      "colorette": "^2.0.10",
      "compression": "^1.7.4",
      "connect-history-api-fallback": "^2.0.0",
      "default-gateway": "^6.0.3",
      "express": "^4.17.3",
      "graceful-fs": "^4.2.6",
      "html-entities": "^2.3.2",
      "http-proxy-middleware": "^2.0.3",
      "ipaddr.js": "^2.0.1",
      "open": "^8.0.9",
      "p-retry": "^4.5.0",
      "rimraf": "^3.0.2",
      "schema-utils": "^4.0.0",
      "selfsigned": "^2.1.1",
      "serve-index": "^1.9.1",
      "sockjs": "^0.3.24",
      "spdy": "^4.0.2",
      "webpack-dev-middleware": "^5.3.1",
      "ws": "^8.4.2"
    },
    "devDependencies": {
      "@babel/cli": "^7.17.3",
      "@babel/core": "^7.17.5",
      "@babel/eslint-parser": "^7.17.0",
      "@babel/plugin-transform-object-assign": "^7.14.5",
      "@babel/plugin-transform-runtime": "^7.17.0",
      "@babel/preset-env": "^7.16.11",
      "@babel/runtime": "^7.17.2",
      "@commitlint/cli": "^16.2.3",
      "@commitlint/config-conventional": "^16.2.1",
      "@types/compression": "^1.7.2",
      "@types/default-gateway": "^3.0.1",
      "@types/node-forge": "^1.0.4",
      "@types/rimraf": "^3.0.2",
      "@types/sockjs-client": "^1.5.1",
      "@types/trusted-types": "^2.0.2",
      "acorn": "^8.2.4",
      "babel-jest": "^28.1.3",
      "babel-loader": "^8.2.4",
      "body-parser": "^1.19.2",
      "core-js": "^3.21.1",
      "css-loader": "^5.2.4",
      "eslint": "^8.12.0",
      "eslint-config-prettier": "^8.4.0",
      "eslint-config-webpack": "^1.2.5",
      "eslint-plugin-import": "^2.23.2",
      "execa": "^5.1.1",
      "file-loader": "^6.2.0",
      "html-webpack-plugin": "^4.5.2",
      "http-proxy": "^1.18.1",
      "husky": "^7.0.0",
      "jest": "^28.1.3",
      "jest-environment-jsdom": "^28.1.3",
      "klona": "^2.0.4",
      "less": "^4.1.1",
      "less-loader": "^7.3.0",
      "lint-staged": "^12.3.4",
      "marked": "^4.0.12",
      "memfs": "^3.2.2",
      "npm-run-all": "^4.1.5",
      "prettier": "^2.6.1",
      "puppeteer": "^13.4.1",
      "require-from-string": "^2.0.2",
      "sockjs-client": "^1.6.1",
      "standard-version": "^9.3.0",
      "strip-ansi-v6": "npm:strip-ansi@^6.0.0",
      "style-loader": "^2.0.0",
      "supertest": "^6.1.3",
      "tcp-port-used": "^1.0.2",
      "typescript": "^4.7.2",
      "url-loader": "^4.1.1",
      "webpack": "^5.71.0",
      "webpack-cli": "^4.7.2",
      "webpack-merge": "^5.8.0"
    },
    "peerDependencies": {
      "webpack": "^4.37.0 || ^5.0.0"
    },
    "peerDependenciesMeta": {
      "webpack-cli": {
        "optional": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-webpack-dev-server-4.11.1-ae07f0d71ca0438cf88446f09029b92ce81380b5-integrity/node_modules/webpack-dev-server/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![downloads][downloads]][npm-url]\n[![contributors][contributors]][contributors-url]\n\n# webpack-dev-server\n\nUse [webpack](https://webpack.js.org) with a development server that provides\nlive reloading. This should be used for **development only**.\n\nIt uses [webpack-dev-middleware][middleware-url] under the hood, which provides\nfast in-memory access to the webpack assets.\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [Usage](#usage)\n  - [With the CLI](#with-the-cli)\n  - [With NPM Scripts](#with-npm-scripts)\n  - [With the API](#with-the-api)\n  - [With TypeScript](#with-typescript)\n  - [The Result](#the-result)\n- [Browser Support](#browser-support)\n- [Support](#support)\n- [Contributing](#contributing)\n- [Attribution](#attribution)\n- [License](#license)\n\n## Getting Started\n\nFirst things first, install the module:\n\n```console\nnpm install webpack-dev-server --save-dev\n```\n\nor\n\n```console\nyarn add -D webpack-dev-server\n```\n\nor\n\n```console\npnpm add -D webpack-dev-server\n```\n\n_Note: While you can install and run webpack-dev-server globally, we recommend\ninstalling it locally. webpack-dev-server will always use a local installation\nover a global one._\n\n## Usage\n\nThere are two main, recommended methods of using the module:\n\n### With the CLI\n\nThe easiest way to use it is with the [webpack CLI](https://webpack.js.org/api/cli/). In the directory where your\n`webpack.config.js` is, run:\n\n```console\nnpx webpack serve\n```\n\nFollowing options are available with `webpack serve`:\n\n```\nUsage: webpack serve|server|s [entries...] [options]\n\nRun the webpack dev server.\n\nOptions:\n  -c, --config <value...>                             Provide path to a webpack configuration file e.g. ./webpack.config.js.\n  --config-name <value...>                            Name of the configuration to use.\n  -m, --merge                                         Merge two or more configurations using 'webpack-merge'.\n  --env <value...>                                    Environment passed to the configuration when it is a function.\n  --node-env <value>                                  Sets process.env.NODE_ENV to the specified value.\n  --progress [value]                                  Print compilation progress during build.\n  -j, --json [value]                                  Prints result as JSON or store it in a file.\n  -d, --devtool <value>                               Determine source maps to use.\n  --no-devtool                                        Do not generate source maps.\n  --entry <value...>                                  The entry point(s) of your application e.g. ./src/main.js.\n  --mode <value>                                      Defines the mode to pass to webpack.\n  --name <value>                                      Name of the configuration. Used when loading multiple configurations.\n  -o, --output-path <value>                           Output location of the file generated by webpack e.g. ./dist/.\n  --stats [value]                                     It instructs webpack on how to treat the stats e.g. verbose.\n  --no-stats                                          Disable stats output.\n  -t, --target <value...>                             Sets the build target e.g. node.\n  --no-target                                         Negative 'target' option.\n  --watch-options-stdin                               Stop watching when stdin stream has ended.\n  --no-watch-options-stdin                            Do not stop watching when stdin stream has ended.\n  --allowed-hosts <value...>                          Allows to enumerate the hosts from which access to the dev server are allowed (useful when you are proxying dev server, by default is 'auto').\n  --allowed-hosts-reset                               Clear all items provided in 'allowedHosts' configuration. Allows to enumerate the hosts from which access to the dev server are allowed (useful when you are proxying dev server, by default is 'auto').\n  --bonjour                                           Allows to broadcasts dev server via ZeroConf networking on start.\n  --no-bonjour                                        Disallows to broadcasts dev server via ZeroConf networking on start.\n  --no-client                                         Disables client script.\n  --client-logging <value>                            Allows to set log level in the browser.\n  --client-overlay                                    Enables a full-screen overlay in the browser when there are compiler errors or warnings.\n  --no-client-overlay                                 Disables the full-screen overlay in the browser when there are compiler errors or warnings.\n  --client-overlay-errors                             Enables a full-screen overlay in the browser when there are compiler errors.\n  --no-client-overlay-errors                          Disables the full-screen overlay in the browser when there are compiler errors.\n  --client-overlay-warnings                           Enables a full-screen overlay in the browser when there are compiler warnings.\n  --no-client-overlay-warnings                        Disables the full-screen overlay in the browser when there are compiler warnings.\n  --client-overlay-trusted-types-policy-name <value>  The name of a Trusted Types policy for the overlay. Defaults to 'webpack-dev-server#overlay'.\n  --client-progress                                   Prints compilation progress in percentage in the browser.\n  --no-client-progress                                Does not print compilation progress in percentage in the browser.\n  --client-reconnect [value]                          Tells dev-server the number of times it should try to reconnect the client.\n  --no-client-reconnect                               Tells dev-server to not to try to reconnect the client.\n  --client-web-socket-transport <value>               Allows to set custom web socket transport to communicate with dev server.\n  --client-web-socket-url <value>                     Allows to specify URL to web socket server (useful when you're proxying dev server and client script does not always know where to connect to).\n  --client-web-socket-url-hostname <value>            Tells clients connected to devServer to use the provided hostname.\n  --client-web-socket-url-pathname <value>            Tells clients connected to devServer to use the provided path to connect.\n  --client-web-socket-url-password <value>            Tells clients connected to devServer to use the provided password to authenticate.\n  --client-web-socket-url-port <value>                Tells clients connected to devServer to use the provided port.\n  --client-web-socket-url-protocol <value>            Tells clients connected to devServer to use the provided protocol.\n  --client-web-socket-url-username <value>            Tells clients connected to devServer to use the provided username to authenticate.\n  --compress                                          Enables gzip compression for everything served.\n  --no-compress                                       Disables gzip compression for everything served.\n  --history-api-fallback                              Allows to proxy requests through a specified index page (by default 'index.html'), useful for Single Page Applications that utilise the HTML5 History API.\n  --no-history-api-fallback                           Disallows to proxy requests through a specified index page.\n  --host <value>                                      Allows to specify a hostname to use.\n  --hot [value]                                       Enables Hot Module Replacement.\n  --no-hot                                            Disables Hot Module Replacement.\n  --http2                                             Allows to serve over HTTP/2 using SPDY. Deprecated, use the `server` option.\n  --no-http2                                          Does not serve over HTTP/2 using SPDY.\n  --https                                             Allows to configure the server's listening socket for TLS (by default, dev server will be served over HTTP). Deprecated, use the `server` option.\n  --no-https                                          Disallows to configure the server's listening socket for TLS (by default, dev server will be served over HTTP).\n  --https-passphrase <value>                          Passphrase for a pfx file. Deprecated, use the `server.options.passphrase` option.\n  --https-request-cert                                Request for an SSL certificate. Deprecated, use the `server.options.requestCert` option.\n  --no-https-request-cert                             Does not request for an SSL certificate.\n  --https-ca <value...>                               Path to an SSL CA certificate or content of an SSL CA certificate. Deprecated, use the `server.options.ca` option.\n  --https-ca-reset                                    Clear all items provided in 'https.ca' configuration. Path to an SSL CA certificate or content of an SSL CA certificate. Deprecated, use the `server.options.ca` option.\n  --https-cacert <value...>                           Path to an SSL CA certificate or content of an SSL CA certificate. Deprecated, use the `server.options.ca` option.\n  --https-cacert-reset                                Clear all items provided in 'https.cacert' configuration. Path to an SSL CA certificate or content of an SSL CA certificate. Deprecated, use the `server.options.ca` option.\n  --https-cert <value...>                             Path to an SSL certificate or content of an SSL certificate. Deprecated, use the `server.options.cert` option.\n  --https-cert-reset                                  Clear all items provided in 'https.cert' configuration. Path to an SSL certificate or content of an SSL certificate. Deprecated, use the `server.options.cert` option.\n  --https-crl <value...>                              Path to PEM formatted CRLs (Certificate Revocation Lists) or content of PEM formatted CRLs (Certificate Revocation Lists). Deprecated, use the `server.options.crl` option.\n  --https-crl-reset                                   Clear all items provided in 'https.crl' configuration. Path to PEM formatted CRLs (Certificate Revocation Lists) or content of PEM formatted CRLs (Certificate Revocation Lists). Deprecated, use the `server.options.crl` option.\n  --https-key <value...>                              Path to an SSL key or content of an SSL key. Deprecated, use the `server.options.key` option.\n  --https-key-reset                                   Clear all items provided in 'https.key' configuration. Path to an SSL key or content of an SSL key. Deprecated, use the `server.options.key` option.\n  --https-pfx <value...>                              Path to an SSL pfx file or content of an SSL pfx file. Deprecated, use the `server.options.pfx` option.\n  --https-pfx-reset                                   Clear all items provided in 'https.pfx' configuration. Path to an SSL pfx file or content of an SSL pfx file. Deprecated, use the `server.options.pfx` option.\n  --ipc [value]                                       Listen to a unix socket.\n  --live-reload                                       Enables reload/refresh the page(s) when file changes are detected (enabled by default).\n  --no-live-reload                                    Disables reload/refresh the page(s) when file changes are detected (enabled by default).\n  --magic-html                                        Tells dev-server whether to enable magic HTML routes (routes corresponding to your webpack output, for example '/main' for 'main.js').\n  --no-magic-html                                     Disables magic HTML routes (routes corresponding to your webpack output, for example '/main' for 'main.js').\n  --open [value...]                                   Allows to configure dev server to open the browser(s) and page(s) after server had been started (set it to true to open your default browser).\n  --no-open                                           Does not open the default browser.\n  --open-target <value...>                            Opens specified page in browser.\n  --open-app-name <value...>                          Open specified browser.\n  --open-app <value...>                               Open specified browser. Deprecated: please use '--open-app-name'.\n  --open-reset                                        Clear all items provided in 'open' configuration. Allows to configure dev server to open the browser(s) and page(s) after server had been started (set it to true to open your default browser).\n  --open-target-reset                                 Clear all items provided in 'open.target' configuration. Opens specified page in browser.\n  --open-app-name-reset                               Clear all items provided in 'open.app.name' configuration. Open specified browser.\n  --port <value>                                      Allows to specify a port to use.\n  --server-type <value>                               Allows to set server and options (by default 'http').\n  --server-options-passphrase <value>                 Passphrase for a pfx file.\n  --server-options-request-cert                       Request for an SSL certificate.\n  --no-server-options-request-cert                    Does not request for an SSL certificate.\n  --server-options-ca <value...>                      Path to an SSL CA certificate or content of an SSL CA certificate.\n  --server-options-ca-reset                           Clear all items provided in 'server.options.ca' configuration. Path to an SSL CA certificate or content of an SSL CA certificate.\n  --server-options-cacert <value...>                  Path to an SSL CA certificate or content of an SSL CA certificate. Deprecated, use the `server.options.ca` option.\n  --server-options-cacert-reset                       Clear all items provided in 'server.options.cacert' configuration. Path to an SSL CA certificate or content of an SSL CA certificate. Deprecated, use the `server.options.ca` option.\n  --server-options-cert <value...>                    Path to an SSL certificate or content of an SSL certificate.\n  --server-options-cert-reset                         Clear all items provided in 'server.options.cert' configuration. Path to an SSL certificate or content of an SSL certificate.\n  --server-options-crl <value...>                     Path to PEM formatted CRLs (Certificate Revocation Lists) or content of PEM formatted CRLs (Certificate Revocation Lists).\n  --server-options-crl-reset                          Clear all items provided in 'server.options.crl' configuration. Path to PEM formatted CRLs (Certificate Revocation Lists) or content of PEM formatted CRLs (Certificate Revocation Lists).\n  --server-options-key <value...>                     Path to an SSL key or content of an SSL key.\n  --server-options-key-reset                          Clear all items provided in 'server.options.key' configuration. Path to an SSL key or content of an SSL key.\n  --server-options-pfx <value...>                     Path to an SSL pfx file or content of an SSL pfx file.\n  --server-options-pfx-reset                          Clear all items provided in 'server.options.pfx' configuration. Path to an SSL pfx file or content of an SSL pfx file.\n  --static [value...]                                 Allows to configure options for serving static files from directory (by default 'public' directory).\n  --no-static                                         Disallows to configure options for serving static files from directory.\n  --static-directory <value...>                       Directory for static contents.\n  --static-public-path <value...>                     The static files will be available in the browser under this public path.\n  --static-serve-index                                Tells dev server to use serveIndex middleware when enabled.\n  --no-static-serve-index                             Does not tell dev server to use serveIndex middleware.\n  --static-watch                                      Watches for files in static content directory.\n  --no-static-watch                                   Does not watch for files in static content directory.\n  --static-reset                                      Clear all items provided in 'static' configuration. Allows to configure options for serving static files from directory (by default 'public' directory).\n  --static-public-path-reset                          Clear all items provided in 'static.publicPath' configuration. The static files will be available in the browser under this public path.\n  --watch-files <value...>                            Allows to configure list of globs/directories/files to watch for file changes.\n  --watch-files-reset                                 Clear all items provided in 'watchFiles' configuration. Allows to configure list of globs/directories/files to watch for file changes.\n  --web-socket-server <value>                         Deprecated: please use '--web-socket-server-type' option. Allows to set web socket server and options (by default 'ws').\n  --no-web-socket-server                              Disallows to set web socket server and options.\n  --web-socket-server-type <value>                    Allows to set web socket server and options (by default 'ws').\n\nGlobal options:\n  --color                                             Enable colors on console.\n  --no-color                                          Disable colors on console.\n  -v, --version                                       Output the version number of 'webpack', 'webpack-cli' and 'webpack-dev-server' and commands.\n  -h, --help [verbose]                                Display help for commands and options.\n\nTo see list of all supported commands and options run 'webpack --help=verbose'.\n\nWebpack documentation: https://webpack.js.org/.\nCLI documentation: https://webpack.js.org/api/cli/.\nMade with ♥ by the webpack team.\n```\n\n> **Note**\n>\n> _Detailed documentation for above options is available on this [link](https://webpack.js.org/configuration/dev-server/)._\n\n### With NPM Scripts\n\nNPM package.json scripts are a convenient and useful means to run locally installed\nbinaries without having to be concerned about their full paths. Simply define a\nscript as such:\n\n```json\n{\n  \"scripts\": {\n    \"serve\": \"webpack serve\"\n  }\n}\n```\n\nAnd run the following in your terminal/console:\n\n```console\nnpm run serve\n```\n\nNPM will automatically refer to the the binary in `node_modules` for you, and\nexecute the file or command.\n\n### With the API\n\nWhile it's recommended to run webpack-dev-server via the CLI, you may also choose to start a server via the API.\n\nSee the related [API documentation for `webpack-dev-server`](https://webpack.js.org/api/webpack-dev-server/).\n\n### With TypeScript\n\nIf you use TypeScript in the webpack config, you'll need to properly type `devServer` property in order to avoid TS errors (e.g. `'devServer' does not exist in type 'Configuration'`). For that use either:\n\n```ts\n/// <reference path=\"node_modules/webpack-dev-server/types/lib/Server.d.ts\"/>\nimport type { Configuration } from \"webpack\";\n\n// Your logic\n```\n\nOr you can import the type from `webpack-dev-server`, i.e.\n\n```ts\nimport type { Configuration as DevServerConfiguration } from \"webpack-dev-server\";\nimport type { Configuration } from \"webpack\";\n\nconst devServer: DevServerConfiguration = {};\nconst config: Configuration = { devServer };\n\n// module.exports\nexport default config;\n```\n\n### The Result\n\nEither method will start a server instance and begin listening for connections\nfrom `localhost` on port `8080`.\n\nwebpack-dev-server is configured by default to support live-reload of files as\nyou edit your assets while the server is running.\n\nSee [**the documentation**][docs-url] for more use cases and options.\n\n## Browser Support\n\nWhile `webpack-dev-server` transpiles the client (browser) scripts to an ES5\nstate, the project only officially supports the _last two versions of major\nbrowsers_. We simply don't have the resources to support every whacky\nbrowser out there.\n\nIf you find a bug with an obscure / old browser, we would actively welcome a\nPull Request to resolve the bug.\n\n## Support\n\nWe do our best to keep issues in the repository focused on bugs, features, and\nneeded modifications to the code for the module. Because of that, we ask users\nwith general support, \"how-to\", or \"why isn't this working\" questions to try one\nof the other support channels that are available.\n\nYour first-stop-shop for support for webpack-dev-server should be the excellent\n[documentation][docs-url] for the module. If you see an opportunity for improvement\nof those docs, please head over to the [webpack.js.org repo][wjo-url] and open a\npull request.\n\nFrom there, we encourage users to visit the [webpack Gitter chat][chat-url] and\ntalk to the fine folks there. If your quest for answers comes up dry in chat,\nhead over to [StackOverflow][stack-url] and do a quick search or open a new\nquestion. Remember; It's always much easier to answer questions that include your\n`webpack.config.js` and relevant files!\n\nIf you're twitter-savvy you can tweet [#webpack][hash-url] with your question\nand someone should be able to reach out and lend a hand.\n\nIf you have discovered a :bug:, have a feature suggestion, or would like to see\na modification, please feel free to create an issue on Github. _Note: The issue\ntemplate isn't optional, so please be sure not to remove it, and please fill it\nout completely._\n\n## Contributing\n\nWe welcome your contributions! Please have a read of [CONTRIBUTING.md](CONTRIBUTING.md) for more information on how to get involved.\n\n## Attribution\n\nThis project is heavily inspired by [peerigon/nof5](https://github.com/peerigon/nof5).\n\n## License\n\n#### [MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/webpack-dev-server.svg\n[npm-url]: https://npmjs.com/package/webpack-dev-server\n[node]: https://img.shields.io/node/v/webpack-dev-server.svg\n[node-url]: https://nodejs.org\n[tests]: https://github.com/webpack/webpack-dev-server/workflows/webpack-dev-server/badge.svg\n[tests-url]: https://github.com/webpack/webpack-dev-server/actions?query=workflow%3Awebpack-dev-server\n[cover]: https://codecov.io/gh/webpack/webpack-dev-server/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack/webpack-dev-server\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[docs-url]: https://webpack.js.org/configuration/dev-server/#devserver\n[hash-url]: https://twitter.com/search?q=webpack\n[middleware-url]: https://github.com/webpack/webpack-dev-middleware\n[stack-url]: https://stackoverflow.com/questions/tagged/webpack-dev-server\n[uglify-url]: https://github.com/webpack-contrib/uglifyjs-webpack-plugin\n[wjo-url]: https://github.com/webpack/webpack.js.org\n[downloads]: https://img.shields.io/npm/dm/webpack-dev-server.svg\n[contributors-url]: https://github.com/webpack/webpack-dev-server/graphs/contributors\n[contributors]: https://img.shields.io/github/contributors/webpack/webpack-dev-server.svg\n",
    "licenseText": "Copyright JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/webpack-dev-server/-/webpack-dev-server-4.11.1.tgz#ae07f0d71ca0438cf88446f09029b92ce81380b5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/webpack-dev-server/-/webpack-dev-server-4.11.1.tgz",
    "hash": "ae07f0d71ca0438cf88446f09029b92ce81380b5",
    "integrity": "sha512-lILVz9tAUy1zGFwieuaQtYiadImb5M3d+H+L1zDYalYoDl0cksAB1UNyuE5MMWJrG6zR1tXkCP2fitl7yoUJiw==",
    "registry": "npm",
    "packageName": "webpack-dev-server",
    "cacheIntegrity": "sha512-lILVz9tAUy1zGFwieuaQtYiadImb5M3d+H+L1zDYalYoDl0cksAB1UNyuE5MMWJrG6zR1tXkCP2fitl7yoUJiw== sha1-rgfw1xygQ4z4hEbwkCm5LOgTgLU="
  },
  "registry": "npm",
  "hash": "ae07f0d71ca0438cf88446f09029b92ce81380b5"
}