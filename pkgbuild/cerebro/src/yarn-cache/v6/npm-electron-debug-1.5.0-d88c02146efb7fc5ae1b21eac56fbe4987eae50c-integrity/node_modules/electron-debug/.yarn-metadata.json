{
  "manifest": {
    "name": "electron-debug",
    "version": "1.5.0",
    "description": "Adds useful debug features to your Electron app",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/electron-debug.git"
    },
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "scripts": {
      "start": "electron test.js",
      "test": "xo"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "electron",
      "debug",
      "debugging",
      "devtools",
      "app",
      "dev",
      "development"
    ],
    "dependencies": {
      "electron-is-dev": "^0.3.0",
      "electron-localshortcut": "^3.0.0"
    },
    "devDependencies": {
      "devtron": "^1.1.0",
      "electron": "^1.6.12",
      "electron-react-devtools": "^0.5.2",
      "xo": "*"
    },
    "xo": {
      "envs": [
        "node",
        "browser"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-electron-debug-1.5.0-d88c02146efb7fc5ae1b21eac56fbe4987eae50c-integrity/node_modules/electron-debug/package.json",
    "readmeFilename": "readme.md",
    "readme": "# electron-debug\n\n> Adds useful debug features to your [Electron](https://electronjs.org) app\n\nIdeas for more debug features [welcome!](https://github.com/sindresorhus/electron-debug/issues/new)\n\n\n## Features\n\n### DevTools\n\nToggle DevTools.\n\n- macOS: <kbd>Cmd</kbd> <kbd>Alt</kbd> <kbd>I</kbd> or <kbd>F12</kbd>\n- Linux: <kbd>Ctrl</kbd> <kbd>Shift</kbd> <kbd>I</kbd> or <kbd>F12</kbd>\n- Windows: <kbd>Ctrl</kbd> <kbd>Shift</kbd> <kbd>I</kbd> or <kbd>F12</kbd>\n\n### Reload\n\nForce reload the window.\n\n- macOS: <kbd>Cmd</kbd> <kbd>R</kbd> or <kbd>F5</kbd>\n- Linux: <kbd>Ctrl</kbd> <kbd>R</kbd> or <kbd>F5</kbd>\n- Windows: <kbd>Ctrl</kbd> <kbd>R</kbd> or <kbd>F5</kbd>\n\n### Element Inspector\n\nOpen DevTools and focus the Element Inspector tool.\n\n- macOS: <kbd>Cmd</kbd> <kbd>Shift</kbd> <kbd>C</kbd>\n- Linux: <kbd>Ctrl</kbd> <kbd>Shift</kbd> <kbd>C</kbd>\n- Windows: <kbd>Ctrl</kbd> <kbd>Shift</kbd> <kbd>C</kbd>\n\n### Activates DevTools extensions\n\nJust install any of these extension and they'll be activated for you:\n\n- [devtron](https://electronjs.org/devtron) - The official Electron DevTools extension\n- [electron-react-devtools](https://github.com/firejune/electron-react-devtools) - React DevTools extension for Electron\n\n\n## Install\n\n```\n$ npm install electron-debug\n```\n\n\n## Usage\n\n```js\nconst {app, BrowserWindow} = require('electron');\n\nrequire('electron-debug')({showDevTools: true});\n\nlet win;\n\napp.on('ready', () => {\n\twin = new BrowserWindow();\n});\n```\n\n\n## API\n\nOnly runs when in [development](https://github.com/sindresorhus/electron-is-dev), unless overridden by the `enabled` option. So no need to guard it for production.\n\n### electronDebug([options])\n\nInstall keyboard shortcuts and optionally activate DevTools on each created `BrowserWindow`.\n\n#### options\n\n##### enabled\n\nType: `boolean`\n\n##### showDevTools\n\nType: `boolean` `string`<br>\nDefault: `false`<br>\nValues: `'right'` `'bottom'` `'undocked'` `false` `true` *(Last dock state)*\n\nShow DevTools on each created `BrowserWindow`.\n\n### devTools([window])\n\nToggle DevTools for the specified `BrowserWindow` instance or the focused one.\n\n#### window\n\nType: `BrowserWindow`<br>\nDefault: The focused `BrowserWindow`\n\n### refresh([window])\n\nReload the specified `BrowserWindow` instance or the focused one.\n\n#### window\n\nType: `BrowserWindow`<br>\nDefault: The focused `BrowserWindow`\n\n### openDevTools([window], [showDevTools])\n\nOpen DevTools for the specified `BrowserWindow` instance or the focused one.\n\n#### window\n\nType: `BrowserWindow`<br>\nDefault: The focused `BrowserWindow`\n\n#### showDevTools\n\nType: `boolean` `string`<br>\nDefault: `false`<br>\nValues: `'right'` `'bottom'` `'undocked'` `false` `true` *(last dock state)*\n\nShow DevTools on each created `BrowserWindow`.\n\n\n## Related\n\n- [electron-store](https://github.com/sindresorhus/electron-store) - Save and load data like user preferences, app state, cache, etc\n- [electron-context-menu](https://github.com/sindresorhus/electron-context-menu) - Context menu for your Electron app\n- [electron-dl](https://github.com/sindresorhus/electron-dl) - Simplified file downloads for your Electron app\n- [electron-unhandled](https://github.com/sindresorhus/electron-unhandled) - Catch unhandled errors and promise rejections in your Electron app\n- [electron-is-dev](https://github.com/sindresorhus/electron-is-dev) - Check if Electron is running in development\n- [debug-menu](https://github.com/parro-it/debug-menu) - Chrome-like debug context-menu for Electron\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/electron-debug/-/electron-debug-1.5.0.tgz#d88c02146efb7fc5ae1b21eac56fbe4987eae50c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/electron-debug/-/electron-debug-1.5.0.tgz",
    "hash": "d88c02146efb7fc5ae1b21eac56fbe4987eae50c",
    "integrity": "sha512-23CLHQXW+gMgdlJbeW1EinPX7DpwuLtfdzSuFL0OnsqEhKGJVJufAZTyq2hc3sr+R53rr3P+mJiYoR5VzAHKJQ==",
    "registry": "npm",
    "packageName": "electron-debug",
    "cacheIntegrity": "sha512-23CLHQXW+gMgdlJbeW1EinPX7DpwuLtfdzSuFL0OnsqEhKGJVJufAZTyq2hc3sr+R53rr3P+mJiYoR5VzAHKJQ== sha1-2IwCFG77f8WuGyHqxW++SYfq5Qw="
  },
  "registry": "npm",
  "hash": "d88c02146efb7fc5ae1b21eac56fbe4987eae50c"
}