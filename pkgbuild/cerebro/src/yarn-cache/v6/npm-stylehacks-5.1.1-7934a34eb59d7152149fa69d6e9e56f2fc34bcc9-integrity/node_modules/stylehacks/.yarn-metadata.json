{
  "manifest": {
    "name": "stylehacks",
    "version": "5.1.1",
    "description": "Detect/remove browser hacks from CSS files.",
    "main": "src/index.js",
    "types": "types/index.d.ts",
    "files": [
      "LICENSE-MIT",
      "src",
      "types"
    ],
    "keywords": [
      "browsers",
      "css",
      "hack",
      "hacks",
      "optimise",
      "postcss",
      "postcss-plugin",
      "stylehacks"
    ],
    "license": "MIT",
    "homepage": "https://github.com/cssnano/cssnano",
    "author": {
      "name": "Ben Briggs",
      "email": "beneb.info@gmail.com",
      "url": "http://beneb.info"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/cssnano/cssnano.git"
    },
    "dependencies": {
      "browserslist": "^4.21.4",
      "postcss-selector-parser": "^6.0.4"
    },
    "bugs": {
      "url": "https://github.com/cssnano/cssnano/issues"
    },
    "engines": {
      "node": "^10 || ^12 || >=14.0"
    },
    "devDependencies": {
      "postcss": "^8.2.15"
    },
    "peerDependencies": {
      "postcss": "^8.2.15"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-stylehacks-5.1.1-7934a34eb59d7152149fa69d6e9e56f2fc34bcc9-integrity/node_modules/stylehacks/package.json",
    "readmeFilename": "README.md",
    "readme": "# stylehacks\n\n> Detect/remove browser hacks from CSS files.\n\n\n## Install\n\nWith [npm](https://npmjs.org/package/stylehacks) do:\n\n```\nnpm install stylehacks --save\n```\n\n\n## Example\n\nIn its default mode, stylehacks will remove hacks from your CSS file, based on\nthe browsers that you wish to support.\n\n### Input\n\n```css\nh1 {\n    _color: white;\n    color: rgba(255, 255, 255, 0.5);\n}\n```\n\n### Output\n\n```css\nh1 {\n    color: rgba(255, 255, 255, 0.5);\n}\n```\n\n\n## API\n\n### `stylehacks.detect(node)`\n\nType: `function`  \nReturns: `boolean`\n\nThis method will take any PostCSS *node*, run applicable plugins depending on\nits type, then will return a boolean depending on whether it found any of\nthe supported hacks. For example, if the `decl` node found below is passed to\nthe `detect` function, it will return `true`. But if the `rule` node is passed,\nit will return `false` instead.\n\n```css\nh1 { _color: red }\n```\n\n### `postcss([ stylehacks(opts) ])`\n\nstylehacks can also be consumed as a PostCSS plugin. See the\n[documentation](https://github.com/postcss/postcss#usage) for examples for\nyour environment.\n\n#### options\n\n##### lint\n\nType: `boolean`  \nDefault: `false`\n\nIf lint mode is enabled, stylehacks will not remove hacks from the CSS; instead,\nit will add warnings to `Result#messages`.\n\n\n## Related\n\nstylehacks works well with your existing PostCSS setup:\n\n* [stylelint] - Comprehensive & modern CSS linter, to ensure that your code\n  style rules are respected.\n\n\n## Contributing\n\nPull requests are welcome. If you add functionality, then please add unit tests\nto cover it.\n\n\n## License\n\nMIT Â© [Ben Briggs](http://beneb.info)\n\n\n[stylelint]: https://github.com/stylelint/stylelint\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/stylehacks/-/stylehacks-5.1.1.tgz#7934a34eb59d7152149fa69d6e9e56f2fc34bcc9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/stylehacks/-/stylehacks-5.1.1.tgz",
    "hash": "7934a34eb59d7152149fa69d6e9e56f2fc34bcc9",
    "integrity": "sha512-sBpcd5Hx7G6seo7b1LkpttvTz7ikD0LlH5RmdcBNb6fFR0Fl7LQwHDFr300q4cwUqi+IYrFGmsIHieMBfnN/Bw==",
    "registry": "npm",
    "packageName": "stylehacks",
    "cacheIntegrity": "sha512-sBpcd5Hx7G6seo7b1LkpttvTz7ikD0LlH5RmdcBNb6fFR0Fl7LQwHDFr300q4cwUqi+IYrFGmsIHieMBfnN/Bw== sha1-eTSjTrWdcVIUn6adbp5W8vw0vMk="
  },
  "registry": "npm",
  "hash": "7934a34eb59d7152149fa69d6e9e56f2fc34bcc9"
}