{
  "manifest": {
    "name": "eslint-plugin-n",
    "version": "15.2.3",
    "description": "Additional ESLint's rules for Node.js",
    "engines": {
      "node": ">=12.22.0"
    },
    "main": "lib/index.js",
    "files": [
      "lib"
    ],
    "peerDependencies": {
      "eslint": ">=7.0.0"
    },
    "dependencies": {
      "builtins": "^5.0.1",
      "eslint-plugin-es": "^4.1.0",
      "eslint-utils": "^3.0.0",
      "ignore": "^5.1.1",
      "is-core-module": "^2.9.0",
      "minimatch": "^3.1.2",
      "resolve": "^1.10.1",
      "semver": "^7.3.7"
    },
    "devDependencies": {
      "codecov": "^3.3.0",
      "esbuild": "^0.14.39",
      "eslint": "^8.15.0",
      "eslint-config-prettier": "^8.5.0",
      "eslint-plugin-eslint-plugin": "^4.0.1",
      "eslint-plugin-n": "file:../../../cerebro/src/yarn-cache/v6/npm-eslint-plugin-n-15.2.3-b8850b90a8c27d3d880521ad90dbf537ac0a9830-integrity/node_modules/eslint-plugin-n",
      "fast-glob": "^3.2.11",
      "globals": "^13.14.0",
      "husky": "^8.0.1",
      "import-meta-resolve": "^1.1.1",
      "lint-staged": "^12.4.1",
      "mocha": "^10.0.0",
      "nyc": "^15.1.0",
      "opener": "^1.5.1",
      "prettier": "^2.6.2",
      "punycode": "^2.1.1",
      "release-it": "^15.0.0",
      "rimraf": "^3.0.2"
    },
    "scripts": {
      "build": "node scripts/update",
      "clean": "rimraf .nyc_output coverage",
      "codecov": "nyc report --reporter text-lcov | codecov --pipe --disable=gcov -t $CODECOV_TOKEN",
      "coverage": "opener ./coverage/lcov-report/index.html",
      "lint": "eslint lib scripts tests/lib .eslintrc.js",
      "new": "node scripts/new-rule",
      "pretest": "npm run -s lint",
      "test": "nyc npm run -s test:_mocha",
      "test:ci": "nyc npm run -s test:_mocha",
      "test:_mocha": "_mocha \"tests/lib/**/*.js\" --reporter progress --timeout 4000",
      "preversion": "npm test",
      "version": "npm run -s build && eslint lib/rules --fix && git add .",
      "postversion": "git push && git push --tags",
      "watch": "npm run test:_mocha -- --watch --growl",
      "format": "prettier --loglevel warn --write \"**/*.{js,css,md}\"",
      "prepare": "husky install"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/weiran-zsd/eslint-plugin-node.git"
    },
    "keywords": [
      "eslint",
      "eslintplugin",
      "eslint-plugin",
      "node",
      "nodejs",
      "ecmascript",
      "shebang",
      "file",
      "path",
      "import",
      "require"
    ],
    "author": {
      "name": "Toru Nagashima"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/weiran-zsd/eslint-plugin-node/issues"
    },
    "homepage": "https://github.com/weiran-zsd/eslint-plugin-node#readme",
    "funding": "https://github.com/sponsors/mysticatea",
    "publishConfig": {
      "access": "public",
      "registry": "https://registry.npmjs.org/"
    },
    "release-it": {
      "github": {
        "release": true
      },
      "npm": {
        "skipChecks": true
      }
    },
    "lint-staged": {
      "*.js": "eslint --cache --fix",
      "*.{json,js}": "prettier --write --ignore-path .eslintignore"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-eslint-plugin-n-15.2.3-b8850b90a8c27d3d880521ad90dbf537ac0a9830-integrity/node_modules/eslint-plugin-n/package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-plugin-n\n\n> forked from [eslint-plugin-node](https://www.npmjs.com/package/eslint-plugin-node) v11.1.0. as the original repository seems [no longer maintained](https://github.com/mysticatea/eslint-plugin-node/issues/300).\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-n.svg)](https://www.npmjs.com/package/eslint-plugin-n) [![Downloads/month](https://img.shields.io/npm/dm/eslint-plugin-n.svg)](http://www.npmtrends.com/eslint-plugin-n) [![Build Status](https://github.com/weiran-zsd/eslint-plugin-node/workflows/CI/badge.svg)](https://github.com/weiran-zsd/eslint-plugin-node/actions) [![Coverage Status](https://codecov.io/gh/weiran-zsd/eslint-plugin-node/branch/master/graph/badge.svg)](https://codecov.io/gh/weiran-zsd/eslint-plugin-node) [![Dependency Status](https://david-dm.org/weiran-zsd/eslint-plugin-node.svg)](https://david-dm.org/weiran-zsd/eslint-plugin-node)\n\nAdditional ESLint's rules for Node.js\n\n## üíø Install & Usage\n\n```\n$ npm install --save-dev eslint eslint-plugin-n\n```\n\n-   Requires Node.js `>=12.22.0`\n-   Requires ESLint `>=7.0.0`\n\n**Note:** It recommends a use of [the \"engines\" field of package.json](https://docs.npmjs.com/files/package.json#engines). The \"engines\" field is used by `n/no-unsupported-features/*` rules.\n\n**.eslintrc.json** (An example)\n\n```jsonc\n{\n    \"extends\": [\"eslint:recommended\", \"plugin:n/recommended\"],\n    \"parserOptions\": {\n        // Only ESLint 6.2.0 and later support ES2020.\n        \"ecmaVersion\": 2020\n    },\n    \"rules\": {\n        \"n/exports-style\": [\"error\", \"module.exports\"],\n        \"n/file-extension-in-import\": [\"error\", \"always\"],\n        \"n/prefer-global/buffer\": [\"error\", \"always\"],\n        \"n/prefer-global/console\": [\"error\", \"always\"],\n        \"n/prefer-global/process\": [\"error\", \"always\"],\n        \"n/prefer-global/url-search-params\": [\"error\", \"always\"],\n        \"n/prefer-global/url\": [\"error\", \"always\"],\n        \"n/prefer-promises/dns\": \"error\",\n        \"n/prefer-promises/fs\": \"error\"\n    }\n}\n```\n\n**package.json** (An example)\n\n```json\n{\n    \"name\": \"your-module\",\n    \"version\": \"1.0.0\",\n    \"type\": \"commonjs\",\n    \"engines\": {\n        \"node\": \">=8.10.0\"\n    }\n}\n```\n\n## üìñ Rules\n\n-   ‚≠êÔ∏è - the mark of recommended rules.\n-   ‚úíÔ∏è - the mark of fixable rules.\n\n<!--RULES_TABLE_START-->\n### Possible Errors\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [n/handle-callback-err](./docs/rules/handle-callback-err.md) | require error handling in callbacks |  |\n| [n/no-callback-literal](./docs/rules/no-callback-literal.md) | ensure Node.js-style error-first callback pattern is followed |  |\n| [n/no-exports-assign](./docs/rules/no-exports-assign.md) | disallow the assignment to `exports` | ‚≠êÔ∏è |\n| [n/no-extraneous-import](./docs/rules/no-extraneous-import.md) | disallow `import` declarations which import extraneous modules | ‚≠êÔ∏è |\n| [n/no-extraneous-require](./docs/rules/no-extraneous-require.md) | disallow `require()` expressions which import extraneous modules | ‚≠êÔ∏è |\n| [n/no-missing-import](./docs/rules/no-missing-import.md) | disallow `import` declarations which import non-existence modules | ‚≠êÔ∏è |\n| [n/no-missing-require](./docs/rules/no-missing-require.md) | disallow `require()` expressions which import non-existence modules | ‚≠êÔ∏è |\n| [n/no-new-require](./docs/rules/no-new-require.md) | disallow `new` operators with calls to `require` |  |\n| [n/no-path-concat](./docs/rules/no-path-concat.md) | disallow string concatenation with `__dirname` and `__filename` |  |\n| [n/no-process-exit](./docs/rules/no-process-exit.md) | disallow the use of `process.exit()` |  |\n| [n/no-unpublished-bin](./docs/rules/no-unpublished-bin.md) | disallow `bin` files that npm ignores | ‚≠êÔ∏è |\n| [n/no-unpublished-import](./docs/rules/no-unpublished-import.md) | disallow `import` declarations which import private modules | ‚≠êÔ∏è |\n| [n/no-unpublished-require](./docs/rules/no-unpublished-require.md) | disallow `require()` expressions which import private modules | ‚≠êÔ∏è |\n| [n/no-unsupported-features/es-builtins](./docs/rules/no-unsupported-features/es-builtins.md) | disallow unsupported ECMAScript built-ins on the specified version | ‚≠êÔ∏è |\n| [n/no-unsupported-features/es-syntax](./docs/rules/no-unsupported-features/es-syntax.md) | disallow unsupported ECMAScript syntax on the specified version | ‚≠êÔ∏è |\n| [n/no-unsupported-features/node-builtins](./docs/rules/no-unsupported-features/node-builtins.md) | disallow unsupported Node.js built-in APIs on the specified version | ‚≠êÔ∏è |\n| [n/process-exit-as-throw](./docs/rules/process-exit-as-throw.md) | make `process.exit()` expressions the same code path as `throw` | ‚≠êÔ∏è |\n| [n/shebang](./docs/rules/shebang.md) | suggest correct usage of shebang | ‚≠êÔ∏è‚úíÔ∏è |\n\n### Best Practices\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [n/no-deprecated-api](./docs/rules/no-deprecated-api.md) | disallow deprecated APIs | ‚≠êÔ∏è |\n\n### Stylistic Issues\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [n/callback-return](./docs/rules/callback-return.md) | require `return` statements after callbacks |  |\n| [n/exports-style](./docs/rules/exports-style.md) | enforce either `module.exports` or `exports` | ‚úíÔ∏è |\n| [n/file-extension-in-import](./docs/rules/file-extension-in-import.md) | enforce the style of file extensions in `import` declarations | ‚úíÔ∏è |\n| [n/global-require](./docs/rules/global-require.md) | require `require()` calls to be placed at top-level module scope |  |\n| [n/no-mixed-requires](./docs/rules/no-mixed-requires.md) | disallow `require` calls to be mixed with regular variable declarations |  |\n| [n/no-process-env](./docs/rules/no-process-env.md) | disallow the use of `process.env` |  |\n| [n/no-restricted-import](./docs/rules/no-restricted-import.md) | disallow specified modules when loaded by `import` declarations |  |\n| [n/no-restricted-require](./docs/rules/no-restricted-require.md) | disallow specified modules when loaded by `require` |  |\n| [n/no-sync](./docs/rules/no-sync.md) | disallow synchronous methods |  |\n| [n/prefer-global/buffer](./docs/rules/prefer-global/buffer.md) | enforce either `Buffer` or `require(\"buffer\").Buffer` |  |\n| [n/prefer-global/console](./docs/rules/prefer-global/console.md) | enforce either `console` or `require(\"console\")` |  |\n| [n/prefer-global/process](./docs/rules/prefer-global/process.md) | enforce either `process` or `require(\"process\")` |  |\n| [n/prefer-global/text-decoder](./docs/rules/prefer-global/text-decoder.md) | enforce either `TextDecoder` or `require(\"util\").TextDecoder` |  |\n| [n/prefer-global/text-encoder](./docs/rules/prefer-global/text-encoder.md) | enforce either `TextEncoder` or `require(\"util\").TextEncoder` |  |\n| [n/prefer-global/url-search-params](./docs/rules/prefer-global/url-search-params.md) | enforce either `URLSearchParams` or `require(\"url\").URLSearchParams` |  |\n| [n/prefer-global/url](./docs/rules/prefer-global/url.md) | enforce either `URL` or `require(\"url\").URL` |  |\n| [n/prefer-promises/dns](./docs/rules/prefer-promises/dns.md) | enforce `require(\"dns\").promises` |  |\n| [n/prefer-promises/fs](./docs/rules/prefer-promises/fs.md) | enforce `require(\"fs\").promises` |  |\n\n### Deprecated rules\n\nThese rules have been deprecated in accordance with the [deprecation policy](https://eslint.org/docs/user-guide/rule-deprecation), and replaced by newer rules:\n\n| Rule ID | Replaced by |\n|:--------|:------------|\n| [n/no-hide-core-modules](./docs/rules/no-hide-core-modules.md) | (nothing) |\n| [n/no-unsupported-features](./docs/rules/no-unsupported-features.md) | [n/no-unsupported-features/es-syntax](./docs/rules/no-unsupported-features/es-syntax.md) and [n/no-unsupported-features/es-builtins](./docs/rules/no-unsupported-features/es-builtins.md) |\n\n<!--RULES_TABLE_END-->\n\n## üîß Configs\n\nThis plugin provides three configs:\n\n-   `plugin:n/recommended` considers both CommonJS and ES Modules. If [`\"type\":\"module\"` field](https://medium.com/@nodejs/announcing-a-new-experimental-modules-1be8d2d6c2ff#b023) existed in package.json then it considers files as ES Modules. Otherwise it considers files as CommonJS. In addition, it considers `*.mjs` files as ES Modules and `*.cjs` files as CommonJS.\n-   `plugin:n/recommended-module` considers all files as ES Modules.\n-   `plugin:n/recommended-script` considers all files as CommonJS.\n\nThose preset config:\n\n-   enable [no-process-exit](http://eslint.org/docs/rules/no-process-exit) rule because [the official document](https://nodejs.org/api/process.html#process_process_exit_code) does not recommend a use of `process.exit()`.\n-   enable plugin rules which are given :star: in the above table.\n-   add `{ecmaVersion: 2019}` and etc into `parserOptions`.\n-   add proper globals into `globals`.\n-   add this plugin into `plugins`.\n\n## üë´ FAQ\n\n-   Q: The `no-missing-import` / `no-missing-require` rules don't work with nested folders in SublimeLinter-eslint\n-   A: See [context.getFilename() in rule returns relative path](https://github.com/roadhump/SublimeLinter-eslint#contextgetfilename-in-rule-returns-relative-path) in the SublimeLinter-eslint FAQ.\n\n## üö• Semantic Versioning Policy\n\n`eslint-plugin-n` follows [semantic versioning](http://semver.org/) and [ESLint's Semantic Versioning Policy](https://github.com/eslint/eslint#semantic-versioning-policy).\n\n-   Patch release (intended to not break your lint build)\n    -   A bug fix in a rule that results in it reporting fewer errors.\n    -   Improvements to documentation.\n    -   Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    -   Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n-   Minor release (might break your lint build)\n    -   A bug fix in a rule that results in it reporting more errors.\n    -   A new rule is created.\n    -   A new option to an existing rule is created.\n    -   An existing rule is deprecated.\n-   Major release (likely to break your lint build)\n    -   A support for old Node version is dropped.\n    -   A support for old ESLint version is dropped.\n    -   An existing rule is changed in it reporting more errors.\n    -   An existing rule is removed.\n    -   An existing option of a rule is removed.\n    -   An existing config is updated.\n\n## üì∞ Changelog\n\n-   [GitHub Releases](https://github.com/weiran-zsd/eslint-plugin-node/releases)\n\n## ‚ù§Ô∏è Contributing\n\nWelcome contributing!\n\nPlease use GitHub's Issues/PRs.\n\n### Development Tools\n\n-   `npm test` runs tests and measures coverage.\n-   `npm run coverage` shows the coverage result of `npm test` command.\n-   `npm run clean` removes the coverage result of `npm test` command.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Toru Nagashima\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-n/-/eslint-plugin-n-15.2.3.tgz#b8850b90a8c27d3d880521ad90dbf537ac0a9830",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-n/-/eslint-plugin-n-15.2.3.tgz",
    "hash": "b8850b90a8c27d3d880521ad90dbf537ac0a9830",
    "integrity": "sha512-H+KC7U5R+3IWTeRnACm/4wlqLvS1Q7M6t7BGhn89qXDkZan8HTAEv3ouIONA0ifDwc2YzPFmyPzHuNLddNK4jw==",
    "registry": "npm",
    "packageName": "eslint-plugin-n",
    "cacheIntegrity": "sha512-H+KC7U5R+3IWTeRnACm/4wlqLvS1Q7M6t7BGhn89qXDkZan8HTAEv3ouIONA0ifDwc2YzPFmyPzHuNLddNK4jw== sha1-uIULkKjCfT2IBSGtkNv1N6wKmDA="
  },
  "registry": "npm",
  "hash": "b8850b90a8c27d3d880521ad90dbf537ac0a9830"
}