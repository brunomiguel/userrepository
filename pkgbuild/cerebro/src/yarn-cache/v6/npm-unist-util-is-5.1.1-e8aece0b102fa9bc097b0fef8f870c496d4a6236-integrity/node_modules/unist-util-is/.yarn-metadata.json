{
  "manifest": {
    "name": "unist-util-is",
    "version": "5.1.1",
    "description": "unist utility to check if a node passes a test",
    "license": "MIT",
    "keywords": [
      "unist",
      "unist-util",
      "util",
      "utility",
      "tree",
      "node",
      "is",
      "equal",
      "check",
      "test",
      "type"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/unist-util-is.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/unist-util-is/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      },
      {
        "name": "Christian Murphy",
        "email": "christian.murphy.42@gmail.com"
      },
      {
        "name": "Lucas Brandstaetter",
        "email": "lucas@brandstaetter.tech",
        "url": "https://github.com/Roang-zero1"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.d.ts",
      "index.js"
    ],
    "devDependencies": {
      "@types/lodash": "^4.0.0",
      "@types/mdast": "^3.0.0",
      "@types/tape": "^4.0.0",
      "c8": "^7.0.0",
      "fast-check": "^2.0.0",
      "lodash": "^4.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^9.0.0",
      "remark-preset-wooorm": "^8.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "tsd": "^0.14.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "unified": "^9.0.0",
      "xo": "^0.42.0"
    },
    "scripts": {
      "prepack": "npm run build && npm run format",
      "build": "rimraf \"{test/**,}*.d.ts\" && tsc && tsd && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node test/index.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node test/index.js",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-unist-util-is-5.1.1-e8aece0b102fa9bc097b0fef8f870c496d4a6236-integrity/node_modules/unist-util-is/package.json",
    "readmeFilename": "readme.md",
    "readme": "# unist-util-is\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**unist**][unist] utility to check if a node passes a test.\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install unist-util-is\n```\n\n## Use\n\n```js\nimport {is} from 'unist-util-is'\n\nconst node = {type: 'strong'}\nconst parent = {type: 'paragraph', children: [node]}\n\nfunction test(node, n) {\n  return n === 5\n}\n\nis() // => false\nis({children: []}) // => false\nis(node) // => true\nis(node, 'strong') // => true\nis(node, 'emphasis') // => false\n\nis(node, node) // => true\nis(parent, {type: 'paragraph'}) // => true\nis(parent, {type: 'strong'}) // => false\n\nis(node, test) // => false\nis(node, test, 4, parent) // => false\nis(node, test, 5, parent) // => true\n```\n\n## API\n\nThis package exports the following identifiers: `is`, `convert`.\nThere is no default export.\n\n### `is(node[, test[, index, parent[, context]]])`\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — Node to check.\n*   `test` ([`Function`][test], `string`, `Object`, or `Array.<Test>`, optional)\n    —  When nullish, checks if `node` is a [`Node`][node].\n    When `string`, works like passing `node => node.type === test`.\n    When `array`, checks if any one of the subtests pass.\n    When `object`, checks that all keys in `test` are in `node`,\n    and that they have strictly equal values\n*   `index` (`number`, optional) — [Index][] of `node` in `parent`\n*   `parent` ([`Node`][node], optional) — [Parent][] of `node`\n*   `context` (`*`, optional) — Context object to invoke `test` with\n\n###### Returns\n\n`boolean` — Whether `test` passed *and* `node` is a [`Node`][node] (object with\n`type` set to a non-empty `string`).\n\n#### `function test(node[, index, parent])`\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — Node to check\n*   `index` (`number?`) — [Index][] of `node` in `parent`\n*   `parent` ([`Node?`][node]) — [Parent][] of `node`\n\n###### Context\n\n`*` — The to `is` given `context`.\n\n###### Returns\n\n`boolean?` — Whether `node` matches.\n\n### `convert(test)`\n\nCreate a test function from `test`, that can later be called with a `node`,\n`index`, and `parent`.\nUseful if you’re going to test many nodes, for example when creating a utility\nwhere something else passes an is-compatible test.\n\nThe created function is slightly faster because it expects valid input only.\nTherefore, passing invalid input, yields unexpected results.\n\nFor example:\n\n```js\nimport u from 'unist-builder'\nimport {convert} from 'unist-util-is'\n\nvar test = convert('leaf')\n\nvar tree = u('tree', [\n  u('node', [u('leaf', '1')]),\n  u('leaf', '2'),\n  u('node', [u('leaf', '3'), u('leaf', '4')]),\n  u('leaf', '5')\n])\n\nvar leafs = tree.children.filter((child, index) => test(child, index, tree))\n\nconsole.log(leafs)\n```\n\nYields:\n\n```js\n[{type: 'leaf', value: '2'}, {type: 'leaf', value: '5'}]\n```\n\n## Related\n\n*   [`unist-util-find-after`](https://github.com/syntax-tree/unist-util-find-after)\n    — Find a node after another node\n*   [`unist-util-find-before`](https://github.com/syntax-tree/unist-util-find-before)\n    — Find a node before another node\n*   [`unist-util-find-all-after`](https://github.com/syntax-tree/unist-util-find-all-after)\n    — Find all nodes after another node\n*   [`unist-util-find-all-before`](https://github.com/syntax-tree/unist-util-find-all-before)\n    — Find all nodes before another node\n*   [`unist-util-find-all-between`](https://github.com/mrzmmr/unist-util-find-all-between)\n    — Find all nodes between two nodes\n*   [`unist-util-filter`](https://github.com/syntax-tree/unist-util-filter)\n    — Create a new tree with nodes that pass a check\n*   [`unist-util-remove`](https://github.com/syntax-tree/unist-util-remove)\n    — Remove nodes from tree\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/syntax-tree/unist-util-is/workflows/main/badge.svg\n\n[build]: https://github.com/syntax-tree/unist-util-is/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/unist-util-is.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/unist-util-is\n\n[downloads-badge]: https://img.shields.io/npm/dm/unist-util-is.svg\n\n[downloads]: https://www.npmjs.com/package/unist-util-is\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/unist-util-is.svg\n\n[size]: https://bundlephobia.com/result?p=unist-util-is\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/syntax-tree/unist/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/syntax-tree/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/HEAD/code-of-conduct.md\n\n[unist]: https://github.com/syntax-tree/unist\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[parent]: https://github.com/syntax-tree/unist#parent-1\n\n[index]: https://github.com/syntax-tree/unist#index\n\n[test]: #function-testnode-index-parent\n",
    "licenseText": "(The MIT license)\n\nCopyright (c) 2015 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/unist-util-is/-/unist-util-is-5.1.1.tgz#e8aece0b102fa9bc097b0fef8f870c496d4a6236",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/unist-util-is/-/unist-util-is-5.1.1.tgz",
    "hash": "e8aece0b102fa9bc097b0fef8f870c496d4a6236",
    "integrity": "sha512-F5CZ68eYzuSvJjGhCLPL3cYx45IxkqXSetCcRgUXtbcm50X2L9oOWQlfUfDdAf+6Pd27YDblBfdtmsThXmwpbQ==",
    "registry": "npm",
    "packageName": "unist-util-is",
    "cacheIntegrity": "sha512-F5CZ68eYzuSvJjGhCLPL3cYx45IxkqXSetCcRgUXtbcm50X2L9oOWQlfUfDdAf+6Pd27YDblBfdtmsThXmwpbQ== sha1-6K7OCxAvqbwJew/vj4cMSW1KYjY="
  },
  "registry": "npm",
  "hash": "e8aece0b102fa9bc097b0fef8f870c496d4a6236"
}