{
  "manifest": {
    "name": "native-request",
    "version": "1.0.8",
    "author": {
      "name": "Samuel Marchese",
      "email": "contact@zaral.fr",
      "url": "https://zaral.fr"
    },
    "bugs": {
      "url": "https://github.com/ZaralDev/native-request/issues"
    },
    "description": "A simple package with no dependencies for native requests using callback",
    "main": "index.js",
    "keywords": [
      "node-request",
      "native-request",
      "request",
      "node-fetch",
      "fetch",
      "request",
      "http",
      "GET",
      "get request",
      "http.get",
      "follow redirects",
      "https",
      "http-https",
      "simple request",
      "simple get"
    ],
    "license": "MIT",
    "devDependencies": {
      "mocha": "^6.2.3"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/ZaralDev/native-request.git"
    },
    "scripts": {
      "test": "node ./node_modules/mocha/bin/mocha"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-native-request-1.0.8-8f66bf606e0f7ea27c0e5995eb2f5d03e33ae6fb-integrity/node_modules/native-request/package.json",
    "readmeFilename": "README.md",
    "readme": "# Native Request\n\n\nNative Request is a simple module that makes you create native node.js requests supports https.\n\n  - supports HTTPS\n  - 0 dependencies\n  - use callbacks\n\n\n\n\n## Installation\n\nInstall the dependencies and devDependencies and start the server.\n\n```code\nnpm install native-request\n```\n\n## Usage\n\n### GET request\n -  request.get(path, headers, callback)\n -  request.get(path, callback)\n\n\n\n```js\nlet request = require('native-request');\nrequest.get('https://github.com', function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\nTo add custom **headers** just do like this:\n```js\nlet request = require('native-request');\n\nlet headers = {\n    \"content-type\": \"plain/text\"\n}\nrequest.get('https://github.com', headers, function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\n### POST request\n -  request.post(path, callback)\n -  request.post(path, data, callback)\n -  request.post(path, data, headers, callback)\n\n \nTo send an empty **post**:\n```js\nlet request = require('native-request');\nrequest.post('https://github.com', function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\n\nWith headers and data:\n\n```js\nlet request = require('native-request');\n\nlet data = {\n    \"example\": true,\n}\nlet headers = {\n    \"content-type\": \"plain/text\"\n}\nrequest.post('https://github.com', data, headers, function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\n\n### Custom request\n -  *.request(path, method, callback)\n -  *.request(path, method,data, callback)\n -  *.request(path, method, data, headers, callback)\nTo send a **PUT** request:\n```js\nlet request = require('native-request');\nrequest.request('https://github.com', 'PUT', function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\nWith headers and data:\n```js\nlet request = require('native-request');\n\nlet data = {\n    \"example\": true,\n}\nlet headers = {\n    \"content-type\": \"plain/text\"\n}\nrequest.request('https://github.com','PUT', data, headers, function(err, data, status, headers) {\n    if (err) {\n        throw err;\n    }\n    console.log(status); //200\n    console.log(data); // page content\n    console.log(headers); // response headers\n});\n```\n### License\nMIT. Copyright (c) Samuel Marchese.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/native-request/-/native-request-1.0.8.tgz#8f66bf606e0f7ea27c0e5995eb2f5d03e33ae6fb",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/native-request/-/native-request-1.0.8.tgz",
    "hash": "8f66bf606e0f7ea27c0e5995eb2f5d03e33ae6fb",
    "integrity": "sha512-vU2JojJVelUGp6jRcLwToPoWGxSx23z/0iX+I77J3Ht17rf2INGjrhOoQnjVo60nQd8wVsgzKkPfRXBiVdD2ag==",
    "registry": "npm",
    "packageName": "native-request",
    "cacheIntegrity": "sha512-vU2JojJVelUGp6jRcLwToPoWGxSx23z/0iX+I77J3Ht17rf2INGjrhOoQnjVo60nQd8wVsgzKkPfRXBiVdD2ag== sha1-j2a/YG4PfqJ8DlmV6y9dA+M65vs="
  },
  "registry": "npm",
  "hash": "8f66bf606e0f7ea27c0e5995eb2f5d03e33ae6fb"
}