{
  "manifest": {
    "name": "postcss-variables",
    "version": "1.1.1",
    "description": "PostCSS plugin that converts variables into CSS",
    "main": "index.js",
    "keywords": [
      "postcss",
      "css",
      "postcss-plugin",
      "variables",
      "vars"
    ],
    "scripts": {
      "test": "mocha ./tests.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/nathanhood/postcss-variables.git"
    },
    "author": {
      "name": "Nathan Hood"
    },
    "license": "MIT",
    "dependencies": {
      "postcss": "^6.0.9"
    },
    "devDependencies": {
      "chai": "^4.1.1",
      "istanbul": "^0.4.5",
      "mocha": "^3.5.0",
      "postcss-js-mixins": "^2.5.2",
      "postcss-wee-syntax": "3.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-postcss-variables-1.1.1-f86856acd0583b0c493767f22f7258509d37f9e0-integrity/node_modules/postcss-variables/package.json",
    "readmeFilename": "README.md",
    "readme": "# PostCSS Variables\n\n[![Build Status](https://travis-ci.org/nathanhood/postcss-variables.svg?branch=master)](https://travis-ci.org/nathanhood/postcss-variables)\n[![codecov](https://codecov.io/gh/nathanhood/postcss-variables/branch/master/graph/badge.svg)](https://codecov.io/gh/nathanhood/postcss-variables)\n[![npm version](https://badge.fury.io/js/postcss-variables.svg)](https://badge.fury.io/js/postcss-variables)\n\n<img align=\"right\" width=\"135\" height=\"95\" src=\"http://postcss.github.io/postcss/logo-leftp.png\" title=\"Philosopherâ€™s stone, logo of PostCSS\">\n\nConverts variables into CSS.\n\n```scss\n/* before (nesting requires postcss-nested) */\n\n$dir: assets/icons;\n$color: blue;\n\n.block {\n\tbackground: url('$(dir)/foo.png');\n\t&__elem {\n\t\t$color: green;\n\t\tcolor: $color;\n\t}\n\t&__elem2 {\n\t\tcolor: $color;\n\t}\n}\n\n/* after */\n\n.block {\n\tbackground: url('assets/icons/foo.png');\n\t&__elem {\n\t\tcolor: green;\n\t}\n\t&__elem2 {\n\t\tcolor: blue;\n\t}\n}\n```\n\n\n## Usage\n\nAdd PostCSS Variables to your build tool:\n\n```bash\nnpm install postcss-variables --save-dev\n```\n\n#### Node\n\n```js\nrequire('postcss-variables')({ /* options */ }).process(YOUR_CSS);\n```\n\n#### PostCSS\n\nAdd [PostCSS](https://github.com/postcss/postcss) to your build tool:\n\n```bash\nnpm install postcss --save-dev\n```\n\nLoad PostCSS Variables as a PostCSS plugin:\n\n```js\npostcss([\n\trequire('postcss-variables')({ /* options */ })\n]);\n```\n\n## Options\n\n### `globals`\n\nType: `Object`  \nDefault: `{}`\n\nSpecifies your own global variables.\n\n```js\nrequire('postcss-variables')({\n\tglobals: {\n\t\tsiteWidth: '960px',\n\t\tcolors: {\n\t\t\tprimary: '#fff',\n\t\t\tsecondary: '#000'\n\t\t}\n\t}\n});\n```\n\n```css\n/* before */\n\n.hero {\n\tcolor: $colors.primary;\n\tmax-width: $siteWidth;\n}\n\n/* after */\n\n.hero {\n\tcolor: #fff;\n\tmax-width: 960px;\n}\n```\n\n## Advanced\n \nWhen creating your global variables, you may want to eliminate duplication by referencing an existing property to define your new variable. You can do this by referencing variables like you would in your stylesheet. Here is the basic idea:\n\n```js\nlet vars = {\n\tcolors: {\n\t\tprimary: '#fff'\n\t},\n\theading: {\n\t\tcolor: '$colors.primary'\n\t}\n };\n```\n\nIn certain circumstances, you may want to create a base variables file that you would want to be able to override. This would be a use-case if you were using this plugin inside of some kind of framework.\nIf you are using functions to calculate global variables, you may want to delay the function execution until after you had a chance to override your variables. This can be done by using the `defer` method.\n\n```js\nfunction darken(color, pct) {\n\t// Do something to calculate darker hex value\n\treturn result\n}\n\nmodule.exports = {\n\tcolors: {\n\t\twhite: '#fff',\n\t\tgray: defer(darken, ['$colors.white', 35])\n\t}\n };\n```\n\nThis is what a full example would look like in order to use these features:\n\n```js\n/* variables.js */\nconst { defer } = require('postcss-variables/lib/helpers');\nconst register = require('postcss-variables/lib/register');\n\nfunction darken(color, pct) {\n\t// Do something to calculate darker hex value\n\treturn result\n}\n\nlet vars = {\n\tcolors: {\n\t\tprimary: '#fff',\n\t\tgray: defer(darken, ['$colors.white', 35])\n\t},\n\theading: {\n\t\tcolor: '$colors.primary'\n\t}\n};\n\nmodule.exports = register(vars);\n```",
    "licenseText": "The MIT License (MIT)\n\nCopyright 2016 Nathan Hood\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-variables/-/postcss-variables-1.1.1.tgz#f86856acd0583b0c493767f22f7258509d37f9e0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-variables/-/postcss-variables-1.1.1.tgz",
    "hash": "f86856acd0583b0c493767f22f7258509d37f9e0",
    "integrity": "sha512-a9b2ZXoy60xl28m+jedXYvbXLdYSLPXOqvgkLUHhOUbhIRlVoSHRGhGtpMLkcgVc05lu3JUBEypLVcTYNcltMw==",
    "registry": "npm",
    "packageName": "postcss-variables",
    "cacheIntegrity": "sha512-a9b2ZXoy60xl28m+jedXYvbXLdYSLPXOqvgkLUHhOUbhIRlVoSHRGhGtpMLkcgVc05lu3JUBEypLVcTYNcltMw== sha1-+GhWrNBYOwxJN2fyL3JYUJ03+eA="
  },
  "registry": "npm",
  "hash": "f86856acd0583b0c493767f22f7258509d37f9e0"
}