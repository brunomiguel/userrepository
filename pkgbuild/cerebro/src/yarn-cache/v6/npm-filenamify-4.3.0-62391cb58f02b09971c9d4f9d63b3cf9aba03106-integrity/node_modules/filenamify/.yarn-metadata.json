{
  "manifest": {
    "name": "filenamify",
    "version": "4.3.0",
    "description": "Convert a string to a valid safe filename",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/filenamify.git"
    },
    "funding": "https://github.com/sponsors/sindresorhus",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://sindresorhus.com"
    },
    "engines": {
      "node": ">=8"
    },
    "scripts": {
      "test": "xo && ava && tsd"
    },
    "files": [
      "filenamify-path.d.ts",
      "filenamify-path.js",
      "filenamify.d.ts",
      "filenamify.js",
      "index.d.ts",
      "index.js"
    ],
    "exports": {
      ".": "./index.js",
      "./browser": "./filenamify.js"
    },
    "keywords": [
      "filename",
      "safe",
      "sanitize",
      "file",
      "name",
      "string",
      "path",
      "filepath",
      "convert",
      "valid",
      "dirname"
    ],
    "dependencies": {
      "filename-reserved-regex": "^2.0.0",
      "strip-outer": "^1.0.1",
      "trim-repeated": "^1.0.0"
    },
    "devDependencies": {
      "ava": "^1.4.1",
      "tsd": "^0.7.1",
      "xo": "^0.24.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-filenamify-4.3.0-62391cb58f02b09971c9d4f9d63b3cf9aba03106-integrity/node_modules/filenamify/package.json",
    "readmeFilename": "readme.md",
    "readme": "# filenamify\n\n> Convert a string to a valid safe filename\n\nOn Unix-like systems, `/` is reserved. On Windows, [`<>:\"/\\|?*`](http://msdn.microsoft.com/en-us/library/aa365247%28VS.85%29#naming_conventions) along with trailing periods are reserved.\n\n## Install\n\n```\n$ npm install filenamify\n```\n\n## Usage\n\n```js\nconst filenamify = require('filenamify');\n\nfilenamify('<foo/bar>');\n//=> 'foo!bar'\n\nfilenamify('foo:\"bar\"', {replacement: 'üê¥'});\n//=> 'fooüê¥bar'\n```\n\n## API\n\n### filenamify(string, options?)\n\nConvert a string to a valid filename.\n\n### filenamify.path(path, options?)\n\nConvert the filename in a path a valid filename and return the augmented path.\n\n#### options\n\nType: `object`\n\n##### replacement\n\nType: `string`\\\nDefault: `'!'`\n\nString to use as replacement for reserved filename characters.\n\nCannot contain: `<` `>` `:` `\"` `/` `\\` `|` `?` `*`\n\n##### maxLength\n\nType: `number`\\\nDefault: `100`\n\nTruncate the filename to the given length.\n\nSystems generally allow up to 255 characters, but we default to 100 for usability reasons.\n\n## Browser-only import\n\nYou can also import `filenamify/browser`, which only imports `filenamify` and not `filenamify.path`, which relies on `path` being available or polyfilled. Importing `filenamify` this way is therefore useful when it is shipped using `webpack` or similar tools, and if `filenamify.path` is not needed.\n\n```js\nconst filenamify = require('filenamify/browser');\n\nfilenamify('<foo/bar>');\n//=> 'foo!bar'\n```\n\n## Related\n\n- [filenamify-cli](https://github.com/sindresorhus/filenamify-cli) - CLI for this module\n- [filenamify-url](https://github.com/sindresorhus/filenamify-url) - Convert a URL to a valid filename\n- [valid-filename](https://github.com/sindresorhus/valid-filename) - Check if a string is a valid filename\n- [unused-filename](https://github.com/sindresorhus/unused-filename) - Get a unused filename by appending a number if it exists\n- [slugify](https://github.com/sindresorhus/slugify) - Slugify a string\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/filenamify/-/filenamify-4.3.0.tgz#62391cb58f02b09971c9d4f9d63b3cf9aba03106",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/filenamify/-/filenamify-4.3.0.tgz",
    "hash": "62391cb58f02b09971c9d4f9d63b3cf9aba03106",
    "integrity": "sha512-hcFKyUG57yWGAzu1CMt/dPzYZuv+jAJUT85bL8mrXvNe6hWj6yEHEc4EdcgiA6Z3oi1/9wXJdZPXF2dZNgwgOg==",
    "registry": "npm",
    "packageName": "filenamify",
    "cacheIntegrity": "sha512-hcFKyUG57yWGAzu1CMt/dPzYZuv+jAJUT85bL8mrXvNe6hWj6yEHEc4EdcgiA6Z3oi1/9wXJdZPXF2dZNgwgOg== sha1-YjkctY8CsJlxydT51js8+augMQY="
  },
  "registry": "npm",
  "hash": "62391cb58f02b09971c9d4f9d63b3cf9aba03106"
}