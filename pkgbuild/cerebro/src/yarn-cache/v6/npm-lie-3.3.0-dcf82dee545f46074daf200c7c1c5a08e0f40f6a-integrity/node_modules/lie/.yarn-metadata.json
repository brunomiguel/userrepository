{
  "manifest": {
    "name": "lie",
    "version": "3.3.0",
    "description": "A basic but performant promise implementation",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/calvinmetcalf/lie.git"
    },
    "bugs": {
      "url": "https://github.com/calvinmetcalf/lie/issues"
    },
    "keywords": [
      "lie",
      "promise",
      "async",
      "aplus"
    ],
    "main": "lib/index.js",
    "scripts": {
      "pretest": "npm run build",
      "test": "npm run jshint && mocha -R nyan ./test/cover.js && tsc --noEmit ./test/types.ts",
      "build-node": "copyfiles -f src/index.js lib && browserify-transform-cli inline-process-browser unreachable-branch-transform es3ify < src/index.js > lib/browser.js",
      "build-js": "browserify -s Promise -p bundle-collapser/plugin . | derequire > ./dist/lie.js",
      "build-min": "uglifyjs ./dist/lie.js -mc > ./dist/lie.min.js",
      "build-poly-js": "browserify -p bundle-collapser/plugin ./polyfill.js | derequire > ./dist/lie.polyfill.js",
      "build-poly-min": "uglifyjs ./dist/lie.polyfill.js -mc > ./dist/lie.polyfill.min.js",
      "build-poly": "npm run build-poly-js && npm run build-poly-min",
      "build": "npm run build-node && npm run build-js && npm run build-min && npm run build-poly",
      "prebuild": "rimraf lib dist && mkdirp lib dist",
      "cover": "istanbul cover _mocha ./test/cover.js -- -R spec && istanbul check-coverage --lines 100 --function 100 --statements 100 --branches 100",
      "jshint": "jshint src",
      "node": "mocha -R spec ./test/cover.js",
      "browser": "browserify test/cover.js > test/browser.js && mocha-phantomjs test/test.html"
    },
    "devDependencies": {
      "browserify": "^13.0.0",
      "browserify-transform-cli": "^1.1.1",
      "bundle-collapser": "^1.2.1",
      "copyfiles": "^1.0.0",
      "derequire": "^1.2.0",
      "es3ify": "^0.2.2",
      "inline-process-browser": "^1.0.0",
      "istanbul": "^0.2.6",
      "jshint": "^2.4.4",
      "mkdirp": "^0.5.1",
      "mocha": "^1.18.0",
      "mocha-phantomjs": "~3.5.0",
      "phantomjs": "^1.9.9",
      "promises-aplus-tests": "calvinmetcalf/promises-tests#phantom",
      "rimraf": "^2.5.4",
      "typescript": "^2.7.1",
      "uglify-js": "^2.4.13",
      "unreachable-branch-transform": "^0.3.0"
    },
    "dependencies": {
      "immediate": "~3.0.5"
    },
    "browser": {
      "./lib/index.js": "./lib/browser.js"
    },
    "files": [
      "lib",
      "dist",
      "polyfill.js",
      "lie.d.ts"
    ],
    "types": "lie.d.ts",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-lie-3.3.0-dcf82dee545f46074daf200c7c1c5a08e0f40f6a-integrity/node_modules/lie/package.json",
    "readmeFilename": "README.md",
    "readme": "# lie\n<a href=\"http://promises-aplus.github.com/promises-spec\">\n  <img src=\"http://promises-aplus.github.com/promises-spec/assets/logo-small.png\"\n       alt=\"Promises/A+ logo\" title=\"Promises/A+ 1.1 compliant\" align=\"right\" />\n</a> [![Build Status](https://travis-ci.org/calvinmetcalf/lie.svg)](https://travis-ci.org/calvinmetcalf/lie)\n\nlie is a small, performant promise library implementing the [Promises/A+ spec](http://promises-aplus.github.com/promises-spec/) (Version 1.1).\n\nOriginally a fork of [Ruben Verborgh](https://github.com/RubenVerborgh)'s [promiscuous](https://github.com/RubenVerborgh/promiscuous), with version 2.6 it became a fork of [ayepromise](https://github.com/cburgmer/ayepromise) by [Chris Burgmer](https://github.com/cburgmer).\n\n```bash\nnpm install lie\n\n```\n\n```javascript\nvar Promise = require('lie');\n// or use the pollyfill\nrequire('lie/polyfill');\n```\n\n## Usage\n\nEither use it with [browserify](http://browserify.org/) (recommended) or grab one of the files from the dist folder:\n\n- lie.js/lie.min.js exposes 'Promise' either as a UMD module or from the global scope, depending on if a CJS or AMD loader is available.\n- lie.polyfill.js/lie.polyfill.min.js adds 'Promise' to the global scope only if it's not already defined (not a UMD).\n\n## API\n\nImplements the standard ES6 api:\n\n```js\nnew Promise(function(resolve, reject){\n    doSomething(function(err, result) {\n        if (err) {\n            reject(err);\n        } else {\n            resolve(result);\n        }\n    });\n}).then(function (value) {\n    //on success\n}, function (reason) {\n    //on error\n}).catch(function (reason) {\n    //shortcut for error handling\n});\n\nPromise.all([\n    //array of promises or values\n]).then(function ([/* array of results */]));\n\nPromise.race([\n    //array of promises or values\n]);\n// either resolves or rejects depending on the first value to do so\n```\n\n## Unhandled Rejections\n\nIn Node.js, lie emits an `unhandledRejection` event when a rejected promise isn't caught, in line with [how io.js does it](https://iojs.org/api/process.html#process_event_unhandledrejection). This allows it to act as a promise shim in both Node.js and the browser.\n",
    "licenseText": "#Copyright (c) 2014-2018 Calvin Metcalf, Jordan Harband\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n**THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.**\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/lie/-/lie-3.3.0.tgz#dcf82dee545f46074daf200c7c1c5a08e0f40f6a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/lie/-/lie-3.3.0.tgz",
    "hash": "dcf82dee545f46074daf200c7c1c5a08e0f40f6a",
    "integrity": "sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==",
    "registry": "npm",
    "packageName": "lie",
    "cacheIntegrity": "sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ== sha1-3Pgt7lRfRgdNryAMfBxaCOD0D2o="
  },
  "registry": "npm",
  "hash": "dcf82dee545f46074daf200c7c1c5a08e0f40f6a"
}