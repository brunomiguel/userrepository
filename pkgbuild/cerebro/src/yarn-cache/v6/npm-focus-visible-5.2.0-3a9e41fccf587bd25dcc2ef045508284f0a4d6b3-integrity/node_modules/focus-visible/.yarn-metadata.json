{
  "manifest": {
    "name": "focus-visible",
    "version": "5.2.0",
    "description": "Polyfill for :focus-visible pseudo-selector",
    "scripts": {
      "build": "rollup -c",
      "precommit": "lint-staged",
      "prepublishOnly": "npm run test",
      "test:server": "http-server . -s",
      "test:selenium": "wait-on http://localhost:8080 && node ./test/index.js",
      "test": "npm run build && cross-env NODE_ENV=ci concurrently -k --success last \"npm run test:server\" \"npm run test:selenium\"",
      "sauce": "npm run build && cross-env NODE_ENV=sauce concurrently -k --success last \"npm run test:server\" \"npm run test:selenium\""
    },
    "lint-staged": {
      "src/focus-visible.js": [
        "eslint"
      ],
      "*.{js,css}": [
        "prettier --write",
        "git add"
      ]
    },
    "main": "dist/focus-visible.js",
    "module": "dist/focus-visible.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/WICG/focus-visible.git"
    },
    "author": {
      "name": "WICG"
    },
    "license": "W3C",
    "bugs": {
      "url": "https://github.com/WICG/focus-visible/issues"
    },
    "homepage": "https://github.com/WICG/focus-visible",
    "devDependencies": {
      "@webcomponents/webcomponentsjs": "^2.2.10",
      "ajv": "^6.0.0",
      "chromedriver": "^2.38.2",
      "clear-module": "^2.1.0",
      "concurrently": "^4.0.0",
      "cross-env": "^5.1.4",
      "eslint": "^5.0.0",
      "eslint-config-prettier": "^3.0.0",
      "eslint-plugin-es5": "^1.2.0",
      "expect": "^1.20.2",
      "geckodriver": "^1.12.1",
      "glob-promise": "^3.3.0",
      "http-server": "^0.11.0",
      "husky": "^0.14.3",
      "lint-staged": "^7.0.5",
      "mocha": "^5.1.1",
      "mz": "^2.7.0",
      "prettier": "^1.12.1",
      "rollup": "^0.65.0",
      "rollup-plugin-commonjs": "^9.1.2",
      "rollup-plugin-node-resolve": "^3.0.1",
      "rollup-plugin-uglify": "^3.0.0",
      "rollup-watch": "^4.3.1",
      "selenium-assistant": "^5.3.0",
      "wait-on": "^2.1.0"
    },
    "greenkeeper": {
      "ignore": [
        "expect"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-focus-visible-5.2.0-3a9e41fccf587bd25dcc2ef045508284f0a4d6b3-integrity/node_modules/focus-visible/package.json",
    "readmeFilename": "README.md",
    "readme": "[![Build Status](https://travis-ci.org/WICG/focus-visible.svg?branch=master)](https://travis-ci.org/WICG/focus-visible)\n\nBased on the proposed CSS\n[`:focus-visible`](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo)\npseudo-selector,\nthis prototype adds a `focus-visible` class to the focused element,\nin situations in which the `:focus-visible` pseudo-selector should match.\n\n# Details\n\n- Read the [Explainer](explainer.md).\n- Read the [Spec](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n- Try the [Demo](https://wicg.github.io/focus-visible/demo).\n- [Give feedback!](https://github.com/WICG/focus-visible/issues)\n    - Open discussions:\n        - [What's the impact on users with low vision or cognitive impairments?](https://github.com/WICG/focus-visible/issues/128)\n        - [Should :focus-visible match when returning focus or programmatically focusing?](https://github.com/WICG/focus-visible/issues/88)\n        - [Brainstorm: options for opting in to always matching focus ring.](https://github.com/WICG/focus-visible/issues/42)\n\n# Polyfill\n\n## Installation\n\n`npm install --save focus-visible`\n\n_We recommend only using versions of the polyfill that have been published to npm, rather than\ncloning the repo and using the source directly. This helps ensure the version you're using is stable\nand thoroughly tested._\n\n_If you do want to build from source, make sure you clone the latest tag!_\n\n## Usage\n\n### 1. Add the script to your page\n\n```html\n    ...\n    <script src=\"/node_modules/focus-visible/dist/focus-visible.min.js\"></script>\n  </body>\n</html>\n```\n\n### 2. Update your CSS\n\nWe suggest that users\nselectively disable the default focus style\nby selecting for the case when the polyfill is loaded\nand `.focus-visible` is _not_ applied to the element:\n\n```css\n/*\n  This will hide the focus indicator if the element receives focus via the mouse,\n  but it will still show up on keyboard focus.\n*/\n.js-focus-visible :focus:not(.focus-visible) {\n  outline: none;\n}\n```\n\nIf there are elements which should always have a focus ring shown,\nauthors may explicitly add the `focus-visible` class.\nIf explicitly added, it will not be removed on `blur`.\n\nAlternatively, if you're using a framework which overwrites your classes ([#179](https://github.com/WICG/focus-visible/issues/179)),\nyou can rely on the `data-js-focus-visible` and `data-focus-visible-added` attributes.\n```css\n[data-js-focus-visible] :focus:not([data-focus-visible-added]) {\n  outline: none;\n}\n```\n\n### How it works\n\nThe script uses two heuristics to determine whether the keyboard is being (or will be) used:\n\n- a `focus` event immediately following a `keydown` event where the key pressed was either `Tab`,\n`Shift + Tab`, or an arrow key.\n\n- focus moves into an element which requires keyboard interaction,\n  such as a text field\n\n  - NOTE: this means that HTML elements like `<input type={text|email|password|...}>` or `<textarea>` will **always** match the `:focus-visible` selector, regardless of whether they are focused via a keyboard or a mouse.\n\n- _TODO: ideally, we also trigger keyboard modality\n  following a keyboard event which activates an element or causes a mutation;\n  this still needs to be implemented._\n\n### Dependencies\n\nIf you want to use `:focus-visible` with an older browser you'll need to include an additional polyfill for [`Element.prototype.classList`](https://caniuse.com/#feat=classlist).\n\nIn accordance with the W3C's new [polyfill\nguidance](https://www.w3.org/2001/tag/doc/polyfills/#don-t-serve-unnecessary-polyfills), the\n`:focus-visible` polyfill does not bundle other polyfills.\n\nYou can use a service like [Polyfill.io](https://polyfill.io) to download only the polyfills needed by the current browser. Just add the following line to the start of your page:\n\n```html\n<script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=Element.prototype.classList\"></script>\n```\n\n### Shadow DOM\n\nIt could be very expensive to apply this polyfill automatically to every shadow\nroot that is created in a given document, so the polyfill ignores shadow roots\nby default. If you are using Shadow DOM in a component, it is possible to apply\nthis polyfill imperatively to the component's shadow root:\n\n```javascript\n// Check for the polyfill:\nif (window.applyFocusVisiblePolyfill != null) {\n  window.applyFocusVisiblePolyfill(myComponent.shadowRoot);\n}\n```\n\n### Lazy-loading\n\nWhen this polyfill is lazy-loaded, and you are applying the polyfill to a shadow\nroot with JavaScript, it is important to know when the polyfill has become\navailable before trying to use it.\n\nIn order to act at the right time, you can observe the global\n`focus-visible-polyfill-ready` event:\n\n```javascript\nwindow.addEventListener('focus-visible-polyfill-ready',\n    () => window.applyFocusVisiblePolyfill(myComponent.shadowRoot),\n    { once:  true });\n```\n\n**Important:** this event is _only_ intended to support late application of the\npolyfill in lazy-loading use cases. Do not write code that depends on the event\nfiring, as it is timing dependent and only fired once. If you plan to lazy-load\nthe polyfill, it is recommended that you check for it synchronously (see example\nabove under \"Shadow DOM\") and listen for the event only if the polyfill isn't\navailable yet.\n\n# Backwards compatibility\nUntil all browsers ship `:focus-visible` developers will need to use it defensively to avoid accidentally\nremoving focus styles in legacy browsers. This is easy to do with the polyfill.\n\n```css\n/*\n  This will hide the focus indicator if the element receives focus via the mouse,\n  but it will still show up on keyboard focus.\n*/\n.js-focus-visible :focus:not(.focus-visible) {\n  outline: none;\n}\n\n/*\n  Optionally: Define a strong focus indicator for keyboard focus.\n  If you choose to skip this step then the browser's default focus\n  indicator will be displayed instead.\n*/\n.js-focus-visible .focus-visible {\n  …\n}\n```\n\nAs [explained by the Paciello Group](https://developer.paciellogroup.com/blog/2018/03/focus-visible-and-backwards-compatibility/), developers who don't use the polyfill can still defensively rely on `:focus-visible` using the\nfollowing snippet:\n\n```css\n/*\n  Provide basic, default focus styles.\n*/\nbutton:focus {\n  …\n}\n\n/*\n  Remove default focus styles for mouse users ONLY if\n  :focus-visible is supported on this platform.\n*/\nbutton:focus:not(:focus-visible) {\n  …\n}\n\n/*\n  Optionally: If :focus-visible is supported on this\n  platform, provide enhanced focus styles for keyboard\n  focus.\n*/\nbutton:focus-visible {\n  …\n}\n```\n\nIn the future, when all browsers support `:focus-visible`, the\nsnippets above will be unnecessary. But until that time it's important\nto be mindful when you use `:focus-visible` and to ensure you always\nhave a fallback strategy.\n\n### Big Thanks\n\nCross-browser Testing Platform and Open Source <3 Provided by [Sauce Labs][homepage]\n\n<a href=\"https://saucelabs.com\"><img src=\"https://i.imgur.com/f2cK9ZQ.jpg\" width=\"200\"></a>\n\n[homepage]: https://saucelabs.com\n",
    "licenseText": "All Reports in this Repository are licensed by Contributors under the \n[W3C Software and Document\nLicense](http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document). Contributions to\nSpecifications are made under the [W3C CLA](https://www.w3.org/community/about/agreements/cla/).\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/focus-visible/-/focus-visible-5.2.0.tgz#3a9e41fccf587bd25dcc2ef045508284f0a4d6b3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/focus-visible/-/focus-visible-5.2.0.tgz",
    "hash": "3a9e41fccf587bd25dcc2ef045508284f0a4d6b3",
    "integrity": "sha512-Rwix9pBtC1Nuy5wysTmKy+UjbDJpIfg8eHjw0rjZ1mX4GNLz1Bmd16uDpI3Gk1i70Fgcs8Csg2lPm8HULFg9DQ==",
    "registry": "npm",
    "packageName": "focus-visible",
    "cacheIntegrity": "sha512-Rwix9pBtC1Nuy5wysTmKy+UjbDJpIfg8eHjw0rjZ1mX4GNLz1Bmd16uDpI3Gk1i70Fgcs8Csg2lPm8HULFg9DQ== sha1-Op5B/M9Ye9JdzC7wRVCChPCk1rM="
  },
  "registry": "npm",
  "hash": "3a9e41fccf587bd25dcc2ef045508284f0a4d6b3"
}