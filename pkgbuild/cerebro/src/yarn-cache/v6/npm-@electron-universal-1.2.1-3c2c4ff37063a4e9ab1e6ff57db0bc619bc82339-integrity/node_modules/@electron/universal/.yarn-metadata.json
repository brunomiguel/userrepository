{
  "manifest": {
    "name": "@electron/universal",
    "version": "1.2.1",
    "description": "Utility for creating Universal macOS applications from two x64 and arm64 Electron applications",
    "main": "dist/cjs/index.js",
    "module": "dist/esm/index.js",
    "license": "MIT",
    "keywords": [
      "electron",
      "apple silicon",
      "universal"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/electron/universal.git"
    },
    "engines": {
      "node": ">=8.6"
    },
    "files": [
      "dist/*",
      "entry-asar/*",
      "README.md"
    ],
    "author": {
      "name": "Samuel Attard"
    },
    "scripts": {
      "build": "tsc && tsc -p tsconfig.esm.json",
      "lint": "prettier --check \"src/**/*.ts\"",
      "prepublishOnly": "npm run build",
      "test": "exit 0"
    },
    "devDependencies": {
      "@continuous-auth/semantic-release-npm": "^2.0.0",
      "@types/debug": "^4.1.5",
      "@types/fs-extra": "^9.0.4",
      "@types/minimatch": "^3.0.5",
      "@types/node": "^14.14.7",
      "@types/plist": "^3.0.2",
      "husky": "^4.3.0",
      "lint-staged": "^10.5.1",
      "prettier": "^2.1.2",
      "semantic-release": "^17.2.2",
      "typescript": "^4.0.5"
    },
    "dependencies": {
      "@malept/cross-spawn-promise": "^1.1.0",
      "asar": "^3.1.0",
      "debug": "^4.3.1",
      "dir-compare": "^2.4.0",
      "fs-extra": "^9.0.1",
      "minimatch": "^3.0.4",
      "plist": "^3.0.4"
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "lint-staged": {
      "*.ts": [
        "prettier --write"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@electron-universal-1.2.1-3c2c4ff37063a4e9ab1e6ff57db0bc619bc82339-integrity/node_modules/@electron/universal/package.json",
    "readmeFilename": "README.md",
    "readme": "# @electron/universal\n\n> Create universal macOS Electron applications\n\n[![CircleCI](https://circleci.com/gh/electron/universal/tree/master.svg?style=svg)](https://circleci.com/gh/electron/universal)\n\n\n## Usage\n\n```typescript\nimport { makeUniversalApp } from '@electron/universal';\n\nawait makeUniversalApp({\n  x64AppPath: 'path/to/App_x64.app',\n  arm64AppPath: 'path/to/App_arm64.app',\n  outAppPath: 'path/to/App_universal.app',\n});\n```\n\n## FAQ\n\n#### The app is twice as big now, why?\n\nWell, a Universal app isn't anything magical.  It is literally the x64 app and\nthe arm64 app glued together into a single application.  It's twice as big\nbecause it contains two apps in one.\n\n#### What about native modules?\n\nThe way `@electron/universal` works today means you don't need to worry about\nthings like building universal versions of your native modules.  As long as\nyour x64 and arm64 apps work in isolation the Universal app will work as well.\n\n#### How do I build my app for Apple silicon in the first place?\n\nCheck out the [Electron Apple silicon blog post](https://www.electronjs.org/blog/apple-silicon)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@electron/universal/-/universal-1.2.1.tgz#3c2c4ff37063a4e9ab1e6ff57db0bc619bc82339",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@electron/universal/-/universal-1.2.1.tgz",
    "hash": "3c2c4ff37063a4e9ab1e6ff57db0bc619bc82339",
    "integrity": "sha512-7323HyMh7KBAl/nPDppdLsC87G6RwRU02dy5FPeGB1eS7rUePh55+WNWiDPLhFQqqVPHzh77M69uhmoT8XnwMQ==",
    "registry": "npm",
    "packageName": "@electron/universal",
    "cacheIntegrity": "sha512-7323HyMh7KBAl/nPDppdLsC87G6RwRU02dy5FPeGB1eS7rUePh55+WNWiDPLhFQqqVPHzh77M69uhmoT8XnwMQ== sha1-PCxP83BjpOmrHm/1fbC8YZvIIzk="
  },
  "registry": "npm",
  "hash": "3c2c4ff37063a4e9ab1e6ff57db0bc619bc82339"
}