{
  "manifest": {
    "name": "shallowequal",
    "version": "1.1.0",
    "description": "Like lodash isEqualWith but for shallow equal.",
    "main": "index.js",
    "scripts": {
      "lint": "eslint index.js test",
      "test": "mocha --require babel-register",
      "build:strip-flow": "flow-remove-types --pretty index.original.js > index.js",
      "build:gen-flow": "flow gen-flow-files index.original.js > index.js.flow",
      "build": "npm run build:strip-flow && npm run build:gen-flow",
      "prepublish": "npm run build && npm run pretty && npm run lint && npm run test",
      "travis": "npm run lint && npm run test",
      "pretty": "prettier --write --tab-width 2 'test/**/*.js' '*.{js,js.flow}'",
      "precommit": "lint-staged"
    },
    "lint-staged": {
      "*.{js,json,css,js.flow}": [
        "prettier --write",
        "git add"
      ]
    },
    "author": {
      "name": "Alberto Leal",
      "email": "mailforalberto@gmail.com",
      "url": "github.com/dashed"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/dashed/shallowequal.git"
    },
    "license": "MIT",
    "files": [
      "index.js",
      "index.js.flow",
      "index.original.js"
    ],
    "keywords": [
      "shallowequal",
      "shallow",
      "equal",
      "isequal",
      "compare",
      "isequalwith"
    ],
    "eslintConfig": {
      "parser": "babel-eslint",
      "env": {
        "browser": true,
        "node": true,
        "mocha": true
      },
      "extends": [
        "eslint:recommended"
      ]
    },
    "devDependencies": {
      "babel-eslint": "^8.0.0",
      "babel-preset-env": "^1.6.1",
      "babel-register": "^6.24.1",
      "chai": "^4.0.0",
      "eslint": "^4.7.1",
      "flow-bin": "^0.75.0",
      "flow-remove-types": "^1.2.3",
      "husky": "^0.14.3",
      "lint-staged": "^6.0.0",
      "mocha": "^5.0.0",
      "prettier": "^1.9.2"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-shallowequal-1.1.0-188d521de95b9087404fd4dcb68b13df0ae4e7f8-integrity/node_modules/shallowequal/package.json",
    "readmeFilename": "README.md",
    "readme": "# shallowequal [![Build Status](https://travis-ci.org/dashed/shallowequal.svg)](https://travis-ci.org/dashed/shallowequal) [![Downloads](https://img.shields.io/npm/dm/shallowequal.svg)](https://npmjs.com/shallowequal) [![npm version](https://img.shields.io/npm/v/shallowequal.svg?style=flat)](https://www.npmjs.com/package/shallowequal)\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/dashed/shallowequal.svg)](https://greenkeeper.io/)\n\n> `shallowequal` is like lodash's [`isEqualWith`](https://lodash.com/docs/4.17.4#isEqualWith) but for shallow (strict) equal.\n\n`shallowequal(value, other, [customizer], [thisArg])`\n\nPerforms a ***shallow equality*** comparison between two values (i.e. `value` and `other`) to determine if they are equivalent.\n\nThe equality is performed by iterating through keys on the given `value`, and returning `false` whenever any key has values which are not **strictly equal** between `value` and `other`. Otherwise, return `true` whenever the values of all keys are strictly equal.\n\nIf `customizer` (expected to be a function) is provided it is invoked to compare values. If `customizer` returns `undefined` (i.e. `void 0`), then comparisons are handled by the `shallowequal` function instead.\n\nThe `customizer` is bound to `thisArg` and invoked with three arguments: `(value, other, key)`.\n\n**NOTE:** Docs are (shamelessly) adapted from [lodash's v3.x docs](https://lodash.com/docs/3.10.1#isEqualWith)\n\n## Install\n\n```sh\n$ yarn add shallowequal\n# npm v5+\n$ npm install shallowequal\n# before npm v5\n$ npm install --save shallowequal\n```\n\n## Usage\n\n```js\nconst shallowequal = require('shallowequal');\n\nconst object = { 'user': 'fred' };\nconst other = { 'user': 'fred' };\n\nobject == other;\n// → false\n\nshallowequal(object, other);\n// → true\n```\n\n## Credit\n\nCode for `shallowEqual` originated from https://github.com/gaearon/react-pure-render/ and has since been refactored to have the exact same API as `lodash.isEqualWith` (as of `v4.17.4`).\n\n## Development\n\n- `node.js` and `npm`. See: https://github.com/creationix/nvm#installation\n- `yarn`. See: https://yarnpkg.com/en/docs/install\n- `npm` dependencies. Run: `yarn install`\n\n### Chores\n\n- Lint: `yarn lint`\n- Test: `yarn test`\n- Pretty: `yarn pretty`\n- Pre-publish: `yarn prepublish`\n\n## License\n\nMIT.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Alberto Leal <mailforalberto@gmail.com> (github.com/dashed)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/shallowequal/-/shallowequal-1.1.0.tgz#188d521de95b9087404fd4dcb68b13df0ae4e7f8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/shallowequal/-/shallowequal-1.1.0.tgz",
    "hash": "188d521de95b9087404fd4dcb68b13df0ae4e7f8",
    "integrity": "sha512-y0m1JoUZSlPAjXVtPPW70aZWfIL/dSP7AFkRnniLCrK/8MDKog3TySTBmckD+RObVxH0v4Tox67+F14PdED2oQ==",
    "registry": "npm",
    "packageName": "shallowequal",
    "cacheIntegrity": "sha512-y0m1JoUZSlPAjXVtPPW70aZWfIL/dSP7AFkRnniLCrK/8MDKog3TySTBmckD+RObVxH0v4Tox67+F14PdED2oQ== sha1-GI1SHelbkIdAT9TctosT3wrk5/g="
  },
  "registry": "npm",
  "hash": "188d521de95b9087404fd4dcb68b13df0ae4e7f8"
}