{
  "manifest": {
    "name": "ansi-colors",
    "description": "Collection of ansi colors and styles.",
    "version": "1.1.0",
    "homepage": "https://github.com/doowb/ansi-colors",
    "author": {
      "name": "Brian Woodward",
      "url": "https://github.com/doowb"
    },
    "contributors": [
      {
        "name": "Brian Woodward",
        "url": "https://twitter.com/doowb"
      },
      {
        "name": "Jon Schlinkert",
        "url": "http://twitter.com/jonschlinkert"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/doowb/ansi-colors.git"
    },
    "bugs": {
      "url": "https://github.com/doowb/ansi-colors/issues"
    },
    "license": "MIT",
    "files": [
      "index.js",
      "types/index.d.ts"
    ],
    "main": "index.js",
    "types": "./types/index.d.ts",
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "mocha && tsc --project types"
    },
    "dependencies": {
      "ansi-wrap": "^0.1.0"
    },
    "devDependencies": {
      "gulp-format-md": "^1.0.0",
      "mocha": "^3.5.3",
      "typescript": "^2.7.1"
    },
    "keywords": [
      "ansi-bgblack",
      "ansi-bgblue",
      "ansi-bgcyan",
      "ansi-bggreen",
      "ansi-bgmagenta",
      "ansi-bgred",
      "ansi-bgwhite",
      "ansi-bgyellow",
      "ansi-black",
      "ansi-blue",
      "ansi-bold",
      "ansi-cyan",
      "ansi-dim",
      "ansi-gray",
      "ansi-green",
      "ansi-grey",
      "ansi-hidden",
      "ansi-inverse",
      "ansi-italic",
      "ansi-magenta",
      "ansi-red",
      "ansi-reset",
      "ansi-strikethrough",
      "ansi-underline",
      "ansi-white",
      "ansi-yellow",
      "bgblack",
      "bgblue",
      "bgcyan",
      "bggreen",
      "bgmagenta",
      "bgred",
      "bgwhite",
      "bgyellow",
      "black",
      "blue",
      "bold",
      "cyan",
      "dim",
      "gray",
      "green",
      "grey",
      "hidden",
      "inverse",
      "italic",
      "magenta",
      "red",
      "reset",
      "strikethrough",
      "underline",
      "white",
      "yellow"
    ],
    "verb": {
      "toc": false,
      "layout": "default",
      "tasks": [
        "readme"
      ],
      "plugins": [
        "gulp-format-md"
      ],
      "lint": {
        "reflinks": true
      },
      "reflinks": [
        "verb-readme-generator",
        "verb"
      ],
      "related": {
        "list": [
          "ansi-bgblack",
          "ansi-bgblue",
          "ansi-bgcyan",
          "ansi-bggreen",
          "ansi-bgmagenta",
          "ansi-bgred",
          "ansi-bgwhite",
          "ansi-bgyellow",
          "ansi-black",
          "ansi-blue",
          "ansi-bold",
          "ansi-cyan",
          "ansi-dim",
          "ansi-gray",
          "ansi-green",
          "ansi-grey",
          "ansi-hidden",
          "ansi-inverse",
          "ansi-italic",
          "ansi-magenta",
          "ansi-red",
          "ansi-reset",
          "ansi-strikethrough",
          "ansi-underline",
          "ansi-white",
          "ansi-wrap",
          "ansi-yellow"
        ]
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-ansi-colors-1.1.0-integrity/node_modules/ansi-colors/package.json",
    "readmeFilename": "README.md",
    "readme": "# ansi-colors [![NPM version](https://img.shields.io/npm/v/ansi-colors.svg?style=flat)](https://www.npmjs.com/package/ansi-colors) [![NPM monthly downloads](https://img.shields.io/npm/dm/ansi-colors.svg?style=flat)](https://npmjs.org/package/ansi-colors)  [![NPM total downloads](https://img.shields.io/npm/dt/ansi-colors.svg?style=flat)](https://npmjs.org/package/ansi-colors) [![Linux Build Status](https://img.shields.io/travis/doowb/ansi-colors.svg?style=flat&label=Travis)](https://travis-ci.org/doowb/ansi-colors) [![Windows Build Status](https://img.shields.io/appveyor/ci/doowb/ansi-colors.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/doowb/ansi-colors)\n\n> Collection of ansi colors and styles.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save ansi-colors\n```\n\n## Usage\n\nThis module exports an object of functions. Each function wraps a string with the ansi codes used to display the string with that color (or style). Use the wrapped string with `console.log`:\n\n```js\nvar colors = require('ansi-colors');\nconsole.log(colors.bold(colors.cyan('[info]')), colors.cyan('This is some information'));\nconsole.log(colors.bold(colors.yellow('[warning]')), colors.yellow('This is a warning'));\nconsole.error(colors.bold(colors.red('[ERROR]')), colors.red('Danger! There was an error!'));\n```\n\n![image](https://user-images.githubusercontent.com/995160/34897845-3150daae-f7be-11e7-9706-38c42461e0ee.png)\n\n## Example\n\nSee the [example](./example.js) for more colors and styles.\n\n## About\n\n### Related projects\n\n* [ansi-bgblack](https://www.npmjs.com/package/ansi-bgblack): The color bgblack, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-bgblack \"The color bgblack, in ansi.\")\n* [ansi-bgblue](https://www.npmjs.com/package/ansi-bgblue): The color bgblue, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-bgblue \"The color bgblue, in ansi.\")\n* [ansi-bgcyan](https://www.npmjs.com/package/ansi-bgcyan): The color bgcyan, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-bgcyan \"The color bgcyan, in ansi.\")\n* [ansi-bggreen](https://www.npmjs.com/package/ansi-bggreen): The color bggreen, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-bggreen \"The color bggreen, in ansi.\")\n* [ansi-bgmagenta](https://www.npmjs.com/package/ansi-bgmagenta): The color bgmagenta, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-bgmagenta \"The color bgmagenta, in ansi.\")\n* [ansi-bgred](https://www.npmjs.com/package/ansi-bgred): The color bgred, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-bgred \"The color bgred, in ansi.\")\n* [ansi-bgwhite](https://www.npmjs.com/package/ansi-bgwhite): The color bgwhite, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-bgwhite \"The color bgwhite, in ansi.\")\n* [ansi-bgyellow](https://www.npmjs.com/package/ansi-bgyellow): The color bgyellow, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-bgyellow \"The color bgyellow, in ansi.\")\n* [ansi-black](https://www.npmjs.com/package/ansi-black): The color black, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-black \"The color black, in ansi.\")\n* [ansi-blue](https://www.npmjs.com/package/ansi-blue): The color blue, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-blue \"The color blue, in ansi.\")\n* [ansi-bold](https://www.npmjs.com/package/ansi-bold): The color bold, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-bold \"The color bold, in ansi.\")\n* [ansi-cyan](https://www.npmjs.com/package/ansi-cyan): The color cyan, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-cyan \"The color cyan, in ansi.\")\n* [ansi-dim](https://www.npmjs.com/package/ansi-dim): The color dim, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-dim \"The color dim, in ansi.\")\n* [ansi-gray](https://www.npmjs.com/package/ansi-gray): The color gray, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-gray \"The color gray, in ansi.\")\n* [ansi-green](https://www.npmjs.com/package/ansi-green): The color green, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-green \"The color green, in ansi.\")\n* [ansi-grey](https://www.npmjs.com/package/ansi-grey): The color grey, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-grey \"The color grey, in ansi.\")\n* [ansi-hidden](https://www.npmjs.com/package/ansi-hidden): The color hidden, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-hidden \"The color hidden, in ansi.\")\n* [ansi-inverse](https://www.npmjs.com/package/ansi-inverse): The color inverse, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-inverse \"The color inverse, in ansi.\")\n* [ansi-italic](https://www.npmjs.com/package/ansi-italic): The color italic, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-italic \"The color italic, in ansi.\")\n* [ansi-magenta](https://www.npmjs.com/package/ansi-magenta): The color magenta, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-magenta \"The color magenta, in ansi.\")\n* [ansi-red](https://www.npmjs.com/package/ansi-red): The color red, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-red \"The color red, in ansi.\")\n* [ansi-reset](https://www.npmjs.com/package/ansi-reset): The color reset, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-reset \"The color reset, in ansi.\")\n* [ansi-strikethrough](https://www.npmjs.com/package/ansi-strikethrough): The color strikethrough, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-strikethrough \"The color strikethrough, in ansi.\")\n* [ansi-underline](https://www.npmjs.com/package/ansi-underline): The color underline, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-underline \"The color underline, in ansi.\")\n* [ansi-white](https://www.npmjs.com/package/ansi-white): The color white, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-white \"The color white, in ansi.\")\n* [ansi-wrap](https://www.npmjs.com/package/ansi-wrap): Create ansi colors by passing the open and close codes. | [homepage](https://github.com/jonschlinkert/ansi-wrap \"Create ansi colors by passing the open and close codes.\")\n* [ansi-yellow](https://www.npmjs.com/package/ansi-yellow): The color yellow, in ansi. | [homepage](https://github.com/jonschlinkert/ansi-yellow \"The color yellow, in ansi.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 10 | [doowb](https://github.com/doowb) |  \n| 3  | [jonschlinkert](https://github.com/jonschlinkert) |  \n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Brian Woodward**\n\n* [github/doowb](https://github.com/doowb)\n* [twitter/doowb](https://twitter.com/doowb)\n\n### License\n\nCopyright © 2018, [Brian Woodward](https://github.com/doowb).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on January 12, 2018._",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015-2017, Brian Woodward.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",
    "hash": "",
    "integrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==",
    "registry": "npm",
    "packageName": "ansi-colors",
    "cacheIntegrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA== sha1-Y3S03V1HGP884npnGjscrQdxMqk="
  },
  "registry": "npm",
  "hash": "485297ebb6ae48da15477f0ddcbfa7bec3e3384d1bc9b29361b91fe6d46fbac86b00f43d57be61bb0d19c4190a55e454f64a87ddde87038c537246f06788b198"
}