{
  "manifest": {
    "name": "specificity",
    "version": "0.4.1",
    "description": "Calculate the specificity of a CSS selector",
    "keywords": [
      "CSS",
      "specificity"
    ],
    "homepage": "https://github.com/keeganstreet/specificity",
    "author": {
      "name": "Keegan Street",
      "url": "http://keegan.st"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/keeganstreet/specificity.git"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/keeganstreet/specificity/issues"
    },
    "main": "dist/specificity",
    "module": "dist/specificity.mjs",
    "bin": {
      "specificity": "bin/specificity"
    },
    "scripts": {
      "prepare": "rollup --config",
      "test": "mocha test/test.js --require esm"
    },
    "devDependencies": {
      "esm": "^3.0.71",
      "mocha": "^5.2.0",
      "rollup": "^0.62.0"
    },
    "types": "specificity.d.ts",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-specificity-0.4.1-aab5e645012db08ba182e151165738d00887b019-integrity/node_modules/specificity/package.json",
    "readmeFilename": "readme.md",
    "readme": "# Specificity Calculator\n\nA JavaScript module for calculating and comparing the [specificity of CSS selectors](https://www.w3.org/TR/selectors-3/#specificity). The module is used on the [Specificity Calculator](https://specificity.keegan.st/) website.\n\nSpecificity Calculator is built for CSS Selectors Level 3. Specificity Calculator isnâ€™t a CSS validator. If you enter invalid selectors it will return incorrect results. For example, the [negation pseudo-class](https://www.w3.org/TR/selectors-3/#negation) may only take a simple selector as an argument. Using a psuedo-element or combinator as an argument for `:not()` is invalid CSS so Specificity Calculator will return incorrect results.\n\n## Supported runtime environments\n\nThe module is provided in two formats: an ECMAScript (ES) module in `dist/specificity.mjs`, and a Universal Module Definition (UMD) in `dist/specificity.js`. This enables support for the following runtime environments:\n\n**Browser**\n\n  * Directly loaded ES module\n  * ES module in a precompiled script (using a bundler like Webpack or Rollup)\n  * Global variable\n\n**Node.js**\n\n  * ES module\n  * CommonJS module\n\n### Browser usage as a directly loaded ES module\n\n```html\n<script type=\"module\">\n  import { calculate } from './specificity/dist/specificity.mjs';\n\n  calculate('ul#nav li.active a');\n</script>\n```\n\n### Browser usage as an ES module in a precompiled script\n\nBundlers like [Webpack and Rollup](https://github.com/rollup/rollup/wiki/pkg.module) import from the `module` field in `package.json`, which is set to the ES module artefact, `dist/specificity.mjs`.\n\n```js\nimport { calculate } from 'specificity';\n\ncalculate('ul#nav li.active a');\n```\n\n### Browser usage as a global variable\n\nThe UMD artefact, `dist/specificity.js`, sets a global variable, `SPECIFICITY`.\n\n```html\n<script src=\"./specificity/dist/specificity.js\"></script>\n\n<script>\n  SPECIFICITY.calculate('ul#nav li.active a');\n</script>\n```\n\n### Node.js usage as an ES module\n\nThe `main` field in `package.json` has an extensionless value, `dist/specificity`. This allows Node.js to use either the ES module, in `dist/specificity.mjs`, or the CommonJS module, in `dist/specificity.js`.\n\nWhen Node.js is run with the `--experimental-modules` [flag](https://nodejs.org/api/esm.html) or an [ES module loader](https://www.npmjs.com/package/esm), it will use the ES module artefact.\n\n```js\nimport { calculate } from 'specificity';\n\ncalculate('ul#nav li.active a');\n```\n\n### Node.js usage as a CommonJS module\n\nOtherwise, Node.js will use the UMD artefact, which contains a CommonJS module definition.\n\n```js\nconst { calculate } = require('specificity');\n\ncalculate('ul#nav li.active a');\n```\n\n## Calculate function\n\nThe `calculate` function returns an array containing a result object for each selector input. Each result object has the following properties:\n\n  * `selector`: the input\n  * `specificity`: the result as a string e.g. `0,1,0,0`\n  * `specificityArray`: the result as an array of numbers e.g. `[0, 1, 0, 0]`\n  * `parts`: array with details about each part of the selector that counts towards the specificity\n\n## Example\n\n```js\ncalculate('ul#nav li.active a');\n\n/*\n[\n  {\n    selector: 'ul#nav li.active a',\n    specificity: '0,1,1,3',\n    specificityArray: [0, 1, 1, 3],\n    parts: [\n      { selector: 'ul', type: 'c', index: 0, length: 2 },\n      { selector: '#nav', type: 'a', index: 2, length: 4 },\n      { selector: 'li', type: 'c', index: 5, length: 2 },\n      { selector: '.active', type: 'b', index: 8, length: 7 },\n      { selector: 'a', type: 'c', index: 13, length: 1 }\n    ]\n  }\n]\n*/\n```\n\nYou can use comma separation to pass in multiple selectors:\n\n```js\ncalculate('ul#nav li.active a, body.ie7 .col_3 h2 ~ h2');\n\n/*\n[\n  {\n    selector: 'ul#nav li.active a',\n    specificity: '0,1,1,3',\n    ...\n  },\n  {\n    selector: 'body.ie7 .col_3 h2 ~ h2',\n    specificity: '0,0,2,3',\n    ...\n  }\n]\n*/\n```\n\n## Comparing two selectors\n\nSpecificity Calculator also exports a `compare` function. This function accepts two CSS selectors or specificity arrays, `a` and `b`.\n\n  * It returns `-1` if `a` has a lower specificity than `b`\n  * It returns `1` if `a` has a higher specificity than `b`\n  * It returns `0` if `a` has the same specificity than `b`\n\n```js\ncompare('div', '.active');            // -1\ncompare('#main', 'div');              // 1\ncompare('span', 'div');               // 0\ncompare('span', [0, 0, 0, 1]);        // 0\ncompare('#main > div', [0, 1, 0, 1]); // 0\n```\n\n## Ordering an array of selectors by specificity\n\nYou can pass the `compare` function to `Array.prototype.sort` to sort an array of CSS selectors by specificity.\n\n```js\nimport { compare } from 'specificity';\n\n['#main', 'p', '.active'].sort(compare); // ['p', '.active', '#main']\n```\n\n## Command-line usage\n\nRun `npm install specificity` to install the module locally, or `npm install -g specificity` for global installation. Run `specificity` without arguments to learn about its usage:\n\n```bash\n$ specificity\nUsage: specificity <selector>\nComputes specificity of a CSS selector.\n```\n\nPass a selector as the first argument to get its specificity computed:\n\n```bash\n$ specificity \"ul#nav li.active a\"\n0,1,1,3\n```\n\n## Testing\n\nTo install dependencies, run: `npm install`\n\nThen to test, run: `npm test`\n",
    "licenseText": "The MIT License (MIT)\nCopyright (c) 2016 Keegan Street and others\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/specificity/-/specificity-0.4.1.tgz#aab5e645012db08ba182e151165738d00887b019",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/specificity/-/specificity-0.4.1.tgz",
    "hash": "aab5e645012db08ba182e151165738d00887b019",
    "integrity": "sha512-1klA3Gi5PD1Wv9Q0wUoOQN1IWAuPu0D1U03ThXTr0cJ20+/iq2tHSDnK7Kk/0LXJ1ztUB2/1Os0wKmfyNgUQfg==",
    "registry": "npm",
    "packageName": "specificity",
    "cacheIntegrity": "sha512-1klA3Gi5PD1Wv9Q0wUoOQN1IWAuPu0D1U03ThXTr0cJ20+/iq2tHSDnK7Kk/0LXJ1ztUB2/1Os0wKmfyNgUQfg== sha1-qrXmRQEtsIuhguFRFlc40AiHsBk="
  },
  "registry": "npm",
  "hash": "aab5e645012db08ba182e151165738d00887b019"
}