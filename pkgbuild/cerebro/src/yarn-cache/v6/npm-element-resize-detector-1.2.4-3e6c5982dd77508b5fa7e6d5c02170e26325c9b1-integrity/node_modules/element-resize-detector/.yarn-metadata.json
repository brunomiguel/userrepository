{
  "manifest": {
    "name": "element-resize-detector",
    "version": "1.2.4",
    "description": "Resize event emitter for elements.",
    "homepage": "https://github.com/wnr/element-resize-detector",
    "repository": {
      "type": "git",
      "url": "git://github.com/wnr/element-resize-detector.git"
    },
    "main": "src/element-resize-detector.js",
    "private": false,
    "license": "MIT",
    "dependencies": {
      "batch-processor": "1.0.0"
    },
    "devDependencies": {
      "grunt": "1.0.1",
      "grunt-banner": "0.6.0",
      "grunt-browserify": "5.2.0",
      "grunt-contrib-jshint": "1.1.0",
      "grunt-contrib-uglify": "2.3.0",
      "grunt-karma": "2.0.0",
      "jasmine-core": "2.9.0",
      "jquery": "3.1.1",
      "karma": "1.7.1",
      "karma-chrome-launcher": "2.2.0",
      "karma-firefox-launcher": "1.1.0",
      "karma-jasmine": "1.1.1",
      "karma-safari-launcher": "1.0.0",
      "load-grunt-tasks": "3.5.2",
      "lodash": "4.17.4"
    },
    "scripts": {
      "build": "grunt build",
      "dist": "grunt dist",
      "test": "grunt test",
      "test-ci": "grunt ci"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-element-resize-detector-1.2.4-3e6c5982dd77508b5fa7e6d5c02170e26325c9b1-integrity/node_modules/element-resize-detector/package.json",
    "readmeFilename": "README.md",
    "readme": "# element-resize-detector\nOptimized cross-browser resize listener for elements. Up to 37x faster than related approaches (read section 5 of the [article](http://arxiv.org/pdf/1511.01223v1.pdf)).\n\n```\nnpm install element-resize-detector\n```\n\n## Usage\nInclude the script in the browser:\n```html\n<script src=\"node_modules/element-resize-detector/dist/element-resize-detector.min.js\"></script>\n```\nThis will create a global function `elementResizeDetectorMaker`, which is the maker function that makes an element resize detector instance.\n\nYou can also `require` it like so:\n```js\nvar elementResizeDetectorMaker = require(\"element-resize-detector\");\n```\n\n### Create instance\n```js\n// With default options (will use the object-based approach).\nvar erd = elementResizeDetectorMaker();\n\n// With the ultra fast scroll-based approach.\n// This is the recommended strategy.\nvar erdUltraFast = elementResizeDetectorMaker({\n  strategy: \"scroll\" //<- For ultra performance.\n});\n```\n\nThere is also an `callOnAdd` option, which determines if listeners should be called when they are getting added. Default is true. If true, the listener is guaranteed to be called when it has been added. If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).\n\n## API\n\n### listenTo(element, listener) or listenTo(options, element, listener)\nListens to the element for resize events and calls the listener function with the element as argument on resize events. Options passed to the function will override the instance options.\n\n**Example usage:**\n\n```js\nerd.listenTo(document.getElementById(\"test\"), function(element) {\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n  console.log(\"Size: \" + width + \"x\" + height);\n});\n```\n\n### removeListener(element, listener)\nRemoves the listener from the element.\n\n### removeAllListeners(element)\nRemoves all listeners from the element, but does not completely remove the detector. Use this function if you may add listeners later and don't want the detector to have to initialize again.\n\n### uninstall(element)\nCompletely removes the detector and all listeners.\n\n### initDocument(document)\nIf you need to listen to elements inside another document (such as an iframe), you need to init that document with this function. Otherwise the library won't be able to detect when elements are attached to the document. So for an iframe, simpy invoke ``erd.initDocument(iframe.contentDocument);`` when the iframe is mounted on the DOM for the first time. The document from which the element resize detector instance is created will be initialized automatically. Notice that a new document is created when an iframe loads its content. So for iframes, be sure you invoke this function for each `onLoad` iframe event.\n\n## Caveats\n\n1. If the element has `position: static` it will be changed to `position: relative`. Any unintentional `top/right/bottom/left/z-index` styles will therefore be applied and absolute positioned children will be positioned relative to the element.\n2. A hidden element will be injected as a direct child to the element.\n\n## Credits\nBig thanks to [Evry](https://www.evry.com/) sponsoring this project.\n\nThis library is using the two approaches (scroll and object) as first described at [http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/](http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/).\n\nThe scroll based approach implementation was based on Marc J's implementation [https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js](https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js).\n\nPlease note that both approaches have been heavily reworked for better performance and robustness.\n\n## Changelog\n\n#### 1.2.4\n\n* Harden onExpandScroll and onShrinkScroll handlers. See #132\n\n\n#### 1.2.3\n\n* Fix problems with object approach in FF. Revert #122.\n\n\n#### 1.2.2\n\n* Fixes scroll strategy to account for elements within shadow root. See #127.\n* Fix potential contenteditable bugs with object approach. See #122.\n\n#### 1.2.1\n\nA release that includes 1.1.15 and 1.1.16 with 1.2.0.\n\n#### 1.2.0\n\n* Add new method ``initDocument(document)`` which is needed when listening to detached elements in other documents, such as iframes.\n* Add a new optional option that adds `important!` to most style properties, to avoid CSS overriding. Disabled by default.\n* Fix an issue with the object approach in IE8. See #95.\n* Fix uninstall issue with object approach. See #102.\n* Fixed errornous optimization that prevented scrollbar repositioning for really fast x -> y -> x resizes.\n\n#### 1.1.16\n\n* Fix bug that could happen during uninstall when waiting for unrendered objects. See #117.\n\n#### 1.1.15\n\n* ADA compliance fix for object approach. See #105.\n\n#### 1.1.14\n\n* Explicit use of window.getComputedStyle everywhere.\n\n#### 1.1.13\n\n* Only notify listeners when actual size change happened (in the rare case when multiple scroll events happens for the same resize). See #86.\n\n#### 1.1.12\n\n* Fixed an issue with embedded WebView's on Android and iOS (when getComputedStyle.width = null). See #74.\n* Fixed an issue with unrendered iframe in FireFox. See #68.\n\n#### 1.1.11\n\n* Cleaned up the development build tools.\n* Updated dev dependencies.\n* Fixed an issue when uninstalling an element, and then calling listenTo in the middle of an old resize event. See #61.\n\n#### 1.1.10\n\n* Fixed so that injected scroll elements are `flex: none`. See #64.\n* Fixed so that injected object element is not focusable. See #67.\n\n#### 1.1.9\n\n* Fixed uninstall issue when `callOnAdd` being true. Also now removing `onAnimationStart` listener when uninstalling. See #49.\n\n#### 1.1.8\n\n* Fixed a compatability issue with `options.idHandler.get`.\n\n#### 1.1.7\n\n* Fixed some rare issues with uninstalling elements while preparing/resizing.\n\n#### 1.1.6\n\n* Fixed an issue with the resize detector changing the dimensions of the target element in some browsers (e.g., IE and FireFox).\n\n#### 1.1.5\n\n* Fixed an issue with having parent elements `dir=RTL`.\n\n#### 1.1.4\n\n* Added extra safety styles to injected elements to make them more resilient to global CSS affecting them.\n\n#### 1.1.3\n\n* Now `uninstall` supports being called with elements that haven't been initialized. `uninstall` simply ignores non-erd elements.\n* `uninstall` now also supports a collection of elements.\n\n#### 1.1.2\n\n* Fixed so that `uninstall` may be called directly after a `listenTo` call.\n* Fixed a typo in the readme.\n* Fixed an invalid test.\n\n#### 1.1.1\n\n* Using `window.getComputedStyle` instead of relying on the method being available in the global scope. This enables this library to be used in simulated browser environments such as jsdom.\n\n#### 1.1.0\n\n* Supporting inline elements\n* Event-based solution for detecting attached/rendered events so that detached/unrendered elements can be listened to without polling\n* Now all changes that affects the offset size of an element are properly detected (such as padding and font-size).\n* Scroll is stabilized, and is the preferred strategy to use. The object strategy will be deprecated (and is currently only used for some legacy browsers such as IE9 and Opera 12).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Lucas Wiener\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/element-resize-detector/-/element-resize-detector-1.2.4.tgz#3e6c5982dd77508b5fa7e6d5c02170e26325c9b1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/element-resize-detector/-/element-resize-detector-1.2.4.tgz",
    "hash": "3e6c5982dd77508b5fa7e6d5c02170e26325c9b1",
    "integrity": "sha512-Fl5Ftk6WwXE0wqCgNoseKWndjzZlDCwuPTcoVZfCP9R3EHQF8qUtr3YUPNETegRBOKqQKPW3n4kiIWngGi8tKg==",
    "registry": "npm",
    "packageName": "element-resize-detector",
    "cacheIntegrity": "sha512-Fl5Ftk6WwXE0wqCgNoseKWndjzZlDCwuPTcoVZfCP9R3EHQF8qUtr3YUPNETegRBOKqQKPW3n4kiIWngGi8tKg== sha1-PmxZgt13UItfp+bVwCFw4mMlybE="
  },
  "registry": "npm",
  "hash": "3e6c5982dd77508b5fa7e6d5c02170e26325c9b1"
}