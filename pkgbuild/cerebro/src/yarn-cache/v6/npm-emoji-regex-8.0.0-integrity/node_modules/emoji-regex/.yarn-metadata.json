{
  "manifest": {
    "name": "emoji-regex",
    "version": "8.0.0",
    "description": "A regular expression to match all Emoji-only symbols as per the Unicode Standard.",
    "homepage": "https://mths.be/emoji-regex",
    "main": "index.js",
    "types": "index.d.ts",
    "keywords": [
      "unicode",
      "regex",
      "regexp",
      "regular expressions",
      "code points",
      "symbols",
      "characters",
      "emoji"
    ],
    "license": "MIT",
    "author": {
      "name": "Mathias Bynens",
      "url": "https://mathiasbynens.be/"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mathiasbynens/emoji-regex.git"
    },
    "bugs": {
      "url": "https://github.com/mathiasbynens/emoji-regex/issues"
    },
    "files": [
      "LICENSE-MIT.txt",
      "index.js",
      "index.d.ts",
      "text.js",
      "es2015/index.js",
      "es2015/text.js"
    ],
    "scripts": {
      "build": "rm -rf -- es2015; babel src -d .; NODE_ENV=es2015 babel src -d ./es2015; node script/inject-sequences.js",
      "test": "mocha",
      "test:watch": "npm run test -- --watch"
    },
    "devDependencies": {
      "@babel/cli": "^7.2.3",
      "@babel/core": "^7.3.4",
      "@babel/plugin-proposal-unicode-property-regex": "^7.2.0",
      "@babel/preset-env": "^7.3.4",
      "mocha": "^6.0.2",
      "regexgen": "^1.3.0",
      "unicode-12.0.0": "^0.7.9"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-emoji-regex-8.0.0-integrity/node_modules/emoji-regex/package.json",
    "readmeFilename": "README.md",
    "readme": "# emoji-regex [![Build status](https://travis-ci.org/mathiasbynens/emoji-regex.svg?branch=master)](https://travis-ci.org/mathiasbynens/emoji-regex)\n\n_emoji-regex_ offers a regular expression to match all emoji symbols (including textual representations of emoji) as per the Unicode Standard.\n\nThis repository contains a script that generates this regular expression based on [the data from Unicode v12](https://github.com/mathiasbynens/unicode-12.0.0). Because of this, the regular expression can easily be updated whenever new emoji are added to the Unicode standard.\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install emoji-regex\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst emojiRegex = require('emoji-regex');\n// Note: because the regular expression has the global flag set, this module\n// exports a function that returns the regex rather than exporting the regular\n// expression itself, to make it impossible to (accidentally) mutate the\n// original regular expression.\n\nconst text = `\n\\u{231A}: ‚åö default emoji presentation character (Emoji_Presentation)\n\\u{2194}\\u{FE0F}: ‚ÜîÔ∏è default text presentation character rendered as emoji\n\\u{1F469}: üë© emoji modifier base (Emoji_Modifier_Base)\n\\u{1F469}\\u{1F3FF}: üë©üèø emoji modifier base followed by a modifier\n`;\n\nconst regex = emojiRegex();\nlet match;\nwhile (match = regex.exec(text)) {\n  const emoji = match[0];\n  console.log(`Matched sequence ${ emoji } ‚Äî code points: ${ [...emoji].length }`);\n}\n```\n\nConsole output:\n\n```\nMatched sequence ‚åö ‚Äî code points: 1\nMatched sequence ‚åö ‚Äî code points: 1\nMatched sequence ‚ÜîÔ∏è ‚Äî code points: 2\nMatched sequence ‚ÜîÔ∏è ‚Äî code points: 2\nMatched sequence üë© ‚Äî code points: 1\nMatched sequence üë© ‚Äî code points: 1\nMatched sequence üë©üèø ‚Äî code points: 2\nMatched sequence üë©üèø ‚Äî code points: 2\n```\n\nTo match emoji in their textual representation as well (i.e. emoji that are not `Emoji_Presentation` symbols and that aren‚Äôt forced to render as emoji by a variation selector), `require` the other regex:\n\n```js\nconst emojiRegex = require('emoji-regex/text.js');\n```\n\nAdditionally, in environments which support ES2015 Unicode escapes, you may `require` ES2015-style versions of the regexes:\n\n```js\nconst emojiRegex = require('emoji-regex/es2015/index.js');\nconst emojiRegexText = require('emoji-regex/es2015/text.js');\n```\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_emoji-regex_ is available under the [MIT](https://mths.be/mit) license.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
    "hash": "",
    "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
    "registry": "npm",
    "packageName": "emoji-regex",
    "cacheIntegrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A== sha1-6Bj9ac5cz8tARZT4QpY79TFkzDc="
  },
  "registry": "npm",
  "hash": "3128d8cdc58d380d1ec001e9cf4331a5816fc20eb28f2d4d1b7c6d7a8ab3eb8e150a8fd13e09ebd7f186b7e89cde2253cd0f04bb74dd335e126b09d5526184e8"
}