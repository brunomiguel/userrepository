{
  "manifest": {
    "name": "dequal",
    "version": "2.0.3",
    "repository": {
      "type": "git",
      "url": "https://github.com/lukeed/dequal.git"
    },
    "description": "A tiny (304B to 489B) utility for check for deep equality",
    "unpkg": "dist/index.min.js",
    "module": "dist/index.mjs",
    "main": "dist/index.js",
    "types": "index.d.ts",
    "license": "MIT",
    "author": {
      "name": "Luke Edwards",
      "email": "luke.edwards05@gmail.com",
      "url": "https://lukeed.com"
    },
    "engines": {
      "node": ">=6"
    },
    "scripts": {
      "build": "bundt",
      "pretest": "npm run build",
      "postbuild": "echo \"lite\" | xargs -n1 cp -v index.d.ts",
      "test": "uvu -r esm test"
    },
    "files": [
      "*.d.ts",
      "dist",
      "lite"
    ],
    "exports": {
      ".": {
        "types": "./index.d.ts",
        "import": "./dist/index.mjs",
        "require": "./dist/index.js"
      },
      "./lite": {
        "types": "./index.d.ts",
        "import": "./lite/index.mjs",
        "require": "./lite/index.js"
      },
      "./package.json": "./package.json"
    },
    "modes": {
      "lite": "src/lite.js",
      "default": "src/index.js"
    },
    "keywords": [
      "deep",
      "deep-equal",
      "equality"
    ],
    "devDependencies": {
      "bundt": "1.0.2",
      "esm": "3.2.25",
      "uvu": "0.3.2"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-dequal-2.0.3-2644214f1997d39ed0ee0ece72335490a7ac67be-integrity/node_modules/dequal/package.json",
    "readmeFilename": "readme.md",
    "readme": "# dequal [![CI](https://github.com/lukeed/dequal/workflows/CI/badge.svg)](https://github.com/lukeed/dequal/actions)\n\n> A tiny (304B to 489B) utility to check for deep equality\n\nThis module supports comparison of all types, including `Function`, `RegExp`, `Date`, `Set`, `Map`, `TypedArray`s, `DataView`, `null`, `undefined`, and `NaN` values. Complex values (eg, Objects, Arrays, Sets, Maps, etc) are traversed recursively.\n\n> **Important:**\n> * key order **within Objects** does not matter\n> * value order **within Arrays** _does_ matter\n> * values **within Sets and Maps** use value equality\n> * keys **within Maps** use value equality\n\n\n## Install\n\n```\n$ npm install --save dequal\n```\n\n## Modes\n\nThere are two \"versions\" of `dequal` available:\n\n#### `dequal`\n> **Size (gzip):** 489 bytes<br>\n> **Availability:** [CommonJS](https://unpkg.com/dequal/dist/index.js), [ES Module](https://unpkg.com/dequal/dist/index.mjs), [UMD](https://unpkg.com/dequal/dist/index.min.js)\n\n#### `dequal/lite`\n> **Size (gzip):** 304 bytes<br>\n> **Availability:** [CommonJS](https://unpkg.com/dequal/lite/index.js), [ES Module](https://unpkg.com/dequal/lite/index.mjs)\n\n|  | IE9+ | Number | String | Date | RegExp | Object | Array | Class | Set | Map | ArrayBuffer | [TypedArray](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects) | [DataView](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView) |\n|-|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|\n| `dequal` | :x: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: |\n| `dequal/lite` | :+1: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x: | :x: | :x: | :x: | :x: |\n\n> <sup>**Note:** Table scrolls horizontally!</sup>\n\n## Usage\n\n```js\nimport { dequal } from 'dequal';\n\ndequal(1, 1); //=> true\ndequal({}, {}); //=> true\ndequal('foo', 'foo'); //=> true\ndequal([1, 2, 3], [1, 2, 3]); //=> true\ndequal(dequal, dequal); //=> true\ndequal(/foo/, /foo/); //=> true\ndequal(null, null); //=> true\ndequal(NaN, NaN); //=> true\ndequal([], []); //=> true\ndequal(\n  [{ a:1 }, [{ b:{ c:[1] } }]],\n  [{ a:1 }, [{ b:{ c:[1] } }]]\n); //=> true\n\ndequal(1, '1'); //=> false\ndequal(null, undefined); //=> false\ndequal({ a:1, b:[2,3] }, { a:1, b:[2,5] }); //=> false\ndequal(/foo/i, /bar/g); //=> false\n```\n\n## API\n\n### dequal(foo, bar)\nReturns: `Boolean`\n\nBoth `foo` and `bar` can be of any type.<br>\nA `Boolean` is returned indicating if the two were deeply equal.\n\n\n## Benchmarks\n\n> Running Node v10.13.0\n\nThe benchmarks can be found in the [`/bench`](/bench) directory. They are separated into two categories:\n\n* `basic` – compares an object comprised of `String`, `Number`, `Date`, `Array`, and `Object` values.\n* `complex` – like `basic`, but adds `RegExp`, `Map`, `Set`, and `Uint8Array` values.\n\n> **Note:** Only candidates that pass validation step(s) are listed. <br>For example, `fast-deep-equal/es6` handles `Set` and `Map` values, but uses _referential equality_ while those listed use _value equality_.\n\n```\nLoad times:\n  assert             0.109ms\n  util               0.006ms\n  fast-deep-equal    0.479ms\n  lodash/isequal    22.826ms\n  nano-equal         0.417ms\n  dequal             0.396ms\n  dequal/lite        0.264ms\n\nBenchmark :: basic\n  assert.deepStrictEqual  x    325,262 ops/sec ±0.57% (94 runs sampled)\n  util.isDeepStrictEqual  x    318,812 ops/sec ±0.87% (94 runs sampled)\n  fast-deep-equal         x  1,332,393 ops/sec ±0.36% (93 runs sampled)\n  lodash.isEqual          x    269,129 ops/sec ±0.59% (95 runs sampled)\n  nano-equal              x  1,122,053 ops/sec ±0.36% (96 runs sampled)\n  dequal/lite             x  1,700,972 ops/sec ±0.31% (94 runs sampled)\n  dequal                  x  1,698,972 ops/sec ±0.63% (97 runs sampled)\n\nBenchmark :: complex\n  assert.deepStrictEqual  x    124,518 ops/sec ±0.64% (96 runs sampled)\n  util.isDeepStrictEqual  x    125,113 ops/sec ±0.24% (96 runs sampled)\n  lodash.isEqual          x     58,677 ops/sec ±0.49% (96 runs sampled)\n  dequal                  x    345,386 ops/sec ±0.27% (96 runs sampled)\n```\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/dequal/-/dequal-2.0.3.tgz#2644214f1997d39ed0ee0ece72335490a7ac67be",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/dequal/-/dequal-2.0.3.tgz",
    "hash": "2644214f1997d39ed0ee0ece72335490a7ac67be",
    "integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
    "registry": "npm",
    "packageName": "dequal",
    "cacheIntegrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA== sha1-JkQhTxmX057Q7g7OcjNUkKesZ74="
  },
  "registry": "npm",
  "hash": "2644214f1997d39ed0ee0ece72335490a7ac67be"
}