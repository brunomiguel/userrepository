{
  "manifest": {
    "name": "add-stream",
    "version": "1.0.0",
    "description": "Append the contents of one stream onto another.",
    "main": "index.js",
    "scripts": {
      "test": "mocha",
      "cover": "istanbul cover node_modules/.bin/_mocha -- -u exports -R spec"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/wilsonjackson/add-stream"
    },
    "keywords": [
      "stream",
      "append",
      "add",
      "concat",
      "gulpfriendly"
    ],
    "author": {
      "name": "Majid Burney",
      "email": "moocow@euphoricsoup.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/wilsonjackson/add-stream/issues"
    },
    "homepage": "https://github.com/wilsonjackson/add-stream",
    "dependencies": {},
    "devDependencies": {
      "chai": "^1.10.0",
      "event-stream": "^3.1.7",
      "istanbul": "^0.3.4",
      "mocha": "^2.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-add-stream-1.0.0-integrity/node_modules/add-stream/package.json",
    "readmeFilename": "README.md",
    "readme": "# add-stream [![Build Status](https://travis-ci.org/wilsonjackson/add-stream.svg?branch=master)](https://travis-ci.org/wilsonjackson/add-stream)\n\n> Append the contents of one stream onto another.\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar es = require('event-stream');\nvar addStream = require('add-stream');\n\n// Append strings/buffers\nfs.createReadStream('1.txt') // 1.txt contains: number1\n\t.pipe(addStream(fs.createReadStream('2.txt'))) // 2.txt contains: number2\n\t.pipe(fs.createWriteStream('appended.txt')); // appended.txt contains: number1number2\n\n// Append object streams\nes.readArray([1, 2, 3])\n\t.pipe(addStream.obj(es.readArray([4, 5, 6])))\n\t.pipe(es.writeArray(function (err, array) {\n\t\tconsole.log(array); // [ 1, 2, 3, 4, 5, 6 ]\n\t}));\n```\n\n## API\n\n### var transformStream = addStream(stream, opts = {})\n\nCreate a transform stream that appends the contents of `stream` onto whatever\nis piped into it. Options are passed to the transform stream's constructor.\n\n### var transformStream = addStream.obj(stream, opts = {})\n\nA convenient shortcut for `addStream(stream, {objectMode: true})`.\n\n## License\n\nMIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/add-stream/-/add-stream-1.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/add-stream/-/add-stream-1.0.0.tgz",
    "hash": "",
    "integrity": "sha1-anmQQ3ynNtXhKI25K9MmbV9csqo=",
    "registry": "npm",
    "packageName": "add-stream",
    "cacheIntegrity": "sha512-qQLMr+8o0WC4FZGQTcJiKBVC59JylcPSrTtk6usvmIDFUOCKegapy1VHQwRbFMOFyb/inzUVqHs+eMYKDM1YeQ== sha1-anmQQ3ynNtXhKI25K9MmbV9csqo="
  },
  "registry": "npm",
  "hash": "a902ccafef28d160b81591904dc262281542e7d27295c3d2ad3b64eaeb2f9880c550e08a7a06a9cb554743045b14c385c9bfe29f3515a87b3e78c60a0ccd5879"
}