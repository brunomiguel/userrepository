{
  "manifest": {
    "name": "capture-exit",
    "version": "2.0.0",
    "description": "safely cleanup in signal handlers",
    "main": "index.js",
    "scripts": {
      "test": "mocha test",
      "test:debug": "mocha debug test"
    },
    "files": [
      "index.js"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/stefanpenner/capture-exit.git"
    },
    "author": {
      "name": "Stefan Penner",
      "email": "stefan.penner@gmail.com"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/stefanpenner/capture-exit/issues"
    },
    "homepage": "https://github.com/stefanpenner/capture-exit#readme",
    "devDependencies": {
      "chai": "^4.2.0",
      "execa": "1.0.0",
      "mocha": "^5.2.0",
      "ora": "^3.0.0"
    },
    "dependencies": {
      "rsvp": "^4.8.4"
    },
    "engines": {
      "node": "6.* || 8.* || >= 10.*"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-capture-exit-2.0.0-fb953bfaebeb781f62898239dabb426d08a509a4-integrity/node_modules/capture-exit/package.json",
    "readmeFilename": "README.md",
    "readme": "# capture-exit\n\n[![Build status](https://ci.appveyor.com/api/projects/status/8044m918rwic8b9n/branch/master?svg=true)](https://ci.appveyor.com/project/embercli/capture-exit/branch/master)\n[![Build Status](https://travis-ci.org/ember-cli/capture-exit.svg?branch=master)](https://travis-ci.org/ember-cli/capture-exit)\n\nAllow cooprative async exit handlers, we unfortunately must hijack\nprocess.exit.\n\nIt allows a handler to ensure exit, without that exit handler impeding other\nsimilar handlers\n\nfor example, see: [sindresorhus/ora#27](https://github.com/sindresorhus/ora/issues/27)\n\nDifferences between `process.on('exit')` and `captureExit.onExit(...)` => https://github.com/ember-cli/capture-exit/issues/12\n\n\n### Installation\n\n```sh\nyarn add capture-exit\n// or\nnpm install --save capture-exit\n```\n\n### Usage\n\n```js\n// as early in startup as possible\nrequire('capture-exit').captureExit();\n\n// when you want to schedule some work on exit:\nfunction onExit() {\n  return something.processWillExit(); // you can return promises, which will pause exit until fulfilled\n}\n\nrequire('capture-exit').onExit(onExit); // add an exit handler\nrequire('capture-exit').offExit(onExit); // allows one to remove an exit handle if it is not longer required\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/capture-exit/-/capture-exit-2.0.0.tgz#fb953bfaebeb781f62898239dabb426d08a509a4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/capture-exit/-/capture-exit-2.0.0.tgz",
    "hash": "fb953bfaebeb781f62898239dabb426d08a509a4",
    "integrity": "sha512-PiT/hQmTonHhl/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbduLeeBkxEaYXUOUrRq6g==",
    "registry": "npm",
    "packageName": "capture-exit",
    "cacheIntegrity": "sha512-PiT/hQmTonHhl/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbduLeeBkxEaYXUOUrRq6g== sha1-+5U7+uvreB9iiYI52rtCbQilCaQ="
  },
  "registry": "npm",
  "hash": "fb953bfaebeb781f62898239dabb426d08a509a4"
}