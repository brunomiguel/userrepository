{
  "manifest": {
    "name": "dir-compare",
    "version": "3.3.0",
    "description": "Node JS directory compare",
    "main": "build/src/index.js",
    "types": "build/src/index.d.ts",
    "repository": {
      "type": "git",
      "url": "https://github.com/gliviu/dir-compare"
    },
    "keywords": [
      "compare",
      "directory",
      "folder"
    ],
    "files": [
      "build/src"
    ],
    "scripts": {
      "prepublishOnly": "npm run clean && npm run build && npm run lint",
      "clean": "rm -rf build && rm -rf .nyc_output && rm -rf coverage",
      "copydeps": "copyfiles \"test/expected/**\" test/testdir.tar \"test/extended/res/**\" build",
      "build": "tsc && npm run copydeps",
      "lint": "eslint ./src ./test --ext .ts,.js",
      "watch": "tsc-watch --onSuccess 'npm run copydeps --silent'",
      "pretest": "npm install && npm run build",
      "test": "node build/test/runTests.js",
      "extest": "npm run pretest && ./test/extended/init.sh && test/extended/runall.sh",
      "coverage": "npx nyc --exclude \"build/test/**\" --reporter=lcov npm test && npx nyc report",
      "toc": "npx markdown-toc README.md; echo \n",
      "docs": "typedoc --includeVersion --excludeExternals --theme minimal --readme none --gitRevision master --toc compare,compareSync,fileCompareHandlers,Options,Result --out docs ./src/index.ts"
    },
    "dependencies": {
      "buffer-equal": "^1.0.0",
      "minimatch": "^3.0.4"
    },
    "devDependencies": {
      "@types/node": "^12.11.7",
      "@typescript-eslint/eslint-plugin": "^4.14.0",
      "@typescript-eslint/parser": "^4.14.0",
      "colors": "^1.4.0",
      "copyfiles": "^1.2.0",
      "eslint": "^7.18.0",
      "memory-streams": "0.1.0",
      "semver": "5.6.0",
      "tar-fs": "2.1.1",
      "temp": "0.9.0",
      "ts-node": "9.1.1",
      "tsc-watch": "^4.2.9",
      "typedoc": "0.20.16",
      "typescript": "^4.1.3"
    },
    "author": {
      "name": "Liviu Grigorescu"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/gliviu/dir-compare/issues"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-dir-compare-3.3.0-2c749f973b5c4b5d087f11edaae730db31788416-integrity/node_modules/dir-compare/package.json",
    "readmeFilename": "README.md",
    "readme": "dir-compare\n==========\nNode JS directory compare\n\n**!! Important !!** Starting with v3.0.0 the CLI utility has been moved to [dir-compare-cli](https://www.npmjs.com/package/dir-compare-cli). \n\n[![Build status](https://ci.appveyor.com/api/projects/status/fpnqkr2gfg7pwkxk/branch/master?svg=true)](https://ci.appveyor.com/project/gliviu/dir-compare)\n[![codecov.io](http://codecov.io/github/gliviu/dir-compare/coverage.svg?branch=master)](http://codecov.io/github/gliviu/dir-compare?branch=master)\n\n- [Installation](#installation)\n- [Library](#library)\n  * [Use](#use)\n  * [Api](#api)\n  * [Glob patterns](#glob-patterns)\n  * [Custom file content comparators](#custom-file-content-comparators)\n    + [Ignore line endings and white spaces](#ignore-line-endings-and-white-spaces)\n  * [Custom name comparators](#custom-name-comparators)\n  * [Custom result builder](#custom-result-builder)\n  * [Symbolic links](#symbolic-links)\n  * [Handling permission denied errors](#handling-permission-denied-errors)\n- [UI tools](#ui-tools)\n- [Changelog](#changelog)\n\n# Installation\n```bash\nnpm install dir-compare\n```\n\n# Library\n\n## Use\n```javascript\nconst dircompare = require('dir-compare');\n\nconst options = { compareSize: true };\n// Multiple compare strategy can be used simultaneously - compareSize, compareContent, compareDate, compareSymlink.\n// If one comparison fails for a pair of files, they are considered distinct.\nconst path1 = '...';\nconst path2 = '...';\n\n// Synchronous\nconst res = dircompare.compareSync(path1, path2, options)\nprint(res)\n\n// Asynchronous\ndircompare.compare(path1, path2, options)\n  .then(res => print(res))\n  .catch(error => console.error(error));\n\n\nfunction print(result) {\n  console.log('Directories are %s', result.same ? 'identical' : 'different')\n\n  console.log('Statistics - equal entries: %s, distinct entries: %s, left only entries: %s, right only entries: %s, differences: %s',\n    result.equal, result.distinct, result.left, result.right, result.differences)\n\n  result.diffSet.forEach(dif => console.log('Difference - name1: %s, type1: %s, name2: %s, type2: %s, state: %s',\n    dif.name1, dif.type1, dif.name2, dif.type2, dif.state))\n}\n```\n\nTypescript\n```typescript\nimport { compare, compareSync, Options, Result } from \"dir-compare\";\nconst path1 = '...';\nconst path2 = '...';\nconst options: Options = { compareSize: true };\n\nconst res: Result = compareSync(path1, path2, options);\nconsole.log(res)\n\ncompare(path1, path2, options)\n  .then(res => console.log(res))\n  .catch(error => console.error(error));\n```\n\n## Api\n\n```typescript\ncompare(path1: string, path2: string, options?: Options): Promise<Result>\ncompareSync(path1: string, path2: string, options?: Options): Result\n```\nMore details can be found in the reference documentation:\n* [compare](https://gliviu.github.io/dc-api/index.html#compare)\n* [compareSync](https://gliviu.github.io/dc-api/index.html#comparesync)\n* [Options](https://gliviu.github.io/dc-api/interfaces/options.html) \n* [Result](https://gliviu.github.io/dc-api/interfaces/result.html)\n\nCommon options:\n* [compareSize](https://gliviu.github.io/dc-api/interfaces/options.html#comparesize)\n* [compareContent](https://gliviu.github.io/dc-api/interfaces/options.html#comparecontent)\n* [compareDate](https://gliviu.github.io/dc-api/interfaces/options.html#comparedate) \n* [excludeFilter](https://gliviu.github.io/dc-api/interfaces/options.html#excludefilter)\n* [includeFilter](https://gliviu.github.io/dc-api/interfaces/options.html#includefilter) \n* [ignoreCase](https://gliviu.github.io/dc-api/interfaces/options.html#ignorecase) \n* [skipSubdirs](https://gliviu.github.io/dc-api/interfaces/options.html#skipsubdirs)\n* [skipEmptyDirs](https://gliviu.github.io/dc-api/interfaces/options.html#skipemptydirs)\n\n##  Glob patterns\n[Minimatch](https://www.npmjs.com/package/minimatch) patterns are used to include/exclude files to be compared.\n\nThe pattern is matched against the relative path of the entry being compared.\n\nFollowing examples assume we are comparing two [dir-compare](https://github.com/gliviu/dir-compare) code bases.\n\n\n```javascript\nconst options = { \n  excludeFilter: \".git,node_modules\",   //  exclude git and node modules directories  \n  excludeFilter: \"expected\"         ,   //  exclude '/tests/expected' directory  \n  excludeFilter: \"/tests/expected\"  ,   //  exclude '/tests/expected' directory  \n  excludeFilter: \"**/expected\"      ,   //  exclude '/tests/expected' directory  \n  excludeFilter: \"**/tests/**/*.js\" ,   //  exclude all js files in '/tests' directory and subdirectories  \n\n  includeFilter: \"*.js,*.yml\"       ,   //  include js and yaml files  \n  includeFilter: \"/tests/**/*.js\"   ,   //  include all js files in '/tests' directory and subdirectories  \n  includeFilter: \"**/tests/**/*.ts\"     //  include all js files in '/tests' directory and subdirectories  \n}\n```\n\n## Custom file content comparators\nBy default file content is binary compared. As of version 1.5.0 custom file comparison handlers may be specified.\n\nCustom handlers are specified by `compareFileSync` and `compareFileAsync` options which correspond to `dircompare.compareSync()` or `dircompare.compare()` methods.\n\nA couple of handlers are included in the library:\n* binary sync compare - `dircompare.fileCompareHandlers.defaultFileCompare.compareSync`\n* binary async compare - `dircompare.fileCompareHandlers.defaultFileCompare.compareAsync`\n* text sync compare - `dircompare.fileCompareHandlers.lineBasedFileCompare.compareSync`\n* text async compare - `dircompare.fileCompareHandlers.lineBasedFileCompare.compareAsync`\n\nUse [defaultFileCompare.js](https://github.com/gliviu/dir-compare/blob/master/src/fileCompareHandler/defaultFileCompare.js) as an example to create your own.\n\n### Ignore line endings and white spaces\nLine based comparator can be used to ignore line ending and white space differences.\n```javascript\nconst dircompare = require('dir-compare');\n\nconst options = {\n  compareContent: true,\n  compareFileSync: dircompare.fileCompareHandlers.lineBasedFileCompare.compareSync,\n  compareFileAsync: dircompare.fileCompareHandlers.lineBasedFileCompare.compareAsync,\n  ignoreLineEnding: true,      // Ignore crlf/lf line ending differences\n  ignoreWhiteSpaces: true,     // Ignore white spaces at the beginning and ending of a line (similar to 'diff -b')\n  ignoreAllWhiteSpaces: true,  // Ignore all white space differences (similar to 'diff -w')\n  ignoreEmptyLines: true       // Ignores differences caused by empty lines (similar to 'diff -B')\n};\n\nconst path1 = '...';\nconst path2 = '...';\nconst res = dircompare.compareSync(path1, path2, options);\nconsole.log(res)\n\ndircompare.compare(path1, path2, options)\n.then(res => console.log(res))\n```\n## Custom name comparators\nIf [default](https://github.com/gliviu/dir-compare/blob/master/src/nameCompare/defaultNameCompare.js) name comparison is not enough, custom behavior can be specified with [compareNameHandler](https://gliviu.github.io/dc-api/index.html#comparenamehandler) option.\nFollowing example adds the possibility to ignore file extensions.\n```typescript\nimport { Options, compare } from 'dir-compare'\nimport path from 'path'\n\nconst options: Options = {\n    compareSize: false,                    // compare only name by disabling size and content criteria\n    compareContent: false,\n    compareNameHandler: customNameCompare, // new name comparator used to ignore extensions\n    ignoreExtension: true,                 // supported by the custom name compare below\n};\n\nfunction customNameCompare(name1: string, name2: string, options: Options) {\n    if (options.ignoreCase) {\n        name1 = name1.toLowerCase()\n        name2 = name2.toLowerCase()\n    }\n    if (options.ignoreExtension) {\n        name1 = path.basename(name1, path.extname(name1))\n        name2 = path.basename(name2, path.extname(name2))\n    }\n    return ((name1 === name2) ? 0 : ((name1 > name2) ? 1 : -1))\n}\n\nconst path1 = '/tmp/a';\nconst path2 = '/tmp/b';\n\nconst res = compare(path1, path2, options).then(res => {\n    console.log(`Same: ${res.same}`)\n    if (!res.diffSet) {\n        return\n    }\n    res.diffSet.forEach(dif => console.log(`${dif.name1} ${dif.name2} ${dif.state}`))\n})\n\n// Outputs\n// icon.svg icon.png equal\n// logo.svg logo.jpg equal\n```\n\n## Custom result builder\n[Result builder](https://gliviu.github.io/dc-api/index.html#resultbuilder) is called for each pair of entries encountered during comparison. Its purpose is to append entries in `diffSet` and eventually update `statistics` object with new stats.\n\nIf needed it can be replaced with custom implementation.\n\n```javascript\nconst dircompare = require(\"dircompare\")\n\nconst customResultBuilder = function (entry1, entry2, state, level, relativePath, options, statistics, diffSet, reason) {\n    ...\n}\n\nconst options = {\n    compareSize: true,\n    resultBuilder: customResultBuilder\n}\nconst res = dircompare.compareSync('...', '...', options)\n\n```\n\nThe [default](https://github.com/gliviu/dir-compare/blob/master/src/resultBuilder/defaultResultBuilderCallback.js) builder can be used as an example.\n\n## Symbolic links\nUnless `compareSymlink` option is used, symbolic links are resolved and any comparison is applied to the file/directory they point to.\n\nCircular loops are handled by breaking the loop as soon as it is detected.\n\nVersion `1.x` treats broken links as `ENOENT: no such file or directory`.  \nSince `2.0` they are treated as a special type of entry - `broken-link` - and are available as stats (`totalBrokenLinks`, `distinctBrokenLinks`, ...).\n\nUsing `compareSymlink` option causes `dircompare` to check symlink values for equality.\nIn this mode two entries with identical name are considered different if\n* one is symlink, the other is not\n* both are symlinks but point to different locations\n\nThese rules are applied in addition to the other comparison modes; ie. by content, by size...\n\nIf entries are different because of symlinks, `reason` will be `different-symlink`. Also statistics summarizes differences caused by symbolik links.\n\n## Handling permission denied errors\nUnreadable files or directories are normally reported as errors. The comparison will be intrerrupted with an `EACCES` exception.\nThis behavior can be altered with [Options.handlePermissionDenied](https://gliviu.github.io/dc-api/interfaces/options.html#handlepermissiondenied).\n\n# UI tools\n* [dir-compare-cli](https://github.com/gliviu/dir-compare-cli)\n* [Visual Studio Code - Compare Folders](https://marketplace.visualstudio.com/items?itemName=moshfeu.compare-folders)\n\n# Changelog\n* v3.3.0 Added `skipEmptyDirs` option\n* v3.2.0 [Handle permission denied errors](#handling-permission-denied-errors)\n* v3.1.0 Added `ignoreAllWhiteSpaces` and `ignoreEmptyLines` options\n* v3.0.0 Moved CLI component into separate project [dir-compare-cli](https://github.com/gliviu/dir-compare-cli)\n* v2.4.0 New option to customize file/folder name comparison\n* v2.3.0 Fixes\n* v2.1.0 Removed [bluebird](https://github.com/petkaantonov/bluebird/#note) dependency\n* v2.0.0\n  * New option to compare symlinks.\n  * New field indicating reason for two entries being distinct.\n  * Improved command line output format.\n  * Tests are no longer part of published package.\n  * Generated [Api](#api) documentation.\n  \n  Breaking changes:\n  * Broken links are no longer treated as errors. As a result there are new statistics (leftBrokenLinks, rightBrokenLinks, distinctBrokenLinks, totalBrokenLinks) and new entry type - broken-link.\n    Details in [Symbolic links](#symbolic-links).\n  * Typescript correction: new interface `Result` replaced `Statistics`.\n* v1.8.0 \n    * globstar patterns\n    * typescript corrections\n    * removed support for node 0.11, 0.12, iojs\n* v1.7.0 performance improvements\n* v1.6.0 typescript support\n* v1.5.0 added option to ignore line endings and white space differences\n* v1.3.0 added date tolerance option\n* v1.2.0 added compare by date option\n* v1.1.0\n    * detect symlink loops\n    * improved color scheme for command line utility\n* v1.0.0\n    * asynchronous processing\n    * new library options: noDiffSet, resultBuilder\n    * new statistics: distinctFiles, equalFiles, leftFiles, rightFiles, distinctDirs, equalDirs, leftDirs, rightDirs\n    * new --async command line option\n    * Fix for https://github.com/tj/commander.js/issues/125\n* v0.0.3 Fix fille ordering issue for newer node versions\n\n",
    "licenseText": "Copyright 2014 Liviu Grigorescu (grigoresculiviu@gmail.com)\n\nThis project is free software released under the MIT license:\nhttp://www.opensource.org/licenses/mit-license.php \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/dir-compare/-/dir-compare-3.3.0.tgz#2c749f973b5c4b5d087f11edaae730db31788416",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/dir-compare/-/dir-compare-3.3.0.tgz",
    "hash": "2c749f973b5c4b5d087f11edaae730db31788416",
    "integrity": "sha512-J7/et3WlGUCxjdnD3HAAzQ6nsnc0WL6DD7WcwJb7c39iH1+AWfg+9OqzJNaI6PkBwBvm1mhZNL9iY/nRiZXlPg==",
    "registry": "npm",
    "packageName": "dir-compare",
    "cacheIntegrity": "sha512-J7/et3WlGUCxjdnD3HAAzQ6nsnc0WL6DD7WcwJb7c39iH1+AWfg+9OqzJNaI6PkBwBvm1mhZNL9iY/nRiZXlPg== sha1-LHSflztcS10IfxHtqucw2zF4hBY="
  },
  "registry": "npm",
  "hash": "2c749f973b5c4b5d087f11edaae730db31788416"
}