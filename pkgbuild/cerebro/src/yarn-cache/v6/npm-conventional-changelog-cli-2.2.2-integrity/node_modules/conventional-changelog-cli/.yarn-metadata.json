{
  "manifest": {
    "name": "conventional-changelog-cli",
    "version": "2.2.2",
    "description": "Generate a changelog from git metadata",
    "bugs": {
      "url": "https://github.com/conventional-changelog/conventional-changelog/issues"
    },
    "homepage": "https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli#readme",
    "repository": {
      "type": "git",
      "url": "https://github.com/conventional-changelog/conventional-changelog.git"
    },
    "author": {
      "name": "Steve Mao",
      "email": "maochenyan@gmail.com",
      "url": "https://github.com/stevemao"
    },
    "bin": {
      "conventional-changelog": "cli.js"
    },
    "files": [
      "cli.js"
    ],
    "keywords": [
      "cli",
      "cli-app",
      "conventional-changelog",
      "conventional",
      "changelog",
      "log"
    ],
    "engines": {
      "node": ">=10"
    },
    "dependencies": {
      "add-stream": "^1.0.0",
      "conventional-changelog": "^3.1.24",
      "lodash": "^4.17.15",
      "meow": "^8.0.0",
      "tempfile": "^3.0.0"
    },
    "scripts": {
      "test-windows": "echo 'make work on windows'"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-conventional-changelog-cli-2.2.2-integrity/node_modules/conventional-changelog-cli/package.json",
    "readmeFilename": "README.md",
    "readme": "# conventional-changelog-cli\n\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-image]][daviddm-url] [![Coverage percentage][coveralls-image]][coveralls-url]\n\n> Generate a changelog from git metadata\n\n*[Changelog?](https://speakerdeck.com/stevemao/compose-a-changelog)*\n\n**Note** You don't have to use the angular commit convention. For the best result of the tool to tokenize you commit and produce flexible output, it's recommended to use a commit convention.\n\n\n## Quick start\n\n```sh\n$ npm install -g conventional-changelog-cli\n$ cd my-project\n$ conventional-changelog -p angular -i CHANGELOG.md -s\n```\n\nThis will *not* overwrite any previous changelogs. The above generates a changelog based on commits since the last semver tag that matches the pattern of \"Feature\", \"Fix\", \"Performance Improvement\" or \"Breaking Changes\".\n\nIf this is your first time using this tool and you want to generate all previous changelogs, you could do\n\n```sh\n$ conventional-changelog -p angular -i CHANGELOG.md -s -r 0\n```\n\nThis *will* overwrite any previous changelogs if they exist.\n\nAll available command line parameters can be listed using CLI: `conventional-changelog --help`.\n\n**Hint:** You can alias your command or add it to your package.json. EG: `\"changelog\": \"conventional-changelog -p angular -i CHANGELOG.md -s -r 0\"`.\n\nTo fully customize the tool, please checkout [conventional-changelog](https://github.com/ajoslin/conventional-changelog) and [conventional-changelog-core](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-core) docs. You can find more details there. **Note: `config` here can work with `preset`, which is different than `options.config` in conventional-changelog.**\n\n\n## Example output\n\n- https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog/CHANGELOG.md\n- https://github.com/karma-runner/karma/blob/master/CHANGELOG.md\n- https://github.com/btford/grunt-conventional-changelog/blob/master/CHANGELOG.md\n\n\n## Recommended workflow\n\n1. Make changes\n1. Commit those changes\n1. Make sure Travis turns green\n1. Bump version in `package.json`\n1. `conventionalChangelog`\n1. Commit `package.json` and `CHANGELOG.md` files\n1. Tag\n1. Push\n\nThe reason why you should commit and tag after `conventionalChangelog` is that the CHANGELOG should be included in the new release, hence `gitRawCommitsOpts.from` defaults to the latest semver tag.\n\n\n### With `npm version`\n\nUsing the npm scripts to our advantage with the following hooks:\n\n```json\n{\n  \"scripts\": {\n    \"version\": \"conventional-changelog -p angular -i CHANGELOG.md -s && git add CHANGELOG.md\"\n  }\n}\n```\n\nYou could follow the following workflow\n\n1. Make changes\n1. Commit those changes\n1. Pull all the tags\n1. Run the [`npm version [patch|minor|major]`](https://docs.npmjs.com/cli/version) command\n1. Push\n\nYou could optionally add a `preversion` script to package your project or running a full suit of test.\nAnd a `postversion` script to clean your system and push your release and tags.\n\nBy adding a `.npmrc` you could also automate your commit message and set your tag prefix as such:\n\n```\ntag-version-prefix=\"\"\nmessage=\"chore(release): %s :tada:\"\n```\n\n\n## Why\n\n- Used by AngularJS, JSHint and related projects.\n- Easy fully automate changelog generation. You could still add more points on top of it.\n- Ignoring reverted commits, templating with [handlebars.js](https://github.com/wycats/handlebars.js) and links to references, etc. Open an [issue](../../issues/new) if you want more reasonable features.\n- Intelligently setup defaults but yet fully configurable with presets of [popular projects](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog#preset).\n- Everything internally or externally is pluggable.\n- A lot of tests and actively maintained.\n\n### Problems with [github-changelog-generator](https://github.com/skywinder/github-changelog-generator) or similar projects\n\n- Opinionated on how to write commits, issues or PRs.\n- No or partially support reference links.\n- Not system agnostic. Only support GitHub.\n- No template support. The output is mostly certain format of markdown.\n- No presets of popular commit message conventions.\n- Not modularized. Over the years [modularization is proven to be the best practice](https://github.com/sindresorhus/ama/issues/10#issuecomment-117766328).\n- No tests or coverage is too low. Program might be buggy.\n- Do not read your project's environment.\n- No or few task runner or build tool integrations.\n\n\n## API\n\nPlease use [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) \n\n\n## License\n\nMIT Â© [Steve Mao](https://github.com/stevemao)\n\n\n[npm-image]: https://badge.fury.io/js/conventional-changelog-cli.svg\n[npm-url]: https://npmjs.org/package/conventional-changelog-cli\n[travis-image]: https://travis-ci.org/conventional-changelog/conventional-changelog-cli.svg?branch=master\n[travis-url]: https://travis-ci.org/conventional-changelog/conventional-changelog-cli\n[daviddm-image]: https://david-dm.org/conventional-changelog/conventional-changelog-cli.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/conventional-changelog/conventional-changelog-cli\n[coveralls-image]: https://coveralls.io/repos/conventional-changelog/conventional-changelog-cli/badge.svg\n[coveralls-url]: https://coveralls.io/r/conventional-changelog/conventional-changelog-cli\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Steve Mao <maochenyan@gmail.com> (https://github.com/stevemao)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/conventional-changelog-cli/-/conventional-changelog-cli-2.2.2.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/conventional-changelog-cli/-/conventional-changelog-cli-2.2.2.tgz",
    "hash": "",
    "integrity": "sha512-8grMV5Jo8S0kP3yoMeJxV2P5R6VJOqK72IiSV9t/4H5r/HiRqEBQ83bYGuz4Yzfdj4bjaAEhZN/FFbsFXr5bOA==",
    "registry": "npm",
    "packageName": "conventional-changelog-cli",
    "cacheIntegrity": "sha512-8grMV5Jo8S0kP3yoMeJxV2P5R6VJOqK72IiSV9t/4H5r/HiRqEBQ83bYGuz4Yzfdj4bjaAEhZN/FFbsFXr5bOA== sha1-mndGzt6SxqjyfcRmku+q377WDao="
  },
  "registry": "npm",
  "hash": "f20acc579268f12d243f7ca831e2715763f947a5493aa2bbd8889257db7fe07e6bfc7891a84050f376d81aecf86337dd8f86e368012164dfc515bb055ebe5b38"
}