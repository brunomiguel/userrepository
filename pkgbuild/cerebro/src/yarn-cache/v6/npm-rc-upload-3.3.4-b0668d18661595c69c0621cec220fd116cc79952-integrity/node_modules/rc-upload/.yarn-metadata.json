{
  "manifest": {
    "name": "rc-upload",
    "version": "3.3.4",
    "description": "upload ui component for react",
    "keywords": [
      "react",
      "react-component",
      "react-upload",
      "upload"
    ],
    "homepage": "http://github.com/react-component/upload",
    "repository": {
      "type": "git",
      "url": "git@github.com:react-component/upload.git"
    },
    "bugs": {
      "url": "http://github.com/react-component/upload/issues"
    },
    "license": "MIT",
    "files": [
      "lib",
      "es"
    ],
    "main": "./lib/index",
    "module": "./es/index",
    "scripts": {
      "start": "dumi dev",
      "docs:build": "dumi build",
      "docs:deploy": "npm run docs:build && gh-pages -d .doc",
      "compile": "father build",
      "prepublishOnly": "npm run compile && np --yolo --no-publish",
      "postpublish": "npm run docs:deploy",
      "lint": "eslint src/ --ext .ts,.tsx,.jsx,.js,.md",
      "prettier": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
      "test": "father test",
      "coverage": "father test --coverage",
      "now-build": "npm run docs:build"
    },
    "devDependencies": {
      "@types/jest": "^26.0.0",
      "@types/react": "^16.9.2",
      "@types/react-dom": "^16.9.0",
      "@umijs/fabric": "^2.0.0",
      "axios": "^0.20.0",
      "co-busboy": "^1.3.0",
      "coveralls": "^3.0.3",
      "cross-env": "^7.0.0",
      "dumi": "^1.0.37",
      "enzyme": "^3.1.1",
      "enzyme-adapter-react-16": "^1.0.1",
      "enzyme-to-json": "^3.1.2",
      "eslint": "^7.1.0",
      "father": "^2.22.0",
      "fs-extra": "^9.0.0",
      "gh-pages": "^3.1.0",
      "np": "^7.0.0",
      "raf": "^3.4.0",
      "rc-tools": "8.x",
      "react": "^16.0.0",
      "react-dom": "^16.0.0",
      "sinon": "^9.0.2",
      "typescript": "^4.0.2",
      "vinyl-fs": "^3.0.3"
    },
    "dependencies": {
      "@babel/runtime": "^7.10.1",
      "classnames": "^2.2.5",
      "rc-util": "^5.2.0"
    },
    "jest": {
      "collectCoverageFrom": [
        "src/*"
      ],
      "coveragePathIgnorePatterns": [
        "src/IframeUploader.jsx"
      ],
      "transform": {
        "\\.tsx?$": "./node_modules/rc-tools/scripts/jestPreprocessor.js",
        "\\.jsx?$": "./node_modules/rc-tools/scripts/jestPreprocessor.js"
      }
    },
    "peerDependencies": {
      "react": ">=16.9.0",
      "react-dom": ">=16.9.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-rc-upload-3.3.4-b0668d18661595c69c0621cec220fd116cc79952-integrity/node_modules/rc-upload/package.json",
    "readmeFilename": "README.md",
    "readme": "# rc-upload\n\nReact Upload\n\n[![NPM version][npm-image]][npm-url] [![dumi](https://img.shields.io/badge/docs%20by-dumi-blue?style=flat-square)](https://github.com/umijs/dumi) [![build status][github-actions-image]][github-actions-url] [![Test coverage][coveralls-image]][coveralls-url] [![Dependencies][david-image]][david-url] [![DevDependencies][david-dev-image]][david-dev-url] [![npm download][download-image]][download-url] [![bundle size][bundlephobia-image]][bundlephobia-url]\n\n[npm-image]: https://img.shields.io/npm/v/rc-upload.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-upload\n[github-actions-image]: https://github.com/react-component/upload/workflows/CI/badge.svg\n[github-actions-url]: https://github.com/react-component/upload/actions\n[circleci-image]: https://img.shields.io/circleci/react-component/upload/master?style=flat-square\n[circleci-url]: https://circleci.com/gh/react-component/upload\n[coveralls-image]: https://img.shields.io/coveralls/react-component/upload.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/react-component/upload?branch=master\n[david-url]: https://david-dm.org/react-component/upload\n[david-image]: https://david-dm.org/react-component/upload/status.svg?style=flat-square\n[david-dev-url]: https://david-dm.org/react-component/upload?type=dev\n[david-dev-image]: https://david-dm.org/react-component/upload/dev-status.svg?style=flat-square\n[download-image]: https://img.shields.io/npm/dm/rc-upload.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-upload\n[bundlephobia-url]: https://bundlephobia.com/result?p=rc-upload\n[bundlephobia-image]: https://badgen.net/bundlephobia/minzip/rc-upload\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nhttp://localhost:8000/\n\nonline example: https://upload.react-component.vercel.app/\n\n## Feature\n\n* support IE11+, Chrome, Firefox, Safari\n\n## install\n\n[![rc-upload](https://nodei.co/npm/rc-upload.png)](https://npmjs.org/package/rc-upload)\n\n## Usage\n\n```js\nvar Upload = require('rc-upload');\nvar React = require('react');\nReact.render(<Upload />, container);\n```\n\n## API\n\n### props\n\n|name|type|default| description|\n|-----|---|--------|----|\n|name | string | file| file param post to server |\n|style | object | {}| root component inline style |\n|className | string | - | root component className |\n|disabled | boolean | false | whether disabled |\n|component | \"div\"|\"span\" | \"span\"| wrap component name |\n|action| string &#124; function(file): string &#124; Promise&lt;string&gt; | | form action url |\n|method | string | post | request method |\n|directory| boolean | false | support upload whole directory |\n|data| object/function(file) | | other data object to post or a function which returns a data object(a promise object which resolve a data object) |\n|headers| object | {} | http headers to post, available in modern browsers |\n|accept | string | | input accept attribute |\n|multiple | boolean | false | only support ie10+|\n|onStart | function| | start upload file |\n|onError| function| | error callback |\n|onSuccess | function | | success callback |\n|onProgress | function || progress callback, only for modern browsers|\n|beforeUpload| function |null| before upload check, return false or a rejected Promise will stop upload, only for modern browsers|\n|customRequest | function | null | provide an override for the default xhr behavior for additional customization|\n|withCredentials | boolean | false | ajax upload with cookie send |\n|openFileDialogOnClick | boolean | true | useful for drag only upload as it does not trigger on enter key or click event |\n|transformFile | function(file): Promise&lt;blob&gt; |  | transform file before request |\n\n#### onError arguments\n\n1. `err`: request error message\n2. `response`: request response, not support on iframeUpload\n3. `file`: upload file\n\n### onSuccess arguments\n\n1. `result`: response body\n2. `file`: upload file\n3. `xhr`: xhr header, only for modern browsers which support AJAX upload. since\n   2.4.0\n\n\n### customRequest\n\nAllows for advanced customization by overriding default behavior in AjaxUploader. Provide your own XMLHttpRequest calls to interface with custom backend processes or interact with AWS S3 service through the aws-sdk-js package.\n\ncustomRequest callback is passed an object with:\n\n* `onProgress: (event: { percent: number }): void`\n* `onError: (event: Error, body?: Object): void`\n* `onSuccess: (body: Object): void`\n* `data: Object`\n* `filename: String`\n* `file: File`\n* `withCredentials: Boolean`\n* `action: String`\n* `headers: Object`\n\n\n### methods\n\nabort(file?: File) => void: abort the uploading file\n\n## License\n\nrc-upload is released under the MIT license.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016-present react-component\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS \nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF \nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY \nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, \nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rc-upload/-/rc-upload-3.3.4.tgz#b0668d18661595c69c0621cec220fd116cc79952",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rc-upload/-/rc-upload-3.3.4.tgz",
    "hash": "b0668d18661595c69c0621cec220fd116cc79952",
    "integrity": "sha512-v2sirR4JL31UTHD/f0LGUdd+tpFaOVUTPeIEjAXRP9kRN8TFhqOgcXl5ixtyqj90FmtRUmKmafCv0EmhBQUHqQ==",
    "registry": "npm",
    "packageName": "rc-upload",
    "cacheIntegrity": "sha512-v2sirR4JL31UTHD/f0LGUdd+tpFaOVUTPeIEjAXRP9kRN8TFhqOgcXl5ixtyqj90FmtRUmKmafCv0EmhBQUHqQ== sha1-sGaNGGYVlcacBiHOwiD9EWzHmVI="
  },
  "registry": "npm",
  "hash": "b0668d18661595c69c0621cec220fd116cc79952"
}