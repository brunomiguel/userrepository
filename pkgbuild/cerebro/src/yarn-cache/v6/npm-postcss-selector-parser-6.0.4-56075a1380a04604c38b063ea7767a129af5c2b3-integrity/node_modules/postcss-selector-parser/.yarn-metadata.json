{
  "manifest": {
    "name": "postcss-selector-parser",
    "version": "6.0.4",
    "devDependencies": {
      "@babel/cli": "^7.2.3",
      "@babel/core": "^7.3.4",
      "@babel/plugin-proposal-class-properties": "^7.3.4",
      "@babel/preset-env": "^7.3.4",
      "@babel/register": "^7.0.0",
      "ava": "^1.3.1",
      "babel-eslint": "^10.0.1",
      "babel-plugin-add-module-exports": "^1.0.0",
      "coveralls": "^3.0.3",
      "del-cli": "^1.1.0",
      "eslint": "^5.15.1",
      "eslint-plugin-babel": "^5.3.0",
      "eslint-plugin-import": "^2.16.0",
      "glob": "^7.1.3",
      "minimist": "^1.2.0",
      "nyc": "^13.3.0",
      "postcss": "^7.0.14",
      "semver": "^5.6.0",
      "typescript": "^4.0.3"
    },
    "main": "dist/index.js",
    "types": "postcss-selector-parser.d.ts",
    "files": [
      "API.md",
      "CHANGELOG.md",
      "LICENSE-MIT",
      "dist",
      "postcss-selector-parser.d.ts"
    ],
    "scripts": {
      "pretest": "eslint src && tsc --noEmit postcss-selector-parser.d.ts",
      "prepare": "del-cli dist && BABEL_ENV=publish babel src --out-dir dist --ignore /__tests__/",
      "lintfix": "eslint --fix src",
      "report": "nyc report --reporter=html",
      "test": "nyc ava src/__tests__/*.js",
      "testone": "ava"
    },
    "dependencies": {
      "cssesc": "^3.0.0",
      "indexes-of": "^1.0.1",
      "uniq": "^1.0.1",
      "util-deprecate": "^1.0.2"
    },
    "license": "MIT",
    "engines": {
      "node": ">=4"
    },
    "homepage": "https://github.com/postcss/postcss-selector-parser",
    "contributors": [
      {
        "name": "Ben Briggs",
        "email": "beneb.info@gmail.com",
        "url": "http://beneb.info"
      },
      {
        "name": "Chris Eppstein",
        "email": "chris@eppsteins.net",
        "url": "http://twitter.com/chriseppstein"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/postcss/postcss-selector-parser.git"
    },
    "ava": {
      "require": [
        "@babel/register"
      ],
      "concurrency": 5
    },
    "nyc": {
      "exclude": [
        "node_modules",
        "**/__tests__"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-postcss-selector-parser-6.0.4-56075a1380a04604c38b063ea7767a129af5c2b3-integrity/node_modules/postcss-selector-parser/package.json",
    "readmeFilename": "README.md",
    "readme": "# postcss-selector-parser [![Build Status](https://travis-ci.org/postcss/postcss-selector-parser.svg?branch=master)](https://travis-ci.org/postcss/postcss-selector-parser)\n\n> Selector parser with built in methods for working with selector strings.\n\n## Install\n\nWith [npm](https://npmjs.com/package/postcss-selector-parser) do:\n\n```\nnpm install postcss-selector-parser\n```\n\n## Quick Start\n\n```js\nconst parser = require('postcss-selector-parser');\nconst transform = selectors => {\n    selectors.walk(selector => {\n        // do something with the selector\n        console.log(String(selector))\n    });\n};\n\nconst transformed = parser(transform).processSync('h1, h2, h3');\n```\n\nTo normalize selector whitespace:\n\n```js\nconst parser = require('postcss-selector-parser');\nconst normalized = parser().processSync('h1, h2, h3', {lossless: false});\n// -> h1,h2,h3\n```\n\nAsync support is provided through `parser.process` and will resolve a Promise\nwith the resulting selector string.\n\n## API\n\nPlease see [API.md](API.md).\n\n## Credits\n\n* Huge thanks to Andrey Sitnik (@ai) for work on PostCSS which helped\n  accelerate this module's development.\n\n## License\n\nMIT\n",
    "description": "> Selector parser with built in methods for working with selector strings."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-selector-parser/-/postcss-selector-parser-6.0.4.tgz#56075a1380a04604c38b063ea7767a129af5c2b3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-selector-parser/-/postcss-selector-parser-6.0.4.tgz",
    "hash": "56075a1380a04604c38b063ea7767a129af5c2b3",
    "integrity": "sha512-gjMeXBempyInaBqpp8gODmwZ52WaYsVOsfr4L4lDQ7n3ncD6mEyySiDtgzCT+NYC0mmeOLvtsF8iaEf0YT6dBw==",
    "registry": "npm",
    "packageName": "postcss-selector-parser",
    "cacheIntegrity": "sha512-gjMeXBempyInaBqpp8gODmwZ52WaYsVOsfr4L4lDQ7n3ncD6mEyySiDtgzCT+NYC0mmeOLvtsF8iaEf0YT6dBw== sha1-VgdaE4CgRgTDiwY+p3Z6Epr1wrM="
  },
  "registry": "npm",
  "hash": "56075a1380a04604c38b063ea7767a129af5c2b3"
}