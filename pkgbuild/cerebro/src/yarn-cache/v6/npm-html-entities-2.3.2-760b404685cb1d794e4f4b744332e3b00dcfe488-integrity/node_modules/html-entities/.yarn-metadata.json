{
  "manifest": {
    "name": "html-entities",
    "version": "2.3.2",
    "description": "Fastest HTML entities encode/decode library.",
    "keywords": [
      "html",
      "html entities",
      "html entities encode",
      "html entities decode",
      "entities",
      "entities encode",
      "entities decode"
    ],
    "author": {
      "name": "Marat Dulin",
      "email": "mdevils@yandex.ru"
    },
    "dependencies": {},
    "devDependencies": {
      "@types/benchmark": "^2.1.0",
      "@types/chai": "^4.2.11",
      "@types/he": "^1.1.1",
      "@types/mocha": "^7.0.2",
      "@types/node": "^13.13.4",
      "@typescript-eslint/eslint-plugin": "^4.6.1",
      "@typescript-eslint/parser": "^4.6.1",
      "benchmark": "^2.1.4",
      "chai": "^4.2.0",
      "entities": "^2.2.0",
      "eslint": "^7.12.1",
      "eslint-config-prettier": "^6.15.0",
      "eslint-plugin-import": "^2.22.1",
      "eslint-plugin-prettier": "^3.1.4",
      "flowgen": "^1.13.0",
      "he": "^1.2.0",
      "husky": "^4.3.6",
      "mocha": "^7.1.2",
      "prettier": "^2.1.2",
      "terser": "^5.6.1",
      "ts-node": "^8.9.1",
      "ttypescript": "^1.5.12",
      "typescript": "^3.8.3",
      "typescript-transform-macros": "^1.1.1"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mdevils/html-entities.git"
    },
    "main": "./lib/index.js",
    "typings": "./lib/index.d.ts",
    "types": "./lib/index.d.ts",
    "scripts": {
      "test": "TS_NODE_COMPILER=ttypescript mocha --recursive -r ts-node/register test/**/*.ts",
      "test:lib": "TEST_LIB=1 yarn test",
      "benchmark": "TS_NODE_COMPILER=ttypescript ts-node benchmark/benchmark",
      "lint": "eslint src/**.ts",
      "flow-type-gen": "flowgen --add-flow-header lib/index.d.ts -o lib/index.js.flow",
      "remove-unused-declarations": "find lib -type f \\( -name '*.d.ts' ! -name index.d.ts \\) | xargs rm",
      "minimize-lib-files": "find lib -type f \\( -name '*.js' ! -name index.js \\) | while read fn; do terser $fn -o $fn; done",
      "build": "rm -Rf lib/* && ttsc && yarn remove-unused-declarations && yarn flow-type-gen && yarn minimize-lib-files && yarn test:lib",
      "prepublishOnly": "yarn build"
    },
    "files": [
      "lib",
      "LICENSE"
    ],
    "husky": {
      "hooks": {
        "pre-commit": "yarn lint && yarn test"
      }
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-html-entities-2.3.2-760b404685cb1d794e4f4b744332e3b00dcfe488-integrity/node_modules/html-entities/package.json",
    "readmeFilename": "README.md",
    "readme": "html-entities\n=============\n\nFastest HTML entities library.\n\nComes with both TypeScript and Flow types.\n\nInstallation\n------------\n\n```bash\n$ npm install html-entities\n```\n\nUsage\n-----\n\n### encode(text, options)\n\nEncodes text replacing HTML special characters (`<>&\"'`) plus other character ranges depending on `mode` option value.\n\n```js\nimport {encode} from 'html-entities';\n\nencode('< > \" \\' & © ∆');\n// -> '&lt; &gt; &quot; &apos; &amp; © ∆'\n\nencode('< ©', {mode: 'nonAsciiPrintable'});\n// -> '&lt; &copy;'\n\nencode('< ©', {mode: 'nonAsciiPrintable', level: 'xml'});\n// -> '&lt; &#169;'\n```\n\nOptions:\n\n#### level\n\n * `all` alias to `html5` (default).\n * `html5` uses `HTML5` named references.\n * `html4` uses `HTML4` named references.\n * `xml` uses `XML` named references.\n\n#### mode\n\n * `specialChars` encodes only HTML special characters (default).\n * `nonAscii` encodes HTML special characters and everything outside of the [ASCII character range](https://en.wikipedia.org/wiki/ASCII).\n * `nonAsciiPrintable` encodes HTML special characters and everything outiside of the [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).\n * `extensive` encodes all non-printable characters, non-ASCII characters and all characters with named references.\n\n#### numeric\n\n * `decimal` uses decimal numbers when encoding html entities. i.e. `&#169;` (default).\n * `hexadecimal` uses hexadecimal numbers when encoding html entities. i.e. `&#xa9;`.\n\n\n### decode(text, options)\n\nDecodes text replacing entities to characters. Unknown entities are left as is.\n\n```js\nimport {decode} from 'html-entities';\n\ndecode('&lt; &gt; &quot; &apos; &amp; &#169; &#8710;');\n// -> '< > \" \\' & © ∆'\n\ndecode('&copy;', {level: 'html5'});\n// -> '©'\n\ndecode('&copy;', {level: 'xml'});\n// -> '&copy;'\n```\n\nOptions:\n\n#### level\n\n * `all` alias to `html5` (default).\n * `html5` uses `HTML5` named references.\n * `html4` uses `HTML4` named references.\n * `xml` uses `XML` named references.\n\n#### scope\n\n * `body` emulates behavior of browser when parsing tag bodies: entities without semicolon are also replaced (default).\n * `attribute` emulates behavior of browser when parsing tag attributes: entities without semicolon are replaced when not followed by equality sign `=`.\n * `strict` ignores entities without semicolon.\n\n### decodeEntity(text, options)\n\nDecodes a single HTML entity. Unknown entitiy is left as is.\n\n```js\nimport {decodeEntity} from 'html-entities';\n\ndecodeEntity('&lt;');\n// -> '<'\n\ndecodeEntity('&copy;', {level: 'html5'});\n// -> '©'\n\ndecodeEntity('&copy;', {level: 'xml'});\n// -> '&copy;'\n```\n\nOptions:\n\n#### level\n\n * `all` alias to `html5` (default).\n * `html5` uses `HTML5` named references.\n * `html4` uses `HTML4` named references.\n * `xml` uses `XML` named references.\n\nPerformance\n-----------\n\nStatistically significant comparison with other libraries using `benchmark.js`.\nResults by this library are marked with `*`.\nThe source code of the benchmark is available at `benchmark/benchmark.ts`.\n\n```\nCommon\n\n    Initialization / Load speed\n\n      * #1: html-entities x 2,544,400 ops/sec ±4.52% (77 runs sampled)\n        #2: entities x 1,757,526 ops/sec ±3.99% (81 runs sampled)\n        #3: he x 1,281,542 ops/sec ±9.31% (74 runs sampled)\n\nHTML5\n\n    Encode test\n\n      * #1: html-entities.encode - html5, nonAscii x 402,711 ops/sec ±0.61% (92 runs sampled)\n      * #2: html-entities.encode - html5, nonAsciiPrintable x 402,631 ops/sec ±2.99% (92 runs sampled)\n      * #3: html-entities.encode - html5, extensive x 269,162 ops/sec ±0.26% (97 runs sampled)\n        #4: entities.encodeNonAsciiHTML x 260,447 ops/sec ±2.53% (95 runs sampled)\n        #5: entities.encodeHTML x 101,059 ops/sec ±3.99% (91 runs sampled)\n        #6: he.encode x 93,180 ops/sec ±3.17% (92 runs sampled)\n\n    Decode test\n\n      * #1: html-entities.decode - html5, attribute x 340,043 ops/sec ±2.82% (92 runs sampled)\n      * #2: html-entities.decode - html5, body x 330,002 ops/sec ±1.52% (87 runs sampled)\n      * #3: html-entities.decode - html5, strict x 320,582 ops/sec ±5.34% (88 runs sampled)\n        #4: entities.decodeHTMLStrict x 286,294 ops/sec ±3.14% (89 runs sampled)\n        #5: entities.decodeHTML x 232,856 ops/sec ±3.05% (90 runs sampled)\n        #6: he.decode x 163,300 ops/sec ±0.62% (92 runs sampled)\n\nHTML4\n\n    Encode test\n\n      * #1: html-entities.encode - html4, nonAsciiPrintable x 391,885 ops/sec ±0.27% (95 runs sampled)\n      * #2: html-entities.encode - html4, nonAscii x 400,086 ops/sec ±2.54% (94 runs sampled)\n      * #3: html-entities.encode - html4, extensive x 193,623 ops/sec ±2.70% (92 runs sampled)\n\n    Decode test\n\n      * #1: html-entities.decode - html4, attribute x 356,174 ops/sec ±0.49% (96 runs sampled)\n      * #2: html-entities.decode - html4, body x 342,666 ops/sec ±2.38% (91 runs sampled)\n      * #3: html-entities.decode - html4, strict x 341,667 ops/sec ±4.46% (87 runs sampled)\n\nXML\n\n    Encode test\n\n      * #1: html-entities.encode - xml, nonAscii x 450,968 ops/sec ±2.73% (92 runs sampled)\n      * #2: html-entities.encode - xml, nonAsciiPrintable x 432,058 ops/sec ±4.12% (93 runs sampled)\n      * #3: html-entities.encode - xml, extensive x 265,336 ops/sec ±3.41% (93 runs sampled)\n        #4: entities.encodeXML x 254,862 ops/sec ±3.01% (95 runs sampled)\n\n    Decode test\n\n      * #1: html-entities.decode - xml, strict x 432,820 ops/sec ±0.53% (89 runs sampled)\n      * #2: html-entities.decode - xml, attribute x 426,037 ops/sec ±0.75% (94 runs sampled)\n      * #3: html-entities.decode - xml, body x 424,618 ops/sec ±3.47% (93 runs sampled)\n        #4: entities.decodeXML x 378,536 ops/sec ±2.48% (93 runs sampled)\n\nEscaping\n\n    Escape test\n\n      * #1: html-entities.encode - xml, specialChars x 1,424,362 ops/sec ±0.55% (95 runs sampled)\n        #2: he.escape x 962,420 ops/sec ±3.12% (94 runs sampled)\n        #3: entities.escapeUTF8 x 443,138 ops/sec ±1.06% (90 runs sampled)\n        #4: entities.escape x 197,515 ops/sec ±2.73% (91 runs sampled)\n```\n\nLicense\n-------\n\nMIT\n\nSecurity contact information\n----------------------------\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security). Tidelift will\ncoordinate the fix and disclosure.\n\n`html-entities` for enterprise\n------------------------------\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of `html-entities` and thousands of other packages are working with\nTidelift to deliver commercial support and maintenance for the open source\ndependencies you use to build your applications. Save time, reduce risk, and\nimprove code health, while paying the maintainers of the exact dependencies you\nuse.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-html-entities?utm_source=npm-html-entities&utm_medium=referral&utm_campaign=enterprise)\n",
    "licenseText": "Copyright (c) 2021 Dulin Marat\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/html-entities/-/html-entities-2.3.2.tgz#760b404685cb1d794e4f4b744332e3b00dcfe488",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/html-entities/-/html-entities-2.3.2.tgz",
    "hash": "760b404685cb1d794e4f4b744332e3b00dcfe488",
    "integrity": "sha512-c3Ab/url5ksaT0WyleslpBEthOzWhrjQbg75y7XUsfSzi3Dgzt0l8w5e7DylRn15MTlMMD58dTfzddNS2kcAjQ==",
    "registry": "npm",
    "packageName": "html-entities",
    "cacheIntegrity": "sha512-c3Ab/url5ksaT0WyleslpBEthOzWhrjQbg75y7XUsfSzi3Dgzt0l8w5e7DylRn15MTlMMD58dTfzddNS2kcAjQ== sha1-dgtARoXLHXlOT0t0QzLjsA3P5Ig="
  },
  "registry": "npm",
  "hash": "760b404685cb1d794e4f4b744332e3b00dcfe488"
}