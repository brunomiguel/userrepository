{
  "manifest": {
    "name": "@gar/promisify",
    "version": "1.1.3",
    "description": "Promisify an entire class or object",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/wraithgar/gar-promisify.git"
    },
    "scripts": {
      "lint": "standard",
      "lint:fix": "standard --fix",
      "test": "lab -a @hapi/code -t 100",
      "posttest": "npm run lint"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "promisify",
      "all",
      "class",
      "object"
    ],
    "author": {
      "name": "Gar",
      "email": "gar+npm@danger.computer"
    },
    "license": "MIT",
    "devDependencies": {
      "@hapi/code": "^8.0.1",
      "@hapi/lab": "^24.1.0",
      "standard": "^16.0.3"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@gar-promisify-1.1.3-555193ab2e3bb3b6adc3d551c9c030d9e860daf6-integrity/node_modules/@gar/promisify/package.json",
    "readmeFilename": "README.md",
    "readme": "# @gar/promisify\n\n### Promisify an entire object or class instance\n\nThis module leverages es6 Proxy and Reflect to promisify every function in an\nobject or class instance.\n\nIt assumes the callback that the function is expecting is the last\nparameter, and that it is an error-first callback with only one value,\ni.e. `(err, value) => ...`. This mirrors node's `util.promisify` method.\n\nIn order that you can use it as a one-stop-shop for all your promisify\nneeds, you can also pass it a function.  That function will be\npromisified as normal using node's built-in `util.promisify` method.\n\n[node's custom promisified\nfunctions](https://nodejs.org/api/util.html#util_custom_promisified_functions)\nwill also be mirrored, further allowing this to be a drop-in replacement\nfor the built-in `util.promisify`.\n\n### Examples\n\nPromisify an entire object\n\n```javascript\n\nconst promisify = require('@gar/promisify')\n\nclass Foo {\n  constructor (attr) {\n    this.attr = attr\n  }\n\n  double (input, cb) {\n    cb(null, input * 2)\n  }\n\nconst foo = new Foo('baz')\nconst promisified = promisify(foo)\n\nconsole.log(promisified.attr)\nconsole.log(await promisified.double(1024))\n```\n\nPromisify a function\n\n```javascript\n\nconst promisify = require('@gar/promisify')\n\nfunction foo (a, cb) {\n  if (a !== 'bad') {\n    return cb(null, 'ok')\n  }\n  return cb('not ok')\n}\n\nconst promisified = promisify(foo)\n\n// This will resolve to 'ok'\npromisified('good')\n\n// this will reject\npromisified('bad')\n```\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright © 2020-2022 Michael Garvin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@gar/promisify/-/promisify-1.1.3.tgz#555193ab2e3bb3b6adc3d551c9c030d9e860daf6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@gar/promisify/-/promisify-1.1.3.tgz",
    "hash": "555193ab2e3bb3b6adc3d551c9c030d9e860daf6",
    "integrity": "sha512-k2Ty1JcVojjJFwrg/ThKi2ujJ7XNLYaFGNB/bWT9wGR+oSMJHMa5w+CUq6p/pVrKeNNgA7pCqEcjSnHVoqJQFw==",
    "registry": "npm",
    "packageName": "@gar/promisify",
    "cacheIntegrity": "sha512-k2Ty1JcVojjJFwrg/ThKi2ujJ7XNLYaFGNB/bWT9wGR+oSMJHMa5w+CUq6p/pVrKeNNgA7pCqEcjSnHVoqJQFw== sha1-VVGTqy47s7atw9VRycAw2ehg2vY="
  },
  "registry": "npm",
  "hash": "555193ab2e3bb3b6adc3d551c9c030d9e860daf6"
}