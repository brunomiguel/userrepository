{
  "manifest": {
    "name": "yargs",
    "version": "15.4.1",
    "description": "yargs the modern, pirate-themed, successor to optimist.",
    "main": "./index.js",
    "contributors": [
      {
        "name": "Yargs Contributors",
        "url": "https://github.com/yargs/yargs/graphs/contributors"
      }
    ],
    "files": [
      "index.js",
      "yargs.js",
      "build",
      "locales",
      "LICENSE"
    ],
    "dependencies": {
      "cliui": "^6.0.0",
      "decamelize": "^1.2.0",
      "find-up": "^4.1.0",
      "get-caller-file": "^2.0.1",
      "require-directory": "^2.1.1",
      "require-main-filename": "^2.0.0",
      "set-blocking": "^2.0.0",
      "string-width": "^4.2.0",
      "which-module": "^2.0.0",
      "y18n": "^4.0.0",
      "yargs-parser": "^18.1.2"
    },
    "devDependencies": {
      "@types/chai": "^4.2.11",
      "@types/decamelize": "^1.2.0",
      "@types/mocha": "^7.0.2",
      "@types/node": "^10.0.3",
      "@typescript-eslint/eslint-plugin": "^3.0.0",
      "@typescript-eslint/parser": "^3.0.0",
      "c8": "^7.0.0",
      "chai": "^4.2.0",
      "chalk": "^4.0.0",
      "coveralls": "^3.0.9",
      "cpr": "^3.0.1",
      "cross-spawn": "^7.0.0",
      "es6-promise": "^4.2.5",
      "eslint": "^6.8.0",
      "eslint-plugin-import": "^2.20.1",
      "eslint-plugin-node": "^11.0.0",
      "gts": "^2.0.0-alpha.4",
      "hashish": "0.0.4",
      "mocha": "^7.0.0",
      "rimraf": "^3.0.2",
      "standardx": "^5.0.0",
      "typescript": "^3.7.0",
      "which": "^2.0.0",
      "yargs-test-extends": "^1.0.1"
    },
    "scripts": {
      "fix": "standardx --fix  && standardx --fix **/*.ts",
      "posttest": "npm run check",
      "test": "c8 mocha --require ./test/before.js --timeout=12000 --check-leaks",
      "coverage": "c8 report --check-coverage",
      "check": "standardx && standardx **/*.ts",
      "compile": "rimraf build && tsc",
      "prepare": "npm run compile",
      "pretest": "npm run compile -- -p tsconfig.test.json"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/yargs/yargs.git"
    },
    "homepage": "https://yargs.js.org/",
    "standardx": {
      "ignore": [
        "build",
        "**/example/**"
      ]
    },
    "keywords": [
      "argument",
      "args",
      "option",
      "parser",
      "parsing",
      "cli",
      "command"
    ],
    "license": "MIT",
    "engines": {
      "node": ">=8"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-yargs-15.4.1-integrity/node_modules/yargs/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n  <img width=\"250\" src=\"/yargs-logo.png\">\n</p>\n<h1 align=\"center\"> Yargs </h1>\n<p align=\"center\">\n  <b >Yargs be a node.js library fer hearties tryin' ter parse optstrings</b>\n</p>\n\n<br>\n\n[![Build Status][travis-image]][travis-url]\n[![NPM version][npm-image]][npm-url]\n[![js-standard-style][standard-image]][standard-url]\n[![Coverage][coverage-image]][coverage-url]\n[![Conventional Commits][conventional-commits-image]][conventional-commits-url]\n[![Slack][slack-image]][slack-url]\n\n## Description :\nYargs helps you build interactive command line tools, by parsing arguments and generating an elegant user interface.\n\nIt gives you:\n\n* commands and (grouped) options (`my-program.js serve --port=5000`).\n* a dynamically generated help menu based on your arguments.\n\n> <img width=\"400\" src=\"/screen.png\">\n\n* bash-completion shortcuts for commands and options.\n* and [tons more](/docs/api.md).\n\n## Installation\n\nStable version:\n```bash\nnpm i yargs\n```\n\nBleeding edge version with the most recent features:\n```bash\nnpm i yargs@next\n```\n\n## Usage :\n\n### Simple Example\n\n```javascript\n#!/usr/bin/env node\nconst {argv} = require('yargs')\n\nif (argv.ships > 3 && argv.distance < 53.5) {\n  console.log('Plunder more riffiwobbles!')\n} else {\n  console.log('Retreat from the xupptumblers!')\n}\n```\n\n```bash\n$ ./plunder.js --ships=4 --distance=22\nPlunder more riffiwobbles!\n\n$ ./plunder.js --ships 12 --distance 98.7\nRetreat from the xupptumblers!\n```\n\n### Complex Example\n\n```javascript\n#!/usr/bin/env node\nrequire('yargs') // eslint-disable-line\n  .command('serve [port]', 'start the server', (yargs) => {\n    yargs\n      .positional('port', {\n        describe: 'port to bind on',\n        default: 5000\n      })\n  }, (argv) => {\n    if (argv.verbose) console.info(`start server on :${argv.port}`)\n    serve(argv.port)\n  })\n  .option('verbose', {\n    alias: 'v',\n    type: 'boolean',\n    description: 'Run with verbose logging'\n  })\n  .argv\n```\n\nRun the example above with `--help` to see the help for the application.\n\n## TypeScript\n\nyargs has type definitions at [@types/yargs][type-definitions].\n\n```\nnpm i @types/yargs --save-dev\n```\n\nSee usage examples in [docs](/docs/typescript.md).\n\n## Webpack\n\nSee usage examples of yargs with webpack in [docs](/docs/webpack.md).\n\n## Community :\n\nHaving problems? want to contribute? join our [community slack](http://devtoolscommunity.herokuapp.com).\n\n## Documentation :\n\n### Table of Contents\n\n* [Yargs' API](/docs/api.md)\n* [Examples](/docs/examples.md)\n* [Parsing Tricks](/docs/tricks.md)\n  * [Stop the Parser](/docs/tricks.md#stop)\n  * [Negating Boolean Arguments](/docs/tricks.md#negate)\n  * [Numbers](/docs/tricks.md#numbers)\n  * [Arrays](/docs/tricks.md#arrays)\n  * [Objects](/docs/tricks.md#objects)\n  * [Quotes](/docs/tricks.md#quotes)\n* [Advanced Topics](/docs/advanced.md)\n  * [Composing Your App Using Commands](/docs/advanced.md#commands)\n  * [Building Configurable CLI Apps](/docs/advanced.md#configuration)\n  * [Customizing Yargs' Parser](/docs/advanced.md#customizing)\n* [Contributing](/contributing.md)\n\n[travis-url]: https://travis-ci.org/yargs/yargs\n[travis-image]: https://img.shields.io/travis/yargs/yargs/master.svg\n[npm-url]: https://www.npmjs.com/package/yargs\n[npm-image]: https://img.shields.io/npm/v/yargs.svg\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n[standard-url]: http://standardjs.com/\n[conventional-commits-image]: https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\n[conventional-commits-url]: https://conventionalcommits.org/\n[slack-image]: http://devtoolscommunity.herokuapp.com/badge.svg\n[slack-url]: http://devtoolscommunity.herokuapp.com\n[type-definitions]: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/yargs\n[coverage-image]: https://img.shields.io/nycrc/yargs/yargs\n[coverage-url]: https://github.com/yargs/yargs/blob/master/.nycrc\n",
    "licenseText": "MIT License\n\nCopyright 2010 James Halliday (mail@substack.net); Modified work Copyright 2014 Contributors (ben@npmjs.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz",
    "hash": "",
    "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==",
    "registry": "npm",
    "packageName": "yargs",
    "cacheIntegrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A== sha1-DYehbeAa7p2L7Cv7909nhRcw9Pg="
  },
  "registry": "npm",
  "hash": "69e3dbc4399c616fbe3daa81b09f8761417009dbf82d5bdd9e1072efc139ecf228afcfce56f84cac00c51440e1f031c3151bff3bd8b794f86c10d8ceed05f4f8"
}