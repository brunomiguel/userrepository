{
  "manifest": {
    "name": "@capacitor/status-bar",
    "version": "4.0.1",
    "description": "The StatusBar API Provides methods for configuring the style of the Status Bar, along with showing or hiding it.",
    "main": "dist/plugin.cjs.js",
    "module": "dist/esm/index.js",
    "types": "dist/esm/index.d.ts",
    "unpkg": "dist/plugin.js",
    "files": [
      "android/src/main/",
      "android/build.gradle",
      "dist/",
      "ios/Plugin/",
      "CapacitorStatusBar.podspec"
    ],
    "author": {
      "name": "Ionic",
      "email": "hi@ionicframework.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ionic-team/capacitor-plugins.git"
    },
    "bugs": {
      "url": "https://github.com/ionic-team/capacitor-plugins/issues"
    },
    "keywords": [
      "capacitor",
      "plugin",
      "native"
    ],
    "scripts": {
      "verify": "npm run verify:ios && npm run verify:android && npm run verify:web",
      "verify:ios": "cd ios && pod install && xcodebuild -workspace Plugin.xcworkspace -scheme Plugin -destination generic/platform=iOS && cd ..",
      "verify:android": "cd android && ./gradlew clean build test && cd ..",
      "verify:web": "npm run build",
      "lint": "npm run eslint && npm run prettier -- --check && npm run swiftlint -- lint",
      "fmt": "npm run eslint -- --fix && npm run prettier -- --write && npm run swiftlint -- --fix --format",
      "eslint": "eslint . --ext ts",
      "prettier": "prettier \"**/*.{css,html,ts,js,java}\"",
      "swiftlint": "node-swiftlint",
      "docgen": "docgen --api StatusBarPlugin --output-readme README.md --output-json dist/docs.json",
      "build": "npm run clean && npm run docgen && tsc && rollup -c rollup.config.js",
      "clean": "rimraf ./dist",
      "watch": "tsc --watch",
      "prepublishOnly": "npm run build",
      "publish:cocoapod": "pod trunk push ./CapacitorStatusBar.podspec --allow-warnings"
    },
    "devDependencies": {
      "@capacitor/android": "^4.0.0",
      "@capacitor/core": "^4.0.0",
      "@capacitor/docgen": "0.0.18",
      "@capacitor/ios": "^4.0.0",
      "@ionic/eslint-config": "^0.3.0",
      "@ionic/prettier-config": "~1.0.1",
      "@ionic/swiftlint-config": "^1.1.2",
      "eslint": "^7.11.0",
      "prettier": "~2.3.0",
      "prettier-plugin-java": "~1.0.2",
      "rimraf": "^3.0.0",
      "rollup": "^2.29.0",
      "swiftlint": "^1.0.1",
      "typescript": "~4.1.5"
    },
    "peerDependencies": {
      "@capacitor/core": "^4.0.0"
    },
    "prettier": "@ionic/prettier-config",
    "swiftlint": "@ionic/swiftlint-config",
    "eslintConfig": {
      "extends": "@ionic/eslint-config/recommended"
    },
    "capacitor": {
      "ios": {
        "src": "ios"
      },
      "android": {
        "src": "android"
      }
    },
    "publishConfig": {
      "access": "public"
    },
    "gitHead": "42324ec218c8699bc10f914169ac366c8224b259",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@capacitor-status-bar-4.0.1-d1320add5f4ef383394b94beae45a0c5af7250e1-integrity/node_modules/@capacitor/status-bar/package.json",
    "readmeFilename": "README.md",
    "readme": "# @capacitor/status-bar\n\nThe StatusBar API Provides methods for configuring the style of the Status Bar, along with showing or hiding it.\n\n## Install\n\n```bash\nnpm install @capacitor/status-bar\nnpx cap sync\n```\n\n## iOS Note\n\nThis plugin requires \"View controller-based status bar appearance\"\n(`UIViewControllerBasedStatusBarAppearance`) set to `YES` in `Info.plist`. Read\nabout [Configuring iOS](https://capacitorjs.com/docs/ios/configuration) for\nhelp.\n\nThe status bar visibility defaults to visible and the style defaults to\n`Style.Default`. You can change these defaults by adding\n`UIStatusBarHidden` and/or `UIStatusBarStyle` in `Info.plist`.\n\n`setBackgroundColor` and `setOverlaysWebView` are currently not supported on\niOS devices.\n\n## Example\n\n```typescript\nimport { StatusBar, Style } from '@capacitor/status-bar';\n\n// iOS only\nwindow.addEventListener('statusTap', function () {\n  console.log('statusbar tapped');\n});\n\n// Display content under transparent status bar (Android only)\nStatusBar.setOverlaysWebView({ overlay: true });\n\nconst setStatusBarStyleDark = async () => {\n  await StatusBar.setStyle({ style: Style.Dark });\n};\n\nconst setStatusBarStyleLight = async () => {\n  await StatusBar.setStyle({ style: Style.Light });\n};\n\nconst hideStatusBar = async () => {\n  await StatusBar.hide();\n};\n\nconst showStatusBar = async () => {\n  await StatusBar.show();\n};\n```\n\n## API\n\n<docgen-index>\n\n* [`setStyle(...)`](#setstyle)\n* [`setBackgroundColor(...)`](#setbackgroundcolor)\n* [`show(...)`](#show)\n* [`hide(...)`](#hide)\n* [`getInfo()`](#getinfo)\n* [`setOverlaysWebView(...)`](#setoverlayswebview)\n* [Interfaces](#interfaces)\n* [Enums](#enums)\n\n</docgen-index>\n\n<docgen-api>\n<!--Update the source file JSDoc comments and rerun docgen to update the docs below-->\n\n### setStyle(...)\n\n```typescript\nsetStyle(options: StyleOptions) => Promise<void>\n```\n\nSet the current style of the status bar.\n\n| Param         | Type                                                  |\n| ------------- | ----------------------------------------------------- |\n| **`options`** | <code><a href=\"#styleoptions\">StyleOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### setBackgroundColor(...)\n\n```typescript\nsetBackgroundColor(options: BackgroundColorOptions) => Promise<void>\n```\n\nSet the background color of the status bar.\n\nThis method is only supported on Android.\n\n| Param         | Type                                                                      |\n| ------------- | ------------------------------------------------------------------------- |\n| **`options`** | <code><a href=\"#backgroundcoloroptions\">BackgroundColorOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### show(...)\n\n```typescript\nshow(options?: AnimationOptions | undefined) => Promise<void>\n```\n\nShow the status bar.\n\n| Param         | Type                                                          |\n| ------------- | ------------------------------------------------------------- |\n| **`options`** | <code><a href=\"#animationoptions\">AnimationOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### hide(...)\n\n```typescript\nhide(options?: AnimationOptions | undefined) => Promise<void>\n```\n\nHide the status bar.\n\n| Param         | Type                                                          |\n| ------------- | ------------------------------------------------------------- |\n| **`options`** | <code><a href=\"#animationoptions\">AnimationOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### getInfo()\n\n```typescript\ngetInfo() => Promise<StatusBarInfo>\n```\n\nGet info about the current state of the status bar.\n\n**Returns:** <code>Promise&lt;<a href=\"#statusbarinfo\">StatusBarInfo</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### setOverlaysWebView(...)\n\n```typescript\nsetOverlaysWebView(options: SetOverlaysWebViewOptions) => Promise<void>\n```\n\nSet whether or not the status bar should overlay the webview to allow usage\nof the space underneath it.\n\nThis method is only supported on Android.\n\n| Param         | Type                                                                            |\n| ------------- | ------------------------------------------------------------------------------- |\n| **`options`** | <code><a href=\"#setoverlayswebviewoptions\">SetOverlaysWebViewOptions</a></code> |\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### Interfaces\n\n\n#### StyleOptions\n\n| Prop        | Type                                    | Description                                               | Since |\n| ----------- | --------------------------------------- | --------------------------------------------------------- | ----- |\n| **`style`** | <code><a href=\"#style\">Style</a></code> | <a href=\"#style\">Style</a> of the text of the status bar. | 1.0.0 |\n\n\n#### BackgroundColorOptions\n\n| Prop        | Type                | Description                                                                                 | Since |\n| ----------- | ------------------- | ------------------------------------------------------------------------------------------- | ----- |\n| **`color`** | <code>string</code> | A hex color to which the status bar color is set. This option is only supported on Android. | 1.0.0 |\n\n\n#### AnimationOptions\n\n| Prop            | Type                                            | Description                                                                                         | Since |\n| --------------- | ----------------------------------------------- | --------------------------------------------------------------------------------------------------- | ----- |\n| **`animation`** | <code><a href=\"#animation\">Animation</a></code> | The type of status bar animation used when showing or hiding. This option is only supported on iOS. | 1.0.0 |\n\n\n#### StatusBarInfo\n\n| Prop           | Type                                    | Description                                                                         | Since |\n| -------------- | --------------------------------------- | ----------------------------------------------------------------------------------- | ----- |\n| **`visible`**  | <code>boolean</code>                    | Whether the status bar is visible or not.                                           | 1.0.0 |\n| **`style`**    | <code><a href=\"#style\">Style</a></code> | The current status bar style.                                                       | 1.0.0 |\n| **`color`**    | <code>string</code>                     | The current status bar color. This option is only supported on Android.             | 1.0.0 |\n| **`overlays`** | <code>boolean</code>                    | Whether the statusbar is overlaid or not. This option is only supported on Android. | 1.0.0 |\n\n\n#### SetOverlaysWebViewOptions\n\n| Prop          | Type                 | Description                               | Since |\n| ------------- | -------------------- | ----------------------------------------- | ----- |\n| **`overlay`** | <code>boolean</code> | Whether to overlay the status bar or not. | 1.0.0 |\n\n\n### Enums\n\n\n#### Style\n\n| Members       | Value                  | Description                                                                                                                                                                                                                                            | Since |\n| ------------- | ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ----- |\n| **`Dark`**    | <code>'DARK'</code>    | Light text for dark backgrounds.                                                                                                                                                                                                                       | 1.0.0 |\n| **`Light`**   | <code>'LIGHT'</code>   | Dark text for light backgrounds.                                                                                                                                                                                                                       | 1.0.0 |\n| **`Default`** | <code>'DEFAULT'</code> | The style is based on the device appearance. If the device is using Dark mode, the statusbar text will be light. If the device is using Light mode, the statusbar text will be dark. On Android the default will be the one the app was launched with. | 1.0.0 |\n\n\n#### Animation\n\n| Members     | Value                | Description                       | Since |\n| ----------- | -------------------- | --------------------------------- | ----- |\n| **`None`**  | <code>'NONE'</code>  | No animation during show/hide.    | 1.0.0 |\n| **`Slide`** | <code>'SLIDE'</code> | Slide animation during show/hide. | 1.0.0 |\n| **`Fade`**  | <code>'FADE'</code>  | Fade animation during show/hide.  | 1.0.0 |\n\n</docgen-api>\n",
    "licenseText": "Copyright 2020-present Ionic\nhttps://ionic.io\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@capacitor/status-bar/-/status-bar-4.0.1.tgz#d1320add5f4ef383394b94beae45a0c5af7250e1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@capacitor/status-bar/-/status-bar-4.0.1.tgz",
    "hash": "d1320add5f4ef383394b94beae45a0c5af7250e1",
    "integrity": "sha512-BmEyOf3m/hAf8bO4hCX0m5gpQPSgd05mGYl+9E841WUZeJjcYlmiG/EBshAUb2uGCVtyNaG36yPXB0r0Ypg+rw==",
    "registry": "npm",
    "packageName": "@capacitor/status-bar",
    "cacheIntegrity": "sha512-BmEyOf3m/hAf8bO4hCX0m5gpQPSgd05mGYl+9E841WUZeJjcYlmiG/EBshAUb2uGCVtyNaG36yPXB0r0Ypg+rw== sha1-0TIK3V9O84M5S5S+rkWgxa9yUOE="
  },
  "registry": "npm",
  "hash": "d1320add5f4ef383394b94beae45a0c5af7250e1"
}