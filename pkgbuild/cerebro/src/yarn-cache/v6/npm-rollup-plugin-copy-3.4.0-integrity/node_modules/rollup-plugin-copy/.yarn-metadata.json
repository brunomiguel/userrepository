{
  "manifest": {
    "name": "rollup-plugin-copy",
    "description": "Copy files and folders using Rollup",
    "version": "3.4.0",
    "author": {
      "name": "Vlad Shcherbin",
      "email": "vlad.shcherbin@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/vladshcherbin/rollup-plugin-copy.git"
    },
    "main": "dist/index.commonjs.js",
    "module": "dist/index.module.js",
    "types": "index.d.ts",
    "scripts": {
      "clean": "rimraf coverage dist",
      "build": "rollup -c",
      "lint": "eslint src tests",
      "postpublish": "yarn clean",
      "prepublishOnly": "yarn lint && yarn test && yarn clean && yarn build",
      "test": "jest"
    },
    "dependencies": {
      "@types/fs-extra": "^8.0.1",
      "colorette": "^1.1.0",
      "fs-extra": "^8.1.0",
      "globby": "10.0.1",
      "is-plain-object": "^3.0.0"
    },
    "devDependencies": {
      "@babel/core": "^7.12.17",
      "@babel/preset-env": "^7.12.17",
      "babel-jest": "^25.5.1",
      "codecov": "^3.6.1",
      "eslint": "6.5.1",
      "eslint-config-airbnb-base": "^14.0.0",
      "eslint-plugin-import": "^2.20.0",
      "jest": "^25.5.4",
      "replace-in-file": "^5.0.2",
      "rimraf": "^3.0.0",
      "rollup": "^1.29.0",
      "rollup-plugin-auto-external": "^2.0.0",
      "rollup-plugin-babel": "^4.3.3"
    },
    "files": [
      "dist",
      "index.d.ts",
      "readme.md"
    ],
    "keywords": [
      "rollup",
      "rollup-plugin",
      "copy",
      "cp",
      "asset",
      "assets",
      "file",
      "files",
      "folder",
      "folders",
      "glob"
    ],
    "engines": {
      "node": ">=8.3"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-rollup-plugin-copy-3.4.0-integrity/node_modules/rollup-plugin-copy/package.json",
    "readmeFilename": "readme.md",
    "readme": "# rollup-plugin-copy\n\n[![Build Status](https://travis-ci.com/vladshcherbin/rollup-plugin-copy.svg?branch=master)](https://travis-ci.com/vladshcherbin/rollup-plugin-copy)\n[![Codecov](https://codecov.io/gh/vladshcherbin/rollup-plugin-copy/branch/master/graph/badge.svg)](https://codecov.io/gh/vladshcherbin/rollup-plugin-copy)\n\nCopy files and folders, with glob support.\n\n## Installation\n\n```bash\n# yarn\nyarn add rollup-plugin-copy -D\n\n# npm\nnpm install rollup-plugin-copy -D\n```\n\n## Usage\n\n```js\n// rollup.config.js\nimport copy from 'rollup-plugin-copy'\n\nexport default {\n  input: 'src/index.js',\n  output: {\n    file: 'dist/app.js',\n    format: 'cjs'\n  },\n  plugins: [\n    copy({\n      targets: [\n        { src: 'src/index.html', dest: 'dist/public' },\n        { src: ['assets/fonts/arial.woff', 'assets/fonts/arial.woff2'], dest: 'dist/public/fonts' },\n        { src: 'assets/images/**/*', dest: 'dist/public/images' }\n      ]\n    })\n  ]\n}\n```\n\n### Configuration\n\nThere are some useful options:\n\n#### targets\n\nType: `Array` | Default: `[]`\n\nArray of targets to copy. A target is an object with properties:\n\n- **src** (`string` `Array`): Path or glob of what to copy\n- **dest** (`string` `Array`): One or more destinations where to copy\n- **rename** (`string` `Function`): Change destination file or folder name\n- **transform** (`Function`): Modify file contents\n\nEach object should have **src** and **dest** properties, **rename** and **transform** are optional. [globby](https://github.com/sindresorhus/globby) is used inside, check it for [glob pattern](https://github.com/sindresorhus/globby#globbing-patterns) examples.\n\n##### File\n\n```js\ncopy({\n  targets: [{ src: 'src/index.html', dest: 'dist/public' }]\n})\n```\n\n##### Folder\n\n```js\ncopy({\n  targets: [{ src: 'assets/images', dest: 'dist/public' }]\n})\n```\n\n##### Glob\n\n```js\ncopy({\n  targets: [{ src: 'assets/*', dest: 'dist/public' }]\n})\n```\n\n##### Glob: multiple items\n\n```js\ncopy({\n  targets: [{ src: ['src/index.html', 'src/styles.css', 'assets/images'], dest: 'dist/public' }]\n})\n```\n\n##### Glob: negated patterns\n\n```js\ncopy({\n  targets: [{ src: ['assets/images/**/*', '!**/*.gif'], dest: 'dist/public/images' }]\n})\n```\n\n##### Multiple targets\n\n```js\ncopy({\n  targets: [\n    { src: 'src/index.html', dest: 'dist/public' },\n    { src: 'assets/images/**/*', dest: 'dist/public/images' }\n  ]\n})\n```\n\n##### Multiple destinations\n\n```js\ncopy({\n  targets: [{ src: 'src/index.html', dest: ['dist/public', 'build/public'] }]\n})\n```\n\n##### Rename with a string\n\n```js\ncopy({\n  targets: [{ src: 'src/app.html', dest: 'dist/public', rename: 'index.html' }]\n})\n```\n\n##### Rename with a function\n\n```js\ncopy({\n  targets: [{\n    src: 'assets/docs/*',\n    dest: 'dist/public/docs',\n    rename: (name, extension, fullPath) => `${name}-v1.${extension}`\n  }]\n})\n```\n\n##### Transform file contents\n\n```js\ncopy({\n  targets: [{\n    src: 'src/index.html',\n    dest: 'dist/public',\n    transform: (contents, filename) => contents.toString().replace('__SCRIPT__', 'app.js')\n  }]\n})\n```\n\n#### verbose\n\nType: `boolean` | Default: `false`\n\nOutput copied items to console.\n\n```js\ncopy({\n  targets: [{ src: 'assets/*', dest: 'dist/public' }],\n  verbose: true\n})\n```\n\n#### hook\n\nType: `string` | Default: `buildEnd`\n\n[Rollup hook](https://rollupjs.org/guide/en/#hooks) the plugin should use. By default, plugin runs when rollup has finished bundling, before bundle is written to disk.\n\n```js\ncopy({\n  targets: [{ src: 'assets/*', dest: 'dist/public' }],\n  hook: 'writeBundle'\n})\n```\n\n#### copyOnce\n\nType: `boolean` | Default: `false`\n\nCopy items once. Useful in watch mode.\n\n```js\ncopy({\n  targets: [{ src: 'assets/*', dest: 'dist/public' }],\n  copyOnce: true\n})\n```\n\n#### flatten\n\nType: `boolean` | Default: `true`\n\nRemove the directory structure of copied files.\n\n```js\ncopy({\n  targets: [{ src: 'assets/**/*', dest: 'dist/public' }],\n  flatten: false\n})\n```\n\nAll other options are passed to packages, used inside:\n  - [globby](https://github.com/sindresorhus/globby)\n  - [fs-extra copy function](https://github.com/jprichardson/node-fs-extra/blob/7.0.0/docs/copy.md)\n\n## Original Author\n\n[CÃ©dric Meuter](https://github.com/meuter)\n\n## License\n\nMIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/rollup-plugin-copy/-/rollup-plugin-copy-3.4.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/rollup-plugin-copy/-/rollup-plugin-copy-3.4.0.tgz",
    "hash": "",
    "integrity": "sha512-rGUmYYsYsceRJRqLVlE9FivJMxJ7X6jDlP79fmFkL8sJs7VVMSVyA2yfyL+PGyO/vJs4A87hwhgVfz61njI+uQ==",
    "registry": "npm",
    "packageName": "rollup-plugin-copy",
    "cacheIntegrity": "sha512-rGUmYYsYsceRJRqLVlE9FivJMxJ7X6jDlP79fmFkL8sJs7VVMSVyA2yfyL+PGyO/vJs4A87hwhgVfz61njI+uQ== sha1-8SKKP/tm/62GBuLz+3/yMUHtMoY="
  },
  "registry": "npm",
  "hash": "ac6526618b18b1c791251a8b56513d162bc933127b5fa8c394fefd7e61642fcb09b3b555312572036c9fc8bf8f1b23bfbc9b3803cee1c218157f3eb59e323eb9"
}