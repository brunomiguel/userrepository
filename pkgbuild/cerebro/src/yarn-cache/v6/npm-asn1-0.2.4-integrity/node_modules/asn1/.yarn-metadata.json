{
  "manifest": {
    "author": {
      "name": "Joyent",
      "url": "joyent.com"
    },
    "contributors": [
      {
        "name": "Mark Cavage",
        "email": "mcavage@gmail.com"
      },
      {
        "name": "David Gwynne",
        "email": "loki@animata.net"
      },
      {
        "name": "Yunong Xiao",
        "email": "yunong@joyent.com"
      },
      {
        "name": "Alex Wilson",
        "email": "alex.wilson@joyent.com"
      }
    ],
    "name": "asn1",
    "description": "Contains parsers and serializers for ASN.1 (currently BER only)",
    "version": "0.2.4",
    "repository": {
      "type": "git",
      "url": "git://github.com/joyent/node-asn1.git"
    },
    "main": "lib/index.js",
    "dependencies": {
      "safer-buffer": "~2.1.0"
    },
    "devDependencies": {
      "istanbul": "^0.3.6",
      "faucet": "0.0.1",
      "tape": "^3.5.0",
      "eslint": "2.13.1",
      "eslint-plugin-joyent": "~1.3.0"
    },
    "scripts": {
      "test": "./node_modules/.bin/tape ./test/ber/*.test.js"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-asn1-0.2.4-integrity/node_modules/asn1/package.json",
    "readmeFilename": "README.md",
    "readme": "node-asn1 is a library for encoding and decoding ASN.1 datatypes in pure JS.\nCurrently BER encoding is supported; at some point I'll likely have to do DER.\n\n## Usage\n\nMostly, if you're *actually* needing to read and write ASN.1, you probably don't\nneed this readme to explain what and why.  If you have no idea what ASN.1 is,\nsee this: ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc\n\nThe source is pretty much self-explanatory, and has read/write methods for the\ncommon types out there.\n\n### Decoding\n\nThe following reads an ASN.1 sequence with a boolean.\n\n    var Ber = require('asn1').Ber;\n\n    var reader = new Ber.Reader(Buffer.from([0x30, 0x03, 0x01, 0x01, 0xff]));\n\n    reader.readSequence();\n    console.log('Sequence len: ' + reader.length);\n    if (reader.peek() === Ber.Boolean)\n      console.log(reader.readBoolean());\n\n### Encoding\n\nThe following generates the same payload as above.\n\n    var Ber = require('asn1').Ber;\n\n    var writer = new Ber.Writer();\n\n    writer.startSequence();\n    writer.writeBoolean(true);\n    writer.endSequence();\n\n    console.log(writer.buffer);\n\n## Installation\n\n    npm install asn1\n\n## License\n\nMIT.\n\n## Bugs\n\nSee <https://github.com/joyent/node-asn1/issues>.\n",
    "licenseText": "Copyright (c) 2011 Mark Cavage, All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
    "hash": "",
    "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
    "registry": "npm",
    "packageName": "asn1",
    "cacheIntegrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg== sha1-jSR136tVO7M+d7VOWeiAu4ziMTY="
  },
  "registry": "npm",
  "hash": "8f1c334292d08d29965e0c1a09913d373fa09401b4d721754275a06e11b01c8e40e85448118e8856ab478487a91ea23bfe4c84c9011a8010b998110594862f76"
}