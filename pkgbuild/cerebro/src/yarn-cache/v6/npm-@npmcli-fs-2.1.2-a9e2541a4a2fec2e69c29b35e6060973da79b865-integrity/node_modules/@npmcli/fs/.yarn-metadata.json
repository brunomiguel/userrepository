{
  "manifest": {
    "name": "@npmcli/fs",
    "version": "2.1.2",
    "description": "filesystem utilities for the npm cli",
    "main": "lib/index.js",
    "files": [
      "bin/",
      "lib/"
    ],
    "scripts": {
      "preversion": "npm test",
      "postversion": "npm publish",
      "prepublishOnly": "git push origin --follow-tags",
      "snap": "tap",
      "test": "tap",
      "npmclilint": "npmcli-lint",
      "lint": "eslint \"**/*.js\"",
      "lintfix": "npm run lint -- --fix",
      "posttest": "npm run lint",
      "postsnap": "npm run lintfix --",
      "postlint": "template-oss-check",
      "template-oss-apply": "template-oss-apply --force"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/fs.git"
    },
    "keywords": [
      "npm",
      "oss"
    ],
    "author": {
      "name": "GitHub Inc."
    },
    "license": "ISC",
    "devDependencies": {
      "@npmcli/eslint-config": "^3.0.1",
      "@npmcli/template-oss": "3.5.0",
      "tap": "^16.0.1"
    },
    "dependencies": {
      "@gar/promisify": "^1.1.3",
      "semver": "^7.3.5"
    },
    "engines": {
      "node": "^12.13.0 || ^14.15.0 || >=16.0.0"
    },
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "3.5.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@npmcli-fs-2.1.2-a9e2541a4a2fec2e69c29b35e6060973da79b865-integrity/node_modules/@npmcli/fs/package.json",
    "readmeFilename": "README.md",
    "readme": "# @npmcli/fs\n\npolyfills, and extensions, of the core `fs` module.\n\n## Features\n\n- all exposed functions return promises\n- `fs.rm` polyfill for node versions < 14.14.0\n- `fs.mkdir` polyfill adding support for the `recursive` and `force` options in node versions < 10.12.0\n- `fs.copyFile` extended to accept an `owner` option\n- `fs.mkdir` extended to accept an `owner` option\n- `fs.mkdtemp` extended to accept an `owner` option\n- `fs.writeFile` extended to accept an `owner` option\n- `fs.withTempDir` added\n- `fs.withOwner` added\n- `fs.withOwnerSync` added\n- `fs.cp` polyfill for node < 16.7.0\n\n## The `owner` option\n\nThe `copyFile`, `mkdir`, `mkdtemp`, `writeFile`, and `withTempDir` functions\nall accept a new `owner` property in their options. It can be used in two ways:\n\n- `{ owner: { uid: 100, gid: 100 } }` - set the `uid` and `gid` explicitly\n- `{ owner: 100 }` - use one value, will set both `uid` and `gid` the same\n\nThe special string `'inherit'` may be passed instead of a number, which will\ncause this module to automatically determine the correct `uid` and/or `gid`\nfrom the nearest existing parent directory of the target.\n\n## `fs.withTempDir(root, fn, options) -> Promise`\n\n### Parameters\n\n- `root`: the directory in which to create the temporary directory\n- `fn`: a function that will be called with the path to the temporary directory\n- `options`\n  - `tmpPrefix`: a prefix to be used in the generated directory name\n\n### Usage\n\nThe `withTempDir` function creates a temporary directory, runs the provided\nfunction (`fn`), then removes the temporary directory and resolves or rejects\nbased on the result of `fn`.\n\n```js\nconst fs = require('@npmcli/fs')\nconst os = require('os')\n\n// this function will be called with the full path to the temporary directory\n// it is called with `await` behind the scenes, so can be async if desired.\nconst myFunction = async (tempPath) => {\n  return 'done!'\n}\n\nconst main = async () => {\n  const result = await fs.withTempDir(os.tmpdir(), myFunction)\n  // result === 'done!'\n}\n\nmain()\n```\n",
    "licenseText": "<!-- This file is automatically added by @npmcli/template-oss. Do not edit. -->\n\nISC License\n\nCopyright npm, Inc.\n\nPermission to use, copy, modify, and/or distribute this\nsoftware for any purpose with or without fee is hereby\ngranted, provided that the above copyright notice and this\npermission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND NPM DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO\nEVENT SHALL NPM BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\nWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE\nUSE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@npmcli/fs/-/fs-2.1.2.tgz#a9e2541a4a2fec2e69c29b35e6060973da79b865",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@npmcli/fs/-/fs-2.1.2.tgz",
    "hash": "a9e2541a4a2fec2e69c29b35e6060973da79b865",
    "integrity": "sha512-yOJKRvohFOaLqipNtwYB9WugyZKhC/DZC4VYPmpaCzDBrA8YpK3qHZ8/HGscMnE4GqbkLNuVcCnxkeQEdGt6LQ==",
    "registry": "npm",
    "packageName": "@npmcli/fs",
    "cacheIntegrity": "sha512-yOJKRvohFOaLqipNtwYB9WugyZKhC/DZC4VYPmpaCzDBrA8YpK3qHZ8/HGscMnE4GqbkLNuVcCnxkeQEdGt6LQ== sha1-qeJUGkov7C5pwps15gYJc9p5uGU="
  },
  "registry": "npm",
  "hash": "a9e2541a4a2fec2e69c29b35e6060973da79b865"
}