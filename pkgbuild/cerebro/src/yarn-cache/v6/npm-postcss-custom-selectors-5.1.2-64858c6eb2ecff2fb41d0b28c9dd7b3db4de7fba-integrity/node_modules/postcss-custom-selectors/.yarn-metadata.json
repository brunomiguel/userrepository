{
  "manifest": {
    "name": "postcss-custom-selectors",
    "version": "5.1.2",
    "description": "Use Custom Selectors in CSS",
    "author": {
      "name": "Jonathan Neal",
      "email": "jonathantneal@hotmail.com"
    },
    "contributors": [
      {
        "name": "yisi"
      },
      {
        "name": "Maxime Thirouin"
      }
    ],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/postcss/postcss-custom-selectors.git"
    },
    "homepage": "https://github.com/postcss/postcss-custom-selectors#readme",
    "bugs": {
      "url": "https://github.com/postcss/postcss-custom-selectors/issues"
    },
    "main": "index.cjs.js",
    "module": "index.es.mjs",
    "files": [
      "index.cjs.js",
      "index.cjs.js.map",
      "index.es.mjs",
      "index.es.mjs.map"
    ],
    "scripts": {
      "prepublishOnly": "npm test",
      "pretest": "rollup -c .rollup.js --silent",
      "test": "echo 'Running tests...'; npm run test:js && npm run test:tape",
      "test:js": "eslint *.js lib/*.js --cache --ignore-path .gitignore --quiet",
      "test:tape": "postcss-tape"
    },
    "engines": {
      "node": ">=6.0.0"
    },
    "dependencies": {
      "postcss": "^7.0.2",
      "postcss-selector-parser": "^5.0.0-rc.3"
    },
    "devDependencies": {
      "@babel/core": "^7.1.0",
      "@babel/plugin-syntax-dynamic-import": "^7.0.0",
      "@babel/preset-env": "^7.1.0",
      "babel-eslint": "^9.0.0",
      "eslint": "^5.6.0",
      "eslint-config-dev": "^2.0.0",
      "postcss-tape": "^2.2.0",
      "pre-commit": "^1.2.2",
      "rollup": "^0.66.1",
      "rollup-plugin-babel": "^4.0.3"
    },
    "eslintConfig": {
      "extends": "dev",
      "parser": "babel-eslint"
    },
    "keywords": [
      "postcss",
      "css",
      "postcss-plugin",
      "custom",
      "selectors",
      "w3c",
      "csswg",
      "extensions",
      "declarative",
      "rule",
      "atrule",
      "at-rule",
      "specification"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-postcss-custom-selectors-5.1.2-64858c6eb2ecff2fb41d0b28c9dd7b3db4de7fba-integrity/node_modules/postcss-custom-selectors/package.json",
    "readmeFilename": "README.md",
    "readme": "# PostCSS Custom Selectors [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[![NPM Version][npm-img]][npm-url]\n[![CSS Standard Status][css-img]][css-url]\n[![Build Status][cli-img]][cli-url]\n[![Support Chat][git-img]][git-url]\n\n[PostCSS Custom Selectors] lets you use Custom Selectors in CSS, following the\n[CSS Extensions] specification.\n\n```pcss\n@custom-selector :--heading h1, h2, h3;\n\narticle :--heading + p {\n  margin-top: 0;\n}\n\n/* becomes */\n\narticle h1 + p, article h2 + p, article h3 + p {}\n```\n\n## Usage\n\nAdd [PostCSS Custom Selectors] to your project:\n\n```bash\nnpm install postcss-custom-selectors --save-dev\n```\n\nUse [PostCSS Custom Selectors] to process your CSS:\n\n```js\nconst postcssCustomSelectors = require('postcss-custom-selectors');\n\npostcssCustomSelectors.process(YOUR_CSS /*, processOptions, pluginOptions */);\n```\n\nOr use it as a [PostCSS] plugin:\n\n```js\nconst postcss = require('postcss');\nconst postcssCustomSelectors = require('postcss-custom-selectors');\n\npostcss([\n  postcssCustomSelectors(/* pluginOptions */)\n]).process(YOUR_CSS /*, processOptions */);\n```\n\n[PostCSS Custom Selectors] runs in all Node environments, with special instructions for:\n\n| [Node](INSTALL.md#node) | [PostCSS CLI](INSTALL.md#postcss-cli) | [Webpack](INSTALL.md#webpack) | [Create React App](INSTALL.md#create-react-app) | [Gulp](INSTALL.md#gulp) | [Grunt](INSTALL.md#grunt) |\n| --- | --- | --- | --- | --- | --- |\n\n## Options\n\n### preserve\n\nThe `preserve` option determines whether custom selectors and rules using\ncustom selectors should be preserved in their original form.\n\n```pcss\n@custom-selector :--heading h1, h2, h3;\n\narticle :--heading + p {\n  margin-top: 0;\n}\n\n/* becomes */\n\narticle h1 + p, article h2 + p, article h3 + p {}\n\narticle :--heading + p {}\n```\n\n### importFrom\n\nThe `importFrom` option specifies sources where custom selectors can be\nimported from, which might be CSS, JS, and JSON files, functions, and directly\npassed objects.\n\n```js\npostcssCustomSelectors({\n  importFrom: 'path/to/file.css' // => @custom-selector :--heading h1, h2, h3;\n});\n```\n\n```pcss\narticle :--heading + p {\n  margin-top: 0;\n}\n\n/* becomes */\n\narticle h1 + p, article h2 + p, article h3 + p {}\n```\n\nMultiple sources can be passed into this option, and they will be parsed in the\norder they are received. JavaScript files, JSON files, functions, and objects\nwill need to namespace custom selectors using the `customProperties` or\n`custom-properties` key.\n\n```js\npostcssCustomSelectors({\n  importFrom: [\n    'path/to/file.css',\n    'and/then/this.js',\n    'and/then/that.json',\n    {\n      customSelectors: { ':--heading': 'h1, h2, h3' }\n    },\n    () => {\n      const customProperties = { ':--heading': 'h1, h2, h3' };\n\n      return { customProperties };\n    }\n  ]\n});\n```\n\n### exportTo\n\nThe `exportTo` option specifies destinations where custom selectors can be\nexported to, which might be CSS, JS, and JSON files, functions, and directly\npassed objects.\n\n```js\npostcssCustomSelectors({\n  exportTo: 'path/to/file.css' // @custom-selector :--heading h1, h2, h3;\n});\n```\n\nMultiple destinations can be passed into this option, and they will be parsed\nin the order they are received. JavaScript files, JSON files, and objects will\nneed to namespace custom selectors using the `customProperties` or\n`custom-properties` key.\n\n```js\nconst cachedObject = { customSelectors: {} };\n\npostcssCustomSelectors({\n  exportTo: [\n    'path/to/file.css',   // @custom-selector :--heading h1, h2, h3;\n    'and/then/this.js',   // module.exports = { customSelectors: { ':--heading': 'h1, h2, h3' } }\n    'and/then/this.mjs',  // export const customSelectors = { ':--heading': 'h1, h2, h3' } }\n    'and/then/that.json', // { \"custom-selectors\": { \":--heading\": \"h1, h2, h3\" } }\n    cachedObject,\n    customProperties => {\n      customProperties    // { ':--heading': 'h1, h2, h3' }\n    }\n  ]\n});\n```\n\n[cli-img]: https://img.shields.io/travis/postcss/postcss-custom-selectors.svg\n[cli-url]: https://travis-ci.org/postcss/postcss-custom-selectors\n[css-img]: https://cssdb.org/badge/custom-selectors.svg\n[css-url]: https://cssdb.org/#custom-selectors\n[git-img]: https://img.shields.io/badge/support-chat-blue.svg\n[git-url]: https://gitter.im/postcss/postcss\n[npm-img]: https://img.shields.io/npm/v/postcss-custom-selectors.svg\n[npm-url]: https://www.npmjs.com/package/postcss-custom-selectors\n\n[CSS Extensions]: https://drafts.csswg.org/css-extensions/#custom-selectors\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS Custom Selectors]: https://github.com/postcss/postcss-custom-selectors\n",
    "licenseText": "# The MIT License (MIT)\n\nCopyright Â© PostCSS\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-custom-selectors/-/postcss-custom-selectors-5.1.2.tgz#64858c6eb2ecff2fb41d0b28c9dd7b3db4de7fba",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-custom-selectors/-/postcss-custom-selectors-5.1.2.tgz",
    "hash": "64858c6eb2ecff2fb41d0b28c9dd7b3db4de7fba",
    "integrity": "sha512-DSGDhqinCqXqlS4R7KGxL1OSycd1lydugJ1ky4iRXPHdBRiozyMHrdu0H3o7qNOCiZwySZTUI5MV0T8QhCLu+w==",
    "registry": "npm",
    "packageName": "postcss-custom-selectors",
    "cacheIntegrity": "sha512-DSGDhqinCqXqlS4R7KGxL1OSycd1lydugJ1ky4iRXPHdBRiozyMHrdu0H3o7qNOCiZwySZTUI5MV0T8QhCLu+w== sha1-ZIWMbrLs/y+0HQsoyd17PbTef7o="
  },
  "registry": "npm",
  "hash": "64858c6eb2ecff2fb41d0b28c9dd7b3db4de7fba"
}