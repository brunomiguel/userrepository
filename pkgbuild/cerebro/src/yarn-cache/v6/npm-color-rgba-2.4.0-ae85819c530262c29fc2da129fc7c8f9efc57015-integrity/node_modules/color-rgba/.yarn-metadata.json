{
  "manifest": {
    "name": "color-rgba",
    "version": "2.4.0",
    "description": "Convert color string (or parseable argument) to RGBA array",
    "main": "index.js",
    "browser": "index.js",
    "module": "./index.mjs",
    "scripts": {
      "test": "node test.mjs && node test.cjs"
    },
    "exports": {
      "import": "./index.mjs",
      "require": "./index.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/colorjs/color-rgba.git"
    },
    "keywords": [
      "color",
      "colorjs",
      "rgb",
      "rgba",
      "color-space",
      "css"
    ],
    "author": {
      "name": "Dmitry Yv",
      "email": "dfcreative@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/colorjs/color-rgba/issues"
    },
    "homepage": "https://github.com/colorjs/color-rgba#readme",
    "dependencies": {
      "color-parse": "^1.4.2",
      "color-space": "^2.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-color-rgba-2.4.0-ae85819c530262c29fc2da129fc7c8f9efc57015-integrity/node_modules/color-rgba/package.json",
    "readmeFilename": "readme.md",
    "readme": "# color-rgba [![Build Status](https://travis-ci.org/colorjs/color-rgba.png)](https://travis-ci.org/colorjs/color-rgba) [![size](https://img.shields.io/bundlephobia/minzip/color-rgba?label=size)](https://bundlephobia.com/result?p=color-rgba) ![stable](https://img.shields.io/badge/stability-stable-green)\n\nConvert color string to array with rgba channel values: `\"rgba(127,127,127,.1)\"` → `[127,127,127,.1]`.\n\n## Usage\n\n[![npm install color-rgba](https://nodei.co/npm/color-rgba.png?mini=true)](https://npmjs.org/package/color-rgba/)\n\n```js\nconst rgba = require('color-rgba')\n\nrgba('red') // [255, 0, 0, 1]\nrgba('rgb(80, 120, 160)') // [80, 120, 160, 1]\nrgba('rgba(80, 120, 160, .5)') // [80, 120, 160, .5]\nrgba('hsla(109, 50%, 50%, .75)') // [87.125, 191.25, 63.75, .75]\nrgba`rgb(80 120, 160 / 50%)` // [80, 120, 160, .5]\n```\n\n## API\n\n### `let [r, g, b, alpha] = rgba(color)`\n\nReturns channels values as they are in the input `color` string argument. `alpha` is always from `0..1` range. `color` can be a CSS color string, an array with channel values, an object etc., see [color-parse](https://ghub.io/color-parse).\n\n## Related\n\n* [color-normalize](https://github.com/colorjs/color-normalize) − convert any input color argument into a defined output format.\n* [color-alpha](https://github.com/colorjs/color-alpha) − change alpha of a color string.\n* [color-interpolate](https://github.com/colorjs/color-interpolate) − interpolate by color palette.\n\n## License\n\n(c) 2017 Dima Yv. MIT License\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/color-rgba/-/color-rgba-2.4.0.tgz#ae85819c530262c29fc2da129fc7c8f9efc57015",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/color-rgba/-/color-rgba-2.4.0.tgz",
    "hash": "ae85819c530262c29fc2da129fc7c8f9efc57015",
    "integrity": "sha512-Nti4qbzr/z2LbUWySr7H9dk3Rl7gZt7ihHAxlgT4Ho90EXWkjtkL1avTleu9yeGuqrt/chxTB6GKK8nZZ6V0+Q==",
    "registry": "npm",
    "packageName": "color-rgba",
    "cacheIntegrity": "sha512-Nti4qbzr/z2LbUWySr7H9dk3Rl7gZt7ihHAxlgT4Ho90EXWkjtkL1avTleu9yeGuqrt/chxTB6GKK8nZZ6V0+Q== sha1-roWBnFMCYsKfwtoSn8fI+e/FcBU="
  },
  "registry": "npm",
  "hash": "ae85819c530262c29fc2da129fc7c8f9efc57015"
}