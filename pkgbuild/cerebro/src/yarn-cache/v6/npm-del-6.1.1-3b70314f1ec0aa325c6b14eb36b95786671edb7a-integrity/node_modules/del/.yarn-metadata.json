{
  "manifest": {
    "name": "del",
    "version": "6.1.1",
    "description": "Delete files and directories",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/del.git"
    },
    "funding": "https://github.com/sponsors/sindresorhus",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://sindresorhus.com"
    },
    "engines": {
      "node": ">=10"
    },
    "scripts": {
      "test": "xo && ava && tsd",
      "bench": "node benchmark.js"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "keywords": [
      "delete",
      "files",
      "folders",
      "directories",
      "remove",
      "destroy",
      "trash",
      "unlink",
      "clean",
      "cleaning",
      "cleanup",
      "rm",
      "rmrf",
      "rimraf",
      "rmdir",
      "glob",
      "gulpfriendly",
      "file",
      "folder",
      "directory",
      "fs",
      "filesystem"
    ],
    "dependencies": {
      "globby": "^11.0.1",
      "graceful-fs": "^4.2.4",
      "is-glob": "^4.0.1",
      "is-path-cwd": "^2.2.0",
      "is-path-inside": "^3.0.2",
      "p-map": "^4.0.0",
      "rimraf": "^3.0.2",
      "slash": "^3.0.0"
    },
    "devDependencies": {
      "ava": "^2.4.0",
      "benchmark": "^2.1.4",
      "make-dir": "^3.1.0",
      "tempy": "^0.7.0",
      "tsd": "^0.13.1",
      "xo": "^0.33.1"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-del-6.1.1-3b70314f1ec0aa325c6b14eb36b95786671edb7a-integrity/node_modules/del/package.json",
    "readmeFilename": "readme.md",
    "readme": "# del\n\n> Delete files and directories using [globs](https://github.com/sindresorhus/globby#globbing-patterns)\n\nSimilar to [rimraf](https://github.com/isaacs/rimraf), but with a Promise API and support for multiple files and globbing. It also protects you against deleting the current working directory and above.\n\n## Install\n\n```\n$ npm install del\n```\n\n## Usage\n\n```js\nconst del = require('del');\n\n(async () => {\n\tconst deletedFilePaths = await del(['temp/*.js', '!temp/unicorn.js']);\n\tconst deletedDirectoryPaths = await del(['temp', 'public']);\n\n\tconsole.log('Deleted files:\\n', deletedFilePaths.join('\\n'));\n\tconsole.log('\\n\\n');\n\tconsole.log('Deleted directories:\\n', deletedDirectoryPaths.join('\\n'));\n})();\n```\n\n## Beware\n\nThe glob pattern `**` matches all children and *the parent*.\n\nSo this won't work:\n\n```js\ndel.sync(['public/assets/**', '!public/assets/goat.png']);\n```\n\nYou have to explicitly ignore the parent directories too:\n\n```js\ndel.sync(['public/assets/**', '!public/assets', '!public/assets/goat.png']);\n```\n\nTo delete all subdirectories inside `public/`, you can do:\n\n```js\ndel.sync(['public/*/']);\n```\n\nSuggestions on how to improve this welcome!\n\n## API\n\nNote that glob patterns can only contain forward-slashes, not backward-slashes. Windows file paths can use backward-slashes as long as the path does not contain any glob-like characters, otherwise use `path.posix.join()` instead of `path.join()`.\n\n### del(patterns, options?)\n\nReturns `Promise<string[]>` with the deleted paths.\n\n### del.sync(patterns, options?)\n\nReturns `string[]` with the deleted paths.\n\n#### patterns\n\nType: `string | string[]`\n\nSee the supported [glob patterns](https://github.com/sindresorhus/globby#globbing-patterns).\n\n- [Pattern examples with expected matches](https://github.com/sindresorhus/multimatch/blob/main/test/test.js)\n- [Quick globbing pattern overview](https://github.com/sindresorhus/multimatch#globbing-patterns)\n\n#### options\n\nType: `object`\n\nYou can specify any of the [`globby` options](https://github.com/sindresorhus/globby#options) in addition to the below options. In contrast to the `globby` defaults, `expandDirectories`, `onlyFiles`, and `followSymbolicLinks` are `false` by default.\n\n##### force\n\nType: `boolean`\\\nDefault: `false`\n\nAllow deleting the current working directory and outside.\n\n##### dryRun\n\nType: `boolean`\\\nDefault: `false`\n\nSee what would be deleted.\n\n```js\nconst del = require('del');\n\n(async () => {\n\tconst deletedPaths = await del(['temp/*.js'], {dryRun: true});\n\n\tconsole.log('Files and directories that would be deleted:\\n', deletedPaths.join('\\n'));\n})();\n```\n\n##### concurrency\n\nType: `number`\\\nDefault: `Infinity`\\\nMinimum: `1`\n\nConcurrency limit.\n\n##### onProgress\n\nType: `(progress: ProgressData) => void`\n\nCalled after each file or directory is deleted.\n\n```js\nimport del from 'del';\n\nawait del(patterns, {\n\tonProgress: progress => {\n\t// â€¦\n}});\n```\n\n###### ProgressData\n\n```js\n{\n\ttotalCount: number,\n\tdeletedCount: number,\n\tpercent: number\n}\n```\n\n- `percent` is a value between `0` and `1`\n\n## CLI\n\nSee [del-cli](https://github.com/sindresorhus/del-cli) for a CLI for this module and [trash-cli](https://github.com/sindresorhus/trash-cli) for a safe version that is suitable for running by hand.\n\n## del for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of del and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-del?utm_source=npm-del&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Related\n\n- [make-dir](https://github.com/sindresorhus/make-dir) - Make a directory and its parents if needed\n- [globby](https://github.com/sindresorhus/globby) - User-friendly glob matching\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/del/-/del-6.1.1.tgz#3b70314f1ec0aa325c6b14eb36b95786671edb7a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/del/-/del-6.1.1.tgz",
    "hash": "3b70314f1ec0aa325c6b14eb36b95786671edb7a",
    "integrity": "sha512-ua8BhapfP0JUJKC/zV9yHHDW/rDoDxP4Zhn3AkA6/xT6gY7jYXJiaeyBZznYVujhZZET+UgcbZiQ7sN3WqcImg==",
    "registry": "npm",
    "packageName": "del",
    "cacheIntegrity": "sha512-ua8BhapfP0JUJKC/zV9yHHDW/rDoDxP4Zhn3AkA6/xT6gY7jYXJiaeyBZznYVujhZZET+UgcbZiQ7sN3WqcImg== sha1-O3AxTx7AqjJcaxTrNrlXhmce23o="
  },
  "registry": "npm",
  "hash": "3b70314f1ec0aa325c6b14eb36b95786671edb7a"
}