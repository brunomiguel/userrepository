"use strict";

var _powerAssert = _interopRequireDefault(require("power-assert"));

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _logger = _interopRequireDefault(require("./logger.js"));

var _icnsGenerator = _interopRequireWildcard(require("./icns-generator.js"));

var _rewire = _interopRequireDefault(require("rewire"));

var _powerAssertVisitorKeys = "{\"ArrayExpression\":[\"elements\"],\"AssignmentExpression\":[\"left\",\"right\"],\"BinaryExpression\":[\"left\",\"right\"],\"InterpreterDirective\":[],\"Directive\":[\"value\"],\"DirectiveLiteral\":[],\"BlockStatement\":[\"directives\",\"body\"],\"BreakStatement\":[\"label\"],\"CallExpression\":[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],\"CatchClause\":[\"param\",\"body\"],\"ConditionalExpression\":[\"test\",\"consequent\",\"alternate\"],\"ContinueStatement\":[\"label\"],\"DebuggerStatement\":[],\"DoWhileStatement\":[\"test\",\"body\"],\"EmptyStatement\":[],\"ExpressionStatement\":[\"expression\"],\"File\":[\"program\"],\"ForInStatement\":[\"left\",\"right\",\"body\"],\"ForStatement\":[\"init\",\"test\",\"update\",\"body\"],\"FunctionDeclaration\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"FunctionExpression\":[\"id\",\"params\",\"body\",\"returnType\",\"typeParameters\"],\"Identifier\":[\"typeAnnotation\"],\"IfStatement\":[\"test\",\"consequent\",\"alternate\"],\"LabeledStatement\":[\"label\",\"body\"],\"StringLiteral\":[],\"NumericLiteral\":[],\"NullLiteral\":[],\"BooleanLiteral\":[],\"RegExpLiteral\":[],\"LogicalExpression\":[\"left\",\"right\"],\"MemberExpression\":[\"object\",\"property\"],\"NewExpression\":[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],\"Program\":[\"directives\",\"body\"],\"ObjectExpression\":[\"properties\"],\"ObjectMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectProperty\":[\"key\",\"value\",\"decorators\"],\"RestElement\":[\"argument\",\"typeAnnotation\"],\"ReturnStatement\":[\"argument\"],\"SequenceExpression\":[\"expressions\"],\"SwitchCase\":[\"test\",\"consequent\"],\"SwitchStatement\":[\"discriminant\",\"cases\"],\"ThisExpression\":[],\"ThrowStatement\":[\"argument\"],\"TryStatement\":[\"block\",\"handler\",\"finalizer\"],\"UnaryExpression\":[\"argument\"],\"UpdateExpression\":[\"argument\"],\"VariableDeclaration\":[\"declarations\"],\"VariableDeclarator\":[\"id\",\"init\"],\"WhileStatement\":[\"test\",\"body\"],\"WithStatement\":[\"object\",\"body\"],\"AssignmentPattern\":[\"left\",\"right\"],\"ArrayPattern\":[\"elements\",\"typeAnnotation\"],\"ArrowFunctionExpression\":[\"params\",\"body\",\"returnType\",\"typeParameters\"],\"ClassBody\":[\"body\"],\"ClassDeclaration\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ClassExpression\":[\"id\",\"body\",\"superClass\",\"mixins\",\"typeParameters\",\"superTypeParameters\",\"implements\",\"decorators\"],\"ExportAllDeclaration\":[\"source\"],\"ExportDefaultDeclaration\":[\"declaration\"],\"ExportNamedDeclaration\":[\"declaration\",\"specifiers\",\"source\"],\"ExportSpecifier\":[\"local\",\"exported\"],\"ForOfStatement\":[\"left\",\"right\",\"body\"],\"ImportDeclaration\":[\"specifiers\",\"source\"],\"ImportDefaultSpecifier\":[\"local\"],\"ImportNamespaceSpecifier\":[\"local\"],\"ImportSpecifier\":[\"local\",\"imported\"],\"MetaProperty\":[\"meta\",\"property\"],\"ClassMethod\":[\"key\",\"params\",\"body\",\"decorators\",\"returnType\",\"typeParameters\"],\"ObjectPattern\":[\"properties\",\"typeAnnotation\"],\"SpreadElement\":[\"argument\"],\"Super\":[],\"TaggedTemplateExpression\":[\"tag\",\"quasi\"],\"TemplateElement\":[],\"TemplateLiteral\":[\"quasis\",\"expressions\"],\"YieldExpression\":[\"argument\"],\"AnyTypeAnnotation\":[],\"ArrayTypeAnnotation\":[\"elementType\"],\"BooleanTypeAnnotation\":[],\"BooleanLiteralTypeAnnotation\":[],\"NullLiteralTypeAnnotation\":[],\"ClassImplements\":[\"id\",\"typeParameters\"],\"DeclareClass\":[\"id\",\"typeParameters\",\"extends\",\"mixins\",\"implements\",\"body\"],\"DeclareFunction\":[\"id\"],\"DeclareInterface\":[\"id\",\"typeParameters\",\"extends\",\"mixins\",\"implements\",\"body\"],\"DeclareModule\":[\"id\",\"body\"],\"DeclareModuleExports\":[\"typeAnnotation\"],\"DeclareTypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"DeclareOpaqueType\":[\"id\",\"typeParameters\",\"supertype\"],\"DeclareVariable\":[\"id\"],\"DeclareExportDeclaration\":[\"declaration\",\"specifiers\",\"source\"],\"DeclareExportAllDeclaration\":[\"source\"],\"DeclaredPredicate\":[\"value\"],\"ExistsTypeAnnotation\":[],\"FunctionTypeAnnotation\":[\"typeParameters\",\"params\",\"rest\",\"returnType\"],\"FunctionTypeParam\":[\"name\",\"typeAnnotation\"],\"GenericTypeAnnotation\":[\"id\",\"typeParameters\"],\"InferredPredicate\":[],\"InterfaceExtends\":[\"id\",\"typeParameters\"],\"InterfaceDeclaration\":[\"id\",\"typeParameters\",\"extends\",\"mixins\",\"implements\",\"body\"],\"InterfaceTypeAnnotation\":[\"extends\",\"body\"],\"IntersectionTypeAnnotation\":[\"types\"],\"MixedTypeAnnotation\":[],\"EmptyTypeAnnotation\":[],\"NullableTypeAnnotation\":[\"typeAnnotation\"],\"NumberLiteralTypeAnnotation\":[],\"NumberTypeAnnotation\":[],\"ObjectTypeAnnotation\":[\"properties\",\"indexers\",\"callProperties\",\"internalSlots\"],\"ObjectTypeInternalSlot\":[\"id\",\"value\",\"optional\",\"static\",\"method\"],\"ObjectTypeCallProperty\":[\"value\"],\"ObjectTypeIndexer\":[\"id\",\"key\",\"value\",\"variance\"],\"ObjectTypeProperty\":[\"key\",\"value\",\"variance\"],\"ObjectTypeSpreadProperty\":[\"argument\"],\"OpaqueType\":[\"id\",\"typeParameters\",\"supertype\",\"impltype\"],\"QualifiedTypeIdentifier\":[\"id\",\"qualification\"],\"StringLiteralTypeAnnotation\":[],\"StringTypeAnnotation\":[],\"ThisTypeAnnotation\":[],\"TupleTypeAnnotation\":[\"types\"],\"TypeofTypeAnnotation\":[\"argument\"],\"TypeAlias\":[\"id\",\"typeParameters\",\"right\"],\"TypeAnnotation\":[\"typeAnnotation\"],\"TypeCastExpression\":[\"expression\",\"typeAnnotation\"],\"TypeParameter\":[\"bound\",\"default\",\"variance\"],\"TypeParameterDeclaration\":[\"params\"],\"TypeParameterInstantiation\":[\"params\"],\"UnionTypeAnnotation\":[\"types\"],\"Variance\":[],\"VoidTypeAnnotation\":[],\"JSXAttribute\":[\"name\",\"value\"],\"JSXClosingElement\":[\"name\"],\"JSXElement\":[\"openingElement\",\"children\",\"closingElement\"],\"JSXEmptyExpression\":[],\"JSXExpressionContainer\":[\"expression\"],\"JSXSpreadChild\":[\"expression\"],\"JSXIdentifier\":[],\"JSXMemberExpression\":[\"object\",\"property\"],\"JSXNamespacedName\":[\"namespace\",\"name\"],\"JSXOpeningElement\":[\"name\",\"attributes\"],\"JSXSpreadAttribute\":[\"argument\"],\"JSXText\":[],\"JSXFragment\":[\"openingFragment\",\"children\",\"closingFragment\"],\"JSXOpeningFragment\":[],\"JSXClosingFragment\":[],\"Noop\":[],\"ParenthesizedExpression\":[\"expression\"],\"AwaitExpression\":[\"argument\"],\"BindExpression\":[\"object\",\"callee\"],\"ClassProperty\":[\"key\",\"value\",\"typeAnnotation\",\"decorators\"],\"OptionalMemberExpression\":[\"object\",\"property\"],\"OptionalCallExpression\":[\"callee\",\"arguments\",\"typeParameters\",\"typeArguments\"],\"ClassPrivateProperty\":[\"key\",\"value\"],\"Import\":[],\"Decorator\":[\"expression\"],\"DoExpression\":[\"body\"],\"ExportDefaultSpecifier\":[\"exported\"],\"ExportNamespaceSpecifier\":[\"exported\"],\"PrivateName\":[\"id\"],\"BigIntLiteral\":[],\"TSParameterProperty\":[\"parameter\"],\"TSDeclareFunction\":[\"id\",\"typeParameters\",\"params\",\"returnType\"],\"TSDeclareMethod\":[\"decorators\",\"key\",\"typeParameters\",\"params\",\"returnType\"],\"TSQualifiedName\":[\"left\",\"right\"],\"TSCallSignatureDeclaration\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSConstructSignatureDeclaration\":[\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSPropertySignature\":[\"key\",\"typeAnnotation\",\"initializer\"],\"TSMethodSignature\":[\"key\",\"typeParameters\",\"parameters\",\"typeAnnotation\"],\"TSIndexSignature\":[\"parameters\",\"typeAnnotation\"],\"TSAnyKeyword\":[],\"TSUnknownKeyword\":[],\"TSNumberKeyword\":[],\"TSObjectKeyword\":[],\"TSBooleanKeyword\":[],\"TSStringKeyword\":[],\"TSSymbolKeyword\":[],\"TSVoidKeyword\":[],\"TSUndefinedKeyword\":[],\"TSNullKeyword\":[],\"TSNeverKeyword\":[],\"TSThisType\":[],\"TSFunctionType\":[\"typeParameters\",\"typeAnnotation\"],\"TSConstructorType\":[\"typeParameters\",\"typeAnnotation\"],\"TSTypeReference\":[\"typeName\",\"typeParameters\"],\"TSTypePredicate\":[\"parameterName\",\"typeAnnotation\"],\"TSTypeQuery\":[\"exprName\"],\"TSTypeLiteral\":[\"members\"],\"TSArrayType\":[\"elementType\"],\"TSTupleType\":[\"elementTypes\"],\"TSOptionalType\":[\"typeAnnotation\"],\"TSRestType\":[\"typeAnnotation\"],\"TSUnionType\":[\"types\"],\"TSIntersectionType\":[\"types\"],\"TSConditionalType\":[\"checkType\",\"extendsType\",\"trueType\",\"falseType\"],\"TSInferType\":[\"typeParameter\"],\"TSParenthesizedType\":[\"typeAnnotation\"],\"TSTypeOperator\":[\"typeAnnotation\"],\"TSIndexedAccessType\":[\"objectType\",\"indexType\"],\"TSMappedType\":[\"typeParameter\",\"typeAnnotation\"],\"TSLiteralType\":[\"literal\"],\"TSExpressionWithTypeArguments\":[\"expression\",\"typeParameters\"],\"TSInterfaceDeclaration\":[\"id\",\"typeParameters\",\"extends\",\"body\"],\"TSInterfaceBody\":[\"body\"],\"TSTypeAliasDeclaration\":[\"id\",\"typeParameters\",\"typeAnnotation\"],\"TSAsExpression\":[\"expression\",\"typeAnnotation\"],\"TSTypeAssertion\":[\"typeAnnotation\",\"expression\"],\"TSEnumDeclaration\":[\"id\",\"members\"],\"TSEnumMember\":[\"id\",\"initializer\"],\"TSModuleDeclaration\":[\"id\",\"body\"],\"TSModuleBlock\":[\"body\"],\"TSImportEqualsDeclaration\":[\"id\",\"moduleReference\"],\"TSExternalModuleReference\":[\"expression\"],\"TSNonNullExpression\":[\"expression\"],\"TSExportAssignment\":[\"expression\"],\"TSNamespaceExportDeclaration\":[\"id\"],\"TSTypeAnnotation\":[\"typeAnnotation\"],\"TSTypeParameterInstantiation\":[\"params\"],\"TSTypeParameterDeclaration\":[\"params\"],\"TSTypeParameter\":[\"constraint\",\"default\"]}",
    _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @test {ICNSGenerator} */
describe('ICNSGenerator', () => {
  const Module = (0, _rewire.default)('./icns-generator.js');
  /** @test {GenerateICNS} */

  it('generate', () => {
    const images = (0, _icnsGenerator.GetRequiredICNSImageSizes)().map(size => {
      const path = _path.default.join('./examples/data', size + '.png');

      return {
        size: size,
        path: path
      };
    });
    return (0, _icnsGenerator.default)(images, './examples/data', {}, new _logger.default()).then(result => {
      var _rec = new _powerAssertRecorder();

      (0, _powerAssert.default)(_rec._expr(_rec._capt(result, "arguments/0"), {
        content: "assert(result)",
        filepath: "src/lib/icns-generator.test.js",
        line: 20,
        ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"Identifier\",\"name\":\"result\",\"range\":[7,13]}],\"range\":[0,14]}",
        tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"result\",\"range\":[7,13]},{\"type\":{\"label\":\")\"},\"range\":[13,14]}]",
        visitorKeys: _powerAssertVisitorKeys
      }));

      _fs.default.unlinkSync(result);
    });
  });
  /** @test {createFileHeader} */

  it('createFileHeader', () => {
    var _rec2 = new _powerAssertRecorder(),
        _rec3 = new _powerAssertRecorder(),
        _rec4 = new _powerAssertRecorder(),
        _rec5 = new _powerAssertRecorder(),
        _rec6 = new _powerAssertRecorder();

    const createFileHeader = Module.__get__('createFileHeader');

    const header = createFileHeader(401); // In ASCII "icns"

    (0, _powerAssert.default)(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(header, "arguments/0/left/callee/object").readUInt8(0), "arguments/0/left") === 0x69, "arguments/0"), {
      content: "assert(header.readUInt8(0) === 0x69)",
      filepath: "src/lib/icns-generator.test.js",
      line: 31,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt8\",\"range\":[14,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":0,\"range\":[24,25]}],\"range\":[7,26]},\"right\":{\"type\":\"NumericLiteral\",\"value\":105,\"range\":[31,35]},\"range\":[7,35]}],\"range\":[0,36]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt8\",\"range\":[14,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\"num\"},\"value\":0,\"range\":[24,25]},{\"type\":{\"label\":\")\"},\"range\":[25,26]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[27,30]},{\"type\":{\"label\":\"num\"},\"value\":105,\"range\":[31,35]},{\"type\":{\"label\":\")\"},\"range\":[35,36]}]",
      visitorKeys: _powerAssertVisitorKeys
    }));
    (0, _powerAssert.default)(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(header, "arguments/0/left/callee/object").readUInt8(1), "arguments/0/left") === 0x63, "arguments/0"), {
      content: "assert(header.readUInt8(1) === 0x63)",
      filepath: "src/lib/icns-generator.test.js",
      line: 32,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt8\",\"range\":[14,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":1,\"range\":[24,25]}],\"range\":[7,26]},\"right\":{\"type\":\"NumericLiteral\",\"value\":99,\"range\":[31,35]},\"range\":[7,35]}],\"range\":[0,36]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt8\",\"range\":[14,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\"num\"},\"value\":1,\"range\":[24,25]},{\"type\":{\"label\":\")\"},\"range\":[25,26]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[27,30]},{\"type\":{\"label\":\"num\"},\"value\":99,\"range\":[31,35]},{\"type\":{\"label\":\")\"},\"range\":[35,36]}]",
      visitorKeys: _powerAssertVisitorKeys
    }));
    (0, _powerAssert.default)(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(header, "arguments/0/left/callee/object").readUInt8(2), "arguments/0/left") === 0x6e, "arguments/0"), {
      content: "assert(header.readUInt8(2) === 0x6e)",
      filepath: "src/lib/icns-generator.test.js",
      line: 33,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt8\",\"range\":[14,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":2,\"range\":[24,25]}],\"range\":[7,26]},\"right\":{\"type\":\"NumericLiteral\",\"value\":110,\"range\":[31,35]},\"range\":[7,35]}],\"range\":[0,36]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt8\",\"range\":[14,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\"num\"},\"value\":2,\"range\":[24,25]},{\"type\":{\"label\":\")\"},\"range\":[25,26]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[27,30]},{\"type\":{\"label\":\"num\"},\"value\":110,\"range\":[31,35]},{\"type\":{\"label\":\")\"},\"range\":[35,36]}]",
      visitorKeys: _powerAssertVisitorKeys
    }));
    (0, _powerAssert.default)(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(header, "arguments/0/left/callee/object").readUInt8(3), "arguments/0/left") === 0x73, "arguments/0"), {
      content: "assert(header.readUInt8(3) === 0x73)",
      filepath: "src/lib/icns-generator.test.js",
      line: 34,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt8\",\"range\":[14,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":3,\"range\":[24,25]}],\"range\":[7,26]},\"right\":{\"type\":\"NumericLiteral\",\"value\":115,\"range\":[31,35]},\"range\":[7,35]}],\"range\":[0,36]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt8\",\"range\":[14,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\"num\"},\"value\":3,\"range\":[24,25]},{\"type\":{\"label\":\")\"},\"range\":[25,26]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[27,30]},{\"type\":{\"label\":\"num\"},\"value\":115,\"range\":[31,35]},{\"type\":{\"label\":\")\"},\"range\":[35,36]}]",
      visitorKeys: _powerAssertVisitorKeys
    })); // File size

    (0, _powerAssert.default)(_rec6._expr(_rec6._capt(_rec6._capt(_rec6._capt(header, "arguments/0/left/callee/object").readUInt32BE(4), "arguments/0/left") === 401, "arguments/0"), {
      content: "assert(header.readUInt32BE(4) === 401)",
      filepath: "src/lib/icns-generator.test.js",
      line: 37,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt32BE\",\"range\":[14,26]},\"computed\":false,\"range\":[7,26]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":4,\"range\":[27,28]}],\"range\":[7,29]},\"right\":{\"type\":\"NumericLiteral\",\"value\":401,\"range\":[34,37]},\"range\":[7,37]}],\"range\":[0,38]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt32BE\",\"range\":[14,26]},{\"type\":{\"label\":\"(\"},\"range\":[26,27]},{\"type\":{\"label\":\"num\"},\"value\":4,\"range\":[27,28]},{\"type\":{\"label\":\")\"},\"range\":[28,29]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[30,33]},{\"type\":{\"label\":\"num\"},\"value\":401,\"range\":[34,37]},{\"type\":{\"label\":\")\"},\"range\":[37,38]}]",
      visitorKeys: _powerAssertVisitorKeys
    }));
  });
  /** @test {createIconHeader} */

  it('createIconHeader', () => {
    var _rec7 = new _powerAssertRecorder(),
        _rec8 = new _powerAssertRecorder(),
        _rec9 = new _powerAssertRecorder(),
        _rec10 = new _powerAssertRecorder(),
        _rec11 = new _powerAssertRecorder();

    const createIconHeader = Module.__get__('createIconHeader');

    const header = createIconHeader(`ic07`, 713); // In ASCII "ic07"

    (0, _powerAssert.default)(_rec7._expr(_rec7._capt(_rec7._capt(_rec7._capt(header, "arguments/0/left/callee/object").readUInt8(0), "arguments/0/left") === 0x69, "arguments/0"), {
      content: "assert(header.readUInt8(0) === 0x69)",
      filepath: "src/lib/icns-generator.test.js",
      line: 46,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt8\",\"range\":[14,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":0,\"range\":[24,25]}],\"range\":[7,26]},\"right\":{\"type\":\"NumericLiteral\",\"value\":105,\"range\":[31,35]},\"range\":[7,35]}],\"range\":[0,36]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt8\",\"range\":[14,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\"num\"},\"value\":0,\"range\":[24,25]},{\"type\":{\"label\":\")\"},\"range\":[25,26]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[27,30]},{\"type\":{\"label\":\"num\"},\"value\":105,\"range\":[31,35]},{\"type\":{\"label\":\")\"},\"range\":[35,36]}]",
      visitorKeys: _powerAssertVisitorKeys
    }));
    (0, _powerAssert.default)(_rec8._expr(_rec8._capt(_rec8._capt(_rec8._capt(header, "arguments/0/left/callee/object").readUInt8(1), "arguments/0/left") === 0x63, "arguments/0"), {
      content: "assert(header.readUInt8(1) === 0x63)",
      filepath: "src/lib/icns-generator.test.js",
      line: 47,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt8\",\"range\":[14,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":1,\"range\":[24,25]}],\"range\":[7,26]},\"right\":{\"type\":\"NumericLiteral\",\"value\":99,\"range\":[31,35]},\"range\":[7,35]}],\"range\":[0,36]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt8\",\"range\":[14,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\"num\"},\"value\":1,\"range\":[24,25]},{\"type\":{\"label\":\")\"},\"range\":[25,26]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[27,30]},{\"type\":{\"label\":\"num\"},\"value\":99,\"range\":[31,35]},{\"type\":{\"label\":\")\"},\"range\":[35,36]}]",
      visitorKeys: _powerAssertVisitorKeys
    }));
    (0, _powerAssert.default)(_rec9._expr(_rec9._capt(_rec9._capt(_rec9._capt(header, "arguments/0/left/callee/object").readUInt8(2), "arguments/0/left") === 0x30, "arguments/0"), {
      content: "assert(header.readUInt8(2) === 0x30)",
      filepath: "src/lib/icns-generator.test.js",
      line: 48,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt8\",\"range\":[14,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":2,\"range\":[24,25]}],\"range\":[7,26]},\"right\":{\"type\":\"NumericLiteral\",\"value\":48,\"range\":[31,35]},\"range\":[7,35]}],\"range\":[0,36]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt8\",\"range\":[14,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\"num\"},\"value\":2,\"range\":[24,25]},{\"type\":{\"label\":\")\"},\"range\":[25,26]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[27,30]},{\"type\":{\"label\":\"num\"},\"value\":48,\"range\":[31,35]},{\"type\":{\"label\":\")\"},\"range\":[35,36]}]",
      visitorKeys: _powerAssertVisitorKeys
    }));
    (0, _powerAssert.default)(_rec10._expr(_rec10._capt(_rec10._capt(_rec10._capt(header, "arguments/0/left/callee/object").readUInt8(3), "arguments/0/left") === 0x37, "arguments/0"), {
      content: "assert(header.readUInt8(3) === 0x37)",
      filepath: "src/lib/icns-generator.test.js",
      line: 49,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt8\",\"range\":[14,23]},\"computed\":false,\"range\":[7,23]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":3,\"range\":[24,25]}],\"range\":[7,26]},\"right\":{\"type\":\"NumericLiteral\",\"value\":55,\"range\":[31,35]},\"range\":[7,35]}],\"range\":[0,36]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt8\",\"range\":[14,23]},{\"type\":{\"label\":\"(\"},\"range\":[23,24]},{\"type\":{\"label\":\"num\"},\"value\":3,\"range\":[24,25]},{\"type\":{\"label\":\")\"},\"range\":[25,26]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[27,30]},{\"type\":{\"label\":\"num\"},\"value\":55,\"range\":[31,35]},{\"type\":{\"label\":\")\"},\"range\":[35,36]}]",
      visitorKeys: _powerAssertVisitorKeys
    })); // Image size (specified size + header size)

    const size = 713 + 8;
    (0, _powerAssert.default)(_rec11._expr(_rec11._capt(_rec11._capt(_rec11._capt(header, "arguments/0/left/callee/object").readUInt32BE(4), "arguments/0/left") === _rec11._capt(size, "arguments/0/right"), "arguments/0"), {
      content: "assert(header.readUInt32BE(4) === size)",
      filepath: "src/lib/icns-generator.test.js",
      line: 53,
      ast: "{\"type\":\"CallExpression\",\"callee\":{\"type\":\"Identifier\",\"name\":\"assert\",\"range\":[0,6]},\"arguments\":[{\"type\":\"BinaryExpression\",\"operator\":\"===\",\"left\":{\"type\":\"CallExpression\",\"callee\":{\"type\":\"MemberExpression\",\"object\":{\"type\":\"Identifier\",\"name\":\"header\",\"range\":[7,13]},\"property\":{\"type\":\"Identifier\",\"name\":\"readUInt32BE\",\"range\":[14,26]},\"computed\":false,\"range\":[7,26]},\"arguments\":[{\"type\":\"NumericLiteral\",\"value\":4,\"range\":[27,28]}],\"range\":[7,29]},\"right\":{\"type\":\"Identifier\",\"name\":\"size\",\"range\":[34,38]},\"range\":[7,38]}],\"range\":[0,39]}",
      tokens: "[{\"type\":{\"label\":\"name\"},\"value\":\"assert\",\"range\":[0,6]},{\"type\":{\"label\":\"(\"},\"range\":[6,7]},{\"type\":{\"label\":\"name\"},\"value\":\"header\",\"range\":[7,13]},{\"type\":{\"label\":\".\"},\"range\":[13,14]},{\"type\":{\"label\":\"name\"},\"value\":\"readUInt32BE\",\"range\":[14,26]},{\"type\":{\"label\":\"(\"},\"range\":[26,27]},{\"type\":{\"label\":\"num\"},\"value\":4,\"range\":[27,28]},{\"type\":{\"label\":\")\"},\"range\":[28,29]},{\"type\":{\"label\":\"==/!=\"},\"value\":\"===\",\"range\":[30,33]},{\"type\":{\"label\":\"name\"},\"value\":\"size\",\"range\":[34,38]},{\"type\":{\"label\":\")\"},\"range\":[38,39]}]",
      visitorKeys: _powerAssertVisitorKeys
    }));
  });
  /*
  it('DebugUnpackIconBlocks', () => {
    const DebugUnpackIconBlocks = Module.__get__('DebugUnpackIconBlocks')
    return DebugUnpackIconBlocks('./examples/data/app.icns', './examples/data')
      .then(() => {
        assert(true)
      })
      .catch((err) => {
        assert(!err)
      })
  })
  */
});