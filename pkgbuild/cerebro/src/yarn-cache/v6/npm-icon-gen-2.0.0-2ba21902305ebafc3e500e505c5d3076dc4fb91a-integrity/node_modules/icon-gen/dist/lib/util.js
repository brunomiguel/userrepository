"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _os = _interopRequireDefault(require("os"));

var _uuid = _interopRequireDefault(require("uuid"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Util {
  /**
   * Create the work directory.
   * @return {String} The path of the created directory, failure is null.
   */
  static createWorkDir() {
    const dir = _path.default.join(_os.default.tmpdir(), _uuid.default.v4());

    _fs.default.mkdirSync(dir);

    const stat = _fs.default.statSync(dir);

    return stat && stat.isDirectory() ? dir : null;
  }
  /**
   * Delete a files.
   * @param {String[]} paths File paths.
   */


  static deleteFiles(paths) {
    paths.forEach(path => {
      try {
        const stat = _fs.default.statSync(path);

        if (stat && stat.isFile()) {
          _fs.default.unlinkSync(path);
        }
      } catch (err) {
        console.error(err);
      }
    });
  }
  /**
   * Filter by size to the specified image informations.
   * @param {ImageInfo[]} images Image file informations.
   * @param {Number[]} sizes  Required sizes.
   * @return {ImageInfo[]} Filtered image informations.
   */


  static filterImagesBySizes(images, sizes) {
    return images.filter(image => {
      return sizes.some(size => {
        return image.size === size;
      });
    }).sort((a, b) => {
      return a.size - b.size;
    });
  }
  /**
   * Convert a values to a flat array.
   * @param  {String[]|Array[]} values Values (['A', 'B', ['C', 'D']]).
   * @return {String[]} Flat array (['A', 'B', 'C', 'D']).
   */


  static flattenValues(values) {
    const paths = [];
    values.forEach(value => {
      if (!value) {
        return;
      }

      if (Array.isArray(value)) {
        value.forEach(path => {
          paths.push(path);
        });
      } else {
        paths.push(value);
      }
    });
    return paths;
  }

}

exports.default = Util;