{
  "manifest": {
    "name": "colorette",
    "version": "1.2.1",
    "description": "Color your terminal using pure idiomatic JavaScript.",
    "main": "index.cjs",
    "type": "module",
    "module": "index.js",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "require": "./index.cjs",
        "import": "./index.js"
      }
    },
    "types": "colorette.d.ts",
    "scripts": {
      "test": "c8 testmatrix test/*.cjs",
      "build": "node -e \"fs.writeFileSync('index.cjs',fs.readFileSync('index.js','utf8').replace(/export const /g,'exports.'),'utf8')\"",
      "release": "v=$npm_package_version; git commit -am $v && git tag -s $v -m $v && git push && git push --tags && npm publish"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/jorgebucaran/colorette.git"
    },
    "files": [
      "index.*",
      "colorette.d.ts"
    ],
    "keywords": [
      "colorette",
      "terminal",
      "styles",
      "color",
      "ansi"
    ],
    "author": {
      "name": "Jorge Bucaran"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/jorgebucaran/colorette/issues"
    },
    "homepage": "https://github.com/jorgebucaran/colorette",
    "devDependencies": {
      "c8": "7.2.0",
      "testmatrix": "0.1.2"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-colorette-1.2.1-4d0b921325c14faf92633086a536db6e89564b1b-integrity/node_modules/colorette/package.json",
    "readmeFilename": "README.md",
    "readme": "# Colorette [![](https://img.shields.io/npm/v/colorette.svg?label=&color=2a64e6)](https://www.npmjs.org/package/colorette)\n\n> Color your terminal using pure idiomatic JavaScript.\n\nColorette is a Node.js library for embellishing your CLI tools with colors and styles using [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code).\n\n- ~1.5x faster than alternatives ([run the benchmarks](#run-the-benchmarks)).\n- No wonky prototype-based method chains.\n- Automatic color support detection.\n- ~80 LOC and no dependencies.\n- [`NO_COLOR`](https://no-color.org) friendly.\n\n## Quickstart\n\n```console\nnpm i colorette\n```\n\nImport the [styles](#styles) you need. [Here](#supported-styles)'s the list of styles you can use.\n\n```js\nimport { red, blue, bold } from \"colorette\"\n```\n\nWrap your strings in one or more styles to produce the finish you're looking for.\n\n```js\nconsole.log(bold(blue(\"Engage!\")))\n```\n\nMix it with [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) to interpolate variables, expressions and create multi-line strings easily.\n\n```js\nconsole.log(`\n  Beets are ${red(\"red\")},\n  Plums are ${blue(\"blue\")},\n  ${bold(\"Colorette!\")}.\n`)\n```\n\nUsing `console.log`'s [string substitution](https://nodejs.org/api/console.html#console_console_log_data_args) can be useful too.\n\n```js\nconsole.log(bold(\"Total: $%f\"), 1.99)\n```\n\nYou can also nest styles without breaking existing escape codes.\n\n```js\nconsole.log(red(`Red Shirt ${blue(\"Blue Shirt\")} Red Shirt`))\n```\n\nFeeling adventurous? Try the [pipeline operator](https://github.com/tc39/proposal-pipeline-operator).\n\n```js\nconsole.log(\"Make it so!\" |> bold |> blue)\n```\n\n## Supported styles\n\nColorette supports the standard and bright color variations out-of-the-box. See [this issue](https://github.com/jorgebucaran/colorette/issues/27) if you were looking for TrueColor support.\n\n| Colors  | Background Colors | Bright Colors | Bright Background Colors | Modifiers         |\n| ------- | ----------------- | ------------- | ------------------------ | ----------------- |\n| black   | bgBlack           | blackBright   | bgBlackBright            | dim               |\n| red     | bgRed             | redBright     | bgRedBright              | **bold**          |\n| green   | bgGreen           | greenBright   | bgGreenBright            | hidden            |\n| yellow  | bgYellow          | yellowBright  | bgYellowBright           | _italic_          |\n| blue    | bgBlue            | blueBright    | bgBlueBright             | underline         |\n| magenta | bgMagenta         | magentaBright | bgMagentaBright          | ~~strikethrough~~ |\n| cyan    | bgCyan            | cyanBright    | bgCyanBright             | reset             |\n| white   | bgWhite           | whiteBright   | bgWhiteBright            |                   |\n| gray    |                   |               |                          |                   |\n\n## API\n\n### <code><i>style</i>(string)</code>\n\nReturns a string wrapped in the corresponding ANSI escape codes.\n\n```js\nred(\"Red Alert\") //=> \\u001b[31mRed Alert\\u001b[39m\n```\n\n### `options.enabled`\n\nColor will be enabled if your terminal supports it, `FORCE_COLOR` is defined in [`process.env`](https://nodejs.org/dist/latest-v8.x/docs/api/process.html#process_process_env) and if `NO_COLOR` isn't, but you can always override it if you want.\n\n```js\nimport { options } from \"colorette\"\n\noptions.enabled = false\n```\n\n## Run the benchmarks\n\n```\nnpm i -C bench && node bench\n```\n\n<pre>\ncolorette × 759,429 ops/sec\nchalk × 524,034 ops/sec\nkleur × 490,347 ops/sec\ncolors × 255,661 ops/sec\nansi-colors × 317,605 ops/sec\n</pre>\n\n## License\n\n[MIT](LICENSE.md)\n",
    "licenseText": "Copyright © Jorge Bucaran <<https://jorgebucaran.com>>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/colorette/-/colorette-1.2.1.tgz#4d0b921325c14faf92633086a536db6e89564b1b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/colorette/-/colorette-1.2.1.tgz",
    "hash": "4d0b921325c14faf92633086a536db6e89564b1b",
    "integrity": "sha512-puCDz0CzydiSYOrnXpz/PKd69zRrribezjtE9yd4zvytoRc8+RY/KJPvtPFKZS3E3wP6neGyMe0vOTlHO5L3Pw==",
    "registry": "npm",
    "packageName": "colorette",
    "cacheIntegrity": "sha512-puCDz0CzydiSYOrnXpz/PKd69zRrribezjtE9yd4zvytoRc8+RY/KJPvtPFKZS3E3wP6neGyMe0vOTlHO5L3Pw== sha1-TQuSEyXBT6+SYzCGpTbbbolWSxs="
  },
  "registry": "npm",
  "hash": "4d0b921325c14faf92633086a536db6e89564b1b"
}