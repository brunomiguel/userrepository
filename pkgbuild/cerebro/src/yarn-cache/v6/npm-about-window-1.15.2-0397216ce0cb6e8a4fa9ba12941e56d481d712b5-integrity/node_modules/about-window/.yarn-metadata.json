{
  "manifest": {
    "name": "about-window",
    "version": "1.15.2",
    "description": "'About App' window for Electron application",
    "main": "src/index.js",
    "typings": "src/index.d.ts",
    "scripts": {
      "dep": "npm install",
      "build": "tsc -p src/",
      "watch": "tsc --watch -p src/",
      "tslint": "tslint -p ./src",
      "stylelint": "stylelint styles/*.css",
      "check-formatting": "prettier --check '**/*.ts'",
      "lint": "npm run tslint && npm run stylelint && npm run check-formatting",
      "prettier": "prettier --write '**/*.ts'",
      "example": "NODE_ENV=production electron ./example",
      "debug": "electron ./example",
      "start": "npm run dep && npm run build && npm run example",
      "preversion": "npm run lint && npm run build"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/rhysd/electron-about-window.git"
    },
    "keywords": [
      "Electron",
      "electron-component",
      "about",
      "window"
    ],
    "author": {
      "name": "rhysd",
      "email": "lin90162@yahoo.co.jp"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/rhysd/electron-about-window/issues"
    },
    "homepage": "https://github.com/rhysd/electron-about-window#readme",
    "devDependencies": {
      "@types/node": "^16.x",
      "electron": "^15.1.0",
      "prettier": "^2.4.1",
      "stylelint": "^13.13.1",
      "stylelint-config-standard": "^22.0.0",
      "tslint": "^6.1.2",
      "typescript": "^4.4.3"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-about-window-1.15.2-0397216ce0cb6e8a4fa9ba12941e56d481d712b5-integrity/node_modules/about-window/package.json",
    "readmeFilename": "README.md",
    "readme": "'About This App' Window for [Electron](https://github.com/atom/electron) Apps\n=============================================================================\n[![npm version](https://badge.fury.io/js/about-window.svg)](https://www.npmjs.com/package/about-window)\n\n[This package](https://www.npmjs.com/package/about-window) provides 'About This App' window for [Electron](https://github.com/atom/electron) applications.\n\n- [x] Create 'About This App' window from given parameters\n  - [x] Icon path\n  - [x] Copy right\n  - [x] App name and Versions\n  - [x] Description\n- [x] Gather package information from package.json\n- [x] Automatically detect package.json\n- [x] Adjust window size to its contents automatically\n- [x] Optional close button\n- [x] CSS customizability\n\nYou can install this module via [npm](https://www.npmjs.com/).\n\n```sh\n$ npm install about-window\n```\n\n## Usage\n\nOnly one function is exported as default.  Please see [TypeScript type definition](index.d.ts).\nThe function can be called from both main process and renderer process.\n\n```typescript\nexport default function openAboutWindow(info: {\n    icon_path: string;\n    product_name?: string;\n    package_json_dir?: string;\n    about_page_dir?: string;\n    bug_report_url?: string;\n    bug_link_text?: string;\n    copyright?: string;\n    homepage?: string;\n    description?: string;\n    license?: string;\n    css_path?: string | string[];\n    adjust_window_size?: boolean;\n    win_options?: BrowserWindowOptions;\n    use_version_info?: boolean | [string, string][];\n    show_close_button?: string;\n    app?: Electron.App;\n    BrowserWindow?: typeof Electron.BrowserWindow;\n    ipcMain?: Electron.IpcMain;\n}): BrowserWindow\n```\n\nOnly `icon_path` property is required, others are optional.\nI recommend to specify as below to extract information from package.json as much as possible.\nPath to package.json is also automatically detected if possible.\n\n```typescript\nopenAboutWindow({\n    icon_path: 'path/to/icon.png'\n});\n```\n\nIf `string` value is passed to the first parameter, it is passed to `icon_path`. So following is a shorthand of above code:\n\n```typescript\nopenAboutWindow('path/to/icon.png');\n```\n\nYou can check [an example app](example) to know how to use this package.\n\n```sh\n$ git clone https://github.com/rhysd/about-window.git\n$ cd about-window/example\n$ npm install\n$ npm start\n\n# Or for debug\n$ npm run debug\n```\n\n### Parameter's properties of `openAboutWindow()`\n\n| Name | Description | Type |\n|------|-------------|------|\n| `icon_path` | Path to icon file of the application. The path is passed to `src` property of `<img>` element. **Required** | string |\n| `package_json_dir` | Path to directory which contains package.json.  If not specified, it will try to detect a path to package.json.  If also failed, it gives up and show less information in 'About This App' window. **Optional** | string |\n| `bug_report_url` | URL to bug report page.  If not specified, 'bugs' entry in package.json is used. **Optional** | string |\n| `copyright` | Copyright notice shown in window.  If not specified, it is replaced with license description generated by 'license' entry of package.json. **Optional** | string |\n| `homepage` | URL of application's web page.  If not specified, 'homepage' entry of package.json is used instead. **Optional** | string |\n| `description` | Description of the application.  If not specified, 'description' entry of package.json is used instead. **Optional** | string |\n| `license` | License of the application.  If not specified, 'license' entry of package.json is used instead. This property is used when `copyright` is not specified. **Optional** | string |\n| `win_options` | Options of 'About This App' window.  It is merged into default options. **Optional** | [BrowserWindow options object](https://github.com/atom/electron/blob/master/docs/api/browser-window.md#new-browserwindowoptions) |\n| `css_path` | Path(s) to user-defined CSS file.  It will be inserted to DOM of the window. **Optional** | (array of) string |\n| `adjust_window_size` | Adjust the window size to its content not to show scroll bar. **Optional** | boolean |\n| `open_devtools` | For debug purpose, Chrome DevTools will start when the window is opened. **Optional** | boolean |\n| `use_inner_html` | If `true`, set the value with `.innerHTML` on copyright, license and description Default is `false`. **Optional** | boolean |\n| `bug_link_text` | Text for a bug report link. **Optional** | string |\n| `product_name` | Name of the application **Optional** | string |\n| `use_version_info` | If is `false`, nothing will be displayed, if is `true`, the versions of electron, chrome, node, and v8 will be displayed, if is an array of string tuple, its entries will be displayed. Default is `true`. **Optional** | boolean |\n| `show_close_button` | If this is a valid string, a close button with this string be displayed. **Optional** | string |\n| `about_page_dir` | Directory path which contains `about.html` which is rendered in 'About this app' window. **Optional** | string |\n| `app` | [app](https://www.electronjs.org/docs/latest/api/app) instance to use. This property is necessary only when using on renderer processes. **Optional** | Electron.App |\n| `BrowserWindow` | Constructor of [BrowserWindow](https://www.electronjs.org/docs/latest/api/browser-window) to use. This property is necessary only when using on renderer processes. **Optional** | Electron.BrowserWindow |\n| `ipcMain` | [ipcMain](https://www.electronjs.org/docs/latest/api/ipc-main) instance to use. This property is necessary only when using on renderer processes. **Optional** | Electron.IpcMain |\n\n**Note:** If you set `use_inner_html` to `true`, please ensure that contents don't contain any untrusted external input\nin order to avoid XSS. Be careful.\n\n### Open the window from non-main process\n\nSince `openAboutWindow()` depends on several APIs only available on main process, they must be provided by caller when it is called on non-main process.\n\nTo mimic the APIs, use [`@electron/remote`](https://www.npmjs.com/package/@electron/remote) module.\n\n```typescript\nimport {app, BrowserWindow, ipcMain} from '@electron/remote';\n\nopenAboutWindow({\n    icon_path: 'path/to/icon.png'\n    app,\n    BrowserWindow,\n    ipcMain,\n});\n```\n\n## Screen Shots\n\n### Linux\n\n![Linux screenshot](https://raw.githubusercontent.com/rhysd/ss/master/about-window/about-window-linux.png)\n\n### OS X\n\n![OS X screenshot](https://raw.githubusercontent.com/rhysd/ss/master/about-window/about-window-os-x.png)\n\n### Windows\n\n![Windows screenshot](https://raw.githubusercontent.com/rhysd/ss/master/about-window/about-window-windows.jpg)\n\n## License\n\n[MIT License](/LICENSE.txt).\n\n",
    "licenseText": "Copyright (c) 2015 rhysd\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\nPURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR\nTHE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/about-window/-/about-window-1.15.2.tgz#0397216ce0cb6e8a4fa9ba12941e56d481d712b5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/about-window/-/about-window-1.15.2.tgz",
    "hash": "0397216ce0cb6e8a4fa9ba12941e56d481d712b5",
    "integrity": "sha512-31mDAnLUfKm4uShfMzeEoS6a3nEto2tUt4zZn7qyAKedaTV4p0dGiW1n+YG8vtRh78mZiewghWJmoxDY+lHyYg==",
    "registry": "npm",
    "packageName": "about-window",
    "cacheIntegrity": "sha512-31mDAnLUfKm4uShfMzeEoS6a3nEto2tUt4zZn7qyAKedaTV4p0dGiW1n+YG8vtRh78mZiewghWJmoxDY+lHyYg== sha1-A5chbODLbopPqboSlB5W1IHXErU="
  },
  "registry": "npm",
  "hash": "0397216ce0cb6e8a4fa9ba12941e56d481d712b5"
}