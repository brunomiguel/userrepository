{
  "manifest": {
    "name": "@fastify/fast-json-stringify-compiler",
    "description": "Build and manage the fast-json-stringify instances for the fastify framework",
    "version": "4.2.0",
    "main": "index.js",
    "types": "types/index.d.ts",
    "scripts": {
      "lint": "standard",
      "lint:fix": "standard --fix",
      "unit": "tap test/**/*.test.js",
      "test": "npm run unit && npm run test:typescript",
      "posttest": "rimraf test/fjs-generated*.js",
      "test:typescript": "tsd"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/fastify/fast-json-stringify-compiler.git"
    },
    "keywords": [],
    "author": {
      "name": "Manuel Spigolon",
      "email": "manuel.spigolon@nearform.com",
      "url": "https://github.com/Eomm"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/fastify/fast-json-stringify-compiler/issues"
    },
    "homepage": "https://github.com/fastify/fast-json-stringify-compiler#readme",
    "devDependencies": {
      "fastify": "^4.0.0",
      "rimraf": "^3.0.2",
      "sanitize-filename": "^1.6.3",
      "standard": "^17.0.0",
      "tap": "^16.0.0",
      "tsd": "^0.25.0"
    },
    "dependencies": {
      "fast-json-stringify": "^5.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@fastify-fast-json-stringify-compiler-4.2.0-52d047fac76b0d75bd660f04a5dd606659f57c5a-integrity/node_modules/@fastify/fast-json-stringify-compiler/package.json",
    "readmeFilename": "README.md",
    "readme": "# @fastify/fast-json-stringify-compiler\nBuild and manage the [`fast-json-stringify`](https://www.npmjs.com/package/fast-json-stringify) instances for the fastify framework.\nThis package is responsible for compiling the application's `response` JSON schemas into optimized functions to speed up the response time.\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](http://standardjs.com/)\n[![Continuous Integration](https://github.com/fastify/fast-json-stringify-compiler/workflows/Continuous%20Integration/badge.svg)](https://github.com/fastify/fast-json-stringify-compiler/actions/workflows/ci.yml)\n\n\n## Versions\n\n| `@fastify/fast-json-stringify-compiler` | `fast-json-stringify` | Supported `fastify` |\n|----------------------------------------:|----------------------:|--------------------:|\n|                                    v1.x |                  v3.x |                ^3.x |\n|                                    v2.x |                  v3.x |                ^4.x |\n|                                    v3.x |                  v4.x |                ^4.x |\n|                                    v4.x |                  v5.x |                ^4.x |\n\n### fast-json-stringify Configuration\n\nThe `fast-json-stringify` configuration is the default one. You can check it the default settings in the [`fast-json-stringify` option](https://github.com/fastify/fast-json-stringify/#options) documentation.\n\nYou can also override the default configuration by passing the [`serializerOpts`](https://www.fastify.io/docs/latest/Reference/Server/#serializeropts) configuration to the Fastify instance.\n\n## Usage\n\nThis module is already used as default by Fastify.\nIf you need to provide to your server instance a different version, refer to [the official doc](https://www.fastify.io/docs/latest/Reference/Server/#schemacontroller).\n\n### fast-json-stringify Standalone\n\n`fast-json-stringify@v4.1.0` introduces the [standalone feature](https://github.com/fastify/fast-json-stringify#standalone) that let you to pre-compile your schemas and use them in your application for a faster startup.\n\nTo use this feature, you must be aware of the following:\n\n1. You must generate and save the application's compiled schemas.\n2. Read the compiled schemas from the file and provide them back to your Fastify application.\n\n\n#### Generate and save the compiled schemas\n\nFastify helps you to generate the serialization schemas functions and it is your choice to save them where you want.\nTo accomplish this, you must use a new compiler: `@fastify/fast-json-stringify-compiler/standalone`.\n\nYou must provide 2 parameters to this compiler:\n\n- `readMode: false`: a boolean to indicate that you want generate the schemas functions string.\n- `storeFunction`\" a sync function that must store the source code of the schemas functions. You may provide an async function too, but you must manage errors.\n\nWhen `readMode: false`, **the compiler is meant to be used in development ONLY**.\n\n\n```js\nconst { StandaloneSerializer } = require('@fastify/fast-json-stringify-compiler')\n\nconst factory = StandaloneSerializer({\n  readMode: false,\n  storeFunction (routeOpts, schemaSerializationCode) {\n    // routeOpts is like: { schema, method, url, httpStatus }\n    // schemaSerializationCode is a string source code that is the compiled schema function\n    const fileName = generateFileName(routeOpts)\n    fs.writeFileSync(path.join(__dirname, fileName), schemaSerializationCode)\n  }\n})\n\nconst app = fastify({\n  jsonShorthand: false,\n  schemaController: {\n    compilersFactory: {\n      buildSerializer: factory\n    }\n  }\n})\n\n// ... add all your routes with schemas ...\n\napp.ready().then(() => {\n  // at this stage all your schemas are compiled and stored in the file system\n  // now it is important to turn off the readMode\n})\n```\n\n#### Read the compiled schemas functions\n\nAt this stage, you should have a file for every route's schema.\nTo use them, you must use the `@fastify/fast-json-stringify-compiler/standalone` with the parameters:\n\n- `readMode: true`: a boolean to indicate that you want read and use the schemas functions string.\n- `restoreFunction`\" a sync function that must return a function to serialize the route's payload.\n\nImportant keep away before you continue reading the documentation:\n\n- when you use the `readMode: true`, the application schemas are not compiled (they are ignored). So, if you change your schemas, you must recompile them!\n- as you can see, you must relate the route's schema to the file name using the `routeOpts` object. You may use the `routeOpts.schema.$id` field to do so, it is up to you to define a unique schema identifier.\n\n```js\nconst { StandaloneSerializer } = require('@fastify/fast-json-stringify-compiler')\n\nconst factory = StandaloneSerializer({\n  readMode: true,\n  restoreFunction (routeOpts) {\n    // routeOpts is like: { schema, method, url, httpStatus }\n    const fileName = generateFileName(routeOpts)\n    return require(path.join(__dirname, fileName))\n  }\n})\n\nconst app = fastify({\n  jsonShorthand: false,\n  schemaController: {\n    compilersFactory: {\n      buildSerializer: factory\n    }\n  }\n})\n\n// ... add all your routes with schemas as before...\n\napp.listen({ port: 3000 })\n```\n\n### How it works\n\nThis module provide a factory function to produce [Serializer Compilers](https://www.fastify.io/docs/latest/Reference/Server/#serializercompiler) functions.\n\n## License\n\nLicensed under [MIT](./LICENSE).\n",
    "licenseText": "MIT License\n\nCopyright (c) 2022 Fastify\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@fastify/fast-json-stringify-compiler/-/fast-json-stringify-compiler-4.2.0.tgz#52d047fac76b0d75bd660f04a5dd606659f57c5a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@fastify/fast-json-stringify-compiler/-/fast-json-stringify-compiler-4.2.0.tgz",
    "hash": "52d047fac76b0d75bd660f04a5dd606659f57c5a",
    "integrity": "sha512-ypZynRvXA3dibfPykQN3RB5wBdEUgSGgny8Qc6k163wYPLD4mEGEDkACp+00YmqkGvIm8D/xYoHajwyEdWD/eg==",
    "registry": "npm",
    "packageName": "@fastify/fast-json-stringify-compiler",
    "cacheIntegrity": "sha512-ypZynRvXA3dibfPykQN3RB5wBdEUgSGgny8Qc6k163wYPLD4mEGEDkACp+00YmqkGvIm8D/xYoHajwyEdWD/eg== sha1-UtBH+sdrDXW9Zg8Epd1gZln1fFo="
  },
  "registry": "npm",
  "hash": "52d047fac76b0d75bd660f04a5dd606659f57c5a"
}