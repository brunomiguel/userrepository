{
  "manifest": {
    "name": "ejs",
    "description": "Embedded JavaScript templates",
    "keywords": [
      "template",
      "engine",
      "ejs"
    ],
    "version": "3.1.8",
    "author": {
      "name": "Matthew Eernisse",
      "email": "mde@fleegix.org",
      "url": "http://fleegix.org"
    },
    "license": "Apache-2.0",
    "bin": {
      "ejs": "bin/cli.js"
    },
    "main": "./lib/ejs.js",
    "jsdelivr": "ejs.min.js",
    "unpkg": "ejs.min.js",
    "repository": {
      "type": "git",
      "url": "git://github.com/mde/ejs.git"
    },
    "bugs": {
      "url": "https://github.com/mde/ejs/issues"
    },
    "homepage": "https://github.com/mde/ejs",
    "dependencies": {
      "jake": "^10.8.5"
    },
    "devDependencies": {
      "browserify": "^16.5.1",
      "eslint": "^6.8.0",
      "git-directory-deploy": "^1.5.1",
      "jsdoc": "^3.6.7",
      "lru-cache": "^4.0.1",
      "mocha": "^7.1.1",
      "uglify-js": "^3.3.16"
    },
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "mocha"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-ejs-3.1.8-758d32910c78047585c7ef1f92f9ee041c1c190b-integrity/node_modules/ejs/package.json",
    "readmeFilename": "README.md",
    "readme": "Embedded JavaScript templates<br/>\n[![Build Status](https://img.shields.io/travis/mde/ejs/master.svg?style=flat)](https://travis-ci.org/mde/ejs)\n[![Developing Dependencies](https://img.shields.io/david/dev/mde/ejs.svg?style=flat)](https://david-dm.org/mde/ejs?type=dev)\n[![Known Vulnerabilities](https://snyk.io/test/npm/ejs/badge.svg?style=flat)](https://snyk.io/test/npm/ejs)\n=============================\n\n## Installation\n\n```bash\n$ npm install ejs\n```\n\n## Features\n\n  * Control flow with `<% %>`\n  * Escaped output with `<%= %>` (escape function configurable)\n  * Unescaped raw output with `<%- %>`\n  * Newline-trim mode ('newline slurping') with `-%>` ending tag\n  * Whitespace-trim mode (slurp all whitespace) for control flow with `<%_ _%>`\n  * Custom delimiters (e.g. `[? ?]` instead of `<% %>`)\n  * Includes\n  * Client-side support\n  * Static caching of intermediate JavaScript\n  * Static caching of templates\n  * Complies with the [Express](http://expressjs.com) view system\n\n## Example\n\n```ejs\n<% if (user) { %>\n  <h2><%= user.name %></h2>\n<% } %>\n```\n\nTry EJS online at: https://ionicabizau.github.io/ejs-playground/.\n\n## Basic usage\n\n```javascript\nlet template = ejs.compile(str, options);\ntemplate(data);\n// => Rendered HTML string\n\nejs.render(str, data, options);\n// => Rendered HTML string\n\nejs.renderFile(filename, data, options, function(err, str){\n    // str => Rendered HTML string\n});\n```\n\nIt is also possible to use `ejs.render(dataAndOptions);` where you pass\neverything in a single object. In that case, you'll end up with local variables\nfor all the passed options. However, be aware that your code could break if we\nadd an option with the same name as one of your data object's properties.\nTherefore, we do not recommend using this shortcut.\n\n### Important\nYou should never give end-users unfettered access to the EJS render method, If you do so you are using EJS in an inherently un-secure way. \n\n### Options\n\n  - `cache`                 Compiled functions are cached, requires `filename`\n  - `filename`              The name of the file being rendered. Not required if you\n    are using `renderFile()`. Used by `cache` to key caches, and for includes.\n  - `root`                  Set project root for includes with an absolute path (e.g, /file.ejs).\n    Can be array to try to resolve include from multiple directories.\n  - `views`                 An array of paths to use when resolving includes with relative paths.\n  - `context`               Function execution context\n  - `compileDebug`          When `false` no debug instrumentation is compiled\n  - `client`                When `true`, compiles a function that can be rendered\n    in the browser without needing to load the EJS Runtime\n    ([ejs.min.js](https://github.com/mde/ejs/releases/latest)).\n  - `delimiter`             Character to use for inner delimiter, by default '%'\n  - `openDelimiter`         Character to use for opening delimiter, by default '<'\n  - `closeDelimiter`        Character to use for closing delimiter, by default '>'\n  - `debug`                 Outputs generated function body\n  - `strict`                When set to `true`, generated function is in strict mode\n  - `_with`                 Whether or not to use `with() {}` constructs. If `false`\n    then the locals will be stored in the `locals` object. Set to `false` in strict mode.\n  - `destructuredLocals`    An array of local variables that are always destructured from\n    the locals object, available even in strict mode.\n  - `localsName`            Name to use for the object storing local variables when not using\n    `with` Defaults to `locals`\n  - `rmWhitespace`          Remove all safe-to-remove whitespace, including leading\n    and trailing whitespace. It also enables a safer version of `-%>` line\n    slurping for all scriptlet tags (it does not strip new lines of tags in\n    the middle of a line).\n  - `escape`                The escaping function used with `<%=` construct. It is\n    used in rendering and is `.toString()`ed in the generation of client functions.\n    (By default escapes XML).\n  - `outputFunctionName`    Set to a string (e.g., 'echo' or 'print') for a function to print\n    output inside scriptlet tags.\n  - `async`                 When `true`, EJS will use an async function for rendering. (Depends\n    on async/await support in the JS runtime.\n  - `includer`              Custom function to handle EJS includes, receives `(originalPath, parsedPath)`\n    parameters, where `originalPath` is the path in include as-is and `parsedPath` is the\n    previously resolved path. Should return an object `{ filename, template }`,\n    you may return only one of the properties, where `filename` is the final parsed path and `template`\n    is the included content.\n\nThis project uses [JSDoc](http://usejsdoc.org/). For the full public API\ndocumentation, clone the repository and run `jake doc`. This will run JSDoc\nwith the proper options and output the documentation to `out/`. If you want\nthe both the public & private API docs, run `jake devdoc` instead.\n\n### Tags\n\n  - `<%`              'Scriptlet' tag, for control-flow, no output\n  - `<%_`             'Whitespace Slurping' Scriptlet tag, strips all whitespace before it\n  - `<%=`             Outputs the value into the template (escaped)\n  - `<%-`             Outputs the unescaped value into the template\n  - `<%#`             Comment tag, no execution, no output\n  - `<%%`             Outputs a literal '<%'\n  - `%%>`             Outputs a literal '%>'\n  - `%>`              Plain ending tag\n  - `-%>`             Trim-mode ('newline slurp') tag, trims following newline\n  - `_%>`             'Whitespace Slurping' ending tag, removes all whitespace after it\n\nFor the full syntax documentation, please see [docs/syntax.md](https://github.com/mde/ejs/blob/master/docs/syntax.md).\n\n### Includes\n\nIncludes either have to be an absolute path, or, if not, are assumed as\nrelative to the template with the `include` call. For example if you are\nincluding `./views/user/show.ejs` from `./views/users.ejs` you would\nuse `<%- include('user/show') %>`.\n\nYou must specify the `filename` option for the template with the `include`\ncall unless you are using `renderFile()`.\n\nYou'll likely want to use the raw output tag (`<%-`) with your include to avoid\ndouble-escaping the HTML output.\n\n```ejs\n<ul>\n  <% users.forEach(function(user){ %>\n    <%- include('user/show', {user: user}) %>\n  <% }); %>\n</ul>\n```\n\nIncludes are inserted at runtime, so you can use variables for the path in the\n`include` call (for example `<%- include(somePath) %>`). Variables in your\ntop-level data object are available to all your includes, but local variables\nneed to be passed down.\n\nNOTE: Include preprocessor directives (`<% include user/show %>`) are\nnot supported in v3.0+.\n\n## Custom delimiters\n\nCustom delimiters can be applied on a per-template basis, or globally:\n\n```javascript\nlet ejs = require('ejs'),\n    users = ['geddy', 'neil', 'alex'];\n\n// Just one template\nejs.render('<p>[?= users.join(\" | \"); ?]</p>', {users: users}, {delimiter: '?', openDelimiter: '[', closeDelimiter: ']'});\n// => '<p>geddy | neil | alex</p>'\n\n// Or globally\nejs.delimiter = '?';\nejs.openDelimiter = '[';\nejs.closeDelimiter = ']';\nejs.render('<p>[?= users.join(\" | \"); ?]</p>', {users: users});\n// => '<p>geddy | neil | alex</p>'\n```\n\n### Caching\n\nEJS ships with a basic in-process cache for caching the intermediate JavaScript\nfunctions used to render templates. It's easy to plug in LRU caching using\nNode's `lru-cache` library:\n\n```javascript\nlet ejs = require('ejs'),\n    LRU = require('lru-cache');\nejs.cache = LRU(100); // LRU cache with 100-item limit\n```\n\nIf you want to clear the EJS cache, call `ejs.clearCache`. If you're using the\nLRU cache and need a different limit, simple reset `ejs.cache` to a new instance\nof the LRU.\n\n### Custom file loader\n\nThe default file loader is `fs.readFileSync`, if you want to customize it, you can set ejs.fileLoader.\n\n```javascript\nlet ejs = require('ejs');\nlet myFileLoad = function (filePath) {\n  return 'myFileLoad: ' + fs.readFileSync(filePath);\n};\n\nejs.fileLoader = myFileLoad;\n```\n\nWith this feature, you can preprocess the template before reading it.\n\n### Layouts\n\nEJS does not specifically support blocks, but layouts can be implemented by\nincluding headers and footers, like so:\n\n\n```ejs\n<%- include('header') -%>\n<h1>\n  Title\n</h1>\n<p>\n  My page\n</p>\n<%- include('footer') -%>\n```\n\n## Client-side support\n\nGo to the [Latest Release](https://github.com/mde/ejs/releases/latest), download\n`./ejs.js` or `./ejs.min.js`. Alternately, you can compile it yourself by cloning\nthe repository and running `jake build` (or `$(npm bin)/jake build` if jake is\nnot installed globally).\n\nInclude one of these files on your page, and `ejs` should be available globally.\n\n### Example\n\n```html\n<div id=\"output\"></div>\n<script src=\"ejs.min.js\"></script>\n<script>\n  let people = ['geddy', 'neil', 'alex'],\n      html = ejs.render('<%= people.join(\", \"); %>', {people: people});\n  // With jQuery:\n  $('#output').html(html);\n  // Vanilla JS:\n  document.getElementById('output').innerHTML = html;\n</script>\n```\n\n### Caveats\n\nMost of EJS will work as expected; however, there are a few things to note:\n\n1. Obviously, since you do not have access to the filesystem, `ejs.renderFile()` won't work.\n2. For the same reason, `include`s do not work unless you use an `include callback`. Here is an example:\n  ```javascript\n  let str = \"Hello <%= include('file', {person: 'John'}); %>\",\n      fn = ejs.compile(str, {client: true});\n\n  fn(data, null, function(path, d){ // include callback\n    // path -> 'file'\n    // d -> {person: 'John'}\n    // Put your code here\n    // Return the contents of file as a string\n  }); // returns rendered string\n  ```\n\nSee the [examples folder](https://github.com/mde/ejs/tree/master/examples) for more details.\n\n## CLI\n\nEJS ships with a full-featured CLI. Options are similar to those used in JavaScript code:\n\n  - `-o / --output-file FILE`            Write the rendered output to FILE rather than stdout.\n  - `-f / --data-file FILE`              Must be JSON-formatted. Use parsed input from FILE as data for rendering.\n  - `-i / --data-input STRING`           Must be JSON-formatted and URI-encoded. Use parsed input from STRING as data for rendering.\n  - `-m / --delimiter CHARACTER`         Use CHARACTER with angle brackets for open/close (defaults to %).\n  - `-p / --open-delimiter CHARACTER`    Use CHARACTER instead of left angle bracket to open.\n  - `-c / --close-delimiter CHARACTER`   Use CHARACTER instead of right angle bracket to close.\n  - `-s / --strict`                      When set to `true`, generated function is in strict mode\n  - `-n / --no-with`                     Use 'locals' object for vars rather than using `with` (implies --strict).\n  - `-l / --locals-name`                 Name to use for the object storing local variables when not using `with`.\n  - `-w / --rm-whitespace`               Remove all safe-to-remove whitespace, including leading and trailing whitespace.\n  - `-d / --debug`                       Outputs generated function body\n  - `-h / --help`                        Display this help message.\n  - `-V/v / --version`                   Display the EJS version.\n\nHere are some examples of usage:\n\n```shell\n$ ejs -p [ -c ] ./template_file.ejs -o ./output.html\n$ ejs ./test/fixtures/user.ejs name=Lerxst\n$ ejs -n -l _ ./some_template.ejs -f ./data_file.json\n```\n\n### Data input\n\nThere is a variety of ways to pass the CLI data for rendering.\n\nStdin:\n\n```shell\n$ ./test/fixtures/user_data.json | ejs ./test/fixtures/user.ejs\n$ ejs ./test/fixtures/user.ejs < test/fixtures/user_data.json\n```\n\nA data file:\n\n```shell\n$ ejs ./test/fixtures/user.ejs -f ./user_data.json\n```\n\nA command-line option (must be URI-encoded):\n\n```shell\n./bin/cli.js -i %7B%22name%22%3A%20%22foo%22%7D ./test/fixtures/user.ejs\n```\n\nOr, passing values directly at the end of the invocation:\n\n```shell\n./bin/cli.js -m $ ./test/fixtures/user.ejs name=foo\n```\n\n### Output\n\nThe CLI by default send output to stdout, but you can use the `-o` or `--output-file`\nflag to specify a target file to send the output to.\n\n## IDE Integration with Syntax Highlighting\n\nVSCode:Javascript EJS by *DigitalBrainstem*\n\n## Related projects\n\nThere are a number of implementations of EJS:\n\n * TJ's implementation, the v1 of this library: https://github.com/tj/ejs\n * EJS Embedded JavaScript Framework on Google Code: https://code.google.com/p/embeddedjavascript/\n * Sam Stephenson's Ruby implementation: https://rubygems.org/gems/ejs\n * Erubis, an ERB implementation which also runs JavaScript: http://www.kuwata-lab.com/erubis/users-guide.04.html#lang-javascript\n * DigitalBrainstem EJS Language support: https://github.com/Digitalbrainstem/ejs-grammar\n\n## License\n\nLicensed under the Apache License, Version 2.0\n(<http://www.apache.org/licenses/LICENSE-2.0>)\n\n- - -\nEJS Embedded JavaScript templates copyright 2112\nmde@fleegix.org.\n",
    "licenseText": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ejs/-/ejs-3.1.8.tgz#758d32910c78047585c7ef1f92f9ee041c1c190b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ejs/-/ejs-3.1.8.tgz",
    "hash": "758d32910c78047585c7ef1f92f9ee041c1c190b",
    "integrity": "sha512-/sXZeMlhS0ArkfX2Aw780gJzXSMPnKjtspYZv+f3NiKLlubezAHDU5+9xz6gd3/NhG3txQCo6xlglmTS+oTGEQ==",
    "registry": "npm",
    "packageName": "ejs",
    "cacheIntegrity": "sha512-/sXZeMlhS0ArkfX2Aw780gJzXSMPnKjtspYZv+f3NiKLlubezAHDU5+9xz6gd3/NhG3txQCo6xlglmTS+oTGEQ== sha1-dY0ykQx4BHWFx+8fkvnuBBwcGQs="
  },
  "registry": "npm",
  "hash": "758d32910c78047585c7ef1f92f9ee041c1c190b"
}