"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _asyncOra = require("@electron-forge/async-ora");
var _templateBase = require("@electron-forge/template-base");
var _fsExtra = _interopRequireDefault(require("fs-extra"));
var _path = _interopRequireDefault(require("path"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
class WebpackTemplate extends _templateBase.BaseTemplate {
    async initializeTemplate(directory, options) {
        await super.initializeTemplate(directory, options);
        await (0, _asyncOra).asyncOra('Setting up Forge configuration', async ()=>{
            const pjPath = _path.default.resolve(directory, 'package.json');
            const currentPJ = await _fsExtra.default.readJson(pjPath);
            currentPJ.main = '.webpack/main';
            currentPJ.config.forge.plugins = currentPJ.config.forge.plugins || [];
            currentPJ.config.forge.plugins.push([
                '@electron-forge/plugin-webpack',
                {
                    mainConfig: './webpack.main.config.js',
                    renderer: {
                        config: './webpack.renderer.config.js',
                        entryPoints: [
                            {
                                html: './src/index.html',
                                js: './src/renderer.js',
                                name: 'main_window',
                                preload: {
                                    js: './src/preload.js'
                                }
                            }, 
                        ]
                    }
                }, 
            ]);
            await _fsExtra.default.writeJson(pjPath, currentPJ, {
                spaces: 2
            });
        });
        await (0, _asyncOra).asyncOra('Setting up webpack configuration', async ()=>{
            await this.copyTemplateFile(directory, 'webpack.main.config.js');
            await this.copyTemplateFile(directory, 'webpack.renderer.config.js');
            await this.copyTemplateFile(directory, 'webpack.rules.js');
            await this.copyTemplateFile(_path.default.join(directory, 'src'), 'renderer.js');
            await this.copyTemplateFile(_path.default.join(directory, 'src'), 'preload.js');
            await this.updateFileByLine(_path.default.resolve(directory, 'src', 'index.js'), (line)=>{
                if (line.includes('mainWindow.loadFile')) return '  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);';
                if (line.includes('preload: ')) return '      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,';
                return line;
            }, _path.default.resolve(directory, 'src', 'main.js'));
            await this.updateFileByLine(_path.default.resolve(directory, 'src', 'index.html'), (line)=>{
                if (line.includes('link rel="stylesheet"')) return '';
                return line;
            });
        });
    }
    constructor(...args){
        super(...args);
        this.templateDir = _path.default.resolve(__dirname, '..', 'tmpl');
    }
}
var _default = new WebpackTemplate();
exports.default = _default;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9XZWJwYWNrVGVtcGxhdGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXN5bmNPcmEgfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2UvYXN5bmMtb3JhJztcbmltcG9ydCB7IEJhc2VUZW1wbGF0ZSB9IGZyb20gJ0BlbGVjdHJvbi1mb3JnZS90ZW1wbGF0ZS1iYXNlJztcbmltcG9ydCBmcyBmcm9tICdmcy1leHRyYSc7XG5pbXBvcnQgeyBJbml0VGVtcGxhdGVPcHRpb25zIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL3NoYXJlZC10eXBlcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcblxuY2xhc3MgV2VicGFja1RlbXBsYXRlIGV4dGVuZHMgQmFzZVRlbXBsYXRlIHtcbiAgcHVibGljIHRlbXBsYXRlRGlyID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJ3RtcGwnKTtcblxuICBwdWJsaWMgYXN5bmMgaW5pdGlhbGl6ZVRlbXBsYXRlKGRpcmVjdG9yeTogc3RyaW5nLCBvcHRpb25zOiBJbml0VGVtcGxhdGVPcHRpb25zKSB7XG4gICAgYXdhaXQgc3VwZXIuaW5pdGlhbGl6ZVRlbXBsYXRlKGRpcmVjdG9yeSwgb3B0aW9ucyk7XG4gICAgYXdhaXQgYXN5bmNPcmEoJ1NldHRpbmcgdXAgRm9yZ2UgY29uZmlndXJhdGlvbicsIGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IHBqUGF0aCA9IHBhdGgucmVzb2x2ZShkaXJlY3RvcnksICdwYWNrYWdlLmpzb24nKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRQSiA9IGF3YWl0IGZzLnJlYWRKc29uKHBqUGF0aCk7XG4gICAgICBjdXJyZW50UEoubWFpbiA9ICcud2VicGFjay9tYWluJztcbiAgICAgIGN1cnJlbnRQSi5jb25maWcuZm9yZ2UucGx1Z2lucyA9IGN1cnJlbnRQSi5jb25maWcuZm9yZ2UucGx1Z2lucyB8fCBbXTtcbiAgICAgIGN1cnJlbnRQSi5jb25maWcuZm9yZ2UucGx1Z2lucy5wdXNoKFtcbiAgICAgICAgJ0BlbGVjdHJvbi1mb3JnZS9wbHVnaW4td2VicGFjaycsXG4gICAgICAgIHtcbiAgICAgICAgICBtYWluQ29uZmlnOiAnLi93ZWJwYWNrLm1haW4uY29uZmlnLmpzJyxcbiAgICAgICAgICByZW5kZXJlcjoge1xuICAgICAgICAgICAgY29uZmlnOiAnLi93ZWJwYWNrLnJlbmRlcmVyLmNvbmZpZy5qcycsXG4gICAgICAgICAgICBlbnRyeVBvaW50czogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaHRtbDogJy4vc3JjL2luZGV4Lmh0bWwnLFxuICAgICAgICAgICAgICAgIGpzOiAnLi9zcmMvcmVuZGVyZXIuanMnLFxuICAgICAgICAgICAgICAgIG5hbWU6ICdtYWluX3dpbmRvdycsXG4gICAgICAgICAgICAgICAgcHJlbG9hZDoge1xuICAgICAgICAgICAgICAgICAganM6ICcuL3NyYy9wcmVsb2FkLmpzJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgXSk7XG4gICAgICBhd2FpdCBmcy53cml0ZUpzb24ocGpQYXRoLCBjdXJyZW50UEosIHtcbiAgICAgICAgc3BhY2VzOiAyLFxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgYXdhaXQgYXN5bmNPcmEoJ1NldHRpbmcgdXAgd2VicGFjayBjb25maWd1cmF0aW9uJywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgdGhpcy5jb3B5VGVtcGxhdGVGaWxlKGRpcmVjdG9yeSwgJ3dlYnBhY2subWFpbi5jb25maWcuanMnKTtcbiAgICAgIGF3YWl0IHRoaXMuY29weVRlbXBsYXRlRmlsZShkaXJlY3RvcnksICd3ZWJwYWNrLnJlbmRlcmVyLmNvbmZpZy5qcycpO1xuICAgICAgYXdhaXQgdGhpcy5jb3B5VGVtcGxhdGVGaWxlKGRpcmVjdG9yeSwgJ3dlYnBhY2sucnVsZXMuanMnKTtcbiAgICAgIGF3YWl0IHRoaXMuY29weVRlbXBsYXRlRmlsZShwYXRoLmpvaW4oZGlyZWN0b3J5LCAnc3JjJyksICdyZW5kZXJlci5qcycpO1xuICAgICAgYXdhaXQgdGhpcy5jb3B5VGVtcGxhdGVGaWxlKHBhdGguam9pbihkaXJlY3RvcnksICdzcmMnKSwgJ3ByZWxvYWQuanMnKTtcblxuICAgICAgYXdhaXQgdGhpcy51cGRhdGVGaWxlQnlMaW5lKFxuICAgICAgICBwYXRoLnJlc29sdmUoZGlyZWN0b3J5LCAnc3JjJywgJ2luZGV4LmpzJyksXG4gICAgICAgIChsaW5lKSA9PiB7XG4gICAgICAgICAgaWYgKGxpbmUuaW5jbHVkZXMoJ21haW5XaW5kb3cubG9hZEZpbGUnKSkgcmV0dXJuICcgIG1haW5XaW5kb3cubG9hZFVSTChNQUlOX1dJTkRPV19XRUJQQUNLX0VOVFJZKTsnO1xuICAgICAgICAgIGlmIChsaW5lLmluY2x1ZGVzKCdwcmVsb2FkOiAnKSkgcmV0dXJuICcgICAgICBwcmVsb2FkOiBNQUlOX1dJTkRPV19QUkVMT0FEX1dFQlBBQ0tfRU5UUlksJztcbiAgICAgICAgICByZXR1cm4gbGluZTtcbiAgICAgICAgfSxcbiAgICAgICAgcGF0aC5yZXNvbHZlKGRpcmVjdG9yeSwgJ3NyYycsICdtYWluLmpzJylcbiAgICAgICk7XG5cbiAgICAgIGF3YWl0IHRoaXMudXBkYXRlRmlsZUJ5TGluZShwYXRoLnJlc29sdmUoZGlyZWN0b3J5LCAnc3JjJywgJ2luZGV4Lmh0bWwnKSwgKGxpbmUpID0+IHtcbiAgICAgICAgaWYgKGxpbmUuaW5jbHVkZXMoJ2xpbmsgcmVsPVwic3R5bGVzaGVldFwiJykpIHJldHVybiAnJztcbiAgICAgICAgcmV0dXJuIGxpbmU7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBuZXcgV2VicGFja1RlbXBsYXRlKCk7XG4iXSwibmFtZXMiOlsiV2VicGFja1RlbXBsYXRlIiwiQmFzZVRlbXBsYXRlIiwiaW5pdGlhbGl6ZVRlbXBsYXRlIiwiZGlyZWN0b3J5Iiwib3B0aW9ucyIsImFzeW5jT3JhIiwicGpQYXRoIiwicGF0aCIsInJlc29sdmUiLCJjdXJyZW50UEoiLCJmcyIsInJlYWRKc29uIiwibWFpbiIsImNvbmZpZyIsImZvcmdlIiwicGx1Z2lucyIsInB1c2giLCJtYWluQ29uZmlnIiwicmVuZGVyZXIiLCJlbnRyeVBvaW50cyIsImh0bWwiLCJqcyIsIm5hbWUiLCJwcmVsb2FkIiwid3JpdGVKc29uIiwic3BhY2VzIiwiY29weVRlbXBsYXRlRmlsZSIsImpvaW4iLCJ1cGRhdGVGaWxlQnlMaW5lIiwibGluZSIsImluY2x1ZGVzIiwidGVtcGxhdGVEaXIiLCJfX2Rpcm5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQXlCLEdBQTJCLENBQTNCLFNBQTJCO0FBQ3ZCLEdBQStCLENBQS9CLGFBQStCO0FBQzdDLEdBQVUsQ0FBVixRQUFVO0FBRVIsR0FBTSxDQUFOLEtBQU07Ozs7OztNQUVqQkEsZUFBZSxTQUFTQyxhQUFZO1VBRzNCQyxrQkFBa0IsQ0FBQ0MsU0FBaUIsRUFBRUMsT0FBNEIsRUFBRSxDQUFDO1FBQ2hGLEtBQUssQ0FBQyxLQUFLLENBQUNGLGtCQUFrQixDQUFDQyxTQUFTLEVBQUVDLE9BQU87UUFDakQsS0FBSyxLQUFDQyxTQUFRLFdBQUMsQ0FBZ0MsMkNBQWMsQ0FBQztZQUM1RCxLQUFLLENBQUNDLE1BQU0sR0FBR0MsS0FBSSxTQUFDQyxPQUFPLENBQUNMLFNBQVMsRUFBRSxDQUFjO1lBQ3JELEtBQUssQ0FBQ00sU0FBUyxHQUFHLEtBQUssQ0FBQ0MsUUFBRSxTQUFDQyxRQUFRLENBQUNMLE1BQU07WUFDMUNHLFNBQVMsQ0FBQ0csSUFBSSxHQUFHLENBQWU7WUFDaENILFNBQVMsQ0FBQ0ksTUFBTSxDQUFDQyxLQUFLLENBQUNDLE9BQU8sR0FBR04sU0FBUyxDQUFDSSxNQUFNLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxJQUFJLENBQUMsQ0FBQztZQUNyRU4sU0FBUyxDQUFDSSxNQUFNLENBQUNDLEtBQUssQ0FBQ0MsT0FB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