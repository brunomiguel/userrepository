{
  "manifest": {
    "name": "miniget",
    "description": "A small HTTP(S) GET request library, with redirects and streaming.",
    "keywords": [
      "request",
      "http",
      "https",
      "redirect",
      "stream"
    ],
    "version": "4.2.2",
    "repository": {
      "type": "git",
      "url": "git://github.com/fent/node-miniget.git"
    },
    "author": {
      "name": "fent",
      "email": "fentbox@gmail.com",
      "url": "https://github.com/fent"
    },
    "main": "./dist/index.js",
    "files": [
      "dist"
    ],
    "scripts": {
      "prepare": "tsc -p tsconfig.build.json",
      "build": "tsc -p tsconfig.build.json",
      "test": "nyc --extension .ts --reporter=lcov --reporter=text-summary npm run test:unit",
      "test:unit": "mocha -- --require ts-node/register test/*-test.ts",
      "lint": "eslint ./src ./test",
      "lint:fix": "eslint --fix ./src ./test"
    },
    "devDependencies": {
      "@types/mocha": "^7.0.0",
      "@types/node": "^17.0.8",
      "@types/sinon": "^9.0.8",
      "@typescript-eslint/eslint-plugin": "^4.8.2",
      "@typescript-eslint/parser": "^4.8.2",
      "eslint": "^7.14.0",
      "longjohn": "^0.2.12",
      "mocha": "^7.0.1",
      "nock": "^13.0.4",
      "nyc": "^15.0.0",
      "sinon": "^9.2.0",
      "stream-equal": "^1.1.1",
      "ts-node": "^8.10.1",
      "typescript": "^3.9.7"
    },
    "engines": {
      "node": ">=12"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-miniget-4.2.2-db20320f265efdc4c1826a0be431d56753074475-integrity/node_modules/miniget/package.json",
    "readmeFilename": "README.md",
    "readme": "# node-miniget\n\nA small http(s) GET library with redirects, retries, reconnects, concatenating or streaming, and no dependencies. This keeps filesize small for potential browser use.\n\n![Depfu](https://img.shields.io/depfu/fent/node-miniget)\n[![codecov](https://codecov.io/gh/fent/node-miniget/branch/master/graph/badge.svg)](https://codecov.io/gh/fent/node-miniget)\n\n\n# Usage\n\nConcatenates a response\n\n```js\nconst miniget = require('miniget');\n\nminiget('http://mywebsite.com', (err, res, body) => {\n  console.log('webpage contents: ', body);\n});\n\n// with await\nlet body = await miniget('http://yourwebsite.com').text();\n```\n\nRequest can be streamed right away\n\n```js\nminiget('http://api.mywebsite.com/v1/messages.json')\n  .pipe(someWritableStream());\n```\n\n\n# API\n\n### miniget(url, [options])\n\nMakes a GET request. `url` can be a string or a `URL` object. `options` can have any properties from the [`http.request()` function](https://nodejs.org/api/http.html#http_http_request_options_callback), in addition to\n\n* `maxRedirects` - Default is `10`.\n* `maxRetries` - Number of times to retry the request if there is a 500 or connection error. Default is `2`.\n* `maxReconnects` - During a big download, if there is a disconnect, miniget can try to reconnect and continue the download where it left off. Default is `0`.\n* `backoff` - An object with `inc` and `max` used to calculate how long to wait to retry a request. Default is `{ inc: 100, max: 10000 }`.\n* `highWaterMark` - Amount of data to buffer when in stream mode.\n* `transform` - Use this to add additional features. Called with the object that `http.get()` or `https.get()` would be called with. Must return a transformed object.\n* `acceptEncoding` - An object with encoding name as the key, and the value as a function that returns a decoding stream.\n  ```js\n  acceptEncoding: { gzip: () => require('zlip').createGunzip(stream) }\n  ```\n  Given encodings will be added to the `Accept-Encoding` header, and the response will be decoded if the server responds with encoded content.\n\nDefaults are held in `miniget.defaultOptions` and can be adjusted globally.\n\nMiniget returns a readable stream, errors will then be emitted on the stream. Returned stream has additional methods added, and can emit the following events.\n\n### Stream#destroy([error])\n\nDestroys the request.\n\n### Stream#destroyed\n\nSet to `true` after `Stream#destroy()` has been called.\n\n### Stream#text()\n\nReturns a promise that resolves to the concatenated contents of the response.\n\n```js\nlet body = await miniget('http://yourwebsite.com').text();\n```\n\n#### Event: redirect\n* `string` - URL redirected to.\n\nEmitted when the request was redirected with a redirection status code.\n\n#### Event: retry\n* `number` - Number of retry.\n* `Error` - Request or status code error.\n\nEmitted when the request fails, or the response has a status code >= 500.\n\n#### Event: reconnect\n* `number` - Number of reconnect.\n* `Error` - Request or response error.\n\nEmitted when the request or response fails after download has started.\n\n#### Event: request\n* [`http.ClientRequest`](https://nodejs.org/api/http.html#http_class_http_clientrequest) - Request.\n\nEmitted when a video request is made, including after any redirects, retries, and reconnects.\n\n#### Event: response\n* [`http.ServerResponse`](https://nodejs.org/api/http.html#http_class_http_serverresponse) - Response.\n\nEmitted when a video response has been found and has started downloading, including after any successful reconnects.\n\n#### Forwarded events\n\nAny events emitted from the [request](https://nodejs.org/api/http.html#http_class_http_clientrequest) or [response](https://nodejs.org/api/http.html#http_class_http_serverresponse) objects will be forwarded to the miniget stream.\n\n# Install\n\n    npm install miniget\n\n\n# Tests\nTests are written with [mocha](https://mochajs.org)\n\n```bash\nnpm test\n```\n",
    "licenseText": "MIT License\n\nCopyright (C) 2017 by fent\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. \n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/miniget/-/miniget-4.2.2.tgz#db20320f265efdc4c1826a0be431d56753074475",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/miniget/-/miniget-4.2.2.tgz",
    "hash": "db20320f265efdc4c1826a0be431d56753074475",
    "integrity": "sha512-a7voNL1N5lDMxvTMExOkg+Fq89jM2vY8pAi9ZEWzZtfNmdfP6RXkvUtFnCAXoCv2T9k1v/fUJVaAEuepGcvLYA==",
    "registry": "npm",
    "packageName": "miniget",
    "cacheIntegrity": "sha512-a7voNL1N5lDMxvTMExOkg+Fq89jM2vY8pAi9ZEWzZtfNmdfP6RXkvUtFnCAXoCv2T9k1v/fUJVaAEuepGcvLYA== sha1-2yAyDyZe/cTBgmoL5DHVZ1MHRHU="
  },
  "registry": "npm",
  "hash": "db20320f265efdc4c1826a0be431d56753074475"
}