{
  "manifest": {
    "name": "eslint-import-resolver-typescript",
    "version": "2.5.0",
    "description": "TypeScript .ts .tsx module resolver for `eslint-plugin-import`.",
    "repository": {
      "type": "git",
      "url": "https://github.com/alexgorbatchev/eslint-import-resolver-typescript"
    },
    "author": {
      "name": "Alex Gorbatchev",
      "email": "alex.gorbatchev@gmail.com"
    },
    "contributors": [
      {
        "name": "JounQin",
        "email": "admin@1stg.me"
      }
    ],
    "license": "ISC",
    "engines": {
      "node": ">=4"
    },
    "main": "lib/cjs",
    "module": "lib",
    "es2015": "lib/es2015",
    "fesm5": "lib/esm",
    "types": "lib",
    "files": [
      "lib",
      "!*.tsbuildinfo"
    ],
    "keywords": [
      "typescript",
      "eslint",
      "import",
      "resolver",
      "plugin"
    ],
    "scripts": {
      "build": "run-p build:*",
      "build:r": "r",
      "build:ts": "tsc -b",
      "lint": "run-p lint:*",
      "lint:es": "eslint src --cache -f friendly",
      "lint:tsc": "tsc --noEmit",
      "prepare": "simple-git-hooks && yarn-deduplicate --strategy fewer || exit 0",
      "prepublishOnly": "yarn build",
      "release": "sh scripts/release.sh",
      "test": "run-p test:*",
      "test:multipleEslintrcs": "eslint --ext ts,tsx tests/multipleEslintrcs",
      "test:multipleTsconfigs": "eslint --ext ts,tsx tests/multipleTsconfigs",
      "test:withJsExtension": "node tests/withJsExtension/test.js && eslint --ext ts,tsx tests/withJsExtension",
      "test:withPaths": "eslint --ext ts,tsx tests/withPaths",
      "test:withPathsAndNestedBaseUrl": "eslint --ext ts,tsx tests/withPathsAndNestedBaseUrl",
      "test:withQuerystring": "eslint --ext ts,tsx tests/withQuerystring",
      "test:withoutPaths": "eslint --ext ts,tsx tests/withoutPaths",
      "typecov": "type-coverage"
    },
    "peerDependencies": {
      "eslint": "*",
      "eslint-plugin-import": "*"
    },
    "dependencies": {
      "debug": "^4.3.1",
      "glob": "^7.1.7",
      "is-glob": "^4.0.1",
      "resolve": "^1.20.0",
      "tsconfig-paths": "^3.9.0"
    },
    "devDependencies": {
      "@1stg/lib-config": "^2.1.0",
      "@types/debug": "^4.1.5",
      "@types/glob": "^7.1.3",
      "@types/is-glob": "^4.0.1",
      "@types/node": "^15.6.1",
      "@types/resolve": "^1.20.0",
      "@types/unist": "^2.0.3",
      "dummy.js": "link:../../../../pkgbuild/cerebro/src/yarn-cache/v6/npm-eslint-import-resolver-typescript-2.5.0-integrity/node_modules/eslint-import-resolver-typescript/dummy.js",
      "eslint-import-resolver-typescript": "link:../../../../pkgbuild/cerebro/src/yarn-cache/v6/npm-eslint-import-resolver-typescript-2.5.0-integrity/node_modules/eslint-import-resolver-typescript",
      "react": "^17.0.2",
      "standard-version": "^9.3.0",
      "type-coverage": "^2.17.5",
      "typescript": "^4.3.2"
    },
    "resolutions": {
      "eslint-import-resolver-typescript": "link:.",
      "prettier": "^2.3.0"
    },
    "typeCoverage": {
      "atLeast": 99.28,
      "cache": true,
      "detail": true,
      "ignoreAsAssertion": true,
      "ignoreCatch": true,
      "ignoreFiles": [
        "**/*.d.ts"
      ],
      "strict": true,
      "update": true
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-eslint-import-resolver-typescript-2.5.0-integrity/node_modules/eslint-import-resolver-typescript/package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-import-resolver-typescript\n\n[![GitHub Actions](https://github.com/alexgorbatchev/eslint-import-resolver-typescript/workflows/CI/badge.svg)](https://github.com/alexgorbatchev/eslint-import-resolver-typescript/actions/workflows/ci.yml)\n[![type-coverage](https://img.shields.io/badge/dynamic/json.svg?label=type-coverage&prefix=%E2%89%A5&suffix=%&query=$.typeCoverage.atLeast&uri=https%3A%2F%2Fraw.githubusercontent.com%2Falexgorbatchev%2Feslint-import-resolver-typescript%2Fmaster%2Fpackage.json)](https://github.com/plantain-00/type-coverage)\n[![npm](https://img.shields.io/npm/v/eslint-import-resolver-typescript.svg)](https://www.npmjs.com/package/eslint-import-resolver-typescript)\n[![GitHub Release](https://img.shields.io/github/release/alexgorbatchev/eslint-import-resolver-typescript)](https://github.com/alexgorbatchev/eslint-import-resolver-typescript/releases)\n\n[![David Peer](https://img.shields.io/david/peer/alexgorbatchev/eslint-import-resolver-typescript.svg)](https://david-dm.org/alexgorbatchev/eslint-import-resolver-typescript?type=peer)\n[![David](https://img.shields.io/david/alexgorbatchev/eslint-import-resolver-typescript.svg)](https://david-dm.org/alexgorbatchev/eslint-import-resolver-typescript)\n[![David Dev](https://img.shields.io/david/dev/alexgorbatchev/eslint-import-resolver-typescript.svg)](https://david-dm.org/alexgorbatchev/eslint-import-resolver-typescript?type=dev)\n\n[![Conventional Commits](https://img.shields.io/badge/conventional%20commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n[![Code Style: Prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![codechecks.io](https://raw.githubusercontent.com/codechecks/docs/master/images/badges/badge-default.svg?sanitize=true)](https://codechecks.io)\n\nThis plugin adds TypeScript support to [`eslint-plugin-import`](https://www.npmjs.com/package/eslint-plugin-import).\n\nThis means you can:\n\n- `import`/`require` files with extension `.ts`/`.tsx`!\n- Use [`paths`](https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping) defined in `tsconfig.json`.\n- Prefer resolve `@types/*` definitions over plain `.js`.\n- Multiple tsconfigs support just like normal.\n\n## TOC <!-- omit in toc -->\n\n- [Notice](#notice)\n- [Installation](#installation)\n- [Configuration](#configuration)\n- [Contributing](#contributing)\n\n## Notice\n\nAfter version 2.0.0, `.d.ts` will take higher priority then normal `.js` files on resolving `node_modules` packages in favor of `@types/*` definitions.\n\nIf you're facing some problems on rules `import/default` or `import/named` from [eslint-plugin-import](https://github.com/benmosher/eslint-plugin-import), do not post any issue here, because they are just working exactly as [expected](https://github.com/alexgorbatchev/eslint-import-resolver-typescript/issues/31#issuecomment-539751607) on our sides, take <https://github.com/benmosher/eslint-plugin-import/issues/1525> as reference or post a new issue to [eslint-plugin-import](https://github.com/benmosher/eslint-plugin-import) instead.\n\n## Installation\n\n```sh\n# npm\nnpm i -D eslint-plugin-import @typescript-eslint/parser eslint-import-resolver-typescript\n\n# yarn\nyarn add -D eslint-plugin-import @typescript-eslint/parser eslint-import-resolver-typescript\n```\n\n## Configuration\n\nAdd the following to your `.eslintrc` config:\n\n```jsonc\n{\n  \"plugins\": [\"import\"],\n  \"rules\": {\n    // turn on errors for missing imports\n    \"import/no-unresolved\": \"error\"\n  },\n  \"settings\": {\n    \"import/parsers\": {\n      \"@typescript-eslint/parser\": [\".ts\", \".tsx\"]\n    },\n    \"import/resolver\": {\n      \"typescript\": {\n        \"alwaysTryTypes\": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`\n\n        // Choose from one of the \"project\" configs below or omit to use <root>/tsconfig.json by default\n\n        // use <root>/path/to/folder/tsconfig.json\n        \"project\": \"path/to/folder\",\n\n        // Multiple tsconfigs (Useful for monorepos)\n\n        // use a glob pattern\n        \"project\": \"packages/*/tsconfig.json\",\n\n        // use an array\n        \"project\": [\n          \"packages/module-a/tsconfig.json\",\n          \"packages/module-b/tsconfig.json\"\n        ],\n\n        // use an array of glob patterns\n        \"project\": [\n          \"packages/*/tsconfig.json\",\n          \"other-packages/*/tsconfig.json\"\n        ]\n      }\n    }\n  }\n}\n```\n\n## Contributing\n\n- Make sure your change is covered by a test import.\n- Make sure that `yarn test` passes without a failure.\n- Make sure that `yarn lint` passes without conflicts.\n- Make sure your code changes match our [type-coverage](https://github.com/plantain-00/type-coverage) settings: `yarn type-coverage`.\n\nWe have [GitHub Actions](https://github.com/alexgorbatchev/eslint-import-resolver-typescript/actions) which will run the above commands on your PRs.\n\nIf either fails, we won't be able to merge your PR until it's fixed.\n",
    "licenseText": "Copyright 2021 Alex Gorbatchev <alex.gorbatchev@gmail.com>\n\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/eslint-import-resolver-typescript/-/eslint-import-resolver-typescript-2.5.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/eslint-import-resolver-typescript/-/eslint-import-resolver-typescript-2.5.0.tgz",
    "hash": "",
    "integrity": "sha512-qZ6e5CFr+I7K4VVhQu3M/9xGv9/YmwsEXrsm3nimw8vWaVHRDrQRp26BgCypTxBp3vUp4o5aVEJRiy0F2DFddQ==",
    "registry": "npm",
    "packageName": "eslint-import-resolver-typescript",
    "cacheIntegrity": "sha512-qZ6e5CFr+I7K4VVhQu3M/9xGv9/YmwsEXrsm3nimw8vWaVHRDrQRp26BgCypTxBp3vUp4o5aVEJRiy0F2DFddQ== sha1-B2YZZrJy0Uupf1l7UeGliPlyLwo="
  },
  "registry": "npm",
  "hash": "a99e9ee4216bf88ecae1556142edccffdc46bfdfd89b0b045ebb26de78a6c3cbd66951d10eb411a76e81802ca94f1069def529e28e5a5442518b2d05d8315d75"
}