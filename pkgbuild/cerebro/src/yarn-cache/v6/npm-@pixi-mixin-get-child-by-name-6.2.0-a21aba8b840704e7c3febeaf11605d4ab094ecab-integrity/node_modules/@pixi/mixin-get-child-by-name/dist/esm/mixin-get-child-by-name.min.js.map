{"version":3,"file":"mixin-get-child-by-name.min.js","sources":["../../src/index.ts"],"sourcesContent":["import { DisplayObject, Container } from '@pixi/display';\n\n/**\n * The instance name of the object.\n *\n * @memberof PIXI.DisplayObject#\n * @member {string} name\n */\nDisplayObject.prototype.name = null;\n\n/**\n * Returns the display object in the container.\n *\n * Recursive searches are done in a preorder traversal.\n *\n * @method getChildByName\n * @memberof PIXI.Container#\n * @param {string} name - Instance name.\n * @param {boolean}[deep=false] - Whether to search recursively\n * @return {PIXI.DisplayObject} The child with the specified name.\n */\nContainer.prototype.getChildByName = function getChildByName(name: string, deep?: boolean): DisplayObject\n{\n    for (let i = 0, j = this.children.length; i < j; i++)\n    {\n        if (this.children[i].name === name)\n        {\n            return this.children[i];\n        }\n    }\n\n    if (deep)\n    {\n        for (let i = 0, j = this.children.length; i < j; i++)\n        {\n            const child = (this.children[i] as Container);\n\n            if (!child.getChildByName)\n            {\n                continue;\n            }\n\n            const target = (this.children[i] as Container).getChildByName(name, true);\n\n            if (target)\n            {\n                return target;\n            }\n        }\n    }\n\n    return null;\n};\n"],"names":["DisplayObject","prototype","name","Container","getChildByName","deep","i","j","this","children","length","target"],"mappings":";;;;;;;6DAQAA,EAAcC,UAAUC,KAAO,KAa/BC,EAAUF,UAAUG,eAAiB,SAAwBF,EAAcG,GAEvE,IAAK,IAAIC,EAAI,EAAGC,EAAIC,KAAKC,SAASC,OAAQJ,EAAIC,EAAGD,IAE7C,GAAIE,KAAKC,SAASH,GAAGJ,OAASA,EAE1B,OAAOM,KAAKC,SAASH,GAI7B,GAAID,EAEA,IAASC,EAAI,EAAGC,EAAIC,KAAKC,SAASC,OAAQJ,EAAIC,EAAGD,IACjD,CAGI,GAFeE,KAAKC,SAASH,GAElBF,eAAX,CAKA,IAAMO,EAAUH,KAAKC,SAASH,GAAiBF,eAAeF,GAAM,GAEpE,GAAIS,EAEA,OAAOA,GAKnB,OAAO"}