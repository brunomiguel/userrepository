{"version":3,"sources":["interfaces/playlists.js"],"names":["MprisInterface","require","dbus","Variant","types","property","method","signal","DBusError","ACCESS_READ","ACCESS_WRITE","ACCESS_READWRITE","interface","PlaylistsInterface","constructor","player","emptyPlaylist","signature","access","_PlaylistCount","_ActivePlaylist","playlistId","i","getPlaylistIndex","setProperty","playlists","inSignature","emit","outSignature","index","maxCount","order","reverseOrder","result","sort","a","b","ret","Name","slice","map","playlistToDbus","reverse","playlist","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAIA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA5B;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,WAAD,CAAlB;;AACA,IAAIE,OAAO,GAAGD,IAAI,CAACC,OAAnB;;AACA,IAAIC,KAAK,GAAGH,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAI;AACFI,EAAAA,QADE;AACQC,EAAAA,MADR;AACgBC,EAAAA,MADhB;AACwBC,EAAAA,SADxB;AAEFC,EAAAA,WAFE;AAEWC,EAAAA,YAFX;AAEyBC,EAAAA;AAFzB,IAGAT,IAAI,CAACU,SAHT;;IAKMC,kB;AAAN,QAAMA,kBAAN,yBAAgD;AAC9CC,IAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,YAAM,kCAAN,EAA0CA,MAA1C;;AADkB;AAEnB;;AAH6C;;;OAA1CF,kB;;;;;;eAKc,CAAE,KAAF,EAAST,KAAK,CAACY,aAAf,C;;;;;;;;eACD,C;;;;;mBAEhBX,QAAQ,CAAC;AAACY,QAAAA,SAAS,EAAE,GAAZ;AAAiBC,QAAAA,MAAM,EAAET;AAAzB,OAAD,C;;aAAT,yBACoB;AAClB,eAAO,KAAKU,cAAZ;AACD;;;mBAEAd,QAAQ,CAAC;AAACY,QAAAA,SAAS,EAAE,IAAZ;AAAkBC,QAAAA,MAAM,EAAET;AAA1B,OAAD,C;;aAAT,qBACgB;AACd,eAAO,CAAC,cAAD,EAAiB,aAAjB,CAAP;AACD;;;mBAEAJ,QAAQ,CAAC;AAACY,QAAAA,SAAS,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAET;AAAhC,OAAD,C;;aAAT,0BACqB;AACnB,eAAO,KAAKW,eAAZ;AACD;;;;aAED,6BAAoBC,UAApB,EAAgC;AAC9B,YAAIC,CAAC,GAAG,KAAKP,MAAL,CAAYQ,gBAAZ,CAA6BF,UAA7B,CAAR;AAEA,aAAKG,WAAL,CAAiB,gBAAjB,EAAmC,KAAKT,MAAL,CAAYU,SAAZ,CAAsBH,CAAtB,KAA4B,IAA/D;AACD;;;mBAEAhB,MAAM,CAAC;AAACoB,QAAAA,WAAW,EAAE;AAAd,OAAD,C;;aAAP,0BACiBL,UADjB,EAC6B;AAC3B,aAAKN,MAAL,CAAYY,IAAZ,CAAiB,kBAAjB,EAAqCN,UAArC;AACD;;;mBAEAf,MAAM,CAAC;AAACoB,QAAAA,WAAW,EAAE,MAAd;AAAsBE,QAAAA,YAAY,EAAE;AAApC,OAAD,C;;aAAP,sBACaC,KADb,EACoBC,QADpB,EAC8BC,KAD9B,EACqCC,YADrC,EACmD;AACjD,YAAI,CAAC,KAAKjB,MAAL,CAAYU,SAAjB,EAA4B;AAC1B,iBAAO,EAAP;AACD;;AAED,YAAIQ,MAAM,GAAG,KAAKlB,MAAL,CAAYU,SAAZ,CAAsBS,IAAtB,CAA2B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACnD,cAAIC,GAAG,GAAG,CAAV;;AACA,kBAAQN,KAAR;AACE,iBAAK,cAAL;AACEM,cAAAA,GAAG,GAAIF,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAA/B;AACA;AACA;AACA;AACA;;AACF,iBAAK,aAAL;AACE;AARJ;;AAUA,iBAAOD,GAAP;AACD,SAbU,EAcVE,KAdU,CAcJV,KAdI,EAcGC,QAAQ,GAAGD,KAdd,EAeVW,GAfU,CAeNpC,KAAK,CAACqC,cAfA,CAAb;;AAiBA,YAAIT,YAAJ,EAAkB;AAChBC,UAAAA,MAAM,CAACS,OAAP;AACD;;AAED,eAAOT,MAAP;AACD;;;mBAEA1B,MAAM,CAAC;AAACU,QAAAA,SAAS,EAAE;AAAZ,OAAD,C;;aAAP,yBACgB0B,QADhB,EAC0B;AACxB,eAAOvC,KAAK,CAACqC,cAAN,CAAqBE,QAArB,CAAP;AACD;;;GAnE8B3C,c;;AAsEjC4C,MAAM,CAACC,OAAP,GAAiBhC,kBAAjB","sourcesContent":["// TODO proper import\nlet MprisInterface = require('./mpris-interface');\nlet dbus = require('dbus-next');\nlet Variant = dbus.Variant;\nlet types = require('./types');\n\nlet {\n  property, method, signal, DBusError,\n  ACCESS_READ, ACCESS_WRITE, ACCESS_READWRITE\n} = dbus.interface;\n\nclass PlaylistsInterface extends MprisInterface {\n  constructor(player) {\n    super('org.mpris.MediaPlayer2.Playlists', player);\n  }\n\n  _ActivePlaylist = [ false, types.emptyPlaylist ];\n  _PlaylistCount = 0;\n\n  @property({signature: 'u', access: ACCESS_READ})\n  get PlaylistCount() {\n    return this._PlaylistCount;\n  }\n\n  @property({signature: 'as', access: ACCESS_READ})\n  get Orderings() {\n    return ['Alphabetical', 'UserDefined'];\n  }\n\n  @property({signature: '(b(oss))', access: ACCESS_READ})\n  get ActivePlaylist() {\n    return this._ActivePlaylist;\n  }\n\n  setActivePlaylistId(playlistId) {\n    let i = this.player.getPlaylistIndex(playlistId);\n\n    this.setProperty('ActivePlaylist', this.player.playlists[i] || null);\n  }\n\n  @method({inSignature: 'o'})\n  ActivatePlaylist(playlistId) {\n    this.player.emit('activatePlaylist', playlistId);\n  }\n\n  @method({inSignature: 'uusb', outSignature: 'a(oss)'})\n  GetPlaylists(index, maxCount, order, reverseOrder) {\n    if (!this.player.playlists) {\n      return [];\n    }\n\n    let result = this.player.playlists.sort(function(a, b) {\n        let ret = 1;\n        switch (order) {\n          case 'Alphabetical':\n            ret = (a.Name > b.Name) ? 1 : -1;\n            break;\n            //case 'CreationDate':\n            //case 'ModifiedDate':\n            //case 'LastPlayDate':\n          case 'UserDefined':\n            break;\n        }\n        return ret;\n      })\n      .slice(index, maxCount + index)\n      .map(types.playlistToDbus);\n\n    if (reverseOrder) {\n      result.reverse();\n    }\n\n    return result;\n  }\n\n  @signal({signature: '(oss)'})\n  PlaylistChanged(playlist) {\n    return types.playlistToDbus(playlist);\n  }\n}\n\nmodule.exports = PlaylistsInterface;\n"],"file":"playlists.js","sourceRoot":"../../src/"}