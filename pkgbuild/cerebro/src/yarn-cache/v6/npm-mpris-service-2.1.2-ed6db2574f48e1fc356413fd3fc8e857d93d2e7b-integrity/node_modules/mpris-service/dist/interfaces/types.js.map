{"version":3,"sources":["interfaces/types.js"],"names":["Variant","require","logging","guessMetadataSignature","key","value","Array","isArray","every","v","warn","metadataToPlain","metadataVariant","metadataPlain","k","Object","keys","undefined","constructor","metadataToDbus","signature","emptyPlaylist","playlistToDbus","playlist","Id","Name","Icon","playlistToPlain","wire","module","exports"],"mappings":"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","sourcesContent":["let Variant = require('dbus-next').Variant;\nlet logging = require('../logging');\n\nfunction guessMetadataSignature(key, value) {\n  if (key === 'mpris:trackid') {\n    return 'o';\n  } else if (key === 'mpris:length') {\n    return 'x';\n  } else if (typeof value === 'string') {\n    return 's';\n  } else if (typeof value === 'boolean') {\n    return 'b';\n  } else if (typeof value === 'number') {\n    return 'd';\n  } else if (Array.isArray(value) && value.every((v) => typeof v === 'string')) {\n    return 'as';\n  } else {\n    // type not supported yet\n    logging.warn(`could not determine metadata type for ${key}: ${value}`);\n    return null;\n  }\n}\n\nfunction metadataToPlain(metadataVariant) {\n  let metadataPlain = {};\n  for (let k of Object.keys(metadataVariant)) {\n    let value = metadataVariant[k];\n    if (value === undefined || value === null) {\n      logging.warn(`ignoring a null metadata value for key ${k}`);\n      continue;\n    }\n    if (value.constructor === Variant) {\n      metadataPlain[k] = value.value;\n    } else {\n      metadataPlain[k] = value;\n    }\n  }\n  return metadataPlain;\n}\n\nfunction metadataToDbus(metadataPlain) {\n  let metadataVariant = {};\n  for (let k of Object.keys(metadataPlain)) {\n    let value = metadataPlain[k];\n    let signature = guessMetadataSignature(k, value);\n    if (signature) {\n      metadataVariant[k] = new Variant(signature, value);\n    }\n  }\n  return metadataVariant;\n}\n\nlet emptyPlaylist = ['/', '', ''];\n\nfunction playlistToDbus(playlist) {\n  if (!playlist) {\n    return emptyPlaylist;\n  }\n\n  let { Id, Name, Icon } = playlist;\n  return [ Id, Name, Icon ];\n}\n\nfunction playlistToPlain(wire) {\n  let [ Id, Name, Icon ] = wire;\n  return { Id, Name, Icon };\n}\n\nmodule.exports = {\n  metadataToPlain,\n  metadataToDbus,\n  playlistToPlain,\n  playlistToDbus,\n  emptyPlaylist\n};\n"],"file":"types.js","sourceRoot":"../../src/"}