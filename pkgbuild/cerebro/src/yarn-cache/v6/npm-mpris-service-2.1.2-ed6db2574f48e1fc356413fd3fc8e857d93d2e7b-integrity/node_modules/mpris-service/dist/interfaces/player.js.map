{"version":3,"sources":["interfaces/player.js"],"names":["dbus","require","MprisInterface","Variant","JSBI","constants","property","method","signal","DBusError","ACCESS_READ","ACCESS_WRITE","ACCESS_READWRITE","interface","PlayerInterface","constructor","player","LOOP_STATUS_NONE","PLAYBACK_STATUS_STOPPED","signature","access","_CanControl","_CanPause","_CanPlay","_CanSeek","_CanGoNext","_CanGoPrevious","_Metadata","_MaximumRate","_MinimumRate","_Rate","value","_setPropertyInternal","_Shuffle","_Volume","playerPosition","getPosition","position","Math","floor","isNaN","err","message","isLoopStatusValid","_LoopStatus","isPlaybackStatusValid","_PlaybackStatus","emit","inSignature","offset","toNumber","trackId","e","uri","module","exports"],"mappings":"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","sourcesContent":["const dbus = require('dbus-next');\nconst MprisInterface = require('./mpris-interface');\nconst Variant = dbus.Variant;\nconst JSBI = require('jsbi');\nconst constants = require('../constants');\n\nlet {\n  property, method, signal, DBusError,\n  ACCESS_READ, ACCESS_WRITE, ACCESS_READWRITE\n} = dbus.interface;\n\nclass PlayerInterface extends MprisInterface {\n  constructor(player) {\n    super('org.mpris.MediaPlayer2.Player', player);\n  }\n\n  _CanControl = true;\n  _CanPause = true;\n  _CanPlay = true;\n  _CanSeek = true;\n  _CanGoNext = true;\n  _CanGoPrevious = true;\n  _Metadata = {};\n  _MaximumRate = 1;\n  _MinimumRate = 1;\n  _Rate = 1;\n  _Shuffle = false;\n  _Volume = 0;\n  _LoopStatus = constants.LOOP_STATUS_NONE;\n  _PlaybackStatus = constants.PLAYBACK_STATUS_STOPPED;\n\n  @property({signature: 'b', access: ACCESS_READ})\n  get CanControl() {\n    return this._CanControl;\n  }\n\n  @property({signature: 'b', access: ACCESS_READ})\n  get CanPause() {\n    return this._CanPause;\n  }\n\n  @property({signature: 'b', access: ACCESS_READ})\n  get CanPlay() {\n    return this._CanPlay;\n  }\n\n  @property({signature: 'b', access: ACCESS_READ})\n  get CanSeek() {\n    return this._CanSeek;\n  }\n\n  @property({signature: 'b', access: ACCESS_READ})\n  get CanGoNext() {\n    return this._CanGoNext;\n  }\n\n  @property({signature: 'b', access: ACCESS_READ})\n  get CanGoPrevious() {\n    return this._CanGoPrevious;\n  }\n\n  @property({signature: 'a{sv}', access: ACCESS_READ})\n  get Metadata() {\n    return this._Metadata;\n  }\n\n  @property({signature: 'd', access: ACCESS_READ})\n  get MaximumRate() {\n    return this._MaximumRate;\n  }\n\n  @property({signature: 'd', access: ACCESS_READ})\n  get MinimumRate() {\n    return this._MinimumRate;\n  }\n\n  @property({signature: 'd'})\n  get Rate() {\n    return this._Rate;\n  }\n  set Rate(value) {\n    this._setPropertyInternal('Rate', value);\n  }\n\n  @property({signature: 'b'})\n  get Shuffle() {\n    return this._Shuffle;\n  }\n  set Shuffle(value) {\n    this._setPropertyInternal('Shuffle', value);\n  }\n\n  @property({signature: 'd'})\n  get Volume() {\n    return this._Volume;\n  }\n  set Volume(value) {\n    this._setPropertyInternal('Volume', value);\n  }\n\n  @property({signature: 'x', access: ACCESS_READ})\n  get Position() {\n    let playerPosition = this.player.getPosition();\n    let position = Math.floor(playerPosition || 0);\n    if (isNaN(position)) {\n      const err = 'github.mpris_service.InvalidPositionError';\n      const message = `The player has set an invalid position: ${playerPosition}`;\n      throw new DBusError(err, message);\n    }\n    return position;\n  }\n\n  @property({signature: 's'})\n  get LoopStatus() {\n    if (!constants.isLoopStatusValid(this._LoopStatus)) {\n      const err = 'github.mpris_service.InvalidLoopStatusError';\n      const message = `The player has set an invalid loop status: ${this._LoopStatus}`;\n      throw new DBusError(err, message);\n    }\n\n    return this._LoopStatus;\n  }\n  set LoopStatus(value) {\n    if (!constants.isLoopStatusValid(value)) {\n      const err = 'github.mpris_service.InvalidLoopStatusError';\n      const message = `Tried to set loop status to an invalid value: ${value}`;\n      throw new DBusError(err, message);\n    }\n    this._setPropertyInternal('LoopStatus', value);\n  }\n\n  @property({signature: 's', access: ACCESS_READ})\n  get PlaybackStatus() {\n    if (!constants.isPlaybackStatusValid(this._PlaybackStatus)) {\n      const err = 'github.mpris_service.InvalidPlaybackStatusError';\n      const message = `The player has set an invalid playback status: ${this._PlaybackStatus}`;\n      throw new DBusError(err, message);\n    }\n\n    return this._PlaybackStatus;\n  }\n\n  @method({})\n  Next() {\n    this.player.emit('next');\n  }\n\n  @method({})\n  Previous() {\n    this.player.emit('previous');\n  }\n\n  @method({})\n  Pause() {\n    this.player.emit('pause');\n  }\n\n  @method({})\n  PlayPause() {\n    this.player.emit('playpause');\n  }\n\n  @method({})\n  Stop() {\n    this.player.emit('stop');\n  }\n\n  @method({})\n  Play() {\n    this.player.emit('play');\n  }\n\n  @method({inSignature: 'x'})\n  Seek(offset) {\n    // XXX overflow\n    offset = JSBI.toNumber(offset);\n    this.player.emit('seek', offset);\n  }\n\n  @method({inSignature: 'ox'})\n  SetPosition(trackId, position) {\n    let e = {\n      trackId: trackId,\n      // XXX overflow\n      position: JSBI.toNumber(position)\n    };\n    this.player.emit('position', e);\n  }\n\n  @method({inSignature: 's'})\n  OpenUri(uri) {\n    let e = { uri };\n    this.player.emit('open', e);\n  }\n\n  @signal({signature: 'x'})\n  Seeked(position) {\n    return position;\n  }\n}\n\nmodule.exports = PlayerInterface;\n"],"file":"player.js","sourceRoot":"../../src/"}