{
  "manifest": {
    "name": "tsconfig-replace-paths",
    "version": "0.0.11",
    "description": "Replace absolute paths to relative paths for package compilation",
    "author": {
      "name": "Jon Wheeler",
      "email": "jon.k.wheeler@gmail.com"
    },
    "license": "MIT",
    "main": "dist/commonjs/index.js",
    "module": "dist/esm/index.js",
    "types": "dist/esm/index.d.ts",
    "bin": {
      "tsconfig-replace-paths": "dist/commonjs/index.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/jonkwheeler/tsconfig-replace-paths.git"
    },
    "config": {
      "dirBuild": "./dist",
      "dirCommonjs": "./dist/commonjs",
      "dirEsm": "./dist/esm",
      "dirSrc": "./src"
    },
    "publishConfig": {
      "scope": "jonkwheeler",
      "registry": "https://registry.npmjs.org/"
    },
    "scripts": {
      "build:cjs": "tsc -p ./tsconfig.cjs.json",
      "build:esm": "tsc -p ./tsconfig.esm.json",
      "build": "yarn build:esm && yarn build:cjs",
      "nuke:all": "yarn nuke:node-nodules && yarn nuke:build",
      "nuke:build:rebuild": "yarn nuke:build && yarn build",
      "nuke:build": "rm -rf $npm_package_config_dirBuild",
      "nuke:node-nodules": "rm -rf node_modules",
      "release": "yarn release-it"
    },
    "bugs": {
      "url": "https://github.com/jonkwheeler/tsconfig-replace-paths/issues"
    },
    "homepage": "https://github.com/jonkwheeler/tsconfig-replace-paths#readme",
    "keywords": [
      "typescript",
      "tsc",
      "tsconfig",
      "paths",
      "path",
      "alias",
      "aliases",
      "compilation",
      "compiler",
      "resolver",
      "resolve",
      "absolute",
      "relative",
      "replace",
      "transform"
    ],
    "devDependencies": {
      "@typescript-eslint/eslint-plugin": "^5.1.0",
      "@typescript-eslint/parser": "^5.1.0",
      "eslint": "^8.0.1",
      "prettier": "^2.4.1",
      "release-it": "^14.11.6",
      "typescript": "^4.4.4"
    },
    "dependencies": {
      "commander": "^3.0.2",
      "globby": "^10.0.1",
      "json5": "^2.2.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-tsconfig-replace-paths-0.0.11-0059a5ba5b6c156b00038ce46842e3d4d801a33b-integrity/node_modules/tsconfig-replace-paths/package.json",
    "readmeFilename": "README.md",
    "readme": "# tsconfig-replace-paths\n\nReplace absolute paths to relative paths for package compilation.\n\nI'll add to this over time. Submit PR's if you like. Tag me on them.\n\n## Getting Started\n\nFirst, install `tsconfig-replace-paths` as devDependency using yarn or npm.\n\n```sh\nyarn add -D tsconfig-replace-paths\n```\n\nor\n\n```sh\nnpm install --save-dev tsconfig-replace-paths\n```\n\n## Add it to your build scripts in package.json\n\n```json\n\"scripts\": {\n  \"build\": \"tsc --project tsconfig.json && tsconfig-replace-paths --project tsconfig.json\",\n}\n```\n\n---\n\n## What if you want to build only the types?\n\nYou can also setup a seperate tsconfig file just for types if you are also compiling with Babel. Assuming you're compiling CommonJs, make a `tsconfig.types.cjs.json`. See examples of both CommonJs and ESM in the `examples` folder within repo.\n\n```json\n{\n  \"extends\": \"./tsconfig\",\n  \"compilerOptions\": {\n    \"module\": \"commonjs\",\n    \"rootDir\": \"./src\",\n    \"outDir\": \"dist/commonjs\",\n    \"declaration\": true,\n    \"declarationMap\": false,\n    \"isolatedModules\": false,\n    \"noEmit\": false,\n    \"allowJs\": false,\n    \"emitDeclarationOnly\": true\n  },\n  \"exclude\": [\"**/*.test.ts\"]\n}\n```\n\nAnd then target that. Your final build script might look like this. You first compile to CommonJs using Babel, and then build the types using the Typescript Compiler, `tsc`, followed by fixing the paths them with `tsconfig-replace-paths`. If only `tsc` did this for you.\n\n```json\n\"config\": {\n  \"dirBuild\": \"./dist\",\n  \"dirSrc\": \"./src\",\n},\n\"scripts\": {\n  \"build:commonjs\": \"yarn nuke:build && cross-env BABEL_ENV=commonjs babel $npm_package_config_dirSrc --out-dir $npm_package_config_dirBuild --extensions \\\".ts,.tsx,.js,.jsx\\\" --source-maps inline\",\n  \"build:types:commonjs\": \"tsc --project tsconfig.types.cjs.json && tsconfig-replace-paths --project tsconfig.types.cjs.json\",\n  \"build:types\": \"yarn build:types:commonjs\",\n  \"build\": \"yarn build:commonjs && yarn build:types\",\n  \"nuke:build\": \"rm -rf $npm_package_config_dirBuild\",\n}\n```\n\n## Options\n\n| flag         | description                                                                          | default   |\n| ------------ | ------------------------------------------------------------------------------------ | --------- |\n| -p --project | project configuration file (tsconfig.json)                                           | undefined |\n| -s --src     | source code root directory (overrides the tsconfig provided)                         | undefined |\n| -o --out     | output directory of transpiled code (tsc --outDir) (overrides the tsconfig provided) | undefined |\n| -v --verbose | console.log all the events                                                           | false     |\n\n## Inspired by\n\n[tsconfig-paths](https://github.com/dividab/tsconfig-paths) and [tscpaths](https://github.com/joonhocho/tscpaths)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Jon Wheeler\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/tsconfig-replace-paths/-/tsconfig-replace-paths-0.0.11.tgz#0059a5ba5b6c156b00038ce46842e3d4d801a33b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/tsconfig-replace-paths/-/tsconfig-replace-paths-0.0.11.tgz",
    "hash": "0059a5ba5b6c156b00038ce46842e3d4d801a33b",
    "integrity": "sha512-BX10vOJL/kTZExQwj22FJgxCpneNYKfXvujBKGFpnvaKWl4/9Cpd678ZvKF+CX5NdxbKphscwtc8QzFA7zhVsA==",
    "registry": "npm",
    "packageName": "tsconfig-replace-paths",
    "cacheIntegrity": "sha512-BX10vOJL/kTZExQwj22FJgxCpneNYKfXvujBKGFpnvaKWl4/9Cpd678ZvKF+CX5NdxbKphscwtc8QzFA7zhVsA== sha1-AFmlultsFWsAA4zkaELj1NgBozs="
  },
  "registry": "npm",
  "hash": "0059a5ba5b6c156b00038ce46842e3d4d801a33b"
}