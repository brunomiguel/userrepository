{
  "manifest": {
    "name": "@vercel/ncc",
    "description": "Simple CLI for compiling a Node.js module into a single file, together with all its dependencies, gcc-style.",
    "version": "0.28.6",
    "repository": {
      "type": "git",
      "url": "https://github.com/vercel/ncc.git"
    },
    "license": "MIT",
    "main": "./dist/ncc/index.js",
    "bin": {
      "ncc": "dist/ncc/cli.js"
    },
    "files": [
      "dist"
    ],
    "scripts": {
      "build": "node scripts/build.js",
      "build-test-binary": "cd test/binary && node-gyp rebuild && cp build/Release/hello.node ../integration/hello.node",
      "codecov": "codecov",
      "test": "node --expose-gc --max_old_space_size=3072 node_modules/.bin/jest",
      "test-coverage": "node --expose-gc --max_old_space_size=3072 node_modules/.bin/jest --coverage --globals \"{\\\"coverage\\\":true}\" && codecov",
      "prepublishOnly": "node scripts/build.js --no-cache"
    },
    "devDependencies": {
      "@azure/cosmos": "^2.0.5",
      "@bugsnag/js": "^5.0.1",
      "@ffmpeg-installer/ffmpeg": "^1.0.17",
      "@google-cloud/bigquery": "^2.0.1",
      "@google-cloud/firestore": "^2.2.0",
      "@sentry/node": "^4.3.0",
      "@slack/web-api": "^5.13.0",
      "@tensorflow/tfjs-node": "^0.3.0",
      "@vercel/webpack-asset-relocator-loader": "1.4.0",
      "analytics-node": "^3.3.0",
      "apollo-server-express": "^2.2.2",
      "arg": "^4.1.0",
      "auth0": "^2.14.0",
      "aws-sdk": "^2.356.0",
      "axios": "^0.21.1",
      "azure-storage": "^2.10.2",
      "browserify-middleware": "^8.1.1",
      "bytes": "^3.0.0",
      "canvas": "^2.2.0",
      "chromeless": "^1.5.2",
      "codecov": "^3.8.1",
      "consolidate": "^0.15.1",
      "copy": "^0.3.2",
      "core-js": "^2.5.7",
      "cowsay": "^1.3.1",
      "esm": "^3.2.22",
      "express": "^4.16.4",
      "fetch-h2": "^1.0.2",
      "firebase": "^6.1.1",
      "firebase-admin": "^6.3.0",
      "fluent-ffmpeg": "^2.1.2",
      "fontkit": "^1.7.7",
      "get-folder-size": "^2.0.0",
      "glob": "^7.1.3",
      "got": "^9.3.2",
      "graceful-fs": "^4.1.15",
      "graphql": "^14.0.2",
      "highlights": "^3.1.1",
      "hot-shots": "^5.9.2",
      "ioredis": "^4.2.0",
      "isomorphic-unfetch": "^3.0.0",
      "jest": "^26.3.0",
      "jimp": "^0.5.6",
      "jugglingdb": "2.0.1",
      "koa": "^2.6.2",
      "leveldown": "^5.6.0",
      "license-webpack-plugin": "2.3.11",
      "lighthouse": "^5.0.0",
      "loopback": "^3.24.0",
      "mailgun": "^0.5.0",
      "mariadb": "^2.0.1-beta",
      "memcached": "^2.2.2",
      "mkdirp": "^0.5.1",
      "mongoose": "^5.3.12",
      "mysql": "^2.16.0",
      "node-gyp": "^3.8.0",
      "npm": "^6.13.4",
      "oracledb": "^4.2.0",
      "passport": "^0.4.0",
      "passport-google-oauth": "^1.0.0",
      "path-platform": "^0.11.15",
      "pdf2json": "^1.1.8",
      "pdfkit": "^0.8.3",
      "pg": "^7.6.1",
      "pug": "^3.0.1",
      "react": "^16.6.3",
      "react-dom": "^16.6.3",
      "redis": "^3.1.1",
      "request": "^2.88.0",
      "rxjs": "^6.3.3",
      "saslprep": "^1.0.2",
      "sequelize": "^5.8.6",
      "sharp": "^0.25.2",
      "shebang-loader": "^0.0.1",
      "socket.io": "^2.2.0",
      "source-map-support": "^0.5.9",
      "stripe": "^6.15.0",
      "swig": "^1.4.2",
      "terser": "^5.6.1",
      "the-answer": "^1.0.0",
      "tiny-json-http": "^7.0.2",
      "ts-loader": "^8.3.0",
      "tsconfig-paths": "^3.7.0",
      "tsconfig-paths-webpack-plugin": "^3.2.0",
      "twilio": "^3.23.2",
      "typescript": "^3.9.9",
      "vm2": "^3.6.6",
      "vue": "^2.5.17",
      "vue-server-renderer": "^2.5.17",
      "web-vitals": "^0.2.4",
      "webpack": "5.36.2",
      "when": "^3.7.8"
    },
    "resolutions": {
      "grpc": "1.24.6"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@vercel-ncc-0.28.6-integrity/node_modules/@vercel/ncc/package.json",
    "readmeFilename": "readme.md",
    "readme": "# ncc\n\n[![CI Status](https://github.com/vercel/ncc/workflows/CI/badge.svg)](https://github.com/vercel/ncc/actions?workflow=CI)\n[![codecov](https://codecov.io/gh/vercel/ncc/branch/main/graph/badge.svg)](https://codecov.io/gh/vercel/ncc)\n\nSimple CLI for compiling a Node.js module into a single file,\ntogether with all its dependencies, gcc-style.\n\n## Motivation\n\n- Publish minimal packages to npm\n- Only ship relevant app code to serverless environments\n- Don't waste time configuring bundlers\n- Generally faster bootup time and less I/O overhead\n- Compiled language-like experience (e.g.: `go`)\n\n## Design goals\n\n- Zero configuration\n- TypeScript built-in\n- Only supports Node.js programs as input / output\n- Support all Node.js patterns and npm modules\n\n## Usage\n\n### Installation\n```bash\nnpm i -g @vercel/ncc\n```\n\n### Usage\n\n```bash\n$ ncc <cmd> <opts>\n```\nEg:\n```bash\n$ ncc build input.js -o dist\n```\n\nOutputs the Node.js compact build of `input.js` into `dist/index.js`.\n\n> Note: If the input file is using a `.cjs` extension, then so will the corresponding output file.\n> This is useful for packages that want to use `.js` files as modules in native Node.js using\n> a `\"type\": \"module\"` in the package.json file.\n\n#### Commands:\n```\n  build <input-file> [opts]\n  run <input-file> [opts]\n  cache clean|dir|size\n  help\n  version\n```\n\n#### Options:\n```\n  -o, --out [dir]          Output directory for build (defaults to dist)\n  -m, --minify             Minify output\n  -C, --no-cache           Skip build cache population\n  -s, --source-map         Generate source map\n  --no-source-map-register Skip source-map-register source map support\n  -e, --external [mod]     Skip bundling 'mod'. Can be used many times\n  -q, --quiet              Disable build summaries / non-error outputs\n  -w, --watch              Start a watched build\n  -t, --transpile-only     Use transpileOnly option with the ts-loader\n  --v8-cache               Emit a build using the v8 compile cache\n  --license [file]         Adds a file containing licensing information to the output\n  --stats-out [file]       Emit webpack stats as json to the specified output file\n  --target [es]            ECMAScript target to use for output (default: es2015)\n                           Learn more: https://webpack.js.org/configuration/target\n```\n\n### Execution Testing\n\nFor testing and debugging, a file can be built into a temporary directory and executed with full source maps support with the command:\n\n```bash\n$ ncc run input.js\n```\n\n### With TypeScript\n\nThe only requirement is to point `ncc` to `.ts` or `.tsx` files. A `tsconfig.json`\nfile is necessary. Most likely you want to indicate `es2015` support:\n\n```json\n{\n  \"compilerOptions\": {\n    \"target\": \"es2015\",\n    \"moduleResolution\": \"node\"\n  }\n}\n```\n\nIf typescript is found in `devDependencies`, that version will be used.\n\n### Package Support\n\nSome packages may need some extra options for ncc support in order to better work with the static analysis.\n\nSee [package-support.md](package-support.md) for some common packages and their usage with ncc.\n\n### Programmatically From Node.js\n\n```js\nrequire('@vercel/ncc')('/path/to/input', {\n  // provide a custom cache path or disable caching\n  cache: \"./custom/cache/path\" | false,\n  // externals to leave as requires of the build\n  externals: [\"externalpackage\"],\n  // directory outside of which never to emit assets\n  filterAssetBase: process.cwd(), // default\n  minify: false, // default\n  sourceMap: false, // default\n  sourceMapBasePrefix: '../', // default treats sources as output-relative\n  // when outputting a sourcemap, automatically include\n  // source-map-support in the output file (increases output by 32kB).\n  sourceMapRegister: true, // default\n  watch: false, // default\n  license: '', // default does not generate a license file\n  v8cache: false, // default\n  quiet: false, // default\n  debugLog: false // default\n}).then(({ code, map, assets }) => {\n  console.log(code);\n  // Assets is an object of asset file names to { source, permissions, symlinks }\n  // expected relative to the output code (if any)\n})\n```\n\nWhen `watch: true` is set, the build object is not a promise, but has the following signature:\n\n```js\n{\n  // handler re-run on each build completion\n  // watch errors are reported on \"err\"\n  handler (({ err, code, map, assets }) => { ... })\n  // handler re-run on each rebuild start\n  rebuild (() => {})\n  // close the watcher\n  void close ();\n}\n```\n\n## Caveats\n\n- Files / assets are relocated based on a [static evaluator](https://github.com/zeit/webpack-asset-relocator-loader#how-it-works). Dynamic non-statically analyzable asset loads may not work out correctly\n",
    "licenseText": "Copyright 2018 ZEIT, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@vercel/ncc/-/ncc-0.28.6.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@vercel/ncc/-/ncc-0.28.6.tgz",
    "hash": "",
    "integrity": "sha512-t4BoSSuyK8BZaUE0gV18V6bkFs4st7baumtFGa50dv1tMu2GDBEBF8sUZaKBdKiL6DzJ2D2+XVCwYWWDcQOYdQ==",
    "registry": "npm",
    "packageName": "@vercel/ncc",
    "cacheIntegrity": "sha512-t4BoSSuyK8BZaUE0gV18V6bkFs4st7baumtFGa50dv1tMu2GDBEBF8sUZaKBdKiL6DzJ2D2+XVCwYWWDcQOYdQ== sha1-BzwM6OAmkhDAqfGA+wv5Se7MIOA="
  },
  "registry": "npm",
  "hash": "b78068492bb22bc059694134815d7c57a6e416ce2cb7b6daba6b4519ae7476fd6d32ed860c110117cb1465a28174a88be83cc9d83dbe5d50b061658371039875"
}