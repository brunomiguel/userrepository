{
  "manifest": {
    "name": "@pixi-essentials/cull",
    "version": "1.1.0",
    "description": "Optimized recursive display-object culling for scene graphs",
    "keywords": [
      "cull",
      "pixi.js"
    ],
    "author": {
      "name": "Shukant Pal",
      "email": "shukantpal@outlook.com"
    },
    "homepage": "https://github.com/SukantPal/pixi-essentials/tree/master/packages/cull#readme",
    "license": "MIT",
    "main": "lib/cull.js",
    "module": "lib/cull.es.js",
    "bundle": "dist/cull.js",
    "types": "./index.d.ts",
    "files": [
      "lib",
      "dist",
      "index.d.ts"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/SukantPal/pixi-essentials.git"
    },
    "scripts": {
      "build": "rollup -c node_modules/@pixi-build-tools/rollup-configurator/index.js --silent",
      "compile": "rm -rf compile && tsc && api-extractor run"
    },
    "bugs": {
      "url": "https://github.com/SukantPal/pixi-essentials/issues"
    },
    "peerDependencies": {
      "@pixi/display": "^6.0.0",
      "@pixi/math": "^6.0.0"
    },
    "devDependencies": {
      "@pixi-build-tools/rollup-configurator": "^1.0.10",
      "@pixi-essentials/eslint-config": "~1.0.0",
      "@pixi/display": "^6.0.0",
      "@pixi/math": "^6.0.0",
      "@pixi/graphics": "^6.0.0",
      "eslint": "~7.7.0",
      "rollup": "~2.27.0",
      "tslib": "~2.0.1",
      "typescript": "~4.0.2",
      "chai": "~4.3.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@pixi-essentials-cull-1.1.0-e454b4c2475a8f7bcfb79d751a138a657ca7bb60-integrity/node_modules/@pixi-essentials/cull/package.json",
    "readmeFilename": "README.md",
    "readme": "# @pixi-essentials/cull\n\nThis package provides an optimized, highly configurable culling mechanism.\n\n## Installation :package:\n\n```bash\nnpm install @pixi-essentials/cull\n```\n\n## Usage :page_facing_up:\n\n### Static scenes\n\nIf display-object's in your scene graph do not change each frame, then you can run culling whenever\nyour display-object's move or your scene graph changes.\n\n```ts\nimport { Application } from 'pixi.js';\nimport { Cull } from '@pixi-essentials/cull';\nimport { Viewport } from 'pixi-viewport';\n\nconst app = new Application({  });\nconst renderer = app.renderer;\nconst viewport = initScene(new Viewport());\nconst cull = new Cull().addAll(viewport.children);\n\n// Flags whether culling, should be set \"true\" when a child is added to the viewport's subtree.\nlet cullDirty = false;\n\nviewport.on('frame-end', function() {\n    if (viewport.dirty || cullDirty) {\n        cull.cull(renderer.screen);\n\n        viewport.dirty = false;\n        cullDirty = false;\n    }\n})\n```\n\n### Dynamic scenes\n\nIf your scene graph is dynamic and/or changes across frames cannot be tracked, you can run culling\non the `prerender` event.\n\n```ts\nrenderer.on('prerender', () => {\n    cull.cull(renderer.screen);\n})\n```\n\n### Multiple scene graphs\n\nIf you are rendering multiple panes on to the canvas, each with its own scene graph, using different\nprojections, then you need to use separate culls for each scene graph.\n\n```ts\ncull.cull(sourceFrame);\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@pixi-essentials/cull/-/cull-1.1.0.tgz#e454b4c2475a8f7bcfb79d751a138a657ca7bb60",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@pixi-essentials/cull/-/cull-1.1.0.tgz",
    "hash": "e454b4c2475a8f7bcfb79d751a138a657ca7bb60",
    "integrity": "sha512-/IrobYs+ECZoYxGnmCbUBIcye0XX9ZRmeO9SLtOGI0DtsF+/r13OrGX42XUo8L76LMWurv78b5LdYxX33NrUNQ==",
    "registry": "npm",
    "packageName": "@pixi-essentials/cull",
    "cacheIntegrity": "sha512-/IrobYs+ECZoYxGnmCbUBIcye0XX9ZRmeO9SLtOGI0DtsF+/r13OrGX42XUo8L76LMWurv78b5LdYxX33NrUNQ== sha1-5FS0wkdaj3vPt511GhOKZXynu2A="
  },
  "registry": "npm",
  "hash": "e454b4c2475a8f7bcfb79d751a138a657ca7bb60"
}