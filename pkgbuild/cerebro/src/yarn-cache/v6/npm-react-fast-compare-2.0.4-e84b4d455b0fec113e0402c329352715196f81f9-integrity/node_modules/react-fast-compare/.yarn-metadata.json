{
  "manifest": {
    "name": "react-fast-compare",
    "version": "2.0.4",
    "description": "Fastest deep equal comparison for React. Perfect for shouldComponentUpdate. Also really fast general-purpose deep comparison",
    "main": "index.js",
    "scripts": {
      "preversion": "npm run test",
      "benchmark": "node benchmark",
      "eslint": "eslint \"*.js\" benchmark test",
      "test-browser": "karma start test/browser/karma.conf.js",
      "test-browser-ie": "karma start test/browser/karma.conf.ie.js",
      "test-node": "mocha \"test/node/*.spec.js\"",
      "test-node-cov": "nyc npm run test-node",
      "test-ts": "tsc --target ES5 --noImplicitAny index.d.ts",
      "test": "builder concurrent --buffer eslint test-ts test-node-cov test-browser",
      "test-ie": "builder concurrent --buffer eslint test-ts test-node-cov test-browser-ie"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/FormidableLabs/react-fast-compare.git"
    },
    "keywords": [
      "fast",
      "equal",
      "react",
      "compare",
      "shouldComponentUpdate",
      "deep-equal"
    ],
    "author": {
      "name": "Chris Bolin"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/FormidableLabs/react-fast-compare/issues"
    },
    "homepage": "https://github.com/FormidableLabs/react-fast-compare",
    "devDependencies": {
      "babel-core": "^6.26.0",
      "babel-loader": "^7.1.4",
      "babel-preset-env": "^1.6.1",
      "benchmark": "^2.1.4",
      "builder": "^4.0.0",
      "core-js": "^2.5.5",
      "coveralls": "^2.13.1",
      "eslint": "^4.0.0",
      "fast-deep-equal": "2.0.1",
      "karma": "^2.0.0",
      "karma-chrome-launcher": "^2.2.0",
      "karma-firefox-launcher": "^1.1.0",
      "karma-ie-launcher": "^1.0.0",
      "karma-mocha": "^1.3.0",
      "karma-mocha-reporter": "^2.2.5",
      "karma-safari-launcher": "^1.0.0",
      "karma-webpack": "^3.0.0",
      "lodash": "^4.17.10",
      "mocha": "^3.4.2",
      "nano-equal": "^2.0.2",
      "nyc": "^11.0.2",
      "react": "^16.3.1",
      "react-test-renderer": "^16.3.1",
      "shallow-equal-fuzzy": "0.0.2",
      "sinon": "^4.5.0",
      "typescript": "^2.6.1",
      "webpack": "^4.5.0"
    },
    "nyc": {
      "exclude": [
        "**/test/**",
        "node_modules"
      ],
      "reporter": [
        "lcov",
        "text-summary"
      ]
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "types": "index.d.ts",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-react-fast-compare-2.0.4-e84b4d455b0fec113e0402c329352715196f81f9-integrity/node_modules/react-fast-compare/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-fast-compare\n\nThe fastest deep equal comparison for React. Really fast general-purpose deep comparison.\nGreat for`shouldComponentUpdate`. This is a fork of the brilliant\n[fast-deep-equal](https://github.com/epoberezkin/fast-deep-equal) with some\nextra handling for React.\n\n[![Travis Status][trav_img]][trav_site]\n[![AppVeyor Status][appveyor_img]][appveyor_site]\n[![npm version][npm_img]][npm_site]\n[![size_minzip][size_minzip]][size_site]\n[![size_min][size_min]][size_site]\n\n![benchmark chart](assets/benchmarking.png \"benchmarking chart\")\n\n(Check out the [benchmarking details](#benchmarking-this-library).)\n\n## Install\n\n```sh\n$ yarn add react-fast-compare\n# or\n$ npm install react-fast-compare\n```\n\n## Highlights\n\n* ES5 compatible; works in node.js (0.10+) and browsers (IE9+)\n* deeply compares any value (besides objects with circular references)\n* handles React-specific circular references, like elements\n* checks equality Date and RegExp objects\n* should be just as fast as [fast-deep-equal](https://github.com/epoberezkin/fast-deep-equal) for general use, and faster for React use\n* small: under 600 bytes minified+gzipped\n\n## Usage\n\n```jsx\nconst isEqual = require(\"react-fast-compare\");\n\n// general usage\nconsole.log(isEqual({ foo: \"bar\" }, { foo: \"bar\" })); // true\n\n// react usage\nclass ExpensiveRenderer extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    return !isEqual(this.props, nextProps);\n  }\n  render() {\n    // ...\n  }\n}\n```\n\n## Do I Need `shouldComponentUpdate`?\n\n> What's faster than a really fast deep comparison? No deep comparison at all.\n\n—This Readme\n\nDeep checks in React's `shouldComponentUpdate` should not be used blindly.\nFirst, see if a\n[PureComponent](https://reactjs.org/docs/react-api.html#reactpurecomponent)\nwould work for you. If it won't (if you need deep checks), it's wise to make\nsure you've correctly indentified the bottleneck in your application by\n[profiling the performance](https://reactjs.org/docs/optimizing-performance.html#profiling-components-with-the-chrome-performance-tab).\nAfter you've determined that you _do_ need deep equality checks and you've\nidentified the minimum number of places to apply them, then this library may\nbe for you! For more information about making your app faster, check out the\n[Optimizing Performance](https://reactjs.org/docs/optimizing-performance.html)\nsection of the React docs.\n\n## Benchmarking this Library\n\nAll tests carried out locally on a MacBook. The absolute values are much less\nimportant than the relative differences between packages.\n\nBenchmarking source can be found\n[here](https://github.com/FormidableLabs/react-fast-compare/blob/master/node/tests.js).\nEach \"operation\" consists of running all relevant tests. The React benchmark\nuses both the generic tests and the react tests; these runs will be slower\nsimply because there are more tests in each operation.\n\n### Generic Data\n\n```\nreact-fast-compare x 207,503 ops/sec ±0.54% (92 runs sampled)\nfast-deep-equal x 195,006 ops/sec ±0.70% (91 runs sampled)\nlodash.isEqual x 43,778 ops/sec ±0.55% (91 runs sampled)\nnano-equal x 198,036 ops/sec ±0.37% (95 runs sampled)\nshallow-equal-fuzzy x 173,023 ops/sec ±0.59% (95 runs sampled)\n  fastest: react-fast-compare\n```\n\n`react-fast-compare` and `fast-deep-equal` should be the same speed for these\ntests; any difference is just noise. `react-fast-compare` won't be faster than\n`fast-deep-equal`, because it's based on it.\n\n### React and Generic Data\n\n```\nreact-fast-compare x 187,628 ops/sec ±0.58% (93 runs sampled)\nfast-deep-equal x 477 ops/sec ±0.55% (91 runs sampled)\nlodash.isEqual x 35,100 ops/sec ±0.16% (95 runs sampled)\nnano-equal x 468 ops/sec ±0.53% (94 runs sampled)\nshallow-equal-fuzzy x 684 ops/sec ±0.43% (92 runs sampled)\n  fastest: react-fast-compare\n```\n\nThree of these packages cannot handle comparing React elements (which are\ncircular): `fast-deep-equal`, `nano-equal`, and `shallow-equal-fuzzy`.\n\n### Running Benchmarks\n\n```sh\n$ yarn install\n$ yarn run benchmark\n```\n\n## fast-deep-equal Versioning\n\nreact-fast-compare@2.0.0 tracks fast-deep-equal@2.0.1\n\n## License\n\n[MIT](https://github.com/FormidableLabs/react-fast-compare/blob/readme/LICENSE)\n\n## Contributing\n\nPlease see our [contributions guide](./CONTRIBUTING.md).\n\n[trav_img]: https://api.travis-ci.org/FormidableLabs/react-fast-compare.svg\n[trav_site]: https://travis-ci.org/FormidableLabs/react-fast-compare\n[cov_img]: https://img.shields.io/coveralls/FormidableLabs/react-fast-compare.svg\n[cov_site]: https://coveralls.io/r/FormidableLabs/react-fast-compare\n[npm_img]: https://badge.fury.io/js/react-fast-compare.svg\n[npm_site]: http://badge.fury.io/js/react-fast-compare\n[appveyor_img]: https://ci.appveyor.com/api/projects/status/github/formidablelabs/react-fast-compare?branch=master&svg=true\n[appveyor_site]: https://ci.appveyor.com/project/FormidableLabs/react-fast-compare\n[size_min]: https://img.shields.io/bundlephobia/min/react-fast-compare.svg\n[size_minzip]: https://img.shields.io/bundlephobia/minzip/react-fast-compare.svg\n[size_site]: https://bundlephobia.com/result?p=react-fast-compare\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Formidable Labs\nCopyright (c) 2017 Evgeny Poberezkin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-fast-compare/-/react-fast-compare-2.0.4.tgz#e84b4d455b0fec113e0402c329352715196f81f9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-fast-compare/-/react-fast-compare-2.0.4.tgz",
    "hash": "e84b4d455b0fec113e0402c329352715196f81f9",
    "integrity": "sha512-suNP+J1VU1MWFKcyt7RtjiSWUjvidmQSlqu+eHslq+342xCbGTYmC0mEhPCOHxlW0CywylOC1u2DFAT+bv4dBw==",
    "registry": "npm",
    "packageName": "react-fast-compare",
    "cacheIntegrity": "sha512-suNP+J1VU1MWFKcyt7RtjiSWUjvidmQSlqu+eHslq+342xCbGTYmC0mEhPCOHxlW0CywylOC1u2DFAT+bv4dBw== sha1-6EtNRVsP7BE+BALDKTUnFRlvgfk="
  },
  "registry": "npm",
  "hash": "e84b4d455b0fec113e0402c329352715196f81f9"
}