{
  "manifest": {
    "name": "lightningcss",
    "version": "1.16.0",
    "license": "MPL-2.0",
    "description": "A CSS parser, transformer, and minifier written in Rust",
    "main": "node/index.js",
    "types": "node/index.d.ts",
    "exports": {
      "import": "./node/index.mjs",
      "require": "./node/index.js"
    },
    "browserslist": "last 2 versions, not dead",
    "targets": {
      "main": false,
      "types": false
    },
    "publishConfig": {
      "access": "public"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/parcel"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/parcel-bundler/lightningcss.git"
    },
    "engines": {
      "node": ">= 12.0.0"
    },
    "napi": {
      "name": "lightningcss"
    },
    "files": [
      "node/*.js",
      "node/*.mjs",
      "node/*.d.ts",
      "node/*.flow"
    ],
    "dependencies": {
      "detect-libc": "^1.0.3"
    },
    "devDependencies": {
      "@mdn/browser-compat-data": "^5.1.6",
      "@napi-rs/cli": "^2.6.2",
      "autoprefixer": "^10.4.8",
      "caniuse-lite": "^1.0.30001373",
      "cssnano": "^5.0.8",
      "esbuild": "^0.13.10",
      "jest-diff": "^27.4.2",
      "node-fetch": "^3.1.0",
      "parcel": "^2.7.0",
      "path-browserify": "^1.0.1",
      "postcss": "^8.3.11",
      "process": "^0.11.10",
      "puppeteer": "^12.0.1",
      "sharp": "^0.29.1",
      "util": "^0.12.4"
    },
    "scripts": {
      "build": "node scripts/build.js && node scripts/build-flow.js",
      "build-release": "node scripts/build.js --release && node scripts/build-flow.js",
      "prepublishOnly": "node scripts/build-flow.js",
      "wasm:build": "wasm-pack build node --target nodejs",
      "wasm:build-release": "wasm-pack build node --target nodejs --release",
      "wasm-browser:build": "wasm-pack build node --target web",
      "wasm-browser:build-release": "wasm-pack build node --target web --release",
      "website:start": "parcel website/index.html website/playground/index.html",
      "website:build": "yarn wasm-browser:build-release && parcel build website/index.html website/playground/index.html"
    },
    "optionalDependencies": {
      "lightningcss-darwin-x64": "1.16.0",
      "lightningcss-linux-x64-gnu": "1.16.0",
      "lightningcss-win32-x64-msvc": "1.16.0",
      "lightningcss-darwin-arm64": "1.16.0",
      "lightningcss-linux-arm64-gnu": "1.16.0",
      "lightningcss-linux-arm-gnueabihf": "1.16.0",
      "lightningcss-linux-arm64-musl": "1.16.0",
      "lightningcss-linux-x64-musl": "1.16.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-lightningcss-1.16.0-4c8e4ef8133d54488d1482a115d3758259191c52-integrity/node_modules/lightningcss/package.json",
    "readmeFilename": "README.md",
    "readme": "# ⚡️ Lightning CSS\n\nAn extremely fast CSS parser, transformer, and minifier written in Rust. Use it with [Parcel](https://parceljs.org), as a standalone library or CLI, or via a plugin with any other tool.\n\n<img width=\"680\" alt=\"performance and build size charts\" src=\"https://user-images.githubusercontent.com/19409/189022599-28246659-f94a-46a4-9de0-b6d17adb0e22.png#gh-light-mode-only\">\n<img width=\"680\" alt=\"performance and build size charts\" src=\"https://user-images.githubusercontent.com/19409/189022693-6956b044-422b-4f56-9628-d59c6f791095.png#gh-dark-mode-only\">\n\n## Features\n\n- **Extremely fast** – Parsing and minifying large files is completed in milliseconds, often with significantly smaller output than other tools. See [benchmarks](#benchmarks) below.\n- **Typed property values** – many other CSS parsers treat property values as an untyped series of tokens. This means that each transformer that wants to do something with these values must interpret them itself, leading to duplicate work and inconsistencies. Lightning CSS parses all values using the grammar from the CSS specification, and exposes a specific value type for each property.\n- **Browser-grade parser** – Lightning CSS is built on the [cssparser](https://github.com/servo/rust-cssparser) and [selectors](https://github.com/servo/servo/tree/master/components/selectors) crates created by Mozilla and used by Firefox and Servo. These provide a solid general purpose CSS-parsing foundation on top of which Lightning CSS implements support for all specific CSS rules and properties.\n- **Minification** – One of the main purposes of Lightning CSS is to minify CSS to make it smaller. This includes many optimizations including:\n  - Combining longhand properties into shorthands where possible.\n  - Merging adjacent rules with the same selectors or declarations when it is safe to do so.\n  - Combining CSS transforms into a single matrix or vice versa when smaller.\n  - Removing vendor prefixes that are not needed, based on the provided browser targets.\n  - Reducing `calc()` expressions where possible.\n  - Converting colors to shorter hex notation where possible.\n  - Minifying gradients.\n  - Minifying CSS grid templates.\n  - Normalizing property value order.\n  - Removing default property sub-values which will be inferred by browsers.\n  - Many micro-optimizations, e.g. converting to shorter units, removing unnecessary quotation marks, etc.\n- **Vendor prefixing** – Lightning CSS accepts a list of browser targets, and automatically adds (and removes) vendor prefixes.\n- **Syntax lowering** – Lightning CSS parses modern CSS syntax, and generates more compatible output where needed, based on browser targets.\n  - CSS Nesting (draft spec)\n  - Custom media queries (draft spec)\n  - Logical properties\n  * [Color Level 5](https://drafts.csswg.org/css-color-5/)\n    - `color-mix()` function\n    - Relative color syntax, e.g. `lab(from purple calc(l * .8) a b)`\n  - [Color Level 4](https://drafts.csswg.org/css-color-4/)\n    - `lab()`, `lch()`, `oklab()`, and `oklch()` colors\n    - `color()` function supporting predefined color spaces such as `display-p3` and `xyz`\n    - Space separated components in `rgb` and `hsl` functions\n    - Hex with alpha syntax\n    - `hwb()` color syntax\n    - Percent syntax for opacity\n    - `#rgba` and `#rrggbbaa` hex colors\n  - Selectors\n    - `:not` with multiple arguments\n    - `:lang` with multiple arguments\n    - `:dir`\n    - `:is`\n  - Double position gradient stops (e.g. `red 40% 80%`)\n  - `clamp()`, `round()`, `rem()`, and `mod()` math functions\n  - Alignment shorthands (e.g. `place-items`)\n  - Two-value `overflow` shorthand\n  - Media query range syntax (e.g. `@media (width <= 100px)` or `@media (100px < width < 500px)`)\n  - Multi-value `display` property (e.g. `inline flex`)\n  - `system-ui` font family fallbacks\n- **CSS modules** – Lightning CSS supports compiling a subset of [CSS modules](https://github.com/css-modules/css-modules) features.\n  - Locally scoped class and id selectors\n  - Locally scoped custom identifiers, e.g. `@keyframes` names, grid lines/areas, `@counter-style` names, etc.\n  - Opt-in support for locally scoped CSS variables and other dashed identifiers.\n  - `:local()` and `:global()` selectors\n  - The `composes` property\n\n## Documentation\n\nLightning CSS can be used from [Parcel](https://parceljs.org), as a standalone library from JavaScript or Rust, using a standalone CLI, or wrapped as a plugin within any other tool.\n\n### From Node\n\nSee the [TypeScript definitions](https://github.com/parcel-bundler/lightningcss/blob/master/node/index.d.ts) for full API docs.\n\nHere is a simple example that compiles the input CSS for Safari 13.2, and minifies the output.\n\n```js\nconst css = require('lightningcss');\n\nlet {code, map} = css.transform({\n  filename: 'style.css',\n  code: Buffer.from('.foo { color: red }'),\n  minify: true,\n  sourceMap: true,\n  targets: {\n    // Semver versions are represented using a single 24-bit number, with one component per byte.\n    // e.g. to represent 13.2.0, the following could be used.\n    safari: (13 << 16) | (2 << 8)\n  }\n});\n```\n\nYou can also convert the results of running `browserslist` into targets which can be passed to Lightning CSS:\n\n```js\nconst browserslist = require('browserslist');\nconst css = require('lightningcss');\n\nlet targets = css.browserslistToTargets(browserslist('>= 0.25%'));\n```\n\nBundling is also possible by using the `bundle` API. This processes `@import` rules and inlines them. This API requires filesystem access, so it does not accept `code` directly via the API.\n\n```js\nlet {code, map} = css.bundle({\n  filename: 'style.css',\n  minify: true\n});\n```\n\nThe `bundleAsync` API is an asynchronous version of `bundle`, which also accepts a custom `resolver` object. This allows you to provide custom JavaScript functions for resolving `@import` specifiers to file paths, and reading files from the file system (or another source). The `read` and `resolve` functions are both optional, and may either return a string synchronously, or a Promise for asynchronous resolution.\n\n```js\nlet {code, map} = await css.bundleAsync({\n  filename: 'style.css',\n  minify: true,\n  resolver: {\n    read(filePath) {\n      return fs.readFileSync(filePath, 'utf8');\n    },\n    resolve(specifier, from) {\n      return path.resolve(path.dirname(from), specifier);\n    }\n  }\n});\n```\n\nNote that using a custom resolver can slow down bundling significantly, especially when reading files asynchronously. Use `readFileSync` rather than `readFile` if possible for better performance, or omit either of the methods if you don't need to override the default behavior.\n\n### From Rust\n\nSee the Rust API docs on [docs.rs](https://docs.rs/lightningcss).\n\n### With Parcel\n\nParcel includes Lightning CSS as the default CSS transformer. You should also add a `browserslist` property to your `package.json`, which defines the target browsers that your CSS will be compiled for.\n\nWhile Lightning CSS handles the most commonly used PostCSS plugins like `autoprefixer`, `postcss-preset-env`, and CSS modules, you may still need PostCSS for more custom plugins like TailwindCSS. If that's the case, your PostCSS config will be picked up automatically. You can remove the plugins listed above from your PostCSS config, and they'll be handled by Lightning CSS.\n\nYou can also configure Lightning CSS in the `package.json` in the root of your project. Currently, three options are supported: `drafts`, which can be used to enable CSS nesting and custom media queries, `pseudoClasses`, which allows replacing some pseudo classes like `:focus-visible` with normal classes that can be applied via JavaScript (e.g. polyfills), and `cssModules`, which enables CSS modules globally rather than only for files ending in `.module.css`, or accepts an options object.\n\n```json\n{\n  \"@parcel/transformer-css\": {\n    \"cssModules\": true,\n    \"drafts\": {\n      \"nesting\": true,\n      \"customMedia\": true\n    },\n    \"pseudoClasses\": {\n      \"focusVisible\": \"focus-ring\"\n    }\n  }\n}\n```\n\nSee the [Parcel docs](https://parceljs.org/languages/css) for more details.\n\n### From Deno or in browser\n\nThe `lightningcss-wasm` package can be used in Deno or directly in browsers. This uses a WebAssembly build of Lightning CSS. Use `TextEncoder` and `TextDecoder` convert code from a string to a typed array and back.\n\n```js\nimport init, {transform} from 'https://unpkg.com/lightningcss-wasm';\n\nawait init();\n\nlet {code, map} = transform({\n  filename: 'style.css',\n  code: new TextEncoder().encode('.foo { color: red }'),\n  minify: true,\n});\n\nconsole.log(new TextDecoder().decode(code));\n```\n\n### With webpack\n\ncss-minimizer-webpack-plugin has builtin support for Lightning CSS. Install Lightning CSS in your project, and configure the plugin as documented [in its README](https://github.com/webpack-contrib/css-minimizer-webpack-plugin#using-custom-minifier-lightningcss-previously-parcelcss).\n\n### From the CLI\n\nLightning CSS includes a standalone CLI that can be used to compile, minify, and bundle CSS files. It can be used when you only need to compile CSS, and don't need more advanced functionality from a larger build tool such as code splitting and support for other languages.\n\nTo use the CLI, install the `lightningcss-cli` package with an npm compatible package manager:\n\n```shell\nnpm install lightningcss-cli\n```\n\nThen, you can run the `lightningcss` command via `npx`, `yarn`, or by setting up a script in your package.json.\n\n```json\n{\n  \"scripts\": {\n    \"build\": \"lightningcss --minify --nesting --bundle --targets '>= 0.25%' --sourcemap input.css -o output.css\"\n  }\n}\n```\n\nTo see all of the available options, use the `--help` argument:\n\n```shell\nnpx lightningcss --help\n```\n\n### Error recovery\n\nBy default, Lightning CSS is strict, and will error when parsing an invalid rule or declaration. However, sometimes you may encounter a third party library that you can't easily modify, which unintentionally contains invalid syntax, or IE-specific hacks. In these cases, you can enable the `errorRecovery` option (or `--error-recovery` CLI flag). This will skip over invalid rules and declarations, omitting them in the output, and producing a warning instead of an error. You should also open an issue or PR to fix the issue in the library if possible.\n\n## Benchmarks\n\n<img width=\"680\" alt=\"performance and build size charts\" src=\"https://user-images.githubusercontent.com/19409/189022599-28246659-f94a-46a4-9de0-b6d17adb0e22.png#gh-light-mode-only\">\n<img width=\"680\" alt=\"performance and build size charts\" src=\"https://user-images.githubusercontent.com/19409/189022693-6956b044-422b-4f56-9628-d59c6f791095.png#gh-dark-mode-only\">\n\n```\n$ node bench.js bootstrap-4.css \ncssnano: 544.809ms\n159636 bytes\n\nesbuild: 17.199ms\n160332 bytes\n\nlightningcss: 4.16ms\n143091 bytes\n\n\n$ node bench.js animate.css\ncssnano: 283.105ms\n71723 bytes\n\nesbuild: 11.858ms\n72183 bytes\n\nlightningcss: 1.973ms\n23666 bytes\n\n\n$ node bench.js tailwind.css \ncssnano: 2.198s\n1925626 bytes\n\nesbuild: 107.668ms\n1961642 bytes\n\nlightningcss: 43.368ms\n1824130 bytes\n```\n\nFor more benchmarks comparing more tools and input, see [here](http://goalsmashers.github.io/css-minification-benchmark/). Note that some of the tools shown perform unsafe optimizations that may change the behavior of the original CSS in favor of smaller file size. Lightning CSS does not do this – the output CSS should always behave identically to the input. Keep this in mind when comparing file sizes between tools.\n",
    "licenseText": " Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\nmeans each individual or legal entity that creates, contributes to\nthe creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\nmeans the combination of the Contributions of others (if any) used\nby a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\nmeans Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\nmeans Source Code Form to which the initial Contributor has attached\nthe notice in Exhibit A, the Executable Form of such Source Code\nForm, and Modifications of such Source Code Form, in each case\nincluding portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\nmeans\n\n(a) that the initial Contributor has attached the notice described\nin Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\nversion 1.1 or earlier of the License, but not also under the\nterms of a Secondary License.\n\n1.6. \"Executable Form\"\nmeans any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\nmeans a work that combines Covered Software with other material, in\na separate file or files, that is not Covered Software.\n\n1.8. \"License\"\nmeans this document.\n\n1.9. \"Licensable\"\nmeans having the right to grant, to the maximum extent possible,\nwhether at the time of the initial grant or subsequently, any and\nall of the rights conveyed by this License.\n\n1.10. \"Modifications\"\nmeans any of the following:\n\n(a) any file in Source Code Form that results from an addition to,\ndeletion from, or modification of the contents of Covered\nSoftware; or\n\n(b) any new file in Source Code Form that contains any Covered\nSoftware.\n\n1.11. \"Patent Claims\" of a Contributor\nmeans any patent claim(s), including without limitation, method,\nprocess, and apparatus claims, in any patent Licensable by such\nContributor that would be infringed, but for the grant of the\nLicense, by the making, using, selling, offering for sale, having\nmade, import, or transfer of either its Contributions or its\nContributor Version.\n\n1.12. \"Secondary License\"\nmeans either the GNU General Public License, Version 2.0, the GNU\nLesser General Public License, Version 2.1, the GNU Affero General\nPublic License, Version 3.0, or any later versions of those\nlicenses.\n\n1.13. \"Source Code Form\"\nmeans the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\nmeans an individual or a legal entity exercising rights under this\nLicense. For legal entities, \"You\" includes any entity that\ncontrols, is controlled by, or is under common control with You. For\npurposes of this definition, \"control\" means (a) the power, direct\nor indirect, to cause the direction or management of such entity,\nwhether by contract or otherwise, or (b) ownership of more than\nfifty percent (50%) of the outstanding shares or beneficial\nownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\nLicensable by such Contributor to use, reproduce, make available,\nmodify, display, perform, distribute, and otherwise exploit its\nContributions, either on an unmodified basis, with Modifications, or\nas part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\nfor sale, have made, import, and otherwise transfer either its\nContributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\nor\n\n(b) for infringements caused by: (i) Your and any other third party's\nmodifications of Covered Software, or (ii) the combination of its\nContributions with other software (except as part of its Contributor\nVersion); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\nits Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\nForm, as described in Section 3.1, and You must inform recipients of\nthe Executable Form how they can obtain a copy of such Source Code\nForm by reasonable means in a timely manner, at a charge no more\nthan the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\nLicense, or sublicense it under different terms, provided that the\nlicense for the Executable Form does not attempt to limit or alter\nthe recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n* *\n* 6. Disclaimer of Warranty *\n* ------------------------- *\n* *\n* Covered Software is provided under this License on an \"as is\" *\n* basis, without warranty of any kind, either expressed, implied, or *\n* statutory, including, without limitation, warranties that the *\n* Covered Software is free of defects, merchantable, fit for a *\n* particular purpose or non-infringing. The entire risk as to the *\n* quality and performance of the Covered Software is with You. *\n* Should any Covered Software prove defective in any respect, You *\n* (not any Contributor) assume the cost of any necessary servicing, *\n* repair, or correction. This disclaimer of warranty constitutes an *\n* essential part of this License. No use of any Covered Software is *\n* authorized under this License except under this disclaimer. *\n* *\n************************************************************************\n\n************************************************************************\n* *\n* 7. Limitation of Liability *\n* -------------------------- *\n* *\n* Under no circumstances and under no legal theory, whether tort *\n* (including negligence), contract, or otherwise, shall any *\n* Contributor, or anyone who distributes Covered Software as *\n* permitted above, be liable to You for any direct, indirect, *\n* special, incidental, or consequential damages of any character *\n* including, without limitation, damages for lost profits, loss of *\n* goodwill, work stoppage, computer failure or malfunction, or any *\n* and all other commercial damages or losses, even if such party *\n* shall have been informed of the possibility of such damages. This *\n* limitation of liability shall not apply to liability for death or *\n* personal injury resulting from such party's negligence to the *\n* extent applicable law prohibits such limitation. Some *\n* jurisdictions do not allow the exclusion or limitation of *\n* incidental or consequential damages, so this exclusion and *\n* limitation may not apply to You. *\n* *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at https://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\nThis Source Code Form is \"Incompatible With Secondary Licenses\", as\ndefined by the Mozilla Public License, v. 2.0.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/lightningcss/-/lightningcss-1.16.0.tgz#4c8e4ef8133d54488d1482a115d3758259191c52",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/lightningcss/-/lightningcss-1.16.0.tgz",
    "hash": "4c8e4ef8133d54488d1482a115d3758259191c52",
    "integrity": "sha512-5+ZS9h+xeADcJTF2oRCT3yNZBlDYyOgQSdrWNBCqsIwm8ucKbF061OBVv/WHP4Zk8FToNhwFklk/hMuOngqsIg==",
    "registry": "npm",
    "packageName": "lightningcss",
    "cacheIntegrity": "sha512-5+ZS9h+xeADcJTF2oRCT3yNZBlDYyOgQSdrWNBCqsIwm8ucKbF061OBVv/WHP4Zk8FToNhwFklk/hMuOngqsIg== sha1-TI5O+BM9VEiNFIKhFdN1glkZHFI="
  },
  "registry": "npm",
  "hash": "4c8e4ef8133d54488d1482a115d3758259191c52"
}