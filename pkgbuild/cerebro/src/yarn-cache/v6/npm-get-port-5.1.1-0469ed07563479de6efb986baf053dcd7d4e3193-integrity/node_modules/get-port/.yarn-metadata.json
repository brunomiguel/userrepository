{
  "manifest": {
    "name": "get-port",
    "version": "5.1.1",
    "description": "Get an available port",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/get-port.git"
    },
    "funding": "https://github.com/sponsors/sindresorhus",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "engines": {
      "node": ">=8"
    },
    "scripts": {
      "test": "xo && ava && tsd"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "keywords": [
      "port",
      "find",
      "finder",
      "portfinder",
      "free",
      "available",
      "connection",
      "connect",
      "open",
      "net",
      "tcp",
      "scan",
      "random",
      "preferred",
      "chosen"
    ],
    "devDependencies": {
      "@types/node": "^12.12.21",
      "ava": "^2.4.0",
      "tsd": "^0.11.0",
      "xo": "^0.25.3"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-get-port-5.1.1-0469ed07563479de6efb986baf053dcd7d4e3193-integrity/node_modules/get-port/package.json",
    "readmeFilename": "readme.md",
    "readme": "# get-port [![Build Status](https://travis-ci.org/sindresorhus/get-port.svg?branch=master)](https://travis-ci.org/sindresorhus/get-port)\n\n> Get an available [TCP port](https://en.wikipedia.org/wiki/Port_(computer_networking))\n\n## Install\n\n```\n$ npm install get-port\n```\n\n## Usage\n\n```js\nconst getPort = require('get-port');\n\n(async () => {\n\tconsole.log(await getPort());\n\t//=> 51402\n})();\n```\n\nPass in a preferred port:\n\n```js\n(async () => {\n\tconsole.log(await getPort({port: 3000}));\n\t// Will use 3000 if available, otherwise fall back to a random port\n})();\n```\n\nPass in an array of preferred ports:\n\n```js\n(async () => {\n\tconsole.log(await getPort({port: [3000, 3001, 3002]}));\n\t// Will use any element in the preferred ports array if available, otherwise fall back to a random port\n})();\n```\n\nUse the `makeRange()` helper in case you need a port in a certain range:\n\n```js\n(async () => {\n\tconsole.log(await getPort({port: getPort.makeRange(3000, 3100)}));\n\t// Will use any port from 3000 to 3100, otherwise fall back to a random port\n})();\n```\n\n## API\n\n### getPort(options?)\n\nReturns a `Promise` for a port number.\n\n#### options\n\nType: `object`\n\n##### port\n\nType: `number | Iterable<number>`\n\nA preferred port or an iterable of preferred ports to use.\n\n##### host\n\nType: `string`\n\nThe host on which port resolution should be performed. Can be either an IPv4 or IPv6 address.\n\n### getPort.makeRange(from, to)\n\nMake a range of ports `from`...`to`.\n\nReturns an `Iterable` for ports in the given range.\n\n#### from\n\nType: `number`\n\nFirst port of the range. Must be in the range `1024`...`65535`.\n\n#### to\n\nType: `number`\n\nLast port of the range. Must be in the range `1024`...`65535` and must be greater than `from`.\n\n## Beware\n\nThere is a very tiny chance of a race condition if another process starts using the same port number as you in between the time you get the port number and you actually start using it.\n\nRace conditions in the same process are mitigated against by using a lightweight locking mechanism where a port will be held for a minimum of 15 seconds and a maximum of 30 seconds before being released again.\n\n## Related\n\n- [get-port-cli](https://github.com/sindresorhus/get-port-cli) - CLI for this module\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-get-port?utm_source=npm-get-port&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/get-port/-/get-port-5.1.1.tgz#0469ed07563479de6efb986baf053dcd7d4e3193",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/get-port/-/get-port-5.1.1.tgz",
    "hash": "0469ed07563479de6efb986baf053dcd7d4e3193",
    "integrity": "sha512-g/Q1aTSDOxFpchXC4i8ZWvxA1lnPqx/JHqcpIw0/LX9T8x/GBbi6YnlN5nhaKIFkT8oFsscUKgDJYxfwfS6QsQ==",
    "registry": "npm",
    "packageName": "get-port",
    "cacheIntegrity": "sha512-g/Q1aTSDOxFpchXC4i8ZWvxA1lnPqx/JHqcpIw0/LX9T8x/GBbi6YnlN5nhaKIFkT8oFsscUKgDJYxfwfS6QsQ== sha1-BGntB1Y0ed5u+5hrrwU9zX1OMZM="
  },
  "registry": "npm",
  "hash": "0469ed07563479de6efb986baf053dcd7d4e3193"
}