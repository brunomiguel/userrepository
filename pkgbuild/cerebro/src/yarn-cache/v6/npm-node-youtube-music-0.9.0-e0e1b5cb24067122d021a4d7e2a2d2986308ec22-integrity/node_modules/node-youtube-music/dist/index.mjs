var D=Object.defineProperty,W=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var w=Object.getOwnPropertySymbols;var j=Object.prototype.hasOwnProperty,_=Object.prototype.propertyIsEnumerable;var v=(e,t,r)=>t in e?D(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,d=(e,t)=>{for(var r in t||(t={}))j.call(t,r)&&v(e,r,t[r]);if(w)for(var r of w(t))_.call(t,r)&&v(e,r,t[r]);return e},p=(e,t)=>W(e,N(t));var b=(e,t,r)=>new Promise((s,n)=>{var l=o=>{try{a(r.next(o))}catch(i){n(i)}},u=o=>{try{a(r.throw(o))}catch(i){n(i)}},a=o=>o.done?s(o.value):Promise.resolve(o.value).then(l,u);a((r=r.apply(e,t)).next())});var Q=(r=>(r.REGULAR="regular",r.VERIFIED_ARTIST="BADGE_STYLE_TYPE_VERIFIED_ARTIST",r))(Q||{}),E=(s=>(s.ep="EP",s.album="Album",s.single="Single",s))(E||{}),L=(s=>(s.artist="MUSIC_PAGE_TYPE_ARTIST",s.album="MUSIC_PAGE_TYPE_ALBUM",s.playlist="MUSIC_PAGE_TYPE_PLAYLIST",s))(L||{});import z from"got";var x="MUSIC_EXPLICIT_BADGE",y=e=>{let t=e.split(":");return t.length===3?parseInt(t[0],10)*3600+parseInt(t[1],10)*60+parseInt(t[2],10):parseInt(t[0],10)*60+parseInt(t[1],10)},A=e=>{switch(e){case"Album":return"Album";case"EP":return"EP";default:return"Single"}},f=e=>{let t=[];if(e.forEach(r=>{r.navigationEndpoint&&r.navigationEndpoint.browseEndpoint.browseEndpointContextSupportedConfigs.browseEndpointContextMusicConfig.pageType==="MUSIC_PAGE_TYPE_ARTIST"&&t.push({name:r.text,id:r.navigationEndpoint.browseEndpoint.browseId})}),t.length===0){let r=e.findIndex(s=>s.text===" \u2022 ");r!==-1&&e.filter((s,n)=>n<r&&s.name!==" & ").forEach(s=>t.push({name:s.text}))}return t},T=e=>{var o;let t;try{t=e.musicResponsiveListItemRenderer.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].navigationEndpoint.watchEndpoint.videoId}catch(i){console.log("Couldn't parse youtube id",i)}let r;try{r=e.musicResponsiveListItemRenderer.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].text}catch(i){console.log("Couldn't parse title",i)}let s;try{s=f(e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs)}catch(i){console.log("Couldn't parse artist",i)}let n;try{let{length:i}=e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs;n=e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[i-3].text}catch(i){console.log("Couldn't parse album",i)}let l;try{l=(o=e.musicResponsiveListItemRenderer.thumbnail.musicThumbnailRenderer.thumbnail.thumbnails.pop())==null?void 0:o.url}catch(i){console.log("Couldn't parse thumbnailUrl",i)}let u;try{let i=e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs.length-1].text;u={label:i,totalSeconds:y(i)}}catch(i){console.log("Couldn't parse duration",i)}let a;try{a=e.musicResponsiveListItemRenderer.badges[0].musicInlineBadgeRenderer.icon.iconType===x}catch(i){a=!1}return{youtubeId:t,title:r,artists:s,album:n,thumbnailUrl:l,duration:u,isExplicit:a}},P=e=>{var o;let t;try{t=e.playlistPanelVideoRenderer.navigationEndpoint.watchEndpoint.videoId}catch(i){console.log("Couldn't parse youtube id",i)}let r;try{r=e.playlistPanelVideoRenderer.title.runs[0].text}catch(i){console.log("Couldn't parse title",i)}let s;try{s=f(e.playlistPanelVideoRenderer.longBylineText.runs)}catch(i){console.log("Couldn't parse artist",i)}let n;try{n=e.playlistPanelVideoRenderer.longBylineText.runs[2].text}catch(i){console.log("Couldn't parse album",i)}let l;try{l=e.playlistPanelVideoRenderer.badges[0].musicInlineBadgeRenderer.icon.iconType==="MUSIC_EXPLICIT_BADGE"}catch(i){l=!1}let u;try{u=(o=e.playlistPanelVideoRenderer.thumbnail.thumbnails.pop())==null?void 0:o.url}catch(i){console.log("Couldn't parse thumbnailUrl",i)}let a;try{a={label:e.playlistPanelVideoRenderer.lengthText.runs[0].text,totalSeconds:y(e.playlistPanelVideoRenderer.lengthText.runs[0].text)}}catch(i){console.log("Couldn't parse duration",i)}return{youtubeId:t,title:r,artists:s,isExplicit:l,album:n,thumbnailUrl:u,duration:a}},S=(e,t)=>{var u;let r;try{r=e.musicResponsiveListItemRenderer.navigationEndpoint.browseEndpoint.browseId}catch(a){console.log("Couldn't parse youtube id",a)}if(t&&e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[0].text!=="YouTube Music")return null;let s;try{s=e.musicResponsiveListItemRenderer.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].text}catch(a){console.log("Couldn't parse title",a)}let n;try{n=parseInt(e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[2].text.split(" ")[0],10)}catch(a){console.log("Couldn't parse artist",a)}let l;try{l=(u=e.musicResponsiveListItemRenderer.thumbnail.musicThumbnailRenderer.thumbnail.thumbnails.pop())==null?void 0:u.url}catch(a){console.log("Couldn't parse thumbnailUrl",a)}return{playlistId:r,title:s,totalSongs:n,thumbnailUrl:l}},M=e=>{var o,i;let t;try{t=e.musicResponsiveListItemRenderer.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].navigationEndpoint.watchEndpoint.videoId}catch(m){console.log("Couldn't parse youtube id",m)}let r;try{r=e.musicResponsiveListItemRenderer.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].text}catch(m){console.log("Couldn't parse title",m)}let s;try{s=f(e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs)}catch(m){console.log("Couldn't parse artist",m)}let n;try{n=e.musicResponsiveListItemRenderer.flexColumns[2].musicResponsiveListItemFlexColumnRenderer.text.runs[0].text}catch(m){console.log("Couldn't parse album",m)}let l;try{l=(o=e.musicResponsiveListItemRenderer.thumbnail.musicThumbnailRenderer.thumbnail.thumbnails.pop())==null?void 0:o.url}catch(m){console.log("Couldn't parse thumbnailUrl",m)}let u;try{u={label:e.musicResponsiveListItemRenderer.fixedColumns[0].musicResponsiveListItemFixedColumnRenderer.text.runs[0].text,totalSeconds:y(e.musicResponsiveListItemRenderer.fixedColumns[0].musicResponsiveListItemFixedColumnRenderer.text.runs[0].text)}}catch(m){console.log("Couldn't parse duration",m)}let a;try{a=((i=e.musicResponsiveListItemRenderer)==null?void 0:i.badges[0].musicInlineBadgeRenderer.icon.iconType)===x}catch(m){a=!1}return{youtubeId:t,title:r,artists:s,album:n,thumbnailUrl:l,duration:u,isExplicit:a}},F=e=>{var i,m,h;let t;try{t=e.musicResponsiveListItemRenderer.navigationEndpoint.browseEndpoint.browseId}catch(c){console.error("Couldn't parse albumId",c)}let r;try{r=e.musicResponsiveListItemRenderer.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].text}catch(c){console.error("Couldn't parse title",c)}let s;try{s=A(e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[0].text)}catch(c){console.error("Couldn't parse album type",c)}let n;try{n=(i=e.musicResponsiveListItemRenderer.thumbnail.musicThumbnailRenderer.thumbnail.thumbnails.pop())==null?void 0:i.url}catch(c){console.error("Couldn't parse thumbnailUrl",c)}let l;try{l=e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[2].text}catch(c){console.error("Couldn't parse artist",c)}let u;try{u=(m=e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[2].navigationEndpoint)==null?void 0:m.browseEndpoint.browseId}catch(c){console.error("Couldn't parse artistId",c)}let a;try{a=e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[4].text}catch(c){console.error("Couldn't parse year",c)}let o;try{o=((h=e.musicResponsiveListItemRenderer)==null?void 0:h.badges[0].musicInlineBadgeRenderer.icon.iconType)===x}catch(c){o=!1}return{albumId:t,title:r,type:s,thumbnailUrl:n,artist:l,artistId:u,year:a,isExplicit:o}},B=e=>{var n;let t;try{t=e.musicDetailHeaderRenderer.subtitle.runs[2].text}catch(l){console.error("Couldn't parse artist from album header",l)}let r;try{r=e.musicDetailHeaderRenderer.title.runs[0].text}catch(l){console.error("Couldn't parse title from album header",l)}let s;try{s=(n=e.musicDetailHeaderRenderer.thumbnail.croppedSquareThumbnailRenderer.thumbnail.thumbnails.pop())==null?void 0:n.url}catch(l){console.error("Couldn't parse thumbnailUrl from album header",l)}return{artist:t,album:r,thumbnailUrl:s}},U=e=>{var u,a;let t;try{t=e.musicResponsiveListItemRenderer.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].navigationEndpoint.watchEndpoint.videoId}catch(o){console.log("Couldn't parse youtube id",o)}let r;try{r=e.musicResponsiveListItemRenderer.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].text}catch(o){console.log("Couldn't parse title",o)}let s=[];try{if((u=e.musicResponsiveListItemRenderer.flexColumns[1])!=null&&u.musicResponsiveListItemFlexColumnRenderer.text.runs)for(let o=0;o<e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs.length;o+=2)s.push({name:e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[o].text})}catch(o){console.log("Couldn't parse artists",o)}let n;try{n={label:e.musicResponsiveListItemRenderer.fixedColumns[0].musicResponsiveListItemFixedColumnRenderer.text.runs[0].text,totalSeconds:y(e.musicResponsiveListItemRenderer.fixedColumns[0].musicResponsiveListItemFixedColumnRenderer.text.runs[0].text)}}catch(o){console.log("Couldn't parse duration",o)}let l;try{l=((a=e.musicResponsiveListItemRenderer)==null?void 0:a.badges[0].musicInlineBadgeRenderer.icon.iconType)===x}catch(o){l=!1}return{youtubeId:t,artists:s,title:r,duration:n,isExplicit:l}},G=e=>{var a,o;let t;try{t=e.musicTwoRowItemRenderer.title.runs[0].text}catch(i){console.error("Couldn't get title",i)}let r;try{r=A(e.musicTwoRowItemRenderer.subtitle.runs[0].text)}catch(i){console.error("Couldn't get album type",i)}let s;try{s=e.musicTwoRowItemRenderer.title.runs[0].navigationEndpoint.browseEndpoint.browseId}catch(i){console.error("Couldn't get albumId",i)}let n;try{n=(a=e.musicTwoRowItemRenderer.subtitle.runs.pop())==null?void 0:a.text}catch(i){console.error("Couldn't get year",i)}let l;try{l=e.musicTwoRowItemRenderer.subtitleBadges[0].musicInlineBadgeRenderer.icon.iconType===x}catch(i){l=!1}let u;try{u=(o=e.musicTwoRowItemRenderer.thumbnailRenderer.musicThumbnailRenderer.thumbnail.thumbnails.shift())==null?void 0:o.url}catch(i){console.error("Couldn't get thumbnailUrl",i)}return{title:t,type:r,albumId:s,year:n,thumbnailUrl:u,isExplicit:l}},J=e=>{var l;let t;try{t=e.musicTwoRowItemRenderer.title.runs[0].navigationEndpoint.browseEndpoint.browseId}catch(u){console.error("Couldn't get artistId",u)}let r;try{r=e.musicTwoRowItemRenderer.title.runs[0].text}catch(u){console.error("Couldn't get name",u)}let s;try{s=e.musicTwoRowItemRenderer.subtitle.runs[0].text;let u=s.split(" ");u.pop(),s=u.join(" ")}catch(u){console.error("Couldn't get subscribers",u)}let n;try{n=(l=e.musicTwoRowItemRenderer.thumbnailRenderer.musicThumbnailRenderer.thumbnail.thumbnails.pop())==null?void 0:l.url}catch(u){console.error("Couldn't get thumbnailUrl",u)}return{artistId:t,name:r,subscribers:s,thumbnailUrl:n}},V=(e,t)=>{var m,h;let r;try{r=e.header.musicImmersiveHeaderRenderer.title.runs[0].text}catch(c){console.error("Couldn't get artist name",c)}let s;try{s=e.header.musicImmersiveHeaderRenderer.description.runs[0].text}catch(c){console.error("Couldn't get artist description",c)}let n=[];try{e.header.musicImmersiveHeaderRenderer.thumbnail.musicThumbnailRenderer.thumbnail.thumbnails.forEach(R=>{n.push(R)})}catch(c){console.error("Couldn't get artist thumbnails",c)}let l;try{l=e.contents.singleColumnBrowseResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer.contents[0].musicShelfRenderer.title.runs[0].navigationEndpoint.browseEndpoint.browseId}catch(c){console.error("Couldn't get artist songPlaylistId",c)}let u=[],a=[];try{let{contents:c}=e.contents.singleColumnBrowseResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer;for(let R of c)(m=R.musicCarouselShelfRenderer)!=null&&m.contents&&((h=R.musicCarouselShelfRenderer.contents[0].musicTwoRowItemRenderer.title.runs[0].navigationEndpoint)==null?void 0:h.browseEndpoint.browseEndpointContextSupportedConfigs.browseEndpointContextMusicConfig.pageType)==="MUSIC_PAGE_TYPE_ALBUM"&&R.musicCarouselShelfRenderer.contents.forEach(I=>{let C=G(I);C.type==="Single"?a.push(C):u.push(C)})}catch(c){console.error("Couldn't get albums",c)}let o=[];try{let{contents:c}=e.contents.singleColumnBrowseResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer;for(let R=c.length-1;R>=0;R-=1)if(c[R].musicCarouselShelfRenderer){c[R].musicCarouselShelfRenderer.contents[0].musicTwoRowItemRenderer.title.runs[0].navigationEndpoint.browseEndpoint.browseEndpointContextSupportedConfigs.browseEndpointContextMusicConfig.pageType==="MUSIC_PAGE_TYPE_ARTIST"&&c[R].musicCarouselShelfRenderer.contents.forEach(I=>{o.push(J(I))});break}}catch(c){console.error("Couldn't get suggestedArtists",c)}let i;try{i=e.header.musicImmersiveHeaderRenderer.subscriptionButton.subscribeButtonRenderer.subscriberCountWithSubscribeText.runs[0].text}catch(c){console.error("Couldn't get subscribers",c)}return{artistId:t,name:r,description:s,albums:u,singles:a,thumbnails:n,songsPlaylistId:l,suggestedArtists:o,subscribers:i}},X=e=>{var l;let t;try{t=e.musicResponsiveListItemRenderer.flexColumns[0].musicResponsiveListItemFlexColumnRenderer.text.runs[0].text}catch(u){console.error("Couldn't get name",u)}let r;try{r=e.musicResponsiveListItemRenderer.navigationEndpoint.browseEndpoint.browseId}catch(u){console.error("Couldn't get artistId",u)}let s;try{s=(l=e.musicResponsiveListItemRenderer.thumbnail.musicThumbnailRenderer.thumbnail.thumbnails.pop())==null?void 0:l.url}catch(u){console.error("Couldn't get thumbnailUrl",u)}let n;try{n=e.musicResponsiveListItemRenderer.flexColumns[1].musicResponsiveListItemFlexColumnRenderer.text.runs[2].text}catch(u){console.error("Couldn't get subscribers",u)}return{name:t,artistId:r,thumbnailUrl:s,subscribers:n}};var g={body:{context:{capabilities:{},client:{clientName:"WEB_REMIX",clientVersion:"0.1"}}}};var Y=e=>{let{contents:t}=e.contents.tabbedSearchResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer.contents.pop().musicShelfRenderer,r=[];return t.forEach(s=>{try{let n=T(s);n&&r.push(n)}catch(n){console.error(n)}}),r};function ye(e){return b(this,null,function*(){let t=yield z.post("https://music.youtube.com/youtubei/v1/search?alt=json&key=AIzaSyC9XL3ZjWddXya6X74dJoCTL-WEYFDNX30",{json:p(d({},g.body),{params:"EgWKAQIIAWoKEAoQCRADEAQQBQ%3D%3D",query:e}),headers:{"User-Agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",origin:"https://music.youtube.com"}});try{return Y(JSON.parse(t.body))}catch(r){return[]}})}import O from"got";var H=e=>{let{contents:t}=e.contents.tabbedSearchResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer.contents.pop().musicShelfRenderer,r=[];return t.forEach(s=>{try{let n=F(s);n&&r.push(n)}catch(n){console.error(n)}}),r};function Ee(e){return b(this,null,function*(){let t=yield O.post("https://music.youtube.com/youtubei/v1/search?alt=json&key=AIzaSyC9XL3ZjWddXya6X74dJoCTL-WEYFDNX30",{json:p(d({},g.body),{params:"EgWKAQIYAWoKEAkQAxAEEAUQCg%3D%3D",query:e}),headers:{"User-Agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",origin:"https://music.youtube.com"}});try{return H(JSON.parse(t.body))}catch(r){return console.error(r),[]}})}import k from"got";var K=(e,t)=>{let{contents:r}=e.contents.tabbedSearchResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer.contents.pop().musicShelfRenderer,s=[];return r.forEach(n=>{try{let l=S(n,t);l&&s.push(l)}catch(l){console.error(l)}}),s};function Me(e,t){return b(this,null,function*(){var s;let r=yield k.post("https://music.youtube.com/youtubei/v1/search?alt=json&key=AIzaSyC9XL3ZjWddXya6X74dJoCTL-WEYFDNX30",{json:p(d({},g.body),{params:"EgWKAQIoAWoKEAoQAxAEEAUQCQ%3D%3D",query:e}),headers:{"User-Agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",origin:"https://music.youtube.com"}});try{return K(JSON.parse(r.body),(s=t==null?void 0:t.onlyOfficialPlaylists)!=null?s:!1)}catch(n){return console.error(n),[]}})}import Z from"got";var q=e=>{let{contents:t}=e.contents.singleColumnMusicWatchNextResultsRenderer.tabbedRenderer.watchNextTabbedResultsRenderer.tabs[0].tabRenderer.content.musicQueueRenderer.content.playlistPanelRenderer,r=[];return t.forEach(s=>{try{let n=P(s);n&&r.push(n)}catch(n){console.error(n)}}),r};function De(e){return b(this,null,function*(){let t=yield Z.post("https://music.youtube.com/youtubei/v1/next",{json:p(d({},g.body),{enablePersistentPlaylistPanel:!0,isAudioOnly:!0,params:"mgMDCNgE",playerParams:"igMDCNgE",tunerSettingValue:"AUTOMIX_SETTING_NORMAL",playlistId:`RDAMVM${e}`,videoId:e}),searchParams:{alt:"json",key:"AIzaSyC9XL3ZjWddXya6X74dJoCTL-WEYFDNX30"},headers:{"User-Agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",origin:"https://music.youtube.com"}});try{return q(JSON.parse(t.body))}catch(r){return[]}})}import $ from"got";var ee=e=>{let{contents:t}=e.contents.singleColumnBrowseResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer.contents[0].musicShelfRenderer,r=[],{thumbnailUrl:s,artist:n,album:l}=B(e.header);return t.forEach(u=>{var a;try{let o=U(u);o&&(o.album=l,((a=o.artists)==null?void 0:a.length)===0&&(o.artists=[{name:n}]),o.thumbnailUrl=s,r.push(o))}catch(o){console.error(o)}}),r};function Ge(e){return b(this,null,function*(){let t=yield $.post("https://music.youtube.com/youtubei/v1/browse?alt=json&key=AIzaSyC9XL3ZjWddXya6X74dJoCTL-WEYFDNX30",{json:p(d({},g.body),{browseId:e}),headers:{"User-Agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",origin:"https://music.youtube.com"}});try{return ee(JSON.parse(t.body))}catch(r){return console.error(r),[]}})}import te from"got";var re=e=>{let{contents:t}=e.contents.singleColumnBrowseResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer.contents[0].musicPlaylistShelfRenderer,r=[];return t.forEach(s=>{try{let n=M(s);n&&r.push(n)}catch(n){console.error(n)}}),r};function ke(e){return b(this,null,function*(){let t=yield te.post("https://music.youtube.com/youtubei/v1/browse?alt=json&key=AIzaSyC9XL3ZjWddXya6X74dJoCTL-WEYFDNX30",{json:p(d({},g.body),{browseId:e}),headers:{"User-Agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)",origin:"https://music.youtube.com"}});try{return re(JSON.parse(t.body))}catch(r){return console.error(r),[]}})}import se from"got";var ne=e=>{let{contents:t}=e.contents.tabbedSearchResultsRenderer.tabs[0].tabRenderer.content.sectionListRenderer.contents.pop().musicShelfRenderer,r=[];return t.forEach(s=>{try{let n=X(s);n&&r.push(n)}catch(n){console.error(n)}}),r};function tt(e,t){return b(this,null,function*(){var s;let r=yield se.post("https://music.youtube.com/youtubei/v1/search?alt=json&key=AIzaSyC9XL3ZjWddXya6X74dJoCTL-WEYFDNX30",{json:p(d({},g.body),{params:"EgWKAQIgAWoKEAMQBBAJEAoQBQ%3D%3D",query:e}),headers:{"User-Agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","Accept-Language":(s=t==null?void 0:t.lang)!=null?s:"en",origin:"https://music.youtube.com"}});try{return ne(JSON.parse(r.body))}catch(n){return console.error(n),[]}})}import ie from"got";function lt(e,t){return b(this,null,function*(){var s;let r=yield ie.post("https://music.youtube.com/youtubei/v1/browse?key=AIzaSyC9XL3ZjWddXya6X74dJoCTL-WEYFDNX30",{json:p(d({},g.body),{browseId:e}),headers:{"User-Agent":"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)","Accept-Language":(s=t==null?void 0:t.lang)!=null?s:"en",origin:"https://music.youtube.com"}});try{return V(JSON.parse(r.body),e)}catch(n){return console.error(n),{}}})}export{Q as AccountType,E as AlbumType,L as PageType,lt as getArtist,De as getSuggestions,Ge as listMusicsFromAlbum,ke as listMusicsFromPlaylist,ne as parseArtistsSearchBody,q as parseGetSuggestionsBody,ee as parseListMusicsFromAlbumBody,re as parseListMusicsFromPlaylistBody,H as parseSearchAlbumsBody,Y as parseSearchMusicsBody,K as parseSearchPlaylistsBody,Ee as searchAlbums,tt as searchArtists,ye as searchMusics,Me as searchPlaylists};
