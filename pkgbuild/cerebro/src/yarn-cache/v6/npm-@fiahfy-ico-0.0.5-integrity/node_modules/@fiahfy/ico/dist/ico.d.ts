/// <reference types="node" />
import { IcoFileHeader } from './ico-file-header';
import { IcoInfoHeader } from './ico-info-header';
import { IcoImage } from './ico-image';
export declare class Ico {
    static readonly supportedIconSizes: number[];
    private _fileHeader;
    private _infoHeaders;
    private _images;
    constructor(fileHeader?: IcoFileHeader, infoHeaders?: IcoInfoHeader[], images?: IcoImage[]);
    /**
     * Create ICO from the icon buffer.
     * @param buffer The ICO icon buffer.
     */
    static from(buffer: Buffer): Ico;
    get fileHeader(): IcoFileHeader;
    get infoHeaders(): ReadonlyArray<IcoInfoHeader>;
    get images(): ReadonlyArray<IcoImage>;
    set images(images: ReadonlyArray<IcoImage>);
    get data(): Buffer;
    /**
     * Adds ICO image at the end.
     * @param image The ICO Image to append.
     */
    append(image: IcoImage): void;
    /**
     * Inserts ICO image at the specified position.
     * @param image The ICO Image to insert.
     * @param index The position at which to insert the ICO Image.
     */
    insert(image: IcoImage, index: number): void;
    /**
     * Removes ICO image at the specified position.
     * @param index The position of the ICO Image to remove.
     */
    remove(index: number): void;
}
