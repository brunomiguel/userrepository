{
  "manifest": {
    "name": "@fiahfy/ico",
    "description": "ICO file format parser and builder",
    "version": "0.0.5",
    "author": {
      "name": "fiahfy",
      "email": "d.fiahfy@gmail.com",
      "url": "https://fiahfy.github.io/"
    },
    "bugs": {
      "url": "https://github.com/fiahfy/ico/issues"
    },
    "dependencies": {
      "pngjs": "^6.0.0"
    },
    "devDependencies": {
      "@fiahfy/eslint-config": "^0.0.11",
      "@types/jest": "^26.0.19",
      "@types/node": "^14.14.16",
      "@types/pngjs": "^3.4.2",
      "eslint": "^7.16.0",
      "jest": "^26.6.3",
      "prettier": "^2.2.1",
      "ts-jest": "^26.4.4",
      "typescript": "^4.1.3"
    },
    "engines": {
      "node": ">=8"
    },
    "files": [
      "dist"
    ],
    "homepage": "https://github.com/fiahfy/ico",
    "keywords": [
      "builder",
      "ico",
      "parser"
    ],
    "license": "MIT",
    "main": "dist/index.js",
    "publishConfig": {
      "access": "public"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/fiahfy/ico.git"
    },
    "scripts": {
      "build": "tsc",
      "dev": "tsc -w",
      "lint": "npm run lint:eslint && npm run lint:prettier",
      "lint:eslint": "eslint -f codeframe --ext .js,.ts --ignore-path .gitignore .",
      "lint:prettier": "prettier -c --ignore-path .gitignore **/*.{js,ts}",
      "test": "npm run lint && jest"
    },
    "types": "dist/index.d.js",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@fiahfy-ico-0.0.5-integrity/node_modules/@fiahfy/ico/package.json",
    "readmeFilename": "README.md",
    "readme": "<!-- markdownlint-disable MD024 -->\n\n# ico\n\n![badge](https://github.com/fiahfy/ico/workflows/Node.js%20Package/badge.svg)\n\n> [ICO file format](<https://en.wikipedia.org/wiki/ICO_(file_format)>) parser and builder.\n\n## Installation\n\n```bash\nnpm install @fiahfy/ico\n```\n\n## Usage\n\n### Parsing\n\n```js\nimport fs from 'fs'\nimport { Ico } from '@fiahfy/ico'\n\nconst buf = fs.readFileSync('icon.ico')\nconst ico = Ico.from(buf)\nconsole.log(ico.fileHeader) // IcoFileHeader { reserved: 0, type: 1, count: 7 }\nconsole.log(ico.infoHeaders[0]) // IcoInfoHeader { width: 16, height: 16, ... }\n```\n\n### Building\n\n```js\nimport fs from 'fs'\nimport { Ico, IcoImage } from '@fiahfy/ico'\n\nconst ico = new Ico()\nlet buf\n\nbuf = fs.readFileSync('128x128.png')\nimage = IcoImage.fromPNG(buf)\nico.append(image)\n\nbuf = fs.readFileSync('256x256.png')\nimage = IcoImage.fromPNG(buf)\nico.append(image)\n\n/* Some other PNG files */\n\nfs.writeFileSync('icon.ico', ico.data)\n```\n\n## API\n\n### Class: Ico\n\n#### static from(buffer)\n\nCreate ICO from the icon buffer.\n\n##### buffer\n\nType: `Buffer`\n\nThe ICO icon buffer.\n\n#### append(image)\n\nAdds ICO image at the end.\n\n##### image\n\nType: `IcoImage`\n\nThe ICO Image to append.\n\n#### insert(image, index)\n\nInserts ICO image at the specified position.\n\n##### image\n\nType: `IcoImage`\n\nThe ICO Image to insert.\n\n##### index\n\nType: `number`\n\nThe position at which to insert the ICO Image.\n\n#### remove(index)\n\nRemoves ICO image at the specified position.\n\n##### index\n\nType: `number`\n\nThe position of the ICO Image to remove.\n\n#### fileHeader\n\nType: `IcoFileHeader`\n\nReturn the file header on the ICO.\n\n#### infoHeaders\n\nType: `IcoInfoHeader[]`\n\nReturn the ICO info header on the ICO.\n\n#### images\n\nType: `IcoImage[]`\n\nReturn the ICO images on the ICO.\n\n#### data\n\nType: `Buffer`\n\nReturn the ICO buffer.\n\n### Class: IcoImage\n\n#### static from(buffer)\n\nCreate ICO image from the buffer.\n\n##### buffer\n\nType: `Buffer`\n\nThe ICO image buffer.\n\n#### static fromPNG(buffer)\n\nCreate ICO Image from the PNG image buffer.\n\n##### buffer\n\nType: `Buffer`\n\nThe PNG image buffer.\n\n### Class: IcoInfoHeader\n\n#### static from(buffer)\n\nCreate ICO info header from the buffer.\n\n##### buffer\n\nType: `Buffer`\n\nThe ICO info header buffer.\n\n### Class: IcoFileHeader\n\n#### static from(buffer)\n\nCreate ICO file header from the buffer.\n\n##### buffer\n\nType: `Buffer`\n\nThe ICO file header buffer.\n\n## Specifications\n\n### Supported Size\n\n| Size    |\n| ------- |\n| 16x16   |\n| 24x24   |\n| 32x32   |\n| 48x48   |\n| 64x64   |\n| 128x128 |\n| 256x256 |\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 fiahfy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@fiahfy/ico/-/ico-0.0.5.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@fiahfy/ico/-/ico-0.0.5.tgz",
    "hash": "",
    "integrity": "sha512-caB3sEGMcPQUmlid4hAlrDBo82nsXER8xLakPiX6IhoVO9MZg0Sa2y6pQpWPsqVt6tdm8ZE7OhkgcaSTeWFN2Q==",
    "registry": "npm",
    "packageName": "@fiahfy/ico",
    "cacheIntegrity": "sha512-caB3sEGMcPQUmlid4hAlrDBo82nsXER8xLakPiX6IhoVO9MZg0Sa2y6pQpWPsqVt6tdm8ZE7OhkgcaSTeWFN2Q== sha1-OEMoQeZ3qTpgxDH4JlXEVipqRZQ="
  },
  "registry": "npm",
  "hash": "71a077b0418c70f4149a589de21025ac3068f369ec5c447cc4b6a43e25fa221a153bd31983449adb2ea942958fb2a56dead766f1913b3a192071a49379614dd9"
}