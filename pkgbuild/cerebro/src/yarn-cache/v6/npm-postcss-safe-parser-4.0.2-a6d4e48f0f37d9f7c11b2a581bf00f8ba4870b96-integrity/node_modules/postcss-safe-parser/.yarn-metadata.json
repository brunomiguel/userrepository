{
  "manifest": {
    "name": "postcss-safe-parser",
    "version": "4.0.2",
    "description": "Fault-tolerant CSS parser for PostCSS",
    "keywords": [
      "css",
      "postcss",
      "postcss-syntax",
      "parser",
      "fault tolerant"
    ],
    "scripts": {
      "clean": "del-cli build/ lib/*.js",
      "build": "yarn clean && gulp build",
      "test": "gulp build && eslint-ci . && jest && ./test/integration.js"
    },
    "author": {
      "name": "Andrey Sitnik",
      "email": "andrey@sitnik.ru"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/postcss/postcss-safe-parser.git"
    },
    "engines": {
      "node": ">=6.0.0"
    },
    "dependencies": {
      "postcss": "^7.0.26"
    },
    "devDependencies": {
      "@babel/core": "^7.8.4",
      "@babel/preset-env": "^7.8.4",
      "@logux/eslint-config": "^35.0.4",
      "babel-plugin-add-module-exports": "^1.0.2",
      "ci-job-number": "^0.3.1",
      "del-cli": "^3.0.0",
      "eslint": "^6.8.0",
      "eslint-ci": "^1.0.0",
      "eslint-config-standard": "^14.1.0",
      "eslint-plugin-es5": "^1.5.0",
      "eslint-plugin-import": "^2.20.1",
      "eslint-plugin-jest": "^23.6.0",
      "eslint-plugin-node": "^11.0.0",
      "eslint-plugin-prefer-let": "^1.0.1",
      "eslint-plugin-promise": "^4.2.1",
      "eslint-plugin-security": "^1.4.0",
      "eslint-plugin-standard": "^4.0.1",
      "eslint-plugin-unicorn": "^16.0.0",
      "gulp": "^4.0.2",
      "gulp-babel": "^8.0.0",
      "gulp-sourcemaps": "^2.6.5",
      "husky": "^4.2.1",
      "jest": "^25.1.0",
      "lint-staged": "^10.0.7",
      "postcss-parser-tests": "^6.5.0",
      "pre-commit": "^1.1.3"
    },
    "eslintConfig": {
      "extends": "@logux/eslint-config/node",
      "overrides": [
        {
          "files": [
            "gulpfile.js"
          ],
          "rules": {
            "node/no-unpublished-require": "off",
            "global-require": "off"
          }
        }
      ]
    },
    "eslintIgnore": [
      "build/",
      "lib/*.js"
    ],
    "jest": {
      "testEnvironment": "node",
      "modulePathIgnorePatterns": [
        "<rootDir>/build"
      ]
    },
    "babel": {
      "presets": [
        [
          "@babel/env",
          {
            "loose": true
          }
        ]
      ],
      "plugins": [
        "add-module-exports"
      ]
    },
    "main": "lib/safe-parse",
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "lint-staged": {
      "gulpfile.js": "eslint",
      "test/*.js": "eslint",
      "lib/*.es6": "eslint"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-postcss-safe-parser-4.0.2-a6d4e48f0f37d9f7c11b2a581bf00f8ba4870b96-integrity/node_modules/postcss-safe-parser/package.json",
    "readmeFilename": "README.md",
    "readme": "# PostCSS Safe Parser [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n     title=\"Philosopher’s stone, logo of PostCSS\"\n     src=\"http://postcss.github.io/postcss/logo.svg\">\n\nA fault-tolerant CSS parser for [PostCSS], which will find & fix syntax errors,\ncapable of parsing any input. It is useful for:\n\n* Parse legacy code with many hacks. For example, it can parse all examples\n  from [Browserhacks].\n* Works with demo tools with live input like [Autoprefixer demo].\n\n[Autoprefixer demo]: http://simevidas.jsbin.com/gufoko/quiet\n[Browserhacks]:      http://browserhacks.com/\n[PostCSS]:           https://github.com/postcss/postcss\n[ci-img]:            https://img.shields.io/travis/postcss/postcss-safe-parser.svg\n[ci]:                https://travis-ci.org/postcss/postcss-safe-parser\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Usage\n\n```js\nvar safe   = require('postcss-safe-parser');\nvar badCss = 'a {';\n\npostcss(plugins).process(badCss, { parser: safe }).then(function (result) {\n    result.css //= 'a {}'\n});\n```\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright 2013 Andrey Sitnik <andrey@sitnik.ru>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-safe-parser/-/postcss-safe-parser-4.0.2.tgz#a6d4e48f0f37d9f7c11b2a581bf00f8ba4870b96",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-safe-parser/-/postcss-safe-parser-4.0.2.tgz",
    "hash": "a6d4e48f0f37d9f7c11b2a581bf00f8ba4870b96",
    "integrity": "sha512-Uw6ekxSWNLCPesSv/cmqf2bY/77z11O7jZGPax3ycZMFU/oi2DMH9i89AdHc1tRwFg/arFoEwX0IS3LCUxJh1g==",
    "registry": "npm",
    "packageName": "postcss-safe-parser",
    "cacheIntegrity": "sha512-Uw6ekxSWNLCPesSv/cmqf2bY/77z11O7jZGPax3ycZMFU/oi2DMH9i89AdHc1tRwFg/arFoEwX0IS3LCUxJh1g== sha1-ptTkjw832ffBGypYG/APi6SHC5Y="
  },
  "registry": "npm",
  "hash": "a6d4e48f0f37d9f7c11b2a581bf00f8ba4870b96"
}