{
  "manifest": {
    "name": "last-call-webpack-plugin",
    "version": "3.0.0",
    "author": {
      "name": "Nuno Rodrigues"
    },
    "description": "A Webpack plugin that allows to transform \\ modify assets just before Webpack emits them.",
    "dependencies": {
      "lodash": "^4.17.5",
      "webpack-sources": "^1.1.0"
    },
    "main": "src/index.js",
    "homepage": "http://github.com/NMFR/last-call-webpack-plugin",
    "repository": {
      "type": "git",
      "url": "http://github.com/NMFR/last-call-webpack-plugin.git"
    },
    "keywords": [
      "transform",
      "modify",
      "manipulate",
      "optimize",
      "prefix",
      "sufix",
      "webpack",
      "assets"
    ],
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-last-call-webpack-plugin-3.0.0-9742df0e10e3cf46e5c0381c2de90d3a7a2d7555-integrity/node_modules/last-call-webpack-plugin/package.json",
    "readmeFilename": "README.md",
    "readme": "# Last Call Webpack Plugin\n\nA Webpack plugin that allows you to transform \\ modify assets just before Webpack emits them.\n\n## What does the plugin do?\n\nIt allows you to transform \\ modify Webpack assets just before Webpack emits them (writes them to files or memory in case you are using something like Webpack dev server).\n\nIt can be used for example to:\n* Prefix a ``` /* Author: John Doe */ ``` comment on all the .js files Webpack generates.\n* Run some final optimization on all .css files Webpack generates.\n\n## Installation:\n\nUsing npm:\n```shell\n$ npm install --save-dev last-call-webpack-plugin\n```\n\n> :warning: For webpack v3 or below please use `last-call-webpack-plugin@v2.1.2`. The `last-call-webpack-plugin@v3.0.0` version and above supports webpack v4.\n\n## Configuration:\n\nThe plugin can receive the following options:\n* assetProcessors: An Array of objects that describe asset processors:\n  * regExp: A regular expression to match the asset name that the processor handles.\n  * processor: A function with the signature of ``` function(assetName, webpackAssetObject, assets) ``` that returns a Promise. If the Promise returns a result this result will replace the assets content.\n  * phase: The webpack compilation phase that at which the processor should be called. Default value is `compilation.optimize-assets`. Can be one of the following values:\n    * `compilation.optimize-chunk-assets`\n    * `compilation.optimize-assets`\n    * `emit`\n* canPrint: A boolean indicating if the plugin can print messages to the console, defaults to `true`.\n\nNote: An environment supporting Promises or a Promise polyfill is needed for this plugin to be used.\n\n## Example:\n\n``` javascript\nvar cssnano = require('cssnano');\nvar LastCallWebpackPlugin = require('last-call-webpack-plugin');\nmodule.exports = {\n  module: {\n    loaders: [\n      { test: /\\.css$/, loader: ExtractTextPlugin.extract(\"style-loader\", \"css-loader\") }\n    ]\n  },\n  plugins: [\n    new ExtractTextPlugin(\"styles.css\"),\n    new LastCallWebpackPlugin({\n      assetProcessors: [\n        {\n          regExp:  /\\.js$/,\n          processor: (assetName, asset) => Promise.resolve('// Author: John Doe \\n' + asset.source())\n        }, {\n          regExp:  /\\.css$/,\n          processor: (assetName, asset) => cssnano.process(asset.source())\n            .then(r => r.css)\n        }\n      ],\n      canPrint: true\n    })\n\t]\n}\n```\n\n## Assets manipulation\n\nThe `processor` method is supplied an `assets` object that allows asset manipulation via the `setAsset(assetName, assetValue)` method. If `assetValue` is null the asset will be deleted. This object can be used to generate aditional assets (like source maps) or rename the an asset (create a new asset and delete the current one).\n\nExample:\n\n``` javascript\nvar cssnano = require('cssnano');\nvar LastCallWebpackPlugin = require('last-call-webpack-plugin');\nmodule.exports = {\n  module: {\n    loaders: [\n      { test: /\\.css$/, loader: ExtractTextPlugin.extract(\"style-loader\", \"css-loader\") }\n    ]\n  },\n  plugins: [\n    new ExtractTextPlugin(\"styles.css\"),\n    new LastCallWebpackPlugin({\n      assetProcessors: [{\n        regExp:  /\\.css$/,\n        processor: (assetName, asset, assets) => {\n          assets.setAsset(assetName + '.map', null); // Delete the <assetName>.map asset.\n          assets.setAsset(assetName + '.log', 'All OK'); // Add the <assetName>.log asset with the content 'All OK'.\n          return cssnano\n            .process(asset.source())\n            .then(r => r.css)\n        }\n      }],\n      canPrint: true\n    })\n\t]\n}\n```\n\nThe `assets` object also has a `getAsset(assetName)` method to get the content of an asset (returns undefined in case the asset does not exist).\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Nuno Rodrigues\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/last-call-webpack-plugin/-/last-call-webpack-plugin-3.0.0.tgz#9742df0e10e3cf46e5c0381c2de90d3a7a2d7555",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/last-call-webpack-plugin/-/last-call-webpack-plugin-3.0.0.tgz",
    "hash": "9742df0e10e3cf46e5c0381c2de90d3a7a2d7555",
    "integrity": "sha512-7KI2l2GIZa9p2spzPIVZBYyNKkN+e/SQPpnjlTiPhdbDW3F86tdKKELxKpzJ5sgU19wQWsACULZmpTPYHeWO5w==",
    "registry": "npm",
    "packageName": "last-call-webpack-plugin",
    "cacheIntegrity": "sha512-7KI2l2GIZa9p2spzPIVZBYyNKkN+e/SQPpnjlTiPhdbDW3F86tdKKELxKpzJ5sgU19wQWsACULZmpTPYHeWO5w== sha1-l0LfDhDjz0blwDgcLekNOnotdVU="
  },
  "registry": "npm",
  "hash": "9742df0e10e3cf46e5c0381c2de90d3a7a2d7555"
}