{
  "manifest": {
    "name": "fastest-levenshtein",
    "version": "1.0.12",
    "description": "Fastest Levenshtein distance implementation in JS.",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ka-weihe/fastest-levenshtein.git"
    },
    "keywords": [
      "levenshtein",
      "distance",
      "fast",
      "fastest",
      "edit",
      "string",
      "similarity",
      "algorithm",
      "match",
      "comparison",
      "fuzzy",
      "search",
      "string",
      "matching",
      "similar",
      "node",
      "difference"
    ],
    "author": {
      "name": "Kasper U. Weihe"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/ka-weihe/fastest-levenshtein/issues"
    },
    "homepage": "https://github.com/ka-weihe/fastest-levenshtein#README",
    "scripts": {
      "test": "jest",
      "test:coverage": "jest --coverage",
      "test:coveralls": "jest --coverage --coverageReporters=text-lcov | coveralls"
    },
    "devDependencies": {
      "benchmark": "^2.1.4",
      "coveralls": "^3.1.0",
      "eslint": "^7.5.0",
      "eslint-config-airbnb": "^18.2.0",
      "eslint-config-airbnb-base": "^14.2.0",
      "eslint-config-node": "^4.1.0",
      "eslint-config-prettier": "^6.11.0",
      "eslint-plugin-import": "^2.22.0",
      "eslint-plugin-jsx-a11y": "^6.3.1",
      "eslint-plugin-node": "^11.1.0",
      "eslint-plugin-prettier": "^3.1.4",
      "eslint-plugin-react": "^7.20.3",
      "eslint-plugin-react-hooks": "^4.0.0",
      "fast-levenshtein": "^2.0.6",
      "jest": "^26.1.0",
      "js-levenshtein": "^1.1.6",
      "leven": "^3.1.0",
      "natural": "^2.1.5",
      "prettier": "^2.0.5",
      "talisman": "^1.1.2",
      "levenshtein-edit-distance": "^2.0.5"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-fastest-levenshtein-1.0.12-9990f7d3a88cc5a9ffd1f1745745251700d497e2-integrity/node_modules/fastest-levenshtein/package.json",
    "readmeFilename": "README.md",
    "readme": "# fastest-levenshtein :rocket: \n> Fastest JS implemenation of [Levenshtein distance](https://en.wikipedia.org/wiki/Levenshtein_distance).<br>\n> Measure the difference between two strings.\n\n[![Build Status](https://travis-ci.org/ka-weihe/node-levenshtein.svg?branch=master)](https://travis-ci.org/ka-weihe/node-levenshtein)\n[![Coverage Status](https://coveralls.io/repos/github/ka-weihe/node-levenshtein/badge.svg?branch=master)](https://coveralls.io/github/ka-weihe/node-levenshtein?branch=master)\n```\n$ npm i fastest-levenshtein\n```\n\n## Usage\n### Node\n```javascript\nconst {distance, closest} = require('fastest-levenshtein')\n\n// Print levenshtein-distance between 'fast' and 'faster' \nconsole.log(distance('fast', 'faster'))\n//=> 2\n\n// Print string from array with lowest edit-distance to 'fast'\nconsole.log(closest('fast', ['slow', 'faster', 'fastest']))\n//=> 'faster'\n```\n\n### Deno\n```javascript\nimport {distance, closest} from 'https://deno.land/x/fastest_levenshtein/mod.ts'\n\n// Print levenshtein-distance between 'fast' and 'faster' \nconsole.log(distance('fast', 'faster'))\n//=> 2\n\n// Print string from array with lowest edit-distance to 'fast'\nconsole.log(closest('fast', ['slow', 'faster', 'fastest']))\n//=> 'faster'\n```\n\n## Benchmark\nI generated 500 pairs of strings with length N. I measured the ops/sec each library achieves to process all the given pairs. Higher is better. `fastest-levenshtein` is a lot faster in all cases. \n\n| Test Target               | N=4   | N=8   | N=16  | N=32 | N=64  | N=128 | N=256 | N=512 | N=1024 |\n|---------------------------|-------|-------|-------|------|-------|-------|-------|-------|--------|\n| fastest-levenshtein       | 44423 | 23702 | 10764 | 4595 | 1049  | 291.5 | 86.64 | 22.24 | 5.473  |\n| js-levenshtein            | 21261 | 10030 | 2939  | 824  | 223   | 57.62 | 14.77 | 3.717 | 0.934  |\n| leven                     | 19688 | 6884  | 1606  | 436  | 117   | 30.34 | 7.604 | 1.929 | 0.478  |\n| fast-levenshtein          | 18577 | 6112  | 1265  | 345  | 89.41 | 22.70 | 5.676 | 1.428 | 0.348  |\n| levenshtein-edit-distance | 22968 | 7445  | 1493  | 409  | 109   | 28.07 | 7.095 | 1.789 | 0.445  |\n\n### Relative Performance\nThis image shows the relative performance between `fastest-levenshtein` and `js-levenshtein` (the 2nd fastest). `fastest-levenshtein` is always a lot faster. x-axis shows \"times faster\".\n\n![Benchmark](/images/relaperf.png)\n\n## License\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Kasper Unn Weihe\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/fastest-levenshtein/-/fastest-levenshtein-1.0.12.tgz#9990f7d3a88cc5a9ffd1f1745745251700d497e2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/fastest-levenshtein/-/fastest-levenshtein-1.0.12.tgz",
    "hash": "9990f7d3a88cc5a9ffd1f1745745251700d497e2",
    "integrity": "sha512-On2N+BpYJ15xIC974QNVuYGMOlEVt4s0EOI3wwMqOmK1fdDY+FN/zltPV8vosq4ad4c/gJ1KHScUn/6AWIgiow==",
    "registry": "npm",
    "packageName": "fastest-levenshtein",
    "cacheIntegrity": "sha512-On2N+BpYJ15xIC974QNVuYGMOlEVt4s0EOI3wwMqOmK1fdDY+FN/zltPV8vosq4ad4c/gJ1KHScUn/6AWIgiow== sha1-mZD306iMxan/0fF0V0UlFwDUl+I="
  },
  "registry": "npm",
  "hash": "9990f7d3a88cc5a9ffd1f1745745251700d497e2"
}