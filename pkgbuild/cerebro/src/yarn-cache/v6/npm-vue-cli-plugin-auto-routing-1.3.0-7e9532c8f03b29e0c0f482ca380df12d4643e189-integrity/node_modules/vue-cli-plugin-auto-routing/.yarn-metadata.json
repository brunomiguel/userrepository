{
  "manifest": {
    "name": "vue-cli-plugin-auto-routing",
    "version": "1.3.0",
    "description": "Vue CLI plugin that provides auto routing feature",
    "files": [
      "index.js",
      "route-loader.js",
      "generator"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ktsn/vue-cli-plugin-auto-routing.git"
    },
    "keywords": [
      "Vue",
      "Vue CLI",
      "plugin",
      "routing",
      "auto routing"
    ],
    "author": {
      "name": "katashin"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/ktsn/vue-cli-plugin-auto-routing/issues"
    },
    "homepage": "https://github.com/ktsn/vue-cli-plugin-auto-routing#readme",
    "scripts": {
      "lint": "eslint .",
      "format": "eslint --fix .",
      "prepublishOnly": "npm run lint"
    },
    "devDependencies": {
      "eslint": "^7.17.0",
      "eslint-config-ktsn": "^2.0.1",
      "prettier": "2.2.1"
    },
    "peerDependencies": {
      "vue-auto-routing": "^1.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-vue-cli-plugin-auto-routing-1.3.0-7e9532c8f03b29e0c0f482ca380df12d4643e189-integrity/node_modules/vue-cli-plugin-auto-routing/package.json",
    "readmeFilename": "README.md",
    "readme": "# vue-cli-plugin-auto-routing\n\n[![vue-cli-plugin-auto-routing Dev Token](https://badge.devtoken.rocks/vue-cli-plugin-auto-routing)](https://devtoken.rocks/package/vue-cli-plugin-auto-routing)\n\nVue CLI plugin that provides auto routing feature.\n\n## Overview\n\nEnsure you are in a project generated by Vue CLI >= v3. You install this plugin by running the following command:\n\n```bash\n# If you did not install router plugin yet\n$ vue add router\n\n# Install vue-cli-plugin-auto-routing\n$ vue add auto-routing\n```\n\nAfter adding the plugin, the file structure will be the below.\n\n```\nsrc/\n├── pages/\n├── layouts/\n└── router/\n```\n\n### Pages\n\n`.vue` files under the `pages/` directory will be automatically resolved to generate routing. Vue Router `routes` options will be configured with the file structure under the `pages/`. The generated routing is same with [Nuxt's routing](https://nuxtjs.org/guide/routing).\n\nNote that directories and files started and ended with `__` (two underscores, e.g. `__foo__.vue`) will be ignored.\n\nFor example, when you have the following page components:\n\n```\npages/\n├── __partial__.vue\n├── index.vue\n├── users.vue\n└── users/\n    └── _id.vue\n```\n\nIt is resolved to the below routes. Note that `_` prefixed components generate dynamic routing.\n\n```js\nexport default [\n  {\n    name: 'index',\n    path: '/',\n    component: () => import('@/pages/index.vue')\n  },\n  {\n    name: 'users',\n    path: '/users',\n    component: () => import('@/pages/users.vue'),\n    children: [\n      {\n        name: 'users-id',\n        path: ':id?',\n        component: () => import('@/pages/users/_id.vue')\n      }\n    ]\n  }\n]\n```\n\nIf you want to make route param required, create a directory for the param and add `index.vue` in the directory. In the above example, if you replace `users/_id.vue` with `users/_id/index.vue`, `:id` param will be required.\n\n#### `<route>` custom block\n\nIf a page component has `<route>` custom block, the content json will be merged with [route config](https://router.vuejs.org/api/#routes).\n\nFor example, if `index.vue` has the following `<route>` block:\n\n```vue\n<route>\n{\n  \"name\": \"home\",\n  \"meta\": {\n    \"requiresAuth\": true\n  }\n}\n</route>\n\n<template>\n  <h1>Hello</h1>\n</template>\n```\n\nThe generated route config is like the following:\n\n```js\nmodule.exports = [\n  {\n    name: 'home',\n    path: '/',\n    component: () => import('@/pages/index.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  }\n]\n```\n\n### Layouts\n\nComponents under the `layouts/` directory will be used as shared layout component in the application. You can choose a layout by specifying `layout` component option in a page component. The default value of `layout` is `'default'`. That means when you omit `layout` options, `layouts/default.vue` will be choosed as the layout component. This is the same concept with [Nuxt's layouts](https://nuxtjs.org/guide/views#layouts).\n\nFor example, when you have `layouts/foo.vue` and `pages/index.vue`:\n\n```vue\n<!-- layouts/foo.vue -->\n<template>\n  <div>\n    <h1>Foo Layout</h1>\n    <router-view />\n  </div>\n</template>\n```\n\n```vue\n<!-- pages/index.vue -->\n<template>\n  <p>index.vue</p>\n</template>\n\n<script>\nexport default {\n  // You can specify layout component name here (default value is 'default')\n  layout: 'foo'\n}\n</script>\n```\n\nThe following html will be rendered:\n\n```html\n<div>\n  <h1>Foo Layout</h1>\n  <p>index.vue</p>\n</div>\n```\n\n## Modifying Chunk Name\n\nA chunk name from auto generated file can be conflicted with your code. You may see the below error log in that case:\n\n```\n ERROR  Failed to compile with 1 errors\n error  in ./node_modules/vue-auto-routing/index.js\nIt's not allowed to load an initial chunk on demand. The chunk name \"index\" is already used by an entrypoint.\n ERROR  Build failed with errors.\nerror Command failed with exit code 1.\n```\n\nTo avoid this error, you can set `chunkNamePrefix` option to change the auto generated chunk name.\n\n```js\n// vue.config.js\n\nmodule.exports = {\n  pluginOptions: {\n    autoRouting: {\n      // Specify a prefix which will be added to all auto generated chunk name.\n      chunkNamePrefix: 'page-'\n    }\n  }\n}\n```\n\n## Options\n\nYou can specify options for this plugin under `pluginOptions.autoRouting` in `vue.config.js`. The options are simply passed to `vue-auto-routing` options.\nYou can see the available options list [here](https://github.com/ktsn/vue-route-generator#generateroutesconfig-generateconfig-string).\n\n```js\n// vue.config.js\n\nmodule.exports = {\n  pluginOptions: {\n    autoRouting: {\n      // Optionally specify a custom output file, relative to the project root\n      outFile: \"src/router/routes.js\",\n      // Specify other vue-auto-routing options here\n      nested: false\n    }\n  }\n}\n```\n\n## Related Projects\n\n- [vue-router-layout](https://github.com/ktsn/vue-router-layout): Lightweight layout resolver for Vue Router.\n- [vue-auto-routing](https://github.com/ktsn/vue-auto-routing): Generate Vue Router routing automatically.\n- [vue-route-generator](https://github.com/ktsn/vue-route-generator): Low-level utility generating routing (used by vue-auto-routing under the hood).\n\n## License\n\nMIT\n",
    "licenseText": "Copyright (c) 2018 katashin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vue-cli-plugin-auto-routing/-/vue-cli-plugin-auto-routing-1.3.0.tgz#7e9532c8f03b29e0c0f482ca380df12d4643e189",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vue-cli-plugin-auto-routing/-/vue-cli-plugin-auto-routing-1.3.0.tgz",
    "hash": "7e9532c8f03b29e0c0f482ca380df12d4643e189",
    "integrity": "sha512-wFoaRLR2mpJoiySlt8yGBRdqSj+yk45OdbocZNZG8KmrLewizuBvEpjcbCTZ4s2mBs0lE/SzzfO+2enElgqcXg==",
    "registry": "npm",
    "packageName": "vue-cli-plugin-auto-routing",
    "cacheIntegrity": "sha512-wFoaRLR2mpJoiySlt8yGBRdqSj+yk45OdbocZNZG8KmrLewizuBvEpjcbCTZ4s2mBs0lE/SzzfO+2enElgqcXg== sha1-fpUyyPA7KeDA9ILKOA3xLUZD4Yk="
  },
  "registry": "npm",
  "hash": "7e9532c8f03b29e0c0f482ca380df12d4643e189"
}