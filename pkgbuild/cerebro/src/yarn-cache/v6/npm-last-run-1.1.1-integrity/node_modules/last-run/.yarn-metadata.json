{
  "manifest": {
    "name": "last-run",
    "version": "1.1.1",
    "description": "Capture and retrieve the last time a function was run",
    "author": {
      "name": "Gulp Team",
      "email": "team@gulpjs.com",
      "url": "http://gulpjs.com/"
    },
    "contributors": [
      {
        "name": "Blaine Bublitz",
        "email": "blaine.bublitz@gmail.com"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/gulpjs/last-run.git"
    },
    "license": "MIT",
    "engines": {
      "node": ">= 0.10"
    },
    "main": "index.js",
    "files": [
      "LICENSE",
      "index.js"
    ],
    "scripts": {
      "lint": "eslint . && jscs index.js test/",
      "pretest": "npm run lint",
      "test": "mocha --async-only",
      "cover": "istanbul cover _mocha --report lcovonly",
      "coveralls": "npm run cover && istanbul-coveralls"
    },
    "dependencies": {
      "default-resolution": "^2.0.0",
      "es6-weak-map": "^2.0.1"
    },
    "devDependencies": {
      "eslint": "^1.7.3",
      "eslint-config-gulp": "^2.0.0",
      "expect": "^1.19.0",
      "istanbul": "^0.4.3",
      "istanbul-coveralls": "^1.0.3",
      "jscs": "^2.3.5",
      "jscs-preset-gulp": "^1.0.0",
      "mocha": "^2.4.5"
    },
    "keywords": [
      "execution",
      "function",
      "last run",
      "timing"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-last-run-1.1.1-integrity/node_modules/last-run/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n  <a href=\"http://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n</p>\n\n# last-run\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]\n\nCapture and retrieve the last time a function was run.\n\n## Usage\n\n```js\nvar lastRun = require('last-run');\n\nfunction myFunc(){}\n\nmyFunc();\n// capture the run after (or before) calling the function\nlastRun.capture(myFunc);\n\n// retrieve the last run time\nlastRun(myFunc);\n//-> outputs the Date.now() when capture was called\n```\n\n## API\n\n__Note: this module uses a WeakMap shim, and throws on non-extensible functions on platforms that\ndon't have a native WeakMap implementation__\n\n### lastRun(fn, [timeResolution]) => [Timestamp]\n\nTakes a function (`fn`) and returns a timestamp of the last time the function was captured.\n\nReturns undefined if the function has not been captured.\n\nThe timestamp is always given in millisecond but the time resolution can be reduced (rounded down).\nThe use case is to be able to compare a build time to a file time attribute.\nOn node v0.10 or with file system like HFS or FAT, `fs.stat` time attributes like `mtime` precision is one second.\n\nAssuming `lastRun(fn)` returns 1426000001111, `lastRun(fn, 1000)` returns 1426000001000.\n\nThe default time resolution is 1000 on node v0.10, 0 on node 0.11+ and iojs.\nMore information at [`default-resolution`][default-resolution] and\n[undertaker PR #17][undertaker-17].\n\n### lastRun.capture(fn, [timestamp])\n\nTakes a function (`fn`) and captures the current timestamp with `Date.now()`.\nIf passed the optional timestamp, captures that time instead of `Date.now()`.\nThe captured timestamp can then be retrieved using the `lastRun` function.\n\n### lastRun.release(fn)\n\nTakes a function (`fn`) and removes the last run timestamp for it.\n\n## License\n\nMIT\n\n[default-resolution]: https://github.com/gulpjs/default-resolution\n[undertaker-17]: https://github.com/gulpjs/undertaker/pull/17#issuecomment-82374512\n\n[downloads-image]: http://img.shields.io/npm/dm/last-run.svg\n[npm-url]: https://www.npmjs.com/package/last-run\n[npm-image]: http://img.shields.io/npm/v/last-run.svg\n\n[travis-url]: https://travis-ci.org/gulpjs/last-run\n[travis-image]: http://img.shields.io/travis/gulpjs/last-run.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/last-run\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/last-run.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/last-run\n[coveralls-image]: http://img.shields.io/coveralls/gulpjs/last-run/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Blaine Bublitz, Eric Schoffstall and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/last-run/-/last-run-1.1.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/last-run/-/last-run-1.1.1.tgz",
    "hash": "",
    "integrity": "sha1-RblpQsF7HHnHchmCWbqUO+v4yls=",
    "registry": "npm",
    "packageName": "last-run",
    "cacheIntegrity": "sha512-U/VxvpX4N/rFvPzr3qG5EtLKEnNI0emvIQB3/ecEwv+8GHaUKbIB8vxv1Oai5FAF0d0r7LXHhLLe5K/yChm5GQ== sha1-RblpQsF7HHnHchmCWbqUO+v4yls="
  },
  "registry": "npm",
  "hash": "53f571be95f837fac5bcfcebdea1b912d2ca127348d1e9af210077fde704c2ffbc18769429b201f2fc6fd4e6a2e45005d1dd2becb5c784b2dee4aff20a19b919"
}