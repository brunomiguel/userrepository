"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var lodash_1 = require("lodash");
var context_1 = require("./context");
var methods_1 = require("./methods");
var ResizeConsumer = (function (_super) {
    __extends(ResizeConsumer, _super);
    function ResizeConsumer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onSizeChanged = function () {
            var size = _this.props.context.size;
            if (size) {
                if (typeof _this.props.onSizeChanged === 'function') {
                    _this.props.onSizeChanged(size);
                }
                _this.updateAttribute(size);
            }
        };
        _this.updateAttribute = function (size) {
            var element = _this.props.innerRef.current;
            if (element && typeof _this.props.updateDatasetBySize === 'function') {
                var newDataAttributes = _this.props.updateDatasetBySize(size);
                methods_1.updateElementDataAttributes(element, newDataAttributes);
            }
        };
        return _this;
    }
    Object.defineProperty(ResizeConsumer.prototype, "divProps", {
        get: function () {
            return lodash_1.omit(this.props, [
                'innerRef',
                'onSizeChanged',
                'updateDatasetBySize',
                'children',
                'context',
            ]);
        },
        enumerable: true,
        configurable: true
    });
    ResizeConsumer.prototype.componentDidUpdate = function (prevProps) {
        if (methods_1.isWidthChanged(prevProps.context.size, this.props.context.size) ||
            methods_1.isHeightChanged(prevProps.context.size, this.props.context.size)) {
            this.onSizeChanged();
        }
    };
    ResizeConsumer.prototype.render = function () {
        var _a = this.props, innerRef = _a.innerRef, children = _a.children;
        return (React.createElement("div", __assign({}, this.divProps, { ref: innerRef }), children));
    };
    return ResizeConsumer;
}(React.PureComponent));
exports.default = (function (_a) {
    var _b = _a.innerRef, innerRef = _b === void 0 ? React.createRef() : _b, props = __rest(_a, ["innerRef"]);
    return (React.createElement(context_1.Consumer, null, function (context) { return (React.createElement(ResizeConsumer, __assign({}, props, { context: context, innerRef: innerRef }))); }));
});
