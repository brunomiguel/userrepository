{
  "manifest": {
    "name": "@sentry/electron",
    "description": "Offical Sentry SDK for Electron",
    "version": "2.5.1",
    "main": "./dist/index.js",
    "module": "./esm/main/index.js",
    "browser": "./esm/renderer/index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/getsentry/sentry-electron.git"
    },
    "author": {
      "name": "Sentry"
    },
    "contributors": [
      {
        "name": "Tim Fish"
      }
    ],
    "license": "MIT",
    "types": "./dist/index.d.ts",
    "publishConfig": {
      "access": "public"
    },
    "scripts": {
      "build": "run-p build:es6 build:esm",
      "build:es6": "tsc -p tsconfig.build.json",
      "build:esm": "tsc -p tsconfig.esm.json",
      "build:watch": "run-p build:watch:es6 build:watch:esm",
      "build:watch:es6": "tsc -p tsconfig.build.json -w --preserveWatchOutput",
      "build:watch:esm": "tsc -p tsconfig.esm.json -w --preserveWatchOutput",
      "clean": "rimraf dist coverage esm",
      "preexample": "run-s clean build",
      "example": "electron example",
      "lint": "run-s lint:prettier lint:eslint",
      "lint:prettier": "prettier --check \"{src,test}/**/*.ts\"",
      "lint:eslint": "eslint . --cache --format stylish",
      "fix": "run-s fix:eslint fix:prettier",
      "fix:prettier": "prettier --write \"{src,test}/**/*.ts\"",
      "fix:eslint": "eslint . --format stylish --fix",
      "pretest": "run-s clean build",
      "test": "cross-env TS_NODE_PROJECT=tsconfig.json xvfb-maybe electron-mocha --require ts-node/register/transpile-only --timeout 120000 ./test/unit/**/*.ts",
      "pree2e": "run-s clean build",
      "e2e": "cross-env TS_NODE_PROJECT=tsconfig.json xvfb-maybe mocha --require ts-node/register/transpile-only --timeout 30000 --retries 5 ./test/e2e/*.ts"
    },
    "dependencies": {
      "@sentry/browser": "6.7.1",
      "@sentry/core": "6.7.1",
      "@sentry/minimal": "6.7.1",
      "@sentry/node": "6.7.1",
      "@sentry/types": "6.7.1",
      "@sentry/utils": "6.7.1",
      "tslib": "^2.2.0"
    },
    "devDependencies": {
      "@sentry-internal/eslint-config-sdk": "6.7.1",
      "@sentry-internal/typescript": "6.7.1",
      "@types/busboy": "^0.2.3",
      "@types/chai": "^4.2.10",
      "@types/chai-as-promised": "^7.1.0",
      "@types/chai-datetime": "^0.0.33",
      "@types/form-data": "^2.5.0",
      "@types/koa": "^2.0.52",
      "@types/koa-bodyparser": "^4.3.0",
      "@types/mocha": "^5.2.5",
      "busboy": "^0.3.1",
      "chai": "^4.1.2",
      "chai-as-promised": "^7.1.1",
      "chai-datetime": "^1.7.0",
      "cross-env": "^5.2.0",
      "eslint": "7.26.0",
      "electron": "12.0.7",
      "electron-download": "^4.1.1",
      "electron-mocha": "^6.0.4",
      "extract-zip": "^1.6.7",
      "koa": "^2.13.1",
      "koa-bodyparser": "^4.3.0",
      "koa-tree-router": "^0.7.0",
      "mocha": "^6.2.2",
      "npm-run-all": "^4.1.5",
      "prettier": "^1.19.1",
      "rimraf": "^2.6.2",
      "temporary-directory": "^1.0.2",
      "ts-node": "^8.5.4",
      "typescript": "4.2.4",
      "xvfb-maybe": "^0.2.1"
    },
    "sideEffects": false,
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@sentry-electron-2.5.1-6d1d42117e074c4b9f2f200def8ffb602c0221b6-integrity/node_modules/@sentry/electron/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n  <a href=\"https://sentry.io\" target=\"_blank\" align=\"center\">\n    <img src=\"https://sentry-brand.storage.googleapis.com/sentry-logo-black.png\" width=\"280\">\n  </a>\n  <br />\n</p>\n\n# Official Sentry SDK for Electron\n\n[![Travis](https://travis-ci.com/getsentry/sentry-electron.svg?branch=master)](https://travis-ci.com/getsentry/sentry-electron)\n[![npm version](https://img.shields.io/npm/v/@sentry/electron.svg)](https://www.npmjs.com/package/@sentry/electron)\n[![license](https://img.shields.io/github/license/getsentry/sentry-electron.svg)](https://github.com/getsentry/sentry-electron/blob/master/LICENSE)\n\n## Features\n\n- Captures **Node errors** in the main process (using\n  [`@sentry/node`](https://github.com/getsentry/sentry-javascript/tree/master/packages/node))\n- Captures **JavaScript errors** in renderer processes (using\n  [`@sentry/browser`](https://github.com/getsentry/sentry-javascript/tree/master/packages/browser))\n- Captures **native crashes** (Minidump crash reports) from renderers and the main process\n- Collects **breadcrumbs and context** information along with events across renderers and the main process\n- Support `electron` version >= `1.8.x`\n\n## Usage\n\nTo use this SDK, call `init(options)` as early as possible in the entry modules in the main process as well as all\nrenderer processes or further sub processees you spawn. This will initialize the SDK and hook into the environment. Note\nthat you can turn off almost all side effects using the respective options.\n\n```javascript\nimport { init } from '@sentry/electron';\n\ninit({\n  dsn: '__DSN__',\n  // ...\n});\n```\n\nTo set context information or send manual events, use the exported functions of `@sentry/electron`. Note that these\nfunctions will not perform any action before you have called `init()`:\n\n```javascript\nimport * as Sentry from '@sentry/electron';\n\n// Set user information, as well as tags and further extras\nSentry.configureScope(scope => {\n  scope.setExtra('battery', 0.7);\n  scope.setTag('user_mode', 'admin');\n  scope.setUser({ id: '4711' });\n  // scope.clear();\n});\n\n// Add a breadcrumb for future events\nSentry.addBreadcrumb({\n  message: 'My Breadcrumb',\n  // ...\n});\n\n// Capture exceptions, messages or manual events\nSentry.captureMessage('Hello, world!');\nSentry.captureException(new Error('Good bye'));\nSentry.captureEvent({\n  message: 'Manual',\n  stacktrace: [\n    // ...\n  ],\n});\n```\n\n## Deep Dive\n\n- [Configuration](https://docs.sentry.io/platforms/javascript/electron/#configuring-the-client)\n- [JavaScript Usage](https://docs.sentry.io/platforms/javascript/electron/)\n- [Native Usage](https://docs.sentry.io/platforms/javascript/electron/native/)\n- [Source Maps](https://docs.sentry.io/platforms/javascript/electron/sourcemaps/)\n\n## Resources\n\n- [Releases](https://github.com/getsentry/sentry-electron/releases)\n- [Bug Tracker](https://github.com/getsentry/sentry-electron/issues)\n- [Example App](https://github.com/getsentry/sentry-electron/tree/master/example)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Sentry (https://sentry.io/) and individual contributors.\nCopyright (c) 2017 Tim Fish\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@sentry/electron/-/electron-2.5.1.tgz#6d1d42117e074c4b9f2f200def8ffb602c0221b6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@sentry/electron/-/electron-2.5.1.tgz",
    "hash": "6d1d42117e074c4b9f2f200def8ffb602c0221b6",
    "integrity": "sha512-1rVE1IgGZTAy2qlLQxDsuhv7/0sT88oHYyD4f6ZTDzge3lsReeMu4xA32M4ldo4yRlRQM5gpdSS/D7Q/4huH0A==",
    "registry": "npm",
    "packageName": "@sentry/electron",
    "cacheIntegrity": "sha512-1rVE1IgGZTAy2qlLQxDsuhv7/0sT88oHYyD4f6ZTDzge3lsReeMu4xA32M4ldo4yRlRQM5gpdSS/D7Q/4huH0A== sha1-bR1CEX4HTEufLyAN74/7YCwCIbY="
  },
  "registry": "npm",
  "hash": "6d1d42117e074c4b9f2f200def8ffb602c0221b6"
}