{"version":3,"file":"index.js","mappings":"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","sources":["webpack://librespot-node/./src/genericPlayer.ts","webpack://librespot-node/./src/index.ts","webpack://librespot-node/./src/player.ts","webpack://librespot-node/./src/positionHolder.ts","webpack://librespot-node/./src/spirc.ts","webpack://librespot-node/./src/tokenHandler.ts","webpack://librespot-node/./src/types.ts","webpack://librespot-node/./src/utils.ts","webpack://librespot-node/external commonjs2 \"./build/librespot.node\"","webpack://librespot-node/external node-commonjs \"assert\"","webpack://librespot-node/external node-commonjs \"events\"","webpack://librespot-node/external node-commonjs \"fs/promises\"","webpack://librespot-node/external node-commonjs \"https\"","webpack://librespot-node/external node-commonjs \"path\"","webpack://librespot-node/webpack/bootstrap","webpack://librespot-node/webpack/before-startup","webpack://librespot-node/webpack/startup","webpack://librespot-node/webpack/after-startup"],"sourcesContent":["import EventEmitter from \"events\"\nimport path from \"path\"\nimport { TokenHandler } from \"./tokenHandler\"\nimport { PositionHolder } from \"./positionHolder\"\nimport { ConstructorConfig, Token } from \"./types\"\nimport { PlayerEvent, PlayerEventTypes, TokenScope } from \"./types\"\nimport { TRACK_REGEX, _librespotModule } from \"./utils\"\n\nexport function safe_execution(\n  _: unknown,\n  propertyKey: string,\n  descriptor: TypedPropertyDescriptor<any>\n) {\n  const originalMethod = descriptor.value\n\n  descriptor.value = function (...args: unknown[]) {\n    if ((this as GenericPlayer).isInitialized) {\n      return originalMethod.call(this, ...args)\n    } else {\n      throw new Error(\n        `Cannot call method ${propertyKey} before player has initialized`\n      )\n    }\n  }\n\n  return descriptor\n}\n\nexport abstract class GenericPlayer {\n  protected tokenHandler: TokenHandler\n  protected _positionHolder: PositionHolder\n  public eventEmitter = new EventEmitter()\n\n  protected playerInstance: PlayerNativeObject | undefined\n\n  protected _volume = 0\n\n  protected device_id!: string\n\n  protected _isInitialized = false\n\n  public get isInitialized() {\n    return this._isInitialized\n  }\n\n  protected abstract onPlayerInitialized(): void\n\n  private validateConfig(config: ConstructorConfig): FullConstructorConfig {\n    if (!config.auth) {\n      throw new Error(\"missing auth details from config\")\n    }\n\n    if (!config.auth.username || !config.auth.password) {\n      throw new Error(\"missing username or password from config\")\n    }\n\n    config.auth.authType = config.auth.authType ?? \"AUTHENTICATION_USER_PASS\"\n\n    config.backend = config.backend ?? \"\"\n    config.bitrate = config.bitrate ?? \"320\"\n    config.gapless = config.gapless ?? false\n    config.passThrough = config.passThrough ?? false\n\n    config.connectConfig = {\n      deviceType: config.connectConfig?.deviceType ?? \"computer\",\n      hasVolumeControl: config.connectConfig?.hasVolumeControl ?? true,\n      initialVolume: config.connectConfig?.initialVolume ?? 32768,\n      name: config.connectConfig?.name ?? \"librespot\",\n    }\n\n    config.normalizationConfig = {\n      normalization: config.normalizationConfig?.normalization ?? false,\n      normalizationType:\n        config.normalizationConfig?.normalizationType ?? \"auto\",\n      normalizationMethod:\n        config.normalizationConfig?.normalizationMethod ?? \"basic\",\n      normalizationAttackCF:\n        config.normalizationConfig?.normalizationAttackCF ?? 0,\n      normalizationKneeDB: config.normalizationConfig?.normalizationKneeDB ?? 0,\n      normalizationPregain:\n        config.normalizationConfig?.normalizationPregain ?? 0,\n      normalizationReleaseCF:\n        config.normalizationConfig?.normalizationReleaseCF ?? 0,\n      normalizationThreshold:\n        config.normalizationConfig?.normalizationThreshold ?? 0,\n    }\n\n    config.cache = {\n      audio_location: config.cache?.audio_location,\n      credentials_location: config.cache?.credentials_location,\n      volume_location: config.cache?.audio_location,\n      size_limiter: config.cache?.size_limiter,\n    }\n\n    config.pos_update_interval = config.pos_update_interval ?? 500\n\n    return config as FullConstructorConfig\n  }\n\n  constructor(\n    config: ConstructorConfig,\n    playerConstructMethod:\n      | \"create_player\"\n      | \"create_player_spirc\" = \"create_player\"\n  ) {\n    let validatedConfig = this.validateConfig(config)\n    this.tokenHandler = new TokenHandler(\n      validatedConfig.cache?.credentials_location\n    )\n    this._positionHolder = new PositionHolder(config.pos_update_interval)\n\n    _librespotModule[playerConstructMethod](\n      validatedConfig,\n      this.player_event_callback.bind(this)\n    )\n      .then((val) => {\n        this.playerInstance = val\n\n        this.onPlayerInitialized()\n        this.registerListeners()\n        this._isInitialized = true\n        this.eventEmitter.emit(\"PlayerInitialized\", {\n          event: \"PlayerInitialized\",\n        })\n      })\n      .catch((e) => {\n        this.eventEmitter.emit(\"InitializationError\", {\n          event: \"InitializationError\",\n          error: e,\n        })\n      })\n\n    this._positionHolder.callback = (position_ms) => {\n      this.eventEmitter.emit(\"TimeUpdated\", {\n        event: \"TimeUpdated\",\n        position_ms,\n      })\n    }\n  }\n\n  private player_event_callback(event: PlayerEvent) {\n    this.eventEmitter.emit(event.event, event)\n  }\n\n  private registerListeners() {\n    this.addListener(\"VolumeChanged\", (event) => {\n      this._volume = event.volume\n    })\n\n    this.addListener(\"Playing\", (e) => {\n      this._positionHolder.setListener()\n      this._positionHolder.position = e.position_ms\n    })\n\n    this.addListener(\"Paused\", (e) => {\n      this._positionHolder.clearListener()\n      this._positionHolder.position = e.position_ms\n    })\n\n    this.addListener(\"Stopped\", (e) => {\n      this._positionHolder.clearListener()\n      this._positionHolder.position = 0\n    })\n\n    this.addListener(\"PositionCorrection\", (e) => {\n      this._positionHolder.position = e.position_ms\n    })\n\n    this.addListener(\"Seeked\", (e) => {\n      this._positionHolder.position = e.position_ms\n    })\n\n    this.addListener(\"TrackChanged\", () => {\n      this._positionHolder.clearListener()\n      this._positionHolder.position = 0\n    })\n  }\n\n  public on = this.addListener\n  public off = this.removeListener\n\n  public addListener<T extends PlayerEventTypes>(\n    event: T,\n    callback: (event: PlayerEvent<T>) => void\n  ) {\n    return this.eventEmitter.addListener(event, callback)\n  }\n\n  public removeListener<T extends PlayerEventTypes>(\n    event: T,\n    callback: (event: PlayerEvent<T>) => void\n  ) {\n    return this.eventEmitter.removeListener(event, callback)\n  }\n\n  public once<T extends PlayerEventTypes>(\n    event: T,\n    callback: (event: PlayerEvent<T>) => void\n  ) {\n    return this.eventEmitter.once(event, callback)\n  }\n\n  public removeAllListeners() {\n    this.eventEmitter.removeAllListeners()\n    this.registerListeners()\n  }\n\n  public getDeviceId() {\n    return this.device_id\n  }\n\n  protected validateUri(val: string): [string | undefined, string | undefined] {\n    const match = val.match(TRACK_REGEX)\n\n    if (match?.groups?.type) {\n      if (match.groups.urlType?.startsWith(\"https\")) {\n        const parsedUrl = new URL(val)\n        return [\n          `spotify:${match.groups.type}:${parsedUrl.pathname\n            .split(\"/\")\n            .at(-1)}`,\n          match.groups.type,\n        ]\n      }\n      return [val, match.groups.type]\n    }\n\n    return [undefined, undefined]\n  }\n\n  public abstract setVolume(volume: number, raw?: boolean): Promise<void>\n  public abstract load(\n    trackURIs: string | string[],\n    autoPlay?: boolean,\n    startPosition?: number\n  ): Promise<void>\n  public abstract getToken(...scopes: TokenScope[]): Promise<Token | undefined>\n  public abstract getVolume(raw?: boolean): number\n  public abstract seek(posMs: number): Promise<void>\n  public abstract close(): Promise<void>\n  public abstract getCurrentPosition(): number\n}\n","export * from \"./spirc\"\nexport * from \"./player\"\nexport * from \"./types\"\n","import { TokenScope } from \"./types\"\nimport { DEFAULT_SCOPES, _librespotModule } from \"./utils\"\nimport { GenericPlayer, safe_execution } from \"./genericPlayer\"\n\nexport class SpotifyPlayer extends GenericPlayer {\n  protected onPlayerInitialized() {\n    this.device_id = _librespotModule.get_device_id.call(this.playerInstance)\n  }\n\n  @safe_execution\n  public async play() {\n    await _librespotModule.play.call(this.playerInstance)\n  }\n\n  @safe_execution\n  public async pause() {\n    await _librespotModule.pause.call(this.playerInstance)\n  }\n\n  @safe_execution\n  public async seek(posMs: number) {\n    await _librespotModule.seek.call(this.playerInstance, posMs)\n  }\n\n  @safe_execution\n  public async close() {\n    this._positionHolder.clearListener()\n    this.eventEmitter.removeAllListeners()\n    await _librespotModule.close_player.call(this.playerInstance)\n  }\n\n  public getCurrentPosition() {\n    return this._positionHolder.position\n  }\n\n  @safe_execution\n  public async setVolume(volume: number, raw = false) {\n    let parsedVolume: number = volume\n    if (!raw) {\n      parsedVolume = (Math.max(Math.min(volume, 100), 0) / 100) * 65535\n    }\n\n    await _librespotModule.set_volume.call(this.playerInstance, parsedVolume)\n  }\n\n  public getVolume(raw = false) {\n    if (raw) {\n      return this._volume\n    }\n\n    return (this._volume / 65535) * 100\n  }\n\n  @safe_execution\n  public async load(\n    trackURIs: string | string[],\n    autoPlay = false,\n    startPosition = 0\n  ) {\n    const regex = new RegExp(\n      /^(?<urlType>(?:spotify:|(?:https?:\\/\\/(?:open|play)\\.spotify\\.com\\/)))(?:embed)?\\/?(?<type>album|track|playlist|artist)(?::|\\/)((?:[0-9a-zA-Z]){22})/\n    )\n\n    if (typeof trackURIs === \"string\") {\n      trackURIs = [trackURIs]\n    }\n\n    for (let trackURI of trackURIs) {\n      const match = trackURI.match(regex)\n\n      if (match?.groups?.type) {\n        if (match.groups.urlType?.startsWith(\"https\")) {\n          const parsedUrl = new URL(trackURI)\n          trackURI = `spotify:${match.groups.type}:${parsedUrl.pathname\n            .split(\"/\")\n            .at(-1)}`\n        }\n      }\n    }\n\n    for (const t of trackURIs) {\n      await _librespotModule.load_track.call(\n        this.playerInstance,\n        t,\n        autoPlay,\n        startPosition\n      )\n    }\n  }\n\n  @safe_execution\n  public async getToken(...scopes: TokenScope[]) {\n    scopes = scopes && scopes.length > 0 ? scopes : DEFAULT_SCOPES\n\n    const cachedToken = await this.tokenHandler.getToken(scopes)\n    if (cachedToken) {\n      return cachedToken\n    }\n\n    const res = await _librespotModule.get_token.call(\n      this.playerInstance,\n      scopes.join(\",\")\n    )\n\n    if (res) {\n      res.scopes = (res.scopes as unknown as string).split(\",\") as TokenScope[]\n      res.expiry_from_epoch = Date.now() + res.expires_in\n\n      await this.tokenHandler.addToken(res)\n    }\n\n    return res\n  }\n\n  @safe_execution\n  public async getMetadata(track: string) {\n    const [uri, type] = this.validateUri(track)\n\n    if (uri && type === \"track\") {\n      const metadata = await _librespotModule.get_canvas.call(\n        this.playerInstance,\n        uri\n      )\n\n      return metadata\n    }\n  }\n}\n","const POSITION_UPDATE_INTERVAL = 500\n\nexport class PositionHolder {\n  public position = 0\n  private positionListener: ReturnType<typeof setInterval> | undefined\n  private updateInterval: number\n  public callback?: (time: number) => void\n\n  constructor(updateInterval?: number) {\n    this.updateInterval = updateInterval || POSITION_UPDATE_INTERVAL\n  }\n\n  public setListener() {\n    this.clearListener()\n\n    this.positionListener = setInterval(() => {\n      this.position += this.updateInterval\n      this.callback && this.callback(this.position)\n    }, this.updateInterval)\n  }\n\n  public clearListener() {\n    if (this.positionListener) {\n      clearInterval(this.positionListener)\n      this.positionListener = undefined\n    }\n  }\n}\n","import { ConstructorConfig } from \"./types\"\nimport { TokenScope } from \"./types\"\nimport { request, DEFAULT_SCOPES, _librespotModule, TRACK_REGEX } from \"./utils\"\nimport { GenericPlayer, safe_execution } from \"./genericPlayer\"\nimport path from \"path\"\n\nexport class SpotifyPlayerSpirc extends GenericPlayer {\n  protected onPlayerInitialized() {\n    this.device_id = _librespotModule.get_device_id_spirc.call(\n      this.playerInstance\n    )\n  }\n\n  constructor(config: ConstructorConfig) {\n    super(config, \"create_player_spirc\")\n  }\n\n  @safe_execution\n  public async play() {\n    await _librespotModule.play_spirc.call(this.playerInstance)\n  }\n\n  @safe_execution\n  public async pause() {\n    await _librespotModule.pause_spirc.call(this.playerInstance)\n  }\n\n  @safe_execution\n  public async seek(posMs: number) {\n    await _librespotModule.seek_spirc.call(this.playerInstance, posMs)\n  }\n\n  @safe_execution\n  public async close() {\n    this._positionHolder.clearListener()\n    this.eventEmitter.removeAllListeners()\n    await _librespotModule.close_player_spirc.call(this.playerInstance)\n  }\n\n  public getCurrentPosition() {\n    return this._positionHolder.position\n  }\n\n  @safe_execution\n  public async setVolume(volume: number, raw = false) {\n    let parsedVolume: number = volume\n    if (!raw) {\n      parsedVolume = (Math.max(Math.min(volume, 100), 0) / 100) * 65535\n    }\n\n    _librespotModule.set_volume_spirc.call(this.playerInstance, parsedVolume)\n  }\n\n  public getVolume(raw = false) {\n    if (raw) {\n      return this._volume\n    }\n\n    return (this._volume / 65535) * 100\n  }\n\n  @safe_execution\n  public async load(trackURIs: string | string[]) {\n    const token = (await this.getToken(\"user-modify-playback-state\"))\n      ?.access_token\n    if (!token) {\n      throw Error(\"Failed to get a valid access token\")\n    }\n\n    console.debug(\"using existing token\", token)\n\n    const options: FetchConfig = {\n      method: \"PUT\",\n      search: {\n        device_id: this.device_id,\n      },\n      auth: token,\n      body: {},\n    }\n\n    if (typeof trackURIs === \"string\") {\n      trackURIs = [trackURIs]\n    }\n\n    for (let trackURI of trackURIs) {\n      const [uri, type] = this.validateUri(trackURI)\n      const body: Record<string, string[] | string> = {}\n\n      if (uri) {\n        switch (type) {\n          case \"track\":\n            body[\"uris\"] = (body[\"uris\"] as string[]) ?? []\n            ;(body[\"uris\"]! as string[]).push(uri)\n            break\n          default:\n            body[\"context_uri\"] = uri\n            break\n        }\n\n        options.body = body\n      }\n    }\n\n    await request<void>(\"https://api.spotify.com/v1/me/player/play\", options)\n  }\n\n  @safe_execution\n  public async getToken(...scopes: TokenScope[]) {\n    scopes = scopes && scopes.length > 0 ? scopes : DEFAULT_SCOPES\n\n    const cachedToken = await this.tokenHandler.getToken(scopes)\n    if (cachedToken) {\n      return cachedToken\n    }\n\n    const res = await _librespotModule.get_token_spirc.call(\n      this.playerInstance,\n      scopes.join(\",\")\n    )\n\n    if (res) {\n      res.scopes = (res.scopes as unknown as string).split(\",\") as TokenScope[]\n      res.expiry_from_epoch = Date.now() + res.expires_in\n\n      await this.tokenHandler.addToken(res)\n    }\n\n    return res\n  }\n\n  @safe_execution\n  public async getMetadata(track: string) {\n    const [uri, type] = this.validateUri(track)\n\n    if (uri && type === \"track\") {\n      const metadata = await _librespotModule.get_canvas_spirc.call(\n        this.playerInstance,\n        uri\n      )\n\n      return metadata\n    }\n  }\n}\n","import assert from \"assert\"\nimport { PathLike } from \"fs\"\nimport { writeFile, readFile } from \"fs/promises\"\nimport { Token, TokenScope } from \"./types\"\nimport path from \"path\"\n\nexport class TokenHandler {\n  private tokenMap: Token[] = []\n  private filePath?: PathLike\n  private readFilePromise: Promise<void>\n\n  constructor(filePath?: string) {\n    if (filePath) this.filePath = path.join(filePath, \"tokens.json\")\n    this.readFilePromise = this.readFile()\n  }\n\n  private async dumpFile() {\n    if (this.filePath)\n      await writeFile(this.filePath, JSON.stringify(this.tokenMap))\n  }\n\n  private async readFile() {\n    if (this.filePath)\n      try {\n        this.tokenMap = JSON.parse(\n          await readFile(this.filePath, { encoding: \"utf-8\" })\n        )\n        assert(Array.isArray(this.tokenMap))\n      } catch (e) {\n        console.warn(\"Failed to parse token store, creating new\")\n        this.tokenMap = []\n      }\n  }\n\n  public async addToken(token: Token) {\n    await this.readFilePromise\n    this.tokenMap.push(token)\n    await this.dumpFile()\n  }\n\n  public async getToken(scopes: TokenScope[]) {\n    await this.readFilePromise\n    for (const token of this.tokenMap) {\n      // Check if required scopes are already cached\n      if (scopes.some((val) => token.scopes.includes(val))) {\n        if (token.expiry_from_epoch > Date.now()) {\n          // Check if the matching token is not expired\n          return token\n        }\n      }\n    }\n  }\n}\n","export interface NormalizationConfig {\n  normalization: boolean\n  normalizationPregain: number\n  normalizationType: \"auto\" | \"album\" | \"track\"\n  normalizationMethod: \"dynamic\" | \"basic\"\n  normalizationAttackCF: number\n  normalizationKneeDB: number\n  normalizationReleaseCF: number\n  normalizationThreshold: number\n}\n\nexport interface ConnectConfig {\n  name: string\n  deviceType:\n    | \"computer\"\n    | \"tablet\"\n    | \"smartphone\"\n    | \"speaker\"\n    | \"tv\"\n    | \"avr\"\n    | \"stb\"\n    | \"audiodongle\"\n    | \"gameconsole\"\n    | \"castaudio\"\n    | \"castvideo\"\n    | \"automobile\"\n    | \"smartwatch\"\n    | \"chromebook\"\n    | \"carthing\"\n    | \"homething\"\n  initialVolume: number\n  hasVolumeControl: boolean\n}\n\nexport interface CacheConfig {\n  credentials_location?: string\n  volume_location?: string\n  audio_location?: string\n  size_limiter?: number\n}\n\nexport interface ConstructorConfig {\n  auth: Partial<AuthDetails>\n  cache?: CacheConfig\n  pos_update_interval?: number\n  backend?: string\n  gapless?: boolean\n  bitrate?: \"96\" | \"160\" | \"320\"\n  passThrough?: boolean\n  normalizationConfig?: Partial<NormalizationConfig>\n  connectConfig?: Partial<ConnectConfig>\n}\n\nexport interface AuthDetails {\n  username: string\n  password: string\n  authType?:\n    | \"AUTHENTICATION_USER_PASS\"\n    | \"AUTHENTICATION_USER_PASS\"\n    | \"AUTHENTICATION_STORED_FACEBOOK_CREDENTIALS\"\n    | \"AUTHENTICATION_SPOTIFY_TOKEN\"\n    | \"AUTHENTICATION_FACEBOOK_TOKEN\"\n}\n\nexport type PlayerEventTypes =\n  | \"Stopped\"\n  | \"Loading\"\n  | \"Preloading\"\n  | \"Playing\"\n  | \"Paused\"\n  | \"TimeToPreloadNextTrack\"\n  | \"EndOfTrack\"\n  | \"Unavailable\"\n  | \"VolumeChanged\"\n  | \"PositionCorrection\"\n  | \"Seeked\"\n  | \"FilterExplicitContentChanged\"\n  | \"TrackChanged\"\n  | \"SessionConnected\"\n  | \"SessionDisconnected\"\n  | \"SessionClientChanged\"\n  | \"ShuffleChanged\"\n  | \"RepeatChanged\"\n  | \"AutoPlayChanged\"\n  | \"PlayerInitialized\"\n  | \"TimeUpdated\"\n  | \"InitializationError\"\n\nexport type PlayerEvent<T extends PlayerEventTypes = \"InitializationError\"> = {\n  event: T\n} & (T extends \"Stopped\"\n  ? {\n      play_request_id: bigint\n      track_id: string\n    }\n  : T extends \"Loading\"\n  ? {\n      play_request_id: bigint\n      track_id: string\n      position_ms: number\n    }\n  : T extends \"Preloading\"\n  ? {\n      track_id: string\n    }\n  : T extends \"Playing\"\n  ? {\n      play_request_id: bigint\n      track_id: string\n      position_ms: number\n    }\n  : T extends \"Paused\"\n  ? {\n      play_request_id: bigint\n      track_id: string\n      position_ms: number\n    }\n  : T extends \"TimeToPreloadNextTrack\"\n  ? {\n      play_request_id: bigint\n      track_id: string\n    }\n  : T extends \"EndOfTrack\"\n  ? {\n      play_request_id: bigint\n      track_id: string\n    }\n  : T extends \"Unavailable\"\n  ? {\n      play_request_id: bigint\n      track_id: string\n    }\n  : T extends \"VolumeChanged\"\n  ? {\n      volume: number\n    }\n  : T extends \"PositionCorrection\"\n  ? {\n      play_request_id: bigint\n      track_id: string\n      position_ms: number\n    }\n  : T extends \"Seeked\"\n  ? {\n      play_request_id: bigint\n      track_id: string\n      position_ms: number\n    }\n  : T extends \"TrackChanged\"\n  ? {\n      audio_item: string\n    }\n  : T extends \"SessionConnected\"\n  ? {\n      connection_id: string\n      user_name: string\n    }\n  : T extends \"SessionDisconnected\"\n  ? {\n      connection_id: string\n      user_name: string\n    }\n  : T extends \"SessionClientChanged\"\n  ? {\n      client_id: string\n      client_name: string\n      client_brand_name: string\n      client_model_name: string\n    }\n  : T extends \"ShuffleChanged\"\n  ? {\n      shuffle: boolean\n    }\n  : T extends \"RepeatChanged\"\n  ? {\n      repeat: boolean\n    }\n  : T extends \"AutoPlayChanged\"\n  ? {\n      auto_play: boolean\n    }\n  : T extends \"FilterExplicitContentChanged\"\n  ? {\n      filter: boolean\n    }\n  : T extends \"TimeUpdated\"\n  ? {\n      position_ms: number\n    }\n  : T extends \"PlayerInitialized\"\n  ? undefined\n  : T extends \"InitializationError\"\n  ? { error: Error }\n  : unknown)\n\nexport type TokenScope =\n  | \"ugc-image-upload\"\n  | \"user-read-playback-state\"\n  | \"user-modify-playback-state\"\n  | \"user-read-currently-playing\"\n  | \"app-remote-control\"\n  | \"streaming\"\n  | \"playlist-read-private\"\n  | \"playlist-read-collaborative\"\n  | \"playlist-modify-private\"\n  | \"playlist-modify-public\"\n  | \"user-follow-modify\"\n  | \"user-follow-read\"\n  | \"user-read-playback-position\"\n  | \"user-top-read\"\n  | \"user-read-recently-played\"\n  | \"user-library-modify\"\n  | \"user-library-read\"\n  | \"user-read-email\"\n  | \"user-read-private\"\n\nexport type Token = {\n  access_token: string\n  token_type: \"Bearer\"\n  expires_in: number\n  expiry_from_epoch: number\n  scopes: TokenScope[]\n}\n\nexport interface CanvazResponse {\n  canvases: Canvaz[]\n  ttl_in_seconds: number\n}\n\nexport interface Canvaz {\n  id: string\n  url: string\n  file_id: string\n  entity_uri: string\n  explicit: boolean\n  uploaded_by: string\n  etag: string\n  canvas_uri: string\n  storylines_id: string\n  type_: number\n  artist: Artist\n}\n\nexport interface Artist {\n  uri: string\n  name: string\n  avatar: string\n}\n","import https, { RequestOptions } from \"https\"\nimport { TokenScope } from \"./types\"\n\nexport const TRACK_REGEX = new RegExp(\n  /^(?<urlType>(?:spotify:|(?:https?:\\/\\/(?:open|play)\\.spotify\\.com\\/)))(?:embed)?\\/?(?<type>album|track|playlist|artist)(?::|\\/)((?:[0-9a-zA-Z]){22})/\n)\n\nexport function request<T>(url: string, config: FetchConfig): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    const parsedUrl = new URL(url)\n\n    if (!config.headers) {\n      config.headers = {}\n    }\n\n    if (!config.headers[\"Content-Type\"]) {\n      config.headers[\"Content-Type\"] = \"application/json\"\n    }\n\n    if (config.body) {\n      const bodyString =\n        config.body instanceof Uint8Array\n          ? config.body\n          : JSON.stringify(config.body)\n      config.headers[\"Content-Length\"] = Buffer.byteLength(bodyString)\n    }\n\n    if (config.auth) {\n      config.headers[\"Authorization\"] = `Bearer ${config.auth}`\n    }\n\n    const options: RequestOptions = {\n      host: parsedUrl.hostname,\n      path: `${parsedUrl.pathname}${\n        config.search ? `?${new URLSearchParams(config.search).toString()}` : \"\"\n      }`,\n      protocol: \"https:\",\n      method: config.method,\n      headers: config.headers,\n    }\n    let data = \"\"\n    let req = https.request(options, (res) => {\n      res.on(\"data\", (chunk) => {\n        data += chunk\n      })\n\n      res.on(\"end\", () => {\n        if (res.statusCode && res.statusCode >= 200 && res.statusCode <= 299) {\n          try {\n            resolve(JSON.parse(data))\n          } catch {\n            resolve(data as T)\n          }\n        } else {\n          reject(data)\n        }\n      })\n    })\n\n    req.on(\"error\", reject)\n    if (config.body) {\n      const bodyString =\n        config.body instanceof Uint8Array\n          ? config.body\n          : JSON.stringify(config.body)\n      req.write(bodyString)\n    }\n    req.end()\n  })\n}\n\nexport const DEFAULT_SCOPES: TokenScope[] = [\n  \"playlist-read-collaborative\",\n  \"user-follow-read\",\n  \"user-library-read\",\n  \"user-top-read\",\n  \"user-read-recently-played\",\n  \"user-modify-playback-state\",\n]\n\nexport const _librespotModule: LibrespotModule = require(\"librespot\")\n","module.exports = require(\"./build/librespot.node\");","module.exports = require(\"assert\");","module.exports = require(\"events\");","module.exports = require(\"fs/promises\");","module.exports = require(\"https\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}