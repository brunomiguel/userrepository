{
  "manifest": {
    "name": "proxy-compare",
    "description": "Compare two objects using accessed properties with Proxy",
    "version": "2.3.0",
    "author": {
      "name": "Daishi Kato"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/dai-shi/proxy-compare.git"
    },
    "source": "./src/index.ts",
    "main": "./dist/index.umd.js",
    "module": "./dist/index.modern.js",
    "react-native": "./dist/index.modern.js",
    "types": "./dist/src/index.d.ts",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "types": "./dist/src/index.d.ts",
        "module": "./dist/index.modern.js",
        "import": "./dist/index.modern.mjs",
        "default": "./dist/index.umd.js"
      }
    },
    "sideEffects": false,
    "files": [
      "src",
      "dist"
    ],
    "scripts": {
      "compile": "microbundle build -f modern,umd",
      "postcompile": "cp dist/index.modern.mjs dist/index.modern.js && cp dist/index.modern.mjs.map dist/index.modern.js.map",
      "test": "run-s eslint tsc-test jest",
      "eslint": "eslint --ext .js,.ts --ignore-pattern dist .",
      "jest": "jest",
      "tsc-test": "tsc --project . --noEmit",
      "apidoc": "documentation readme --section API --markdown-toc false --parse-extension ts src/*.ts"
    },
    "jest": {
      "preset": "ts-jest/presets/js-with-ts"
    },
    "keywords": [
      "proxy",
      "compare",
      "equal",
      "shallowequal",
      "deepequal"
    ],
    "license": "MIT",
    "dependencies": {},
    "devDependencies": {
      "@types/jest": "^28.1.6",
      "@typescript-eslint/eslint-plugin": "^5.33.0",
      "@typescript-eslint/parser": "^5.33.0",
      "documentation": "^13.2.5",
      "eslint": "^8.21.0",
      "eslint-config-airbnb-base": "^15.0.0",
      "eslint-plugin-import": "^2.26.0",
      "jest": "^28.1.3",
      "microbundle": "^0.15.1",
      "npm-run-all": "^4.1.5",
      "ts-jest": "^28.0.7",
      "typescript": "^4.7.4"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-proxy-compare-2.3.0-ac9633ae52918ff9c9fcc54dfe6316c7a02d20ee-integrity/node_modules/proxy-compare/package.json",
    "readmeFilename": "README.md",
    "readme": "# proxy-compare\n\n[![CI](https://img.shields.io/github/workflow/status/dai-shi/proxy-compare/CI)](https://github.com/dai-shi/proxy-compare/actions?query=workflow%3ACI)\n[![npm](https://img.shields.io/npm/v/proxy-compare)](https://www.npmjs.com/package/proxy-compare)\n[![size](https://img.shields.io/bundlephobia/minzip/proxy-compare)](https://bundlephobia.com/result?p=proxy-compare)\n\nCompare two objects using accessed properties with Proxy\n\n## Introduction\n\nThis is an internal library used in [React Tracked](https://react-tracked.js.org).\n\n## Install\n\n```bash\nnpm install proxy-compare\n```\n\n## Usage\n\n```javascript\n$ node\n> const { createProxy, isChanged } = require('proxy-compare')\nundefined\n> state = { a: 1, b: 2 }\n{ a: 1, b: 2 }\n> affected = new WeakMap()\nWeakMap { [items unknown] }\n> proxy = createProxy(state, affected)\nProxy [\n  { a: 1, b: 2 },\n  {\n    get: [Function: get],\n    has: [Function: has],\n    getOwnPropertyDescriptor: [Function: getOwnPropertyDescriptor],\n    ownKeys: [Function: ownKeys]\n  }\n]\n> proxy.a\n1\n> isChanged(state, { a: 1, b: 22 }, affected)\nfalse\n> isChanged(state, { a: 11, b: 2 }, affected)\ntrue\n```\n\n## API\n\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->\n\n### createProxy\n\nCreate a proxy.\n\nThis function will create a proxy at top level and proxy nested objects as you access them,\nin order to keep track of which properties were accessed via get/has proxy handlers:\n\nNOTE: Printing of WeakMap is hard to inspect and not very readable\nfor this purpose you can use the `affectedToPathList` helper.\n\n#### Parameters\n\n*   `obj` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** Object that will be wrapped on the proxy.\n*   `affected` **[WeakMap](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)<[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object), unknown>** WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n*   `proxyCache` **[WeakMap](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)<[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object), unknown>?** WeakMap that will help keep referential identity for proxies.\n\n#### Examples\n\n```javascript\nimport { createProxy } from 'proxy-compare';\n\nconst original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\nconst affected = new WeakMap();\nconst proxy = createProxy(original, affected);\n\nproxy.a // Will mark as used and track its value.\n// This will update the affected WeakMap with original as key\n// and a Set with \"a\"\n\nproxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n// This will update the affected WeakMap with original as key\n// and a Set with \"d\"\n```\n\nReturns **[Proxy](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy)<[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)>** Object wrapped in a proxy.\n\n### isChanged\n\nCompare changes on objects.\n\nThis will compare the affected properties on tracked objects inside the proxy\nto check if there were any changes made to it,\nby default if no property was accessed on the proxy it will attempt to do a\nreference equality check for the objects provided (Object.is(a, b)). If you access a property\non the proxy, then isChanged will only compare the affected properties.\n\n#### Parameters\n\n*   `prevObj` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** The previous object to compare.\n*   `nextObj` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** Object to compare with the previous one.\n*   `affected` **[WeakMap](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)<[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object), unknown>** WeakMap that holds the tracking of which properties in the proxied object were accessed.\n*   `cache` **[WeakMap](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)<[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object), unknown>?** WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n    and to avoid infinite loop with circular structures.\n\n#### Examples\n\n```javascript\nimport { createProxy, isChanged } from 'proxy-compare';\n\nconst obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\nconst affected = new WeakMap();\n\nconst proxy = createProxy(obj, affected);\n\nproxy.a\n\nisChanged(obj, { a: \"1\" }, affected) // false\n\nproxy.a = \"2\"\n\nisChanged(obj, { a: \"1\" }, affected) // true\n```\n\nReturns **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Boolean indicating if the affected property on the object has changed.\n\n### getUntracked\n\nUnwrap proxy to get the original object.\n\nUsed to retrieve the original object used to create the proxy instance with `createProxy`.\n\n#### Parameters\n\n*   `obj` **[Proxy](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy)<[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)>** The proxy wrapper of the originial object.\n\n#### Examples\n\n```javascript\nimport { createProxy, getUntracked } from 'proxy-compare';\n\nconst original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\nconst affected = new WeakMap();\n\nconst proxy = createProxy(original, affected);\nconst originalFromProxy = getUntracked(proxy)\n\nObject.is(original, originalFromProxy) // true\nisChanged(original, originalFromProxy, affected) // false\n```\n\nReturns **([object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object) | null)** Return either the unwrapped object if exists.\n\n### markToTrack\n\nMark object to be tracked.\n\nThis function marks an object that will be passed into `createProxy`\nas marked to track or not. By default only Array and Object are marked to track,\nso this is useful for example to mark a class instance to track or to mark a object\nto be untracked when creating your proxy.\n\n#### Parameters\n\n*   `obj` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** Object to mark as tracked or not.\n*   `mark`  Boolean indicating whether you want to track this object or not. (optional, default `true`)\n\n#### Examples\n\n```javascript\nimport { createProxy, markToTrack, isChanged } from 'proxy-compare';\n\nconst nested = { e: \"3\" }\n\nmarkToTrack(nested, false)\n\nconst original = { a: \"1\", c: \"2\", d: nested };\nconst affected = new WeakMap();\n\nconst proxy = createProxy(original, affected);\n\nproxy.d.e\n\nisChanged(original, { d: { e: \"3\" } }, affected) // true\n```\n\nReturns **any** No return.\n\n### replaceNewProxy\n\nreplace newProxy function.\n\nThis can be used if you want to use proxy-polyfill.\nNote that proxy-polyfill can't polyfill everything.\nUse it at your own risk.\n\n#### Parameters\n\n*   `fn` **any** \n\n## Projects using this library\n\n*   [react-tracked](https://github.com/dai-shi/react-tracked)\n*   [reactive-react-redux](https://github.com/dai-shi/reactive-react-redux)\n*   [svelte3-redux](https://github.com/dai-shi/svelte3-redux)\n*   [proxy-memoize](https://github.com/dai-shi/proxy-memoize)\n*   [valtio](https://github.com/pmndrs/valtio)\n\n## Similar libraries\n\n*   [proxyequal](https://www.npmjs.com/package/proxyequal)\n*   [proxy-state-tree](https://www.npmjs.com/package/proxy-state-tree)\n*   [proxy-watcher](https://www.npmjs.com/package/proxy-watcher)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2020-2022 Daishi Kato\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/proxy-compare/-/proxy-compare-2.3.0.tgz#ac9633ae52918ff9c9fcc54dfe6316c7a02d20ee",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/proxy-compare/-/proxy-compare-2.3.0.tgz",
    "hash": "ac9633ae52918ff9c9fcc54dfe6316c7a02d20ee",
    "integrity": "sha512-c3L2CcAi7f7pvlD0D7xsF+2CQIW8C3HaYx2Pfgq8eA4HAl3GAH6/dVYsyBbYF/0XJs2ziGLrzmz5fmzPm6A0pQ==",
    "registry": "npm",
    "packageName": "proxy-compare",
    "cacheIntegrity": "sha512-c3L2CcAi7f7pvlD0D7xsF+2CQIW8C3HaYx2Pfgq8eA4HAl3GAH6/dVYsyBbYF/0XJs2ziGLrzmz5fmzPm6A0pQ== sha1-rJYzrlKRj/nJ/MVN/mMWx6AtIO4="
  },
  "registry": "npm",
  "hash": "ac9633ae52918ff9c9fcc54dfe6316c7a02d20ee"
}