{
  "manifest": {
    "name": "zwitch",
    "version": "1.0.5",
    "description": "Handle values based on a property",
    "license": "MIT",
    "keywords": [
      "handle",
      "switch",
      "property"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/wooorm/zwitch.git"
    },
    "bugs": {
      "url": "https://github.com/wooorm/zwitch/issues"
    },
    "funding": {
      "type": "github",
      "url": "https://github.com/sponsors/wooorm"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "files": [
      "index.js"
    ],
    "dependencies": {},
    "devDependencies": {
      "browserify": "^16.0.0",
      "nyc": "^15.0.0",
      "prettier": "^1.0.0",
      "remark-cli": "^7.0.0",
      "remark-preset-wooorm": "^6.0.0",
      "tape": "^4.0.0",
      "tinyify": "^2.0.0",
      "xo": "^0.25.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier --write \"**/*.js\" && xo --fix",
      "build-bundle": "browserify . -s zwitch -o zwitch.js",
      "build-mangle": "browserify . -s zwitch -p tinyify -o zwitch.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test.js",
      "test": "npm run format && npm run build && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "unicorn/prefer-reflect-apply": "off"
      },
      "ignores": [
        "zwitch.js"
      ]
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-zwitch-1.0.5-d11d7381ffed16b742f6af7b3f223d5cd9fe9920-integrity/node_modules/zwitch/package.json",
    "readmeFilename": "readme.md",
    "readme": "# zwitch\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n\nHandle values based on a property.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install zwitch\n```\n\n## Use\n\n```js\nvar zwitch = require('zwitch')\n\nvar handle = zwitch('type')\n\nhandle.invalid = invalid\nhandle.unknown = unknown\nhandle.handlers.alpha = handle\n\nhandle({type: 'alpha'})\n```\n\nOr, with a `switch` statement:\n\n```javascript\nfunction handle(value) {\n  var fn\n\n  if (!value || typeof value !== 'object' || !('type' in value)) {\n    fn = invalid\n  } else {\n    switch (value.type) {\n      case 'alpha':\n        fn = handle\n        break\n      default:\n        fn = unknown\n        break\n    }\n  }\n\n  return fn.apply(this, arguments)\n}\n\nhandle({type: 'alpha'})\n```\n\n## API\n\n### `zwitch(key[, options])`\n\nCreate a functional switch, based on a `key` (`string`).\n\n###### `options`\n\nOptions can be omitted and added later to `one`.\n\n*   `handlers` (`Object.<Function>`, optional)\n    — Object mapping values to handle, stored on `one.handlers`\n*   `invalid` (`Function`, optional)\n    — Handle values without `key`, stored on `one.invalid`\n*   `unknown` (`Function`, optional)\n    — Handle values with an unhandled `key`, stored on `one.unknown`\n\n###### Returns\n\n`Function` — See [`one`][one].\n\n#### `one(value[, rest...])`\n\nHandle one value.  Based on the bound `key`, a respective handler will be\ninvoked.\nIf `value` is not an object, or doesn’t have a `key` property, the special\n“invalid” handler will be invoked.\nIf `value` has an unknown `key`, the special “unknown” handler will be invoked.\n\nAll arguments, and the context object, are passed through to the [handler][],\nand it’s result is returned.\n\n#### `one.handlers`\n\nMap of [handler][]s (`Object.<string, Function>`).\n\n#### `one.invalid`\n\nSpecial [`handler`][handler] invoked if a value doesn’t have a `key` property.\nIf not set, `undefined` is returned for invalid values.\n\n#### `one.unknown`\n\nSpecial [`handler`][handler] invoked if a value does not have a matching\nhandler.\nIf not set, `undefined` is returned for unknown values.\n\n### `function handler(value[, rest...])`\n\nHandle one value.\n\n## Related\n\n*   [`mapz`](https://github.com/wooorm/mapz)\n    — Functional map\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/zwitch.svg\n\n[build]: https://travis-ci.org/wooorm/zwitch\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/zwitch.svg\n\n[coverage]: https://codecov.io/github/wooorm/zwitch\n\n[downloads-badge]: https://img.shields.io/npm/dm/zwitch.svg\n\n[downloads]: https://www.npmjs.com/package/zwitch\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/zwitch.svg\n\n[size]: https://bundlephobia.com/result?p=zwitch\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[one]: #onevalue-rest\n\n[handler]: #function-handlervalue-rest\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/zwitch/-/zwitch-1.0.5.tgz#d11d7381ffed16b742f6af7b3f223d5cd9fe9920",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/zwitch/-/zwitch-1.0.5.tgz",
    "hash": "d11d7381ffed16b742f6af7b3f223d5cd9fe9920",
    "integrity": "sha512-V50KMwwzqJV0NpZIZFwfOD5/lyny3WlSzRiXgA0G7VUnRlqttta1L6UQIHzd6EuBY/cHGfwTIck7w1yH6Q5zUw==",
    "registry": "npm",
    "packageName": "zwitch",
    "cacheIntegrity": "sha512-V50KMwwzqJV0NpZIZFwfOD5/lyny3WlSzRiXgA0G7VUnRlqttta1L6UQIHzd6EuBY/cHGfwTIck7w1yH6Q5zUw== sha1-0R1zgf/tFrdC9q97PyI9XNn+mSA="
  },
  "registry": "npm",
  "hash": "d11d7381ffed16b742f6af7b3f223d5cd9fe9920"
}