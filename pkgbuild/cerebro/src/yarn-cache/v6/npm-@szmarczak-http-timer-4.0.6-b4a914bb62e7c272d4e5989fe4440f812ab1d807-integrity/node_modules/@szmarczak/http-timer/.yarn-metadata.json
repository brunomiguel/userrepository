{
  "manifest": {
    "name": "@szmarczak/http-timer",
    "version": "4.0.6",
    "description": "Timings for HTTP requests",
    "main": "dist/source",
    "engines": {
      "node": ">=10"
    },
    "scripts": {
      "test": "xo && tsc --noEmit && nyc ava",
      "build": "del-cli dist && tsc",
      "prepare": "npm run build",
      "coveralls": "nyc report --reporter=text-lcov | coveralls"
    },
    "files": [
      "dist/source"
    ],
    "keywords": [
      "http",
      "https",
      "timer",
      "timings"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/szmarczak/http-timer.git"
    },
    "author": {
      "name": "Szymon Marczak"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/szmarczak/http-timer/issues"
    },
    "homepage": "https://github.com/szmarczak/http-timer#readme",
    "dependencies": {
      "defer-to-connect": "^2.0.0"
    },
    "devDependencies": {
      "@ava/typescript": "^2.0.0",
      "@sindresorhus/tsconfig": "^1.0.2",
      "@types/node": "^16.3.1",
      "ava": "^3.15.0",
      "coveralls": "^3.1.1",
      "del-cli": "^3.0.1",
      "http2-wrapper": "^2.0.7",
      "nyc": "^15.1.0",
      "p-event": "^4.2.0",
      "typescript": "^4.3.5",
      "xo": "^0.39.1"
    },
    "types": "dist/source",
    "nyc": {
      "extension": [
        ".ts"
      ],
      "exclude": [
        "**/tests/**"
      ]
    },
    "xo": {
      "rules": {
        "@typescript-eslint/no-non-null-assertion": "off"
      }
    },
    "ava": {
      "typescript": {
        "compile": false,
        "rewritePaths": {
          "tests/": "dist/tests/"
        }
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@szmarczak-http-timer-4.0.6-b4a914bb62e7c272d4e5989fe4440f812ab1d807-integrity/node_modules/@szmarczak/http-timer/package.json",
    "readmeFilename": "README.md",
    "readme": "# http-timer\n> Timings for HTTP requests\n\n[![Build Status](https://travis-ci.org/szmarczak/http-timer.svg?branch=master)](https://travis-ci.org/szmarczak/http-timer)\n[![Coverage Status](https://coveralls.io/repos/github/szmarczak/http-timer/badge.svg?branch=master)](https://coveralls.io/github/szmarczak/http-timer?branch=master)\n[![install size](https://packagephobia.now.sh/badge?p=@szmarczak/http-timer)](https://packagephobia.now.sh/result?p=@szmarczak/http-timer)\n\nInspired by the [`request` package](https://github.com/request/request).\n\n## Installation\n\nNPM:\n\n> `npm install @szmarczak/http-timer`\n\nYarn:\n\n> `yarn add @szmarczak/http-timer`\n\n## Usage\n**Note:**\n> - The measured events resemble Node.js events, not the kernel ones.\n> - Sending a chunk greater than [`highWaterMark`](https://nodejs.org/api/stream.html#stream_new_stream_writable_options) will result in invalid `upload` and `response` timings. You can avoid this by splitting the payload into smaller chunks.\n\n```js\nconst https = require('https');\nconst timer = require('@szmarczak/http-timer');\n\nconst request = https.get('https://httpbin.org/anything');\ntimer(request);\n\nrequest.once('response', response => {\n\tresponse.resume();\n\tresponse.once('end', () => {\n\t\tconsole.log(response.timings); // You can use `request.timings` as well\n\t});\n});\n\n// {\n//   start: 1572712180361,\n//   socket: 1572712180362,\n//   lookup: 1572712180415,\n//   connect: 1572712180571,\n//   upload: 1572712180884,\n//   response: 1572712181037,\n//   end: 1572712181039,\n//   error: undefined,\n//   abort: undefined,\n//   phases: {\n//     wait: 1,\n//     dns: 53,\n//     tcp: 156,\n//     request: 313,\n//     firstByte: 153,\n//     download: 2,\n//     total: 678\n//   }\n// }\n```\n\n## API\n\n### timer(request)\n\nReturns: `Object`\n\n**Note**: The time is a `number` representing the milliseconds elapsed since the UNIX epoch.\n\n- `start` - Time when the request started.\n- `socket` - Time when a socket was assigned to the request.\n- `lookup` - Time when the DNS lookup finished.\n- `connect` - Time when the socket successfully connected.\n- `secureConnect` - Time when the socket securely connected.\n- `upload` - Time when the request finished uploading.\n- `response` - Time when the request fired `response` event.\n- `end` - Time when the response fired `end` event.\n- `error` - Time when the request fired `error` event.\n- `abort` - Time when the request fired `abort` event.\n- `phases`\n\t- `wait` - `timings.socket - timings.start`\n\t- `dns` - `timings.lookup - timings.socket`\n\t- `tcp` - `timings.connect - timings.lookup`\n\t- `tls` - `timings.secureConnect - timings.connect`\n\t- `request` - `timings.upload - (timings.secureConnect || timings.connect)`\n\t- `firstByte` - `timings.response - timings.upload`\n\t- `download` - `timings.end - timings.response`\n\t- `total` - `(timings.end || timings.error || timings.abort) - timings.start`\n\nIf something has not been measured yet, it will be `undefined`.\n\n## License\n\nMIT\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Szymon Marczak\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@szmarczak/http-timer/-/http-timer-4.0.6.tgz#b4a914bb62e7c272d4e5989fe4440f812ab1d807",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@szmarczak/http-timer/-/http-timer-4.0.6.tgz",
    "hash": "b4a914bb62e7c272d4e5989fe4440f812ab1d807",
    "integrity": "sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==",
    "registry": "npm",
    "packageName": "@szmarczak/http-timer",
    "cacheIntegrity": "sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w== sha1-tKkUu2LnwnLU5Zif5EQPgSqx2Ac="
  },
  "registry": "npm",
  "hash": "b4a914bb62e7c272d4e5989fe4440f812ab1d807"
}