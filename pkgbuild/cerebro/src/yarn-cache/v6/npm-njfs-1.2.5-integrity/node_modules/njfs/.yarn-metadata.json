{
  "manifest": {
    "name": "njfs",
    "version": "1.2.5",
    "keywords": [
      "es6",
      "util",
      "node",
      "filesystem",
      "directory",
      "path",
      "file",
      "folder",
      "unix",
      "root",
      "move",
      "copy",
      "list"
    ],
    "description": "A small collection of sync & async filesystem functions in Node.js.",
    "author": {
      "name": "Orçun Saltık"
    },
    "email": "saltikorcun@gmail.com",
    "main": "index.js",
    "scripts": {
      "lint": "eslint -c .eslintrc.js index.js --fix -o eslint.log -f unix",
      "test": "npm run lint"
    },
    "contributors": [],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://orcunsaltik@github.com/orcunsaltik/njfs.git"
    },
    "bugs": {
      "url": "https://github.com/orcunsaltik/njfs/issues"
    },
    "homepage": "https://github.com/orcunsaltik/njfs#readme",
    "devDependencies": {
      "eslint": "^7.10.0",
      "eslint-plugin-node": "^11.1.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-njfs-1.2.5-integrity/node_modules/njfs/package.json",
    "readmeFilename": "README.md",
    "readme": "# Node Js File System\n[![Build Status](https://travis-ci.com/orcunsaltik/njfs.svg?branch=master)](https://travis-ci.com/orcunsaltik/njfs)\n[![devDependencies Status](https://david-dm.org/orcunsaltik/njfs/dev-status.svg)](https://david-dm.org/orcunsaltik/njfs?type=dev)\n[![Maintainability](https://api.codeclimate.com/v1/badges/035ff3499e767eb6b552/maintainability)](https://codeclimate.com/github/orcunsaltik/njfs/maintainability)\n![Snyk Vulnerabilities for GitHub Repo](https://img.shields.io/snyk/vulnerabilities/github/orcunsaltik/njfs)\n![npm](https://img.shields.io/npm/dt/njfs)\n[![NPM Version](https://badge.fury.io/js/njfs.svg?style=flat)](https://npmjs.org/package/njfs)\n[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/orcunsaltik/njfs/issues)\n\nA small collection of sync & async filesystem functions for Node Js. \n\n## Install\n\n``` bash\nnpm install --save-dev njfs\n```\n\n## Methods\n\n1. unix(path): Synchronous. Returns path with unix-like directory separators.\n2. root(path): Synchronous. Returns the root directory of the package.\n3. list(path, opts): Asynchronous. Returns the list of files and folders of the given path.\n4. move(path, dest): Asynchronous. Moves files or folders.\n5. copy(path, dest): Asynchronous. Copies files or folders.\n6. isFile(path): Synchronous. Checks whether the specified path is an existing file or not.\n7. isDir(path): Synchronous. Checks whether the specified path is an existing directory or not.\n\n## Usage\n\n``` js\nconst {move, copy, root, list, isDir} = require('njfs');\n\ngulp.task('example', async () =>\n\n    await gulp.watch(['./src/*.*'], gulp.series('build', async () => {\n\n        const dist = root() + 'src';\n        const dest = root() + 'dist/js';\n\n        try {\n            const files = await list(dist, {extensions:'js, jsx'});\n            await Promise.all(files.map(async (file) => {\n                const path = `${dist}/${file}`;\n                if (!isDir(path)) {\n                    await copy(path, dest);\n                    console.log(`${file} transfered to ${dest}`);\n                }\n            }));\n        } catch (e) {\n            console.log(e);\n        }\n    })\n));\n```\n\n## Troubleshooting\n\nWhen you encounter a problem, please open an issue. I would be glad to help you to find a solution if possible.\n\n## Author\n\nGithub: [@orcunsaltik](https://github.com/orcunsaltik)\n\n\n## License\n\nSee the [LICENSE](LICENSE) file for license rights and limitations (MIT).",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Orçun Saltık\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/njfs/-/njfs-1.2.5.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/njfs/-/njfs-1.2.5.tgz",
    "hash": "",
    "integrity": "sha512-Vnl1VDjSo7fO3RHAO5N9QrsyWaIpSTxHSwVoQOcepYAx3Lt+2JD/tUwgEJHfh1QqBjyy/H9WS5L79+hL+l99ug==",
    "registry": "npm",
    "packageName": "njfs",
    "cacheIntegrity": "sha512-Vnl1VDjSo7fO3RHAO5N9QrsyWaIpSTxHSwVoQOcepYAx3Lt+2JD/tUwgEJHfh1QqBjyy/H9WS5L79+hL+l99ug== sha1-CCk46fvwcERXLjHIYkqB2ZiLUXo="
  },
  "registry": "npm",
  "hash": "5679755438d2a3b7cedd11c03b937d42bb3259a229493c474b056840e71ea58031dcbb7ed890ffb54c201091df87542a063cb2fc7f564b92fbf7e84bfa5f7dba"
}