{
  "manifest": {
    "name": "color-parse",
    "version": "1.4.2",
    "description": "Color string parser",
    "main": "index.js",
    "browser": "index.js",
    "module": "./index.mjs",
    "exports": {
      "require": "./index.js",
      "import": "./index.mjs"
    },
    "scripts": {
      "test": "node test.mjs"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/colorjs/color-parse"
    },
    "keywords": [
      "color",
      "parse",
      "color-parse",
      "color-string"
    ],
    "author": {
      "name": "Deema Ywanov",
      "email": "df.creative@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/colorjs/color-parse/issues"
    },
    "homepage": "https://github.com/colorjs/color-parse",
    "dependencies": {
      "color-name": "^1.0.0"
    },
    "devDependencies": {
      "tape": "^4.7.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-color-parse-1.4.2-78651f5d34df1a57f997643d86f7f87268ad4eb5-integrity/node_modules/color-parse/package.json",
    "readmeFilename": "readme.md",
    "readme": "# color-parse [![build](https://travis-ci.org/colorjs/color-parse.svg?branch=master)](https://travis-ci.org/colorjs/color-parse) [![size](https://img.shields.io/bundlephobia/minzip/color-parse?label=size)](https://bundlephobia.com/result?p=color-parse) ![stable](https://img.shields.io/badge/stability-stable-green)\n\nFast and compact color string parser.\n\n`$ npm install color-parse`\n\n```js\nvar parse = require('color-parse')\n\nparse('hsla(12 10% 50% / .3)')\n// { space: 'hsl', values: [12, 10, 50], alpha: 0.3 }\n```\n\n## Parsed strings\n\n* [x] Color keywords: `red`, `green` etc., see [color-name](https://ghub.io/color-name)\n* [x] `#RGB[A]`\n* [x] `#RRGGBB[AA]`\n* [x] `rgb[a](R, G, B[, A])`\n* [x] `rgb[a](R G B[ / A])`\n* [x] `hsl[a](H, S, L[, A])`, inc. [named hues](http://dev.w3.org/csswg/css-color/#simple-hues)\n* [x] `hsl[a](H S L [ / A])`\n* [x] `hwb(H, W, B)`\n* [x] `cmyk(C, M, Y, K)`\n* [x] `xyz(X, Y, Z)`\n* [x] `lab(L, A, B)`\n* [x] `lch(L, C, H)`\n* [x] `luv(L, U, V)`\n* [x] `R:10 G:20 B:30`\n* [x] `(R10 / G20 / B30)`\n* [x] `C100/M80/Y0/K35`\n\n## Parsed not strings\n\n* [x] `[10, 20, 20]` as RGB color space\n* [x] `{r: 10, g: 20, b: 30}`\n* [x] `{red: 10, green: 20, blue: 30}`\n* [x] `{h: 10, s: 20, l: 30}`\n* [x] `0x00ff00`, `0x0000ff` numbers\n\n## Not parsed strings\n\n* [x] `'yellowblue'` returns `null`\n\n## Related\n\n* [color-space](https://npmjs.org/package/color-space) — collection of color space conversions.\n* [color-rgba](https://npmjs.org/package/color-rgba) — convert any color string to rgba array.\n* [color-alpha](https://npmjs.org/package/color-alpha) — change alpha component of any color.\n\n## Analogs\n\n* [parse-color](http://npmjs.org/package/parse-color) — parser by @substack. Performs calculations to every possible space, which bloats size.\n* [color-parser](http://npmjs.org/package/color-parser) — parser by @tjholowaychuk. Supports limited set of spaces.\n* [color-string](http://npmjs.org/package/color-string) — parsing/serializing module by Heather Arthur. Has extensive API for parsing and serializing from any to any space.\n\n\n[![NPM](https://nodei.co/npm/color-parse.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/color-parse/)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Dmitry Ivanov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/color-parse/-/color-parse-1.4.2.tgz#78651f5d34df1a57f997643d86f7f87268ad4eb5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/color-parse/-/color-parse-1.4.2.tgz",
    "hash": "78651f5d34df1a57f997643d86f7f87268ad4eb5",
    "integrity": "sha512-RI7s49/8yqDj3fECFZjUI1Yi0z/Gq1py43oNJivAIIDSyJiOZLfYCRQEgn8HEVAj++PcRe8AnL2XF0fRJ3BTnA==",
    "registry": "npm",
    "packageName": "color-parse",
    "cacheIntegrity": "sha512-RI7s49/8yqDj3fECFZjUI1Yi0z/Gq1py43oNJivAIIDSyJiOZLfYCRQEgn8HEVAj++PcRe8AnL2XF0fRJ3BTnA== sha1-eGUfXTTfGlf5l2Q9hvf4cmitTrU="
  },
  "registry": "npm",
  "hash": "78651f5d34df1a57f997643d86f7f87268ad4eb5"
}