{
  "manifest": {
    "name": "vue-inline-svg",
    "version": "2.1.1",
    "description": "Replace SVG images with inline SVG element",
    "main": "dist/vue-inline-svg.js",
    "module": "src/index.js",
    "browser": "dist/vue-inline-svg.js",
    "unpkg": "dist/vue-inline-svg.min.js",
    "types": "types/index.d.ts",
    "files": [
      "/src/",
      "/types/",
      "/dist/"
    ],
    "scripts": {
      "build": "rollup -c rollup.conf.js",
      "test": "npm run lint && npm i vue@2 --no-save && check-dts test/*.ts",
      "lint": "eslint src/*.js",
      "lint:fix": "eslint src/*.js --fix",
      "prepublishOnly": "npm run test && npm run build",
      "precommit": "echo 'Pre-commit checks...' && npm run lint"
    },
    "pre-commit": [
      "precommit"
    ],
    "keywords": [
      "vue",
      "svg",
      "inline",
      "inject",
      "image",
      "replace"
    ],
    "author": {
      "name": "shrpne",
      "email": "shrpne@gmail.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/shrpne/vue-inline-svg"
    },
    "bugs": {
      "url": "https://github.com/shrpne/vue-inline-svg/issues"
    },
    "homepage": "https://github.com/shrpne/vue-inline-svg",
    "dependencies": {},
    "devDependencies": {
      "@babel/core": "^7.19.3",
      "@babel/preset-env": "^7.19.4",
      "@rollup/plugin-babel": "^5.3.1",
      "check-dts": "^0.5.6",
      "eslint": "^7.32.0",
      "eslint-config-airbnb-base": "^14.2.1",
      "eslint-plugin-import": "^2.26.0",
      "pre-commit": "^1.2.2",
      "rollup": "^2.79.1",
      "rollup-plugin-terser": "^7.0.2"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-vue-inline-svg-2.1.1-254485bf79a45d148d357a6990b8914219699e36-integrity/node_modules/vue-inline-svg/package.json",
    "readmeFilename": "README.md",
    "readme": "# Vue Inline SVG\n\n[![NPM Package](https://img.shields.io/npm/v/vue-inline-svg.svg?style=flat-square)](https://www.npmjs.org/package/vue-inline-svg)\n[![Minified Size](https://img.shields.io/bundlephobia/min/vue-inline-svg.svg?style=flat-square)](https://bundlephobia.com/result?p=vue-inline-svg)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg?style=flat-square)](https://github.com/shrpne/vue-inline-svg/blob/master/LICENSE)\n\nVue component loads an SVG source dynamically and inline `<svg>` so you can manipulate the style of it with CSS or JS.\nIt looks like basic `<img>` so you markup will not be bloated with SVG content.\nLoaded SVGs are cached so it will not make network request twice.\n\n[ci-img]:  https://travis-ci.org/shrpne/vue-inline-svg.svg\n[ci]:      https://travis-ci.org/shrpne/vue-inline-svg\n\n\n- [Install](#install)\n  - [NPM](#npm)\n  - [CDN](#cdn)\n  - [Vue 3](#vue-v3)\n- [Usage](#usage)\n  - [props](#props)\n    - [src](#--src)\n    - [title](#--title)\n    - [keepDuringLoading](#--keepduringloading)\n    - [transformSource](#--transformsource)\n  - [SVG attributes](#svg-attributes)\n  - [events](#events)\n    - [loaded](#--loaded)\n    - [unloaded](#--unloaded)\n    - [error](#--error)\n- [Comparison](#comparison)\n- [Changelog](#changelog)\n- [Contributing](#contributing)\n- [License](#license)\n\n\n## Install\n\n### NPM\n\n```bash\nnpm install vue-inline-svg\n```\n\nRegister locally in your component\n```js\nimport InlineSvg from 'vue-inline-svg';\n\n// Your component\nexport default {\n    components: {\n        InlineSvg,\n    }\n}\n```\n\nOr register globally in the root Vue instance\n```js\nimport Vue from 'vue';\n\n// as a plugin\nimport {InlineSvgPlugin} from 'vue-inline-svg';\nVue.use(InlineSvgPlugin);\n\n// or as a component\nimport InlineSvg from 'vue-inline-svg';\nVue.component('inline-svg', InlineSvg);\n```\n\n\n### CDN\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/vue\"></script>\n<!-- Include the `vue-inline-svg` script on your page after Vue script -->\n<script src=\"https://unpkg.com/vue-inline-svg\"></script>\n\n<script>\n// Register as a plugin\nVue.use(VueInlineSvg.InlineSvgPlugin);\n\n// or as a component\nVue.component('inline-svg', VueInlineSvg.InlineSvgComponent);\n\nnew Vue({\n// ...\n});\n</script>\n```\n\n### Vue v3\n\nVersion of `vue-inline-svg` with support of Vue v3 is available under `next` tag\nfrom NPM\n```bash\nnpm install vue-inline-svg@next\n```\nor from CDN\n```html\n<script src=\"https://unpkg.com/vue-inline-svg@next\"></script>\n```\n\n\n## Usage\n\n```html\n<inline-svg \n    src=\"image.svg\" \n    transformSource=\"transformSvg\"\n    @loaded=\"svgLoaded($event)\"\n    @unloaded=\"svgUnloaded()\"\n    @error=\"svgLoadError($event)\"\n    width=\"150\" \n    height=\"150\"\n    fill=\"black\"\n    aria-label=\"My image\"\n></inline-svg>\n``` \n[Example](https://github.com/shrpne/vue-inline-svg/blob/master/demo/index.html)\n\n\n### props\n#### - `src`\nPath to SVG file\n\n```html\n<inline-svg src=\"/my.svg\"/>\n```\n\nNote: if you use vue-loader assets or vue-cli, then paths like '../assets/my.svg' will not be handled by file-loader automatically like vue-cli do for `<img>` tag, so you will need to use it with `require`:\n```html\n<inline-svg :src=\"require('../assets/my.svg')\"/>\n```\nLearn more:\n- https://vue-loader.vuejs.org/guide/asset-url.html#transform-rules\n- https://cli.vuejs.org/guide/html-and-static-assets.html#static-assets-handling\n\n\n#### - `title`\nSets/overwrites the `<title>` of the SVG\n\n```html\n<inline-svg :src=\"image.svg\" title=\"My Image\"/>\n```\n\n\n#### - `keepDuringLoading`\n`true` by default. It makes vue-inline-svg to preserve old image visible, when new image is being loaded. Pass `false` to disable it and show nothing during loading.\n\n```html\n<inline-svg :src=\"image.svg\" :keepDuringLoading=\"false\"/>\n```\n\n#### - `transformSource`\nFunction to transform SVG source\n \nThis example create circle in svg:\n```html\n<inline-svg :src=\"image.svg\" :transformSource=\"transform\"/>\n\n<script>\nconst transform = (svg) => {\n    let point = document.createElementNS(\"http://www.w3.org/2000/svg\", 'circle');\n        point.setAttributeNS(null, 'cx', '20');\n        point.setAttributeNS(null, 'cy', '20');\n        point.setAttributeNS(null, 'r', '10');\n        point.setAttributeNS(null, 'fill', 'red');\n        svg.appendChild(point);\n    return svg;\n}\n// For cleaner syntax you could use https://github.com/svgdotjs/svg.js\n</script>\n```\n\n\n### SVG attributes\nOther SVG and HTML attributes will be passed to inlined `<svg>`. Except attributes with `false` or `null` value.\n```html\n<!-- input -->\n<inline-svg \n    fill-opacity=\"0.25\" \n    :stroke-opacity=\"myStrokeOpacity\"\n    :color=\"false\"        \n></inline-svg>\n\n<!-- output -->\n<svg fill-opacity=\"0.25\" stroke-opacity=\"0.5\"></svg>\n``` \n\n\n### events\n#### - `loaded`\nCalled when SVG image is loaded and inlined.\nInlined SVG element passed as argument into the listener’s callback function.\n```html\n<inline-svg @loaded=\"myInlinedSvg = $event\"/>\n```\n\n#### - `unloaded`\nCalled when `src` prop was changed and another SVG start loading.\n```html\n<inline-svg @unloaded=\"handleUnloaded()\"/>\n```\n\n#### - `error`\nCalled when SVG failed to load.\nError object passed as argument into the listener’s callback function.\n```html\n<inline-svg @error=\"log($event)\"/>\n```\n\n## Comparison\n\n- This module: [![Minified Size](https://img.shields.io/bundlephobia/min/vue-inline-svg.svg?style=flat-square)](https://bundlephobia.com/result?p=vue-inline-svg)\n- [vue-simple-svg](https://github.com/seiyable/vue-simple-svg): [![Minified Size](https://img.shields.io/bundlephobia/min/vue-simple-svg.svg?style=flat-square)](https://bundlephobia.com/result?p=vue-simple-svg), does not cache network requests, has wrapper around svg, attrs passed to `<svg>` are limited, converts `<style>` tag into `style=\"\"` attr\n- [svg-loader](https://github.com/visualfanatic/vue-svg-loader) uses different approach, it inlines SVG during compilation. It has pros that SVG is prerendered and no http request needed. But also it has cons that markup size grows, especially if you have same image repeated several times. (Discussed in [#11](https://github.com/shrpne/vue-inline-svg/issues/11))\n\n\n## Changelog\n[CHANGELOG.md](https://github.com/shrpne/vue-inline-svg/blob/master/CHANGELOG.md)\n\n\n## Contributing\n[CONTRIBUTING.md](https://github.com/shrpne/vue-inline-svg/blob/master/CONTRIBUTING.md)\n\n\n## License\n\nMIT License\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vue-inline-svg/-/vue-inline-svg-2.1.1.tgz#254485bf79a45d148d357a6990b8914219699e36",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vue-inline-svg/-/vue-inline-svg-2.1.1.tgz",
    "hash": "254485bf79a45d148d357a6990b8914219699e36",
    "integrity": "sha512-1m3UdbEneSHH4BTa2Bju/jnFy4QIHdhIWtGvkrkQRY03lJaM4JJ+hZBrgZw1jIB54SUh+5NYUiFEelnMz+DHQw==",
    "registry": "npm",
    "packageName": "vue-inline-svg",
    "cacheIntegrity": "sha512-1m3UdbEneSHH4BTa2Bju/jnFy4QIHdhIWtGvkrkQRY03lJaM4JJ+hZBrgZw1jIB54SUh+5NYUiFEelnMz+DHQw== sha1-JUSFv3mkXRSNNXppkLiRQhlpnjY="
  },
  "registry": "npm",
  "hash": "254485bf79a45d148d357a6990b8914219699e36"
}