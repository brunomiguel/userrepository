{
  "manifest": {
    "name": "micromark-util-sanitize-uri",
    "version": "1.0.0",
    "description": "micromark utility to sanitize urls",
    "license": "MIT",
    "keywords": [
      "micromark",
      "util",
      "utility",
      "sanitize",
      "clear",
      "url"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/micromark/micromark/tree/main/packages/micromark-util-sanitize-uri"
    },
    "bugs": {
      "url": "https://github.com/micromark/micromark/issues"
    },
    "funding": [
      {
        "type": "GitHub Sponsors",
        "url": "https://github.com/sponsors/unifiedjs"
      },
      {
        "type": "OpenCollective",
        "url": "https://opencollective.com/unified"
      }
    ],
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "dev/index.d.ts",
    "files": [
      "dev/",
      "index.d.ts",
      "index.js"
    ],
    "exports": {
      "development": "./dev/index.js",
      "default": "./index.js"
    },
    "dependencies": {
      "micromark-util-character": "^1.0.0",
      "micromark-util-encode": "^1.0.0",
      "micromark-util-symbol": "^1.0.0"
    },
    "scripts": {
      "build": "rimraf \"*.d.ts\" \"{dev/,lib/}**/*.d.ts\" && tsc && micromark-build && type-coverage"
    },
    "xo": false,
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-micromark-util-sanitize-uri-1.0.0-27dc875397cd15102274c6c6da5585d34d4f12b2-integrity/node_modules/micromark-util-sanitize-uri/package.json",
    "readmeFilename": "readme.md",
    "readme": "# micromark-util-sanitize-uri\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][bundle-size-badge]][bundle-size]\n[![Sponsors][sponsors-badge]][opencollective]\n[![Backers][backers-badge]][opencollective]\n[![Chat][chat-badge]][chat]\n\nmicromark utility to sanitize urls.\n\n## Contents\n\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`sanitizeUri(url[, pattern])`](#sanitizeuriurl-pattern)\n*   [Security](#security)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install micromark-util-sanitize-uri\n```\n\n## Use\n\n```js\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\n\nsanitizeUri('https://example.com/a&amp;b') // 'https://example.com/a&amp;amp;b'\nsanitizeUri('https://example.com/a%b') // 'https://example.com/a%25b'\nsanitizeUri('https://example.com/a%20b') // 'https://example.com/a%20b'\nsanitizeUri('https://example.com/üëç') // 'https://example.com/%F0%9F%91%8D'\nsanitizeUri('https://example.com/', /^https?$/i) // 'https://example.com/'\nsanitizeUri('javascript:alert(1)', /^https?$/i) // ''\nsanitizeUri('./example.jpg', /^https?$/i) // './example.jpg'\nsanitizeUri('#a', /^https?$/i) // '#a'\n```\n\n## API\n\nThis module exports the following identifiers: `sanitizeUri`.\nThere is no default export.\n\n### `sanitizeUri(url[, pattern])`\n\nMake a value safe for injection as a URL.\n\nThis encodes unsafe characters with percent-encoding and skips already\nencoded sequences (see `normalizeUri` internally).\nFurther unsafe characters are encoded as character references (see\n`micromark-util-encode`).\n\nA regex of allowed protocols can be given, in which case the URL is sanitized.\nFor example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n`/^https?$/i` for `img[src]` (this is what `github.com` allows).\nIf the URL includes an unknown protocol (one not matched by `protocol`, such\nas a dangerous example, `javascript:`), the value is ignored.\n\n###### Parameters\n\n*   `url` (`string`) ‚Äî URI to sanitize.\n*   `pattern` (`RegExp`, optional) ‚Äî Allowed protocols.\n\n###### Returns\n\n`string` ‚Äî Sanitized URI.\n\n## Security\n\nSee [`security.md`][securitymd] in [`micromark/.github`][health] for how to\nsubmit a security report.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`micromark/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organisation, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] ¬© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/micromark/micromark/workflows/main/badge.svg\n\n[build]: https://github.com/micromark/micromark/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/micromark/micromark.svg\n\n[coverage]: https://codecov.io/github/micromark/micromark\n\n[downloads-badge]: https://img.shields.io/npm/dm/micromark-util-sanitize-uri.svg\n\n[downloads]: https://www.npmjs.com/package/micromark-util-sanitize-uri\n\n[bundle-size-badge]: https://img.shields.io/bundlephobia/minzip/micromark-util-sanitize-uri.svg\n\n[bundle-size]: https://bundlephobia.com/result?p=micromark-util-sanitize-uri\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[opencollective]: https://opencollective.com/unified\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/micromark/micromark/discussions\n\n[license]: https://github.com/micromark/micromark/blob/main/license\n\n[author]: https://wooorm.com\n\n[health]: https://github.com/micromark/.github\n\n[securitymd]: https://github.com/micromark/.github/blob/HEAD/security.md\n\n[contributing]: https://github.com/micromark/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/micromark/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/micromark/.github/blob/HEAD/code-of-conduct.md\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/micromark-util-sanitize-uri/-/micromark-util-sanitize-uri-1.0.0.tgz#27dc875397cd15102274c6c6da5585d34d4f12b2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/micromark-util-sanitize-uri/-/micromark-util-sanitize-uri-1.0.0.tgz",
    "hash": "27dc875397cd15102274c6c6da5585d34d4f12b2",
    "integrity": "sha512-cCxvBKlmac4rxCGx6ejlIviRaMKZc0fWm5HdCHEeDWRSkn44l6NdYVRyU+0nT1XC72EQJMZV8IPHF+jTr56lAg==",
    "registry": "npm",
    "packageName": "micromark-util-sanitize-uri",
    "cacheIntegrity": "sha512-cCxvBKlmac4rxCGx6ejlIviRaMKZc0fWm5HdCHEeDWRSkn44l6NdYVRyU+0nT1XC72EQJMZV8IPHF+jTr56lAg== sha1-J9yHU5fNFRAidMbG2lWF001PErI="
  },
  "registry": "npm",
  "hash": "27dc875397cd15102274c6c6da5585d34d4f12b2"
}