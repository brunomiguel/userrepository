{
  "manifest": {
    "name": "@esbuild-kit/cjs-loader",
    "version": "2.4.0",
    "publishConfig": {
      "access": "public"
    },
    "description": "Node.js loader for compiling ESM & TypeScript modules to CommonJS",
    "keywords": [
      "esbuild",
      "loader",
      "node",
      "cjs",
      "commonjs",
      "esm",
      "typescript"
    ],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/esbuild-kit/cjs-loader.git"
    },
    "author": {
      "name": "Hiroki Osame",
      "email": "hiroki.osame@gmail.com"
    },
    "files": [
      "dist"
    ],
    "main": "./dist/index.js",
    "exports": "./dist/index.js",
    "dependencies": {
      "@esbuild-kit/core-utils": "^3.0.0",
      "get-tsconfig": "^4.2.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@esbuild-kit-cjs-loader-2.4.0-643c4b2855a18f31cd983794536d4ff64d3b410d-integrity/node_modules/@esbuild-kit/cjs-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "# cjs-loader\n\nNode.js `require()` hook to instantaneously transform ESM & TypeScript to CommonJS on demand using [esbuild](https://esbuild.github.io/).\n\n### Features\n- Transforms ESM & TypeScript to CommonJS on demand\n- Supports TS extensions `.cjs` & `.mjs` (`.cts` & `.mts`)\n- Cached for performance boost\n- Supports Node.js v12.16.2+\n- Handles `node:` import prefixes\n- Resolves `tsconfig.json` [`paths`](https://www.typescriptlang.org/tsconfig#paths)\n\n> **Tip:**\n>\n> _cjs-loader_ doesn't hook into dynamic `import()` calls.\n>\n> Use this with [esm-loader](https://github.com/esbuild-kit/esm-loader) for `import()` support. Alternatively, use [tsx](https://github.com/esbuild-kit/tsx) to handle them both automatically.\n\n## Install\n\n```sh\nnpm install --save-dev @esbuild-kit/cjs-loader\n```\n\n## Usage\n\nPass `@esbuild/cjs-loader` into the [`--require`](https://nodejs.org/api/cli.html#-r---require-module) flag\n```sh\nnode -r @esbuild/cjs-loader ./file.js\n```\n\n### TypeScript configuration\nThe following properties are used from `tsconfig.json` in the working directory:\n- `jsxFactory`\n- `jsxFragmentFactory`\n\n#### Custom `tsconfig.json` path\nBy default, `tsconfig.json` will be detected from the current working directory.\n\nTo set a custom path, use the `ESBK_TSCONFIG_PATH` environment variable:\n\n```sh\nESBK_TSCONFIG_PATH=./path/to/tsconfig.custom.json node -r @esbuild/cjs-loader ./file.js\n```\n\n### Cache\nModules transformations are cached in the system cache directory ([`TMPDIR`](https://en.wikipedia.org/wiki/TMPDIR)). Transforms are cached by content hash so duplicate dependencies are not re-transformed.\n\nSet environment variable `ESBK_DISABLE_CACHE` to a truthy value to disable the cache:\n\n```sh\nESBK_DISABLE_CACHE=1 node -r @esbuild/cjs-loader ./file.js\n```\n\n## Related\n\n- [tsx](https://github.com/esbuild-kit/tsx) - Node.js runtime powered by esbuild using [`@esbuild-kit/cjs-loader`](https://github.com/esbuild-kit/cjs-loader) and [`@esbuild-kit/esm-loader`](https://github.com/esbuild-kit/esm-loader).\n\n- [@esbuild-kit/esm-loader](https://github.com/esbuild-kit/esm-loader) - TypeScript to ESM transpiler using the Node.js loader API.\n",
    "licenseText": "MIT License\n\nCopyright (c) Hiroki Osame <hiroki.osame@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@esbuild-kit/cjs-loader/-/cjs-loader-2.4.0.tgz#643c4b2855a18f31cd983794536d4ff64d3b410d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@esbuild-kit/cjs-loader/-/cjs-loader-2.4.0.tgz",
    "hash": "643c4b2855a18f31cd983794536d4ff64d3b410d",
    "integrity": "sha512-DBBCiHPgL2B/elUpvCDhNHXnlZQ9sfO2uyt1OJyAXKT41beQEFY4OxZ6gwS+ZesRCbZ6JV8M7GEyOPkjv8kdIw==",
    "registry": "npm",
    "packageName": "@esbuild-kit/cjs-loader",
    "cacheIntegrity": "sha512-DBBCiHPgL2B/elUpvCDhNHXnlZQ9sfO2uyt1OJyAXKT41beQEFY4OxZ6gwS+ZesRCbZ6JV8M7GEyOPkjv8kdIw== sha1-ZDxLKFWhjzHNmDeUU21P9k07QQ0="
  },
  "registry": "npm",
  "hash": "643c4b2855a18f31cd983794536d4ff64d3b410d"
}