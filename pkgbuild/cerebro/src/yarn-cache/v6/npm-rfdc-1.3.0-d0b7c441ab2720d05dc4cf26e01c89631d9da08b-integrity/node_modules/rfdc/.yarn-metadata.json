{
  "manifest": {
    "name": "rfdc",
    "version": "1.3.0",
    "description": "Really Fast Deep Clone",
    "main": "index.js",
    "exports": {
      ".": "./index.js",
      "./default": "./default.js"
    },
    "scripts": {
      "test": "tap -R min test && npm run lint && tsd",
      "bench": "node benchmark",
      "lint": "standard --fix",
      "cov": "tap --100 test",
      "cov-ui": "tap --coverage-report=html test",
      "ci": "standard && tap --100 --coverage-report=text-lcov test | codecov --pipe"
    },
    "keywords": [
      "object",
      "obj",
      "properties",
      "clone",
      "copy",
      "deep",
      "recursive",
      "key",
      "keys",
      "values",
      "prop",
      "deep-clone",
      "deepclone",
      "deep-copy",
      "deepcopy",
      "fast",
      "performance",
      "performant",
      "fastclone",
      "fastcopy",
      "fast-clone",
      "fast-deep-clone",
      "fast-copy",
      "fast-deep-copy"
    ],
    "author": {
      "name": "David Mark Clements",
      "email": "david.clements@nearform.com"
    },
    "license": "MIT",
    "devDependencies": {
      "clone-deep": "^4.0.1",
      "codecov": "^3.4.0",
      "deep-copy": "^1.4.2",
      "fast-copy": "^1.2.1",
      "fastbench": "^1.0.1",
      "lodash.clonedeep": "^4.5.0",
      "standard": "^11.0.1",
      "tap": "^12.0.1",
      "tsd": "^0.7.4"
    },
    "dependencies": {},
    "repository": {
      "type": "git",
      "url": "git+https://github.com/davidmarkclements/rfdc.git"
    },
    "bugs": {
      "url": "https://github.com/davidmarkclements/rfdc/issues"
    },
    "homepage": "https://github.com/davidmarkclements/rfdc#readme",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-rfdc-1.3.0-d0b7c441ab2720d05dc4cf26e01c89631d9da08b-integrity/node_modules/rfdc/package.json",
    "readmeFilename": "readme.md",
    "readme": "# rfdc\n\nReally Fast Deep Clone\n\n\n[![build status](https://img.shields.io/travis/davidmarkclements/rfdc.svg)](https://travis-ci.org/davidmarkclements/rfdc)\n[![coverage](https://img.shields.io/codecov/c/github/davidmarkclements/rfdc.svg)](https://codecov.io/gh/davidmarkclements/rfdc)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](http://standardjs.com/)\n\n\n## Usage\n\n```js\nconst clone = require('rfdc')()\nclone({a: 1, b: {c: 2}}) // => {a: 1, b: {c: 2}}\n```\n\n## API\n\n### `require('rfdc')(opts = { proto: false, circles: false }) => clone(obj) => obj2`\n\n#### `proto` option\n\nCopy prototype properties as well as own properties into the new object.\n\nIt's marginally faster to allow enumerable properties on the prototype\nto be copied into the cloned object (not onto it's prototype, directly onto the object).\n\nTo explain by way of code:\n\n```js\nrequire('rfdc')({ proto: false })(Object.create({a: 1})) // => {}\nrequire('rfdc')({ proto: true })(Object.create({a: 1})) // => {a: 1}\n```\n\nSetting `proto` to `true` will provide an additional 2% performance boost.\n\n#### `circles` option\n\nKeeping track of circular references will slow down performance with an\nadditional 25% overhead. Even if an object doesn't have any circular references,\nthe tracking overhead is the cost. By default if an object with a circular\nreference is passed to `rfdc`, it will throw (similar to how `JSON.stringify` \\\nwould throw).\n\nUse the `circles` option to detect and preserve circular references in the\nobject. If performance is important, try removing the circular reference from\nthe object (set to `undefined`) and then add it back manually after cloning\ninstead of using this option.\n\n### `default` import\nIt is also possible to directly import the clone function with all options set\nto their default:\n\n```js\nconst clone = require(\"rfdc/default\")\nclone({a: 1, b: {c: 2}}) // => {a: 1, b: {c: 2}}\n```\n\n### Types\n\n`rfdc` clones all JSON types:\n\n* `Object`\n* `Array`\n* `Number`\n* `String`\n* `null`\n\nWith additional support for:\n\n* `Date` (copied)\n* `undefined` (copied)\n* `Buffer` (copied)\n* `TypedArray` (copied)\n* `Map` (copied)\n* `Set` (copied)\n* `Function` (referenced)\n* `AsyncFunction` (referenced)\n* `GeneratorFunction` (referenced)\n* `arguments` (copied to a normal object)\n\nAll other types have output values that match the output\nof `JSON.parse(JSON.stringify(o))`.\n\nFor instance:\n\n```js\nconst rfdc = require('rfdc')()\nconst err = Error()\nerr.code = 1\nJSON.parse(JSON.stringify(e)) // {code: 1}\nrfdc(e) // {code: 1}\n\nJSON.parse(JSON.stringify({rx: /foo/})) // {rx: {}}\nrfdc({rx: /foo/}) // {rx: {}}\n```\n\n## Benchmarks\n\n```sh\nnpm run bench\n```\n\n```\nbenchDeepCopy*100: 457.568ms\nbenchLodashCloneDeep*100: 1230.773ms\nbenchCloneDeep*100: 655.208ms\nbenchFastCopy*100: 747.017ms\nbenchRfdc*100: 281.018ms\nbenchRfdcProto*100: 277.265ms\nbenchRfdcCircles*100: 328.148ms\nbenchRfdcCirclesProto*100: 323.004ms\n```\n\n## Tests\n\n```sh\nnpm test\n```\n\n```\n169 passing (342.514ms)\n```\n\n### Coverage\n\n```sh\nnpm run cov\n```\n\n```\n----------|----------|----------|----------|----------|-------------------|\nFile      |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |\n----------|----------|----------|----------|----------|-------------------|\nAll files |      100 |      100 |      100 |      100 |                   |\n index.js |      100 |      100 |      100 |      100 |                   |\n----------|----------|----------|----------|----------|-------------------|\n```\n\n## License\n\nMIT\n",
    "licenseText": "Copyright 2019 \"David Mark Clements <david.mark.clements@gmail.com>\"\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated \ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation \nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and \nto permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions \nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED \nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL \nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF \nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS \nIN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rfdc/-/rfdc-1.3.0.tgz#d0b7c441ab2720d05dc4cf26e01c89631d9da08b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rfdc/-/rfdc-1.3.0.tgz",
    "hash": "d0b7c441ab2720d05dc4cf26e01c89631d9da08b",
    "integrity": "sha512-V2hovdzFbOi77/WajaSMXk2OLm+xNIeQdMMuB7icj7bk6zi2F8GGAxigcnDFpJHbNyNcgyJDiP+8nOrY5cZGrA==",
    "registry": "npm",
    "packageName": "rfdc",
    "cacheIntegrity": "sha512-V2hovdzFbOi77/WajaSMXk2OLm+xNIeQdMMuB7icj7bk6zi2F8GGAxigcnDFpJHbNyNcgyJDiP+8nOrY5cZGrA== sha1-0LfEQasnINBdxM8m4ByJYx2doIs="
  },
  "registry": "npm",
  "hash": "d0b7c441ab2720d05dc4cf26e01c89631d9da08b"
}