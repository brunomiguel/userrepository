{
  "manifest": {
    "name": "string.prototype.matchall",
    "version": "4.0.6",
    "description": "Spec-compliant polyfill for String.prototype.matchAll",
    "main": "index.js",
    "scripts": {
      "prepublish": "not-in-publish || npm run prepublishOnly",
      "prepublishOnly": "safe-publish-latest",
      "pretest": "npm run lint",
      "test": "npm run tests-only",
      "posttest": "npx aud --production",
      "tests-only": "nyc tape 'test/**/*.js'",
      "prelint": "evalmd *.md",
      "lint": "eslint .",
      "postlint": "es-shim-api --bound",
      "version": "auto-changelog && git add CHANGELOG.md",
      "postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/es-shims/String.prototype.matchAll.git"
    },
    "keywords": [
      "ES2020",
      "ES",
      "String.prototype.matchAll",
      "matchAll",
      "match",
      "regex",
      "regexp",
      "regular",
      "expression",
      "matches"
    ],
    "author": {
      "name": "Jordan Harband",
      "email": "ljharb@gmail.com"
    },
    "funding": {
      "url": "https://github.com/sponsors/ljharb"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/es-shims/String.prototype.matchAll/issues"
    },
    "homepage": "https://github.com/es-shims/String.prototype.matchAll#readme",
    "dependencies": {
      "call-bind": "^1.0.2",
      "define-properties": "^1.1.3",
      "es-abstract": "^1.19.1",
      "get-intrinsic": "^1.1.1",
      "has-symbols": "^1.0.2",
      "internal-slot": "^1.0.3",
      "regexp.prototype.flags": "^1.3.1",
      "side-channel": "^1.0.4"
    },
    "devDependencies": {
      "@es-shims/api": "^2.2.2",
      "@ljharb/eslint-config": "^18.0.0",
      "aud": "^1.1.5",
      "auto-changelog": "^2.3.0",
      "es5-shim": "^4.6.2",
      "es6-shim": "^0.35.6",
      "eslint": "^7.32.0",
      "evalmd": "^0.0.19",
      "foreach": "^2.0.5",
      "functions-have-names": "^1.2.2",
      "nyc": "^10.3.2",
      "object-inspect": "^1.11.0",
      "object.assign": "^4.1.2",
      "object.entries": "^1.1.5",
      "safe-publish-latest": "^1.1.4",
      "tape": "^5.3.1"
    },
    "auto-changelog": {
      "output": "CHANGELOG.md",
      "template": "keepachangelog",
      "unreleased": false,
      "commitLimit": false,
      "backfillLimit": false,
      "hideCredit": true,
      "startingVersion": "v4.0.5"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-string-prototype-matchall-4.0.6-integrity/node_modules/string.prototype.matchall/package.json",
    "readmeFilename": "README.md",
    "readme": "# string.prototype.matchall <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nES2020 spec-compliant shim for String.prototype.matchAll. Invoke its \"shim\" method to shim `String.prototype.matchAll` if it is unavailable or noncompliant.\n\nThis package implements the [es-shim API](https://github.com/es-shims/api) interface. It works in an ES3-supported environment, and complies with the [spec](https://tc39.es/ecma262/#sec-string.prototype.matchall).\n\nMost common usage:\n```js\nconst assert = require('assert');\nconst matchAll = require('string.prototype.matchall');\n\nconst str = 'aabc';\nconst nonRegexStr = 'ab';\nconst globalRegex = /[ac]/g;\nconst nonGlobalRegex = /[bc]/i;\n\n// non-regex arguments are coerced into a global regex\nassert.deepEqual(\n\t[...matchAll(str, nonRegexStr)],\n\t[...matchAll(str, new RegExp(nonRegexStr, 'g'))]\n);\n\nassert.deepEqual([...matchAll(str, globalRegex)], [\n\tObject.assign(['a'], { index: 0, input: str, groups: undefined }),\n\tObject.assign(['a'], { index: 1, input: str, groups: undefined }),\n\tObject.assign(['c'], { index: 3, input: str, groups: undefined }),\n]);\n\nassert.throws(() => matchAll(str, nonGlobalRegex)); // non-global regexes throw\n\nmatchAll.shim(); // will be a no-op if not needed\n\n// non-regex arguments are coerced into a global regex\nassert.deepEqual(\n\t[...str.matchAll(nonRegexStr)],\n\t[...str.matchAll(new RegExp(nonRegexStr, 'g'))]\n);\n\nassert.deepEqual([...str.matchAll(globalRegex)], [\n\tObject.assign(['a'], { index: 0, input: str, groups: undefined }),\n\tObject.assign(['a'], { index: 1, input: str, groups: undefined }),\n\tObject.assign(['c'], { index: 3, input: str, groups: undefined }),\n]);\n\nassert.throws(() => matchAll(str, nonGlobalRegex)); // non-global regexes throw\n\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.com/package/string.prototype.matchall\n[npm-version-svg]: https://versionbadg.es/es-shims/String.prototype.matchAll.svg\n[deps-svg]: https://david-dm.org/es-shims/String.prototype.matchAll.svg\n[deps-url]: https://david-dm.org/es-shims/String.prototype.matchAll\n[dev-deps-svg]: https://david-dm.org/es-shims/String.prototype.matchAll/dev-status.svg\n[dev-deps-url]: https://david-dm.org/es-shims/String.prototype.matchAll#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/string.prototype.matchall.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/string.prototype.matchall.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/string.prototype.matchall.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=string.prototype.matchall\n[codecov-image]: https://codecov.io/gh/es-shims/String.prototype.matchAll/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/es-shims/String.prototype.matchAll/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/es-shims/String.prototype.matchAll\n[actions-url]: https://github.com/es-shims/String.prototype.matchAll/actions\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Jordan Harband\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.6.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.6.tgz",
    "hash": "",
    "integrity": "sha512-6WgDX8HmQqvEd7J+G6VtAahhsQIssiZ8zl7zKh1VDMFyL3hRTJP4FTNA3RbIp2TOQ9AYNDcc7e3fH0Qbup+DBg==",
    "registry": "npm",
    "packageName": "string.prototype.matchall",
    "cacheIntegrity": "sha512-6WgDX8HmQqvEd7J+G6VtAahhsQIssiZ8zl7zKh1VDMFyL3hRTJP4FTNA3RbIp2TOQ9AYNDcc7e3fH0Qbup+DBg== sha1-Wrtdq8lMew6iOA9lumELOlRLFfo="
  },
  "registry": "npm",
  "hash": "e968035fc1e642abc477b27e1ba56d01a861b1022cb2267cce5ef32a1d550cc1722f78514c93f8153340dd16c8a764ce43d01834371cededdf1f441bba9f8306"
}