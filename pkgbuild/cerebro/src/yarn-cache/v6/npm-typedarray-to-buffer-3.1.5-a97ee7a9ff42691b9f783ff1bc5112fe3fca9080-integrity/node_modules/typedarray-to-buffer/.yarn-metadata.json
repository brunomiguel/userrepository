{
  "manifest": {
    "name": "typedarray-to-buffer",
    "description": "Convert a typed array to a Buffer without a copy",
    "version": "3.1.5",
    "author": {
      "name": "Feross Aboukhadijeh",
      "email": "feross@feross.org",
      "url": "http://feross.org/"
    },
    "bugs": {
      "url": "https://github.com/feross/typedarray-to-buffer/issues"
    },
    "dependencies": {
      "is-typedarray": "^1.0.0"
    },
    "devDependencies": {
      "airtap": "0.0.4",
      "standard": "*",
      "tape": "^4.0.0"
    },
    "homepage": "http://feross.org/",
    "keywords": [
      "buffer",
      "typed array",
      "convert",
      "no copy",
      "uint8array",
      "uint16array",
      "uint32array",
      "int16array",
      "int32array",
      "float32array",
      "float64array",
      "browser",
      "arraybuffer",
      "dataview"
    ],
    "license": "MIT",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "git://github.com/feross/typedarray-to-buffer.git"
    },
    "scripts": {
      "test": "standard && npm run test-node && npm run test-browser",
      "test-browser": "airtap -- test/*.js",
      "test-browser-local": "airtap --local -- test/*.js",
      "test-node": "tape test/*.js"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-typedarray-to-buffer-3.1.5-a97ee7a9ff42691b9f783ff1bc5112fe3fca9080-integrity/node_modules/typedarray-to-buffer/package.json",
    "readmeFilename": "README.md",
    "readme": "# typedarray-to-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/typedarray-to-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/typedarray-to-buffer\n[npm-image]: https://img.shields.io/npm/v/typedarray-to-buffer.svg\n[npm-url]: https://npmjs.org/package/typedarray-to-buffer\n[downloads-image]: https://img.shields.io/npm/dm/typedarray-to-buffer.svg\n[downloads-url]: https://npmjs.org/package/typedarray-to-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Convert a typed array to a [Buffer](https://github.com/feross/buffer) without a copy.\n\n[![saucelabs][saucelabs-image]][saucelabs-url]\n\n[saucelabs-image]: https://saucelabs.com/browser-matrix/typedarray-to-buffer.svg\n[saucelabs-url]: https://saucelabs.com/u/typedarray-to-buffer\n\nSay you're using the ['buffer'](https://github.com/feross/buffer) module on npm, or\n[browserify](http://browserify.org/) and you're working with lots of binary data.\n\nUnfortunately, sometimes the browser or someone else's API gives you a typed array like\n`Uint8Array` to work with and you need to convert it to a `Buffer`. What do you do?\n\nOf course: `Buffer.from(uint8array)`\n\nBut, alas, every time you do `Buffer.from(uint8array)` **the entire array gets copied**.\nThe `Buffer` constructor does a copy; this is\ndefined by the [node docs](http://nodejs.org/api/buffer.html) and the 'buffer' module\nmatches the node API exactly.\n\nSo, how can we avoid this expensive copy in\n[performance critical applications](https://github.com/feross/buffer/issues/22)?\n\n***Simply use this module, of course!***\n\nIf you have an `ArrayBuffer`, you don't need this module, because\n`Buffer.from(arrayBuffer)`\n[is already efficient](https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length).\n\n## install\n\n```bash\nnpm install typedarray-to-buffer\n```\n\n## usage\n\nTo convert a typed array to a `Buffer` **without a copy**, do this:\n\n```js\nvar toBuffer = require('typedarray-to-buffer')\n\nvar arr = new Uint8Array([1, 2, 3])\narr = toBuffer(arr)\n\n// arr is a buffer now!\n\narr.toString()  // '\\u0001\\u0002\\u0003'\narr.readUInt16BE(0)  // 258\n```\n\n## how it works\n\nIf the browser supports typed arrays, then `toBuffer` will **augment the typed array** you\npass in with the `Buffer` methods and return it. See [how does Buffer\nwork?](https://github.com/feross/buffer#how-does-it-work) for more about how augmentation\nworks.\n\nThis module uses the typed array's underlying `ArrayBuffer` to back the new `Buffer`. This\nrespects the \"view\" on the `ArrayBuffer`, i.e. `byteOffset` and `byteLength`. In other\nwords, if you do `toBuffer(new Uint32Array([1, 2, 3]))`, then the new `Buffer` will\ncontain `[1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0]`, **not** `[1, 2, 3]`. And it still doesn't\nrequire a copy.\n\nIf the browser doesn't support typed arrays, then `toBuffer` will create a new `Buffer`\nobject, copy the data into it, and return it. There's no simple performance optimization\nwe can do for old browsers. Oh well.\n\nIf this module is used in node, then it will just call `Buffer.from`. This is just for\nthe convenience of modules that work in both node and the browser.\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Feross Aboukhadijeh\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz#a97ee7a9ff42691b9f783ff1bc5112fe3fca9080",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
    "hash": "a97ee7a9ff42691b9f783ff1bc5112fe3fca9080",
    "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
    "registry": "npm",
    "packageName": "typedarray-to-buffer",
    "cacheIntegrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q== sha1-qX7nqf9CaRufeD/xvFES/j/KkIA="
  },
  "registry": "npm",
  "hash": "a97ee7a9ff42691b9f783ff1bc5112fe3fca9080"
}