{
  "manifest": {
    "name": "d3-ease",
    "version": "3.0.1",
    "description": "Easing functions for smooth animation.",
    "homepage": "https://d3js.org/d3-ease/",
    "repository": {
      "type": "git",
      "url": "https://github.com/d3/d3-ease.git"
    },
    "keywords": [
      "d3",
      "d3-module",
      "ease",
      "easing",
      "animation",
      "transition"
    ],
    "license": "BSD-3-Clause",
    "author": {
      "name": "Mike Bostock",
      "url": "http://bost.ocks.org/mike"
    },
    "type": "module",
    "files": [
      "dist/**/*.js",
      "src/**/*.js"
    ],
    "module": "src/index.js",
    "main": "src/index.js",
    "jsdelivr": "dist/d3-ease.min.js",
    "unpkg": "dist/d3-ease.min.js",
    "exports": {
      "umd": "./dist/d3-ease.min.js",
      "default": "./src/index.js"
    },
    "sideEffects": false,
    "devDependencies": {
      "eslint": "7",
      "mocha": "8",
      "rollup": "2",
      "rollup-plugin-terser": "7"
    },
    "scripts": {
      "test": "mocha 'test/**/*-test.js' && eslint src test",
      "prepublishOnly": "rm -rf dist && yarn test && rollup -c",
      "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../${npm_package_name}/dist/${npm_package_name}.js ${npm_package_name}.v${npm_package_version%%.*}.js && cp ../${npm_package_name}/dist/${npm_package_name}.min.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git add ${npm_package_name}.v${npm_package_version%%.*}.js ${npm_package_name}.v${npm_package_version%%.*}.min.js && git commit -m \"${npm_package_name} ${npm_package_version}\" && git push && cd -"
    },
    "engines": {
      "node": ">=12"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-d3-ease-3.0.1-9658ac38a2140d59d346160f1f6c30fda0bd12f4-integrity/node_modules/d3-ease/package.json",
    "readmeFilename": "README.md",
    "readme": "# d3-ease\n\n*Easing* is a method of distorting time to control apparent motion in animation. It is most commonly used for [slow-in, slow-out](https://en.wikipedia.org/wiki/12_basic_principles_of_animation#Slow_In_and_Slow_Out). By easing time, [animated transitions](https://github.com/d3/d3-transition) are smoother and exhibit more plausible motion.\n\nThe easing types in this module implement the [ease method](#ease_ease), which takes a normalized time *t* and returns the corresponding “eased” time *tʹ*. Both the normalized time and the eased time are typically in the range [0,1], where 0 represents the start of the animation and 1 represents the end; some easing types, such as [elastic](#easeElastic), may return eased times slightly outside this range. A good easing type should return 0 if *t* = 0 and 1 if *t* = 1. See the [easing explorer](https://observablehq.com/@d3/easing) for a visual demonstration.\n\nThese easing types are largely based on work by [Robert Penner](http://robertpenner.com/easing/).\n\n## Installing\n\nIf you use npm, `npm install d3-ease`. You can also download the [latest release on GitHub](https://github.com/d3/d3-ease/releases/latest). For vanilla HTML in modern browsers, import d3-ease from Skypack:\n\n```html\n<script type=\"module\">\n\nimport {easeCubic} from \"https://cdn.skypack.dev/d3-ease@3\";\n\nconst e = easeCubic(0.25);\n\n</script>\n```\n\nFor legacy environments, you can load d3-ease’s UMD bundle from an npm-based CDN such as jsDelivr; a `d3` global is exported:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/d3-ease@3\"></script>\n<script>\n\nconst e = d3.easeCubic(0.25);\n\n</script>\n```\n\n[Try d3-ease in your browser.](https://observablehq.com/@d3/easing-animations)\n\n## API Reference\n\n<a name=\"_ease\" href=\"#_ease\">#</a> <i>ease</i>(<i>t</i>)\n\nGiven the specified normalized time *t*, typically in the range [0,1], returns the “eased” time *tʹ*, also typically in [0,1]. 0 represents the start of the animation and 1 represents the end. A good implementation returns 0 if *t* = 0 and 1 if *t* = 1. See the [easing explorer](https://observablehq.com/@d3/easing) for a visual demonstration. For example, to apply [cubic](#easeCubic) easing:\n\n```js\nconst te = d3.easeCubic(t);\n```\n\nSimilarly, to apply custom [elastic](#easeElastic) easing:\n\n```js\n// Before the animation starts, create your easing function.\nconst customElastic = d3.easeElastic.period(0.4);\n\n// During the animation, apply the easing function.\nconst te = customElastic(t);\n```\n\n<a name=\"easeLinear\" href=\"#easeLinear\">#</a> d3.<b>easeLinear</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/linear.js \"Source\")\n\nLinear easing; the identity function; *linear*(*t*) returns *t*.\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/linear.png\" alt=\"linear\">](https://observablehq.com/@d3/easing#linear)\n\n<a name=\"easePolyIn\" href=\"#easePolyIn\">#</a> d3.<b>easePolyIn</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/poly.js#L3 \"Source\")\n\nPolynomial easing; raises *t* to the specified [exponent](#poly_exponent). If the exponent is not specified, it defaults to 3, equivalent to [cubicIn](#easeCubicIn).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/polyIn.png\" alt=\"polyIn\">](https://observablehq.com/@d3/easing#polyIn)\n\n<a name=\"easePolyOut\" href=\"#easePolyOut\">#</a> d3.<b>easePolyOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/poly.js#L15 \"Source\")\n\nReverse polynomial easing; equivalent to 1 - [polyIn](#easePolyIn)(1 - *t*). If the [exponent](#poly_exponent) is not specified, it defaults to 3, equivalent to [cubicOut](#easeCubicOut).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/polyOut.png\" alt=\"polyOut\">](https://observablehq.com/@d3/easing#polyOut)\n\n<a name=\"easePoly\" href=\"#easePoly\">#</a> d3.<b>easePoly</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/poly.js \"Source\")\n<br><a name=\"easePolyInOut\" href=\"#easePolyInOut\">#</a> d3.<b>easePolyInOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/poly.js#L27 \"Source\")\n\nSymmetric polynomial easing; scales [polyIn](#easePolyIn) for *t* in [0, 0.5] and [polyOut](#easePolyOut) for *t* in [0.5, 1]. If the [exponent](#poly_exponent) is not specified, it defaults to 3, equivalent to [cubic](#easeCubic).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/polyInOut.png\" alt=\"polyInOut\">](https://observablehq.com/@d3/easing#polyInOut)\n\n<a name=\"poly_exponent\" href=\"#poly_exponent\">#</a> <i>poly</i>.<b>exponent</b>(<i>e</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/poly.js#L1 \"Source\")\n\nReturns a new polynomial easing with the specified exponent *e*. For example, to create equivalents of [linear](#easeLinear), [quad](#easeQuad), and [cubic](#easeCubic):\n\n```js\nconst linear = d3.easePoly.exponent(1);\nconst quad = d3.easePoly.exponent(2);\nconst cubic = d3.easePoly.exponent(3);\n```\n\n<a name=\"easeQuadIn\" href=\"#easeQuadIn\">#</a> d3.<b>easeQuadIn</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/quad.js#L1 \"Source\")\n\nQuadratic easing; equivalent to [polyIn](#easePolyIn).[exponent](#poly_exponent)(2).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/quadIn.png\" alt=\"quadIn\">](https://observablehq.com/@d3/easing#quadIn)\n\n<a name=\"easeQuadOut\" href=\"#easeQuadOut\">#</a> d3.<b>easeQuadOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/quad.js#L5 \"Source\")\n\nReverse quadratic easing; equivalent to 1 - [quadIn](#easeQuadIn)(1 - *t*). Also equivalent to [polyOut](#easePolyOut).[exponent](#poly_exponent)(2).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/quadOut.png\" alt=\"quadOut\">](https://observablehq.com/@d3/easing#quadOut)\n\n<a name=\"easeQuad\" href=\"#easeQuad\">#</a> d3.<b>easeQuad</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/quad.js \"Source\")\n<br><a name=\"easeQuadInOut\" href=\"#easeQuadInOut\">#</a> d3.<b>easeQuadInOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/quad.js#L9 \"Source\")\n\nSymmetric quadratic easing; scales [quadIn](#easeQuadIn) for *t* in [0, 0.5] and [quadOut](#easeQuadOut) for *t* in [0.5, 1]. Also equivalent to [poly](#easePoly).[exponent](#poly_exponent)(2).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/quadInOut.png\" alt=\"quadInOut\">](https://observablehq.com/@d3/easing#quadInOut)\n\n<a name=\"easeCubicIn\" href=\"#easeCubicIn\">#</a> d3.<b>easeCubicIn</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/cubic.js#L1 \"Source\")\n\nCubic easing; equivalent to [polyIn](#easePolyIn).[exponent](#poly_exponent)(3).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/cubicIn.png\" alt=\"cubicIn\">](https://observablehq.com/@d3/easing#cubicIn)\n\n<a name=\"easeCubicOut\" href=\"#easeCubicOut\">#</a> d3.<b>easeCubicOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/cubic.js#L5 \"Source\")\n\nReverse cubic easing; equivalent to 1 - [cubicIn](#easeCubicIn)(1 - *t*). Also equivalent to [polyOut](#easePolyOut).[exponent](#poly_exponent)(3).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/cubicOut.png\" alt=\"cubicOut\">](https://observablehq.com/@d3/easing#cubicOut)\n\n<a name=\"easeCubic\" href=\"#easeCubic\">#</a> d3.<b>easeCubic</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/cubic.js \"Source\")\n<br><a name=\"easeCubicInOut\" href=\"#easeCubicInOut\">#</a> d3.<b>easeCubicInOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/cubic.js#L9 \"Source\")\n\nSymmetric cubic easing; scales [cubicIn](#easeCubicIn) for *t* in [0, 0.5] and [cubicOut](#easeCubicOut) for *t* in [0.5, 1]. Also equivalent to [poly](#easePoly).[exponent](#poly_exponent)(3).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/cubicInOut.png\" alt=\"cubicInOut\">](https://observablehq.com/@d3/easing#cubicInOut)\n\n<a name=\"easeSinIn\" href=\"#easeSinIn\">#</a> d3.<b>easeSinIn</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/sin.js#L4 \"Source\")\n\nSinusoidal easing; returns sin(*t*).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/sinIn.png\" alt=\"sinIn\">](https://observablehq.com/@d3/easing#sinIn)\n\n<a name=\"easeSinOut\" href=\"#easeSinOut\">#</a> d3.<b>easeSinOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/sin.js#L8 \"Source\")\n\nReverse sinusoidal easing; equivalent to 1 - [sinIn](#easeSinIn)(1 - *t*).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/sinOut.png\" alt=\"sinOut\">](https://observablehq.com/@d3/easing#sinOut)\n\n<a name=\"easeSin\" href=\"#easeSin\">#</a> d3.<b>easeSin</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/sin.js \"Source\")\n<br><a name=\"easeSinInOut\" href=\"#easeSinInOut\">#</a> d3.<b>easeSinInOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/sin.js#L12 \"Source\")\n\nSymmetric sinusoidal easing; scales [sinIn](#easeSinIn) for *t* in [0, 0.5] and [sinOut](#easeSinOut) for *t* in [0.5, 1].\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/sinInOut.png\" alt=\"sinInOut\">](https://observablehq.com/@d3/easing#sinInOut)\n\n<a name=\"easeExpIn\" href=\"#easeExpIn\">#</a> d3.<b>easeExpIn</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/exp.js#L1 \"Source\")\n\nExponential easing; raises 2 to the exponent 10 \\* (*t* - 1).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/expIn.png\" alt=\"expIn\">](https://observablehq.com/@d3/easing#expIn)\n\n<a name=\"easeExpOut\" href=\"#easeExpOut\">#</a> d3.<b>easeExpOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/exp.js#L5 \"Source\")\n\nReverse exponential easing; equivalent to 1 - [expIn](#easeExpIn)(1 - *t*).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/expOut.png\" alt=\"expOut\">](https://observablehq.com/@d3/easing#expOut)\n\n<a name=\"easeExp\" href=\"#easeExp\">#</a> d3.<b>easeExp</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/exp.js \"Source\")\n<br><a name=\"easeExpInOut\" href=\"#easeExpInOut\">#</a> d3.<b>easeExpInOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/exp.js#L9 \"Source\")\n\nSymmetric exponential easing; scales [expIn](#easeExpIn) for *t* in [0, 0.5] and [expOut](#easeExpOut) for *t* in [0.5, 1].\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/expInOut.png\" alt=\"expInOut\">](https://observablehq.com/@d3/easing#expInOut)\n\n<a name=\"easeCircleIn\" href=\"#easeCircleIn\">#</a> d3.<b>easeCircleIn</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/circle.js#L1 \"Source\")\n\nCircular easing.\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/circleIn.png\" alt=\"circleIn\">](https://observablehq.com/@d3/easing#circleIn)\n\n<a name=\"easeCircleOut\" href=\"#easeCircleOut\">#</a> d3.<b>easeCircleOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/circle.js#L5 \"Source\")\n\nReverse circular easing; equivalent to 1 - [circleIn](#easeCircleIn)(1 - *t*).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/circleOut.png\" alt=\"circleOut\">](https://observablehq.com/@d3/easing#circleOut)\n\n<a name=\"easeCircle\" href=\"#easeCircle\">#</a> d3.<b>easeCircle</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/circle.js \"Source\")\n<br><a name=\"easeCircleInOut\" href=\"#easeCircleInOut\">#</a> d3.<b>easeCircleInOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/circle.js#L9 \"Source\")\n\nSymmetric circular easing; scales [circleIn](#easeCircleIn) for *t* in [0, 0.5] and [circleOut](#easeCircleOut) for *t* in [0.5, 1].\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/circleInOut.png\" alt=\"circleInOut\">](https://observablehq.com/@d3/easing#circleInOut)\n\n<a name=\"easeElasticIn\" href=\"#easeElasticIn\">#</a> d3.<b>easeElasticIn</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/elastic.js#L5 \"Source\")\n\nElastic easing, like a rubber band. The [amplitude](#elastic_amplitude) and [period](#elastic_period) of the oscillation are configurable; if not specified, they default to 1 and 0.3, respectively.\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/elasticIn.png\" alt=\"elasticIn\">](https://observablehq.com/@d3/easing#elasticIn)\n\n<a name=\"easeElastic\" href=\"#easeElastic\">#</a> d3.<b>easeElastic</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/elastic.js \"Source\")\n<br><a name=\"easeElasticOut\" href=\"#easeElasticOut\">#</a> d3.<b>easeElasticOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/elastic.js#L18 \"Source\")\n\nReverse elastic easing; equivalent to 1 - [elasticIn](#easeElasticIn)(1 - *t*).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/elasticOut.png\" alt=\"elasticOut\">](https://observablehq.com/@d3/easing#elasticOut)\n\n<a name=\"easeElasticInOut\" href=\"#easeElasticInOut\">#</a> d3.<b>easeElasticInOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/elastic.js#L31 \"Source\")\n\nSymmetric elastic easing; scales [elasticIn](#easeElasticIn) for *t* in [0, 0.5] and [elasticOut](#easeElasticOut) for *t* in [0.5, 1].\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/elasticInOut.png\" alt=\"elasticInOut\">](https://observablehq.com/@d3/easing#elasticInOut)\n\n<a name=\"elastic_amplitude\" href=\"#elastic_amplitude\">#</a> <i>elastic</i>.<b>amplitude</b>(<i>a</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/elastic.js#L40 \"Source\")\n\nReturns a new elastic easing with the specified amplitude *a*.\n\n<a name=\"elastic_period\" href=\"#elastic_period\">#</a> <i>elastic</i>.<b>period</b>(<i>p</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/elastic.js#L41 \"Source\")\n\nReturns a new elastic easing with the specified period *p*.\n\n<a name=\"easeBackIn\" href=\"#easeBackIn\">#</a> d3.<b>easeBackIn</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/back.js#L3 \"Source\")\n\n[Anticipatory](https://en.wikipedia.org/wiki/12_basic_principles_of_animation#Anticipation) easing, like a dancer bending his knees before jumping off the floor. The degree of [overshoot](#back_overshoot) is configurable; if not specified, it defaults to 1.70158.\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/backIn.png\" alt=\"backIn\">](https://observablehq.com/@d3/easing#backIn)\n\n<a name=\"easeBackOut\" href=\"#easeBackOut\">#</a> d3.<b>easeBackOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/back.js#L15 \"Source\")\n\nReverse anticipatory easing; equivalent to 1 - [backIn](#easeBackIn)(1 - *t*).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/backOut.png\" alt=\"backOut\">](https://observablehq.com/@d3/easing#backOut)\n\n<a name=\"easeBack\" href=\"#easeBack\">#</a> d3.<b>easeBack</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/back.js \"Source\")\n<br><a name=\"easeBackInOut\" href=\"#easeBackInOut\">#</a> d3.<b>easeBackInOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/back.js#L27 \"Source\")\n\nSymmetric anticipatory easing; scales [backIn](#easeBackIn) for *t* in [0, 0.5] and [backOut](#easeBackOut) for *t* in [0.5, 1].\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/backInOut.png\" alt=\"backInOut\">](https://observablehq.com/@d3/easing#backInOut)\n\n<a name=\"back_overshoot\" href=\"#back_overshoot\">#</a> <i>back</i>.<b>overshoot</b>(<i>s</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/back.js#L1 \"Source\")\n\nReturns a new back easing with the specified overshoot *s*.\n\n<a name=\"easeBounceIn\" href=\"#easeBounceIn\">#</a> d3.<b>easeBounceIn</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/bounce.js#L12 \"Source\")\n\nBounce easing, like a rubber ball.\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/bounceIn.png\" alt=\"bounceIn\">](https://observablehq.com/@d3/easing#bounceIn)\n\n<a name=\"easeBounce\" href=\"#easeBounce\">#</a> d3.<b>easeBounce</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/bounce.js \"Source\")\n<br><a name=\"easeBounceOut\" href=\"#easeBounceOut\">#</a> d3.<b>easeBounceOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/bounce.js#L16 \"Source\")\n\nReverse bounce easing; equivalent to 1 - [bounceIn](#easeBounceIn)(1 - *t*).\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/bounceOut.png\" alt=\"bounceOut\">](https://observablehq.com/@d3/easing#bounceOut)\n\n<a name=\"easeBounceInOut\" href=\"#easeBounceInOut\">#</a> d3.<b>easeBounceInOut</b>(<i>t</i>) [<>](https://github.com/d3/d3-ease/blob/master/src/bounce.js#L20 \"Source\")\n\nSymmetric bounce easing; scales [bounceIn](#easeBounceIn) for *t* in [0, 0.5] and [bounceOut](#easeBounceOut) for *t* in [0.5, 1].\n\n[<img src=\"https://raw.githubusercontent.com/d3/d3-ease/master/img/bounceInOut.png\" alt=\"bounceInOut\">](https://observablehq.com/@d3/easing#bounceInOut)\n",
    "licenseText": "Copyright 2010-2021 Mike Bostock\nCopyright 2001 Robert Penner\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the author nor the names of contributors may be used to\n  endorse or promote products derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/d3-ease/-/d3-ease-3.0.1.tgz#9658ac38a2140d59d346160f1f6c30fda0bd12f4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/d3-ease/-/d3-ease-3.0.1.tgz",
    "hash": "9658ac38a2140d59d346160f1f6c30fda0bd12f4",
    "integrity": "sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==",
    "registry": "npm",
    "packageName": "d3-ease",
    "cacheIntegrity": "sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w== sha1-llisOKIUDVnTRhYPH2ww/aC9EvQ="
  },
  "registry": "npm",
  "hash": "9658ac38a2140d59d346160f1f6c30fda0bd12f4"
}