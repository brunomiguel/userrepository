{"mappings":"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","sources":["packages/react/context-menu/src/index.ts","packages/react/context-menu/src/ContextMenu.tsx"],"sourcesContent":["export {\n  createContextMenuScope,\n  //\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuPortal,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuLabel,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuItemIndicator,\n  ContextMenuSeparator,\n  ContextMenuArrow,\n  ContextMenuSub,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './ContextMenu';\nexport type {\n  ContextMenuProps,\n  ContextMenuTriggerProps,\n  ContextMenuPortalProps,\n  ContextMenuContentProps,\n  ContextMenuGroupProps,\n  ContextMenuLabelProps,\n  ContextMenuItemProps,\n  ContextMenuCheckboxItemProps,\n  ContextMenuRadioGroupProps,\n  ContextMenuRadioItemProps,\n  ContextMenuItemIndicatorProps,\n  ContextMenuSeparatorProps,\n  ContextMenuArrowProps,\n  ContextMenuSubProps,\n  ContextMenuSubTriggerProps,\n  ContextMenuSubContentProps,\n} from './ContextMenu';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\ntype Point = { x: number; y: number };\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTEXT_MENU_NAME = 'ContextMenu';\n\ntype ScopedProps<P> = P & { __scopeContextMenu?: Scope };\nconst [createContextMenuContext, createContextMenuScope] = createContextScope(CONTEXT_MENU_NAME, [\n  createMenuScope,\n]);\nconst useMenuScope = createMenuScope();\n\ntype ContextMenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  modal: boolean;\n};\n\nconst [ContextMenuProvider, useContextMenuContext] =\n  createContextMenuContext<ContextMenuContextValue>(CONTEXT_MENU_NAME);\n\ninterface ContextMenuProps {\n  children?: React.ReactNode;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst ContextMenu: React.FC<ContextMenuProps> = (props: ScopedProps<ContextMenuProps>) => {\n  const { __scopeContextMenu, children, onOpenChange, dir, modal = true } = props;\n  const [open, setOpen] = React.useState(false);\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const handleOpenChangeProp = useCallbackRef(onOpenChange);\n\n  const handleOpenChange = React.useCallback(\n    (open: boolean) => {\n      setOpen(open);\n      handleOpenChangeProp(open);\n    },\n    [handleOpenChangeProp]\n  );\n\n  return (\n    <ContextMenuProvider\n      scope={__scopeContextMenu}\n      open={open}\n      onOpenChange={handleOpenChange}\n      modal={modal}\n    >\n      <MenuPrimitive.Root\n        {...menuScope}\n        dir={dir}\n        open={open}\n        onOpenChange={handleOpenChange}\n        modal={modal}\n      >\n        {children}\n      </MenuPrimitive.Root>\n    </ContextMenuProvider>\n  );\n};\n\nContextMenu.displayName = CONTEXT_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'ContextMenuTrigger';\n\ntype ContextMenuTriggerElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface ContextMenuTriggerProps extends PrimitiveSpanProps {\n  disabled?: boolean;\n}\n\nconst ContextMenuTrigger = React.forwardRef<ContextMenuTriggerElement, ContextMenuTriggerProps>(\n  (props: ScopedProps<ContextMenuTriggerProps>, forwardedRef) => {\n    const { __scopeContextMenu, disabled = false, ...triggerProps } = props;\n    const context = useContextMenuContext(TRIGGER_NAME, __scopeContextMenu);\n    const menuScope = useMenuScope(__scopeContextMenu);\n    const pointRef = React.useRef<Point>({ x: 0, y: 0 });\n    const virtualRef = React.useRef({\n      getBoundingClientRect: () => DOMRect.fromRect({ width: 0, height: 0, ...pointRef.current }),\n    });\n    const longPressTimerRef = React.useRef(0);\n    const clearLongPress = React.useCallback(\n      () => window.clearTimeout(longPressTimerRef.current),\n      []\n    );\n    const handleOpen = (event: React.MouseEvent | React.PointerEvent) => {\n      pointRef.current = { x: event.clientX, y: event.clientY };\n      context.onOpenChange(true);\n    };\n\n    React.useEffect(() => clearLongPress, [clearLongPress]);\n    React.useEffect(() => void (disabled && clearLongPress()), [disabled, clearLongPress]);\n\n    return (\n      <>\n        <MenuPrimitive.Anchor {...menuScope} virtualRef={virtualRef} />\n        <Primitive.span\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          {...triggerProps}\n          ref={forwardedRef}\n          // prevent iOS context menu from appearing\n          style={{ WebkitTouchCallout: 'none', ...props.style }}\n          // if trigger is disabled, enable the native Context Menu\n          onContextMenu={\n            disabled\n              ? props.onContextMenu\n              : composeEventHandlers(props.onContextMenu, (event) => {\n                  // clearing the long press here because some platforms already support\n                  // long press to trigger a `contextmenu` event\n                  clearLongPress();\n                  handleOpen(event);\n                  event.preventDefault();\n                })\n          }\n          onPointerDown={\n            disabled\n              ? props.onPointerDown\n              : composeEventHandlers(\n                  props.onPointerDown,\n                  whenTouchOrPen((event) => {\n                    // clear the long press here in case there's multiple touch points\n                    clearLongPress();\n                    longPressTimerRef.current = window.setTimeout(() => handleOpen(event), 700);\n                  })\n                )\n          }\n          onPointerMove={\n            disabled\n              ? props.onPointerMove\n              : composeEventHandlers(props.onPointerMove, whenTouchOrPen(clearLongPress))\n          }\n          onPointerCancel={\n            disabled\n              ? props.onPointerCancel\n              : composeEventHandlers(props.onPointerCancel, whenTouchOrPen(clearLongPress))\n          }\n          onPointerUp={\n            disabled\n              ? props.onPointerUp\n              : composeEventHandlers(props.onPointerUp, whenTouchOrPen(clearLongPress))\n          }\n        />\n      </>\n    );\n  }\n);\n\nContextMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'ContextMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface ContextMenuPortalProps extends MenuPortalProps {}\n\nconst ContextMenuPortal: React.FC<ContextMenuPortalProps> = (\n  props: ScopedProps<ContextMenuPortalProps>\n) => {\n  const { __scopeContextMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nContextMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'ContextMenuContent';\n\ntype ContextMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface ContextMenuContentProps extends Omit<MenuContentProps, 'side' | 'sideOffset' | 'align'> {}\n\nconst ContextMenuContent = React.forwardRef<ContextMenuContentElement, ContextMenuContentProps>(\n  (props: ScopedProps<ContextMenuContentProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...contentProps } = props;\n    const context = useContextMenuContext(CONTENT_NAME, __scopeContextMenu);\n    const menuScope = useMenuScope(__scopeContextMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        side=\"right\"\n        sideOffset={2}\n        align=\"start\"\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented && hasInteractedOutsideRef.current) {\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented && !context.modal) hasInteractedOutsideRef.current = true;\n        }}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom property\n          ['--radix-context-menu-content-transform-origin' as any]:\n            'var(--radix-popper-transform-origin)',\n        }}\n      />\n    );\n  }\n);\n\nContextMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'ContextMenuGroup';\n\ntype ContextMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface ContextMenuGroupProps extends MenuGroupProps {}\n\nconst ContextMenuGroup = React.forwardRef<ContextMenuGroupElement, ContextMenuGroupProps>(\n  (props: ScopedProps<ContextMenuGroupProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'ContextMenuLabel';\n\ntype ContextMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface ContextMenuLabelProps extends MenuLabelProps {}\n\nconst ContextMenuLabel = React.forwardRef<ContextMenuLabelElement, ContextMenuLabelProps>(\n  (props: ScopedProps<ContextMenuLabelProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'ContextMenuItem';\n\ntype ContextMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface ContextMenuItemProps extends MenuItemProps {}\n\nconst ContextMenuItem = React.forwardRef<ContextMenuItemElement, ContextMenuItemProps>(\n  (props: ScopedProps<ContextMenuItemProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'ContextMenuCheckboxItem';\n\ntype ContextMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface ContextMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  ContextMenuCheckboxItemElement,\n  ContextMenuCheckboxItemProps\n>((props: ScopedProps<ContextMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nContextMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'ContextMenuRadioGroup';\n\ntype ContextMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface ContextMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst ContextMenuRadioGroup = React.forwardRef<\n  ContextMenuRadioGroupElement,\n  ContextMenuRadioGroupProps\n>((props: ScopedProps<ContextMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nContextMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'ContextMenuRadioItem';\n\ntype ContextMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface ContextMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst ContextMenuRadioItem = React.forwardRef<\n  ContextMenuRadioItemElement,\n  ContextMenuRadioItemProps\n>((props: ScopedProps<ContextMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nContextMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'ContextMenuItemIndicator';\n\ntype ContextMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface ContextMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst ContextMenuItemIndicator = React.forwardRef<\n  ContextMenuItemIndicatorElement,\n  ContextMenuItemIndicatorProps\n>((props: ScopedProps<ContextMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nContextMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'ContextMenuSeparator';\n\ntype ContextMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface ContextMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst ContextMenuSeparator = React.forwardRef<\n  ContextMenuSeparatorElement,\n  ContextMenuSeparatorProps\n>((props: ScopedProps<ContextMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nContextMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'ContextMenuArrow';\n\ntype ContextMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface ContextMenuArrowProps extends MenuArrowProps {}\n\nconst ContextMenuArrow = React.forwardRef<ContextMenuArrowElement, ContextMenuArrowProps>(\n  (props: ScopedProps<ContextMenuArrowProps>, forwardedRef) => {\n    const { __scopeContextMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeContextMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nContextMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'ContextMenuSub';\n\ninterface ContextMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst ContextMenuSub: React.FC<ContextMenuSubProps> = (props: ScopedProps<ContextMenuSubProps>) => {\n  const { __scopeContextMenu, children, onOpenChange, open: openProp, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\nContextMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'ContextMenuSubTrigger';\n\ntype ContextMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface ContextMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  ContextMenuSubTriggerElement,\n  ContextMenuSubTriggerProps\n>((props: ScopedProps<ContextMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...triggerItemProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...triggerItemProps} ref={forwardedRef} />;\n});\n\nContextMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ContextMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'ContextMenuSubContent';\n\ntype ContextMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface ContextMenuSubContentProps extends MenuSubContentProps {}\n\nconst ContextMenuSubContent = React.forwardRef<\n  ContextMenuSubContentElement,\n  ContextMenuSubContentProps\n>((props: ScopedProps<ContextMenuSubContentProps>, forwardedRef) => {\n  const { __scopeContextMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeContextMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom property\n        ['--radix-context-menu-content-transform-origin' as any]:\n          'var(--radix-popper-transform-origin)',\n      }}\n    />\n  );\n});\n\nContextMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction whenTouchOrPen<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType !== 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = ContextMenu;\nconst Trigger = ContextMenuTrigger;\nconst Portal = ContextMenuPortal;\nconst Content = ContextMenuContent;\nconst Group = ContextMenuGroup;\nconst Label = ContextMenuLabel;\nconst Item = ContextMenuItem;\nconst CheckboxItem = ContextMenuCheckboxItem;\nconst RadioGroup = ContextMenuRadioGroup;\nconst RadioItem = ContextMenuRadioItem;\nconst ItemIndicator = ContextMenuItemIndicator;\nconst Separator = ContextMenuSeparator;\nconst Arrow = ContextMenuArrow;\nconst Sub = ContextMenuSub;\nconst SubTrigger = ContextMenuSubTrigger;\nconst SubContent = ContextMenuSubContent;\n\nexport {\n  createContextMenuScope,\n  //\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuPortal,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuLabel,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuItemIndicator,\n  ContextMenuSeparator,\n  ContextMenuArrow,\n  ContextMenuSub,\n  ContextMenuSubTrigger,\n  ContextMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  ContextMenuProps,\n  ContextMenuTriggerProps,\n  ContextMenuPortalProps,\n  ContextMenuContentProps,\n  ContextMenuGroupProps,\n  ContextMenuLabelProps,\n  ContextMenuItemProps,\n  ContextMenuCheckboxItemProps,\n  ContextMenuRadioGroupProps,\n  ContextMenuRadioItemProps,\n  ContextMenuItemIndicatorProps,\n  ContextMenuSeparatorProps,\n  ContextMenuArrowProps,\n  ContextMenuSubProps,\n  ContextMenuSubTriggerProps,\n  ContextMenuSubContentProps,\n};\n"],"names":["createContextMenuScope","ContextMenu","ContextMenuTrigger","ContextMenuPortal","ContextMenuContent","ContextMenuGroup","ContextMenuLabel","ContextMenuItem","ContextMenuCheckboxItem","ContextMenuRadioGroup","ContextMenuRadioItem","ContextMenuItemIndicator","ContextMenuSeparator","ContextMenuArrow","ContextMenuSub","ContextMenuSubTrigger","ContextMenuSubContent","Root","Trigger","Portal","Content","Group","Label","Item","CheckboxItem","RadioGroup","RadioItem","ItemIndicator","Separator","Arrow","Sub","SubTrigger","SubContent","React","composeEventHandlers","createContextScope","Primitive","MenuPrimitive","createMenuScope","useCallbackRef","useControllableState","CONTEXT_MENU_NAME","createContextMenuContext","useMenuScope","ContextMenuProvider","useContextMenuContext","props","__scopeContextMenu","children","onOpenChange","dir","modal","open","setOpen","useState","menuScope","handleOpenChangeProp","handleOpenChange","useCallback","TRIGGER_NAME","forwardRef","forwardedRef","disabled","triggerProps","context","pointRef","useRef","x","y","virtualRef","getBoundingClientRect","DOMRect","fromRect","width","height","current","longPressTimerRef","clearLongPress","window","clearTimeout","handleOpen","event","clientX","clientY","useEffect","undefined","WebkitTouchCallout","style","onContextMenu","preventDefault","onPointerDown","whenTouchOrPen","setTimeout","onPointerMove","onPointerCancel","onPointerUp","PORTAL_NAME","portalProps","CONTENT_NAME","contentProps","hasInteractedOutsideRef","onCloseAutoFocus","defaultPrevented","onInteractOutside","GROUP_NAME","groupProps","LABEL_NAME","labelProps","ITEM_NAME","itemProps","CHECKBOX_ITEM_NAME","checkboxItemProps","RADIO_GROUP_NAME","radioGroupProps","RADIO_ITEM_NAME","radioItemProps","INDICATOR_NAME","itemIndicatorProps","SEPARATOR_NAME","separatorProps","ARROW_NAME","arrowProps","SUB_NAME","openProp","defaultOpen","prop","defaultProp","onChange","SUB_TRIGGER_NAME","triggerItemProps","SUB_CONTENT_NAME","subContentProps","handler","pointerType"],"version":3,"file":"index.module.js.map"}