{
  "manifest": {
    "name": "random-path",
    "version": "0.1.2",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/LinusU/node-random-path.git"
    },
    "scripts": {
      "test": "standard && node test"
    },
    "dependencies": {
      "base32-encode": "^0.1.0 || ^1.0.0",
      "murmur-32": "^0.1.0 || ^0.2.0"
    },
    "devDependencies": {
      "standard": "^14.3.4"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-random-path-0.1.2-78b7f1570e2a09f66a4e2e0113a98ed588e85da9-integrity/node_modules/random-path/package.json",
    "readmeFilename": "readme.md",
    "readme": "# Random Path\n\nGenerate a random path name.\n\n## Installation\n\n```sh\nnpm install --save random-path\n```\n\n## Usage\n\n```js\nconst os = require('os')\nconst randomPath = require('random-path')\n\nconst path = randomPath(os.tmpDir(), '%s.txt')\n\nconsole.log(path)\n//=> /tmp/Y374CW8.txt\n```\n\n## API\n\n### `randomPath(directory, template)`\n\nGenerates a random path name with the specified `directory` and `template`.\n\n`template` should be a string where `%s` will be replaced with some random\ncharacters (e.g. `'linusu-%s'`). The string should contain `%s` exactly once. If\nyou want to include a literal percent sign, escape it with another one, e.g.\n`'%%string'` becomes `'%string'`.\n\nReturns a string with the path.\n\n**Important:** This module makes no guarantees on wether there exists a\nfile at the returned path or not. Do not simply write data to the\nreturned path. If you want a random file, use the higher level module\n[fs-temp](https://github.com/LinusU/fs-temp).\n\n### `randomPath.validateTemplate(template)`\n\nCheck to see if the template is a valid template accepted by\n`randomPath`. Throws an error if the template is invalid.\n\n## See also\n\n- [fs-temp](https://github.com/LinusU/fs-temp) - A quick and simple way to create temporary files and directories.\n",
    "description": "Generate a random path name."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/random-path/-/random-path-0.1.2.tgz#78b7f1570e2a09f66a4e2e0113a98ed588e85da9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/random-path/-/random-path-0.1.2.tgz",
    "hash": "78b7f1570e2a09f66a4e2e0113a98ed588e85da9",
    "integrity": "sha512-4jY0yoEaQ5v9StCl5kZbNIQlg1QheIDBrdkDn53EynpPb9FgO6//p3X/tgMnrC45XN6QZCzU1Xz/+pSSsJBpRw==",
    "registry": "npm",
    "packageName": "random-path",
    "cacheIntegrity": "sha512-4jY0yoEaQ5v9StCl5kZbNIQlg1QheIDBrdkDn53EynpPb9FgO6//p3X/tgMnrC45XN6QZCzU1Xz/+pSSsJBpRw== sha1-eLfxVw4qCfZqTi4BE6mO1YjoXak="
  },
  "registry": "npm",
  "hash": "78b7f1570e2a09f66a4e2e0113a98ed588e85da9"
}