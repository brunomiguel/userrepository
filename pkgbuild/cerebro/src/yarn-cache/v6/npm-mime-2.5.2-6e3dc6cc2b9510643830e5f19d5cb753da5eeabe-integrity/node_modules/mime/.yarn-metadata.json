{
  "manifest": {
    "author": {
      "name": "Robert Kieffer",
      "email": "robert@broofa.com",
      "url": "http://github.com/broofa"
    },
    "engines": {
      "node": ">=4.0.0"
    },
    "bin": {
      "mime": "cli.js"
    },
    "contributors": [],
    "description": "A comprehensive library for mime-type mapping",
    "license": "MIT",
    "dependencies": {},
    "devDependencies": {
      "benchmark": "*",
      "chalk": "4.1.0",
      "eslint": "7.20.0",
      "mime-db": "1.46.0",
      "mime-score": "1.2.0",
      "mime-types": "2.1.28",
      "mocha": "8.3.0",
      "runmd": "*",
      "standard-version": "9.1.0"
    },
    "files": [
      "index.js",
      "lite.js",
      "Mime.js",
      "cli.js",
      "/types"
    ],
    "scripts": {
      "prepare": "node src/build.js && runmd --output README.md src/README_js.md",
      "release": "standard-version",
      "benchmark": "node src/benchmark.js",
      "md": "runmd --watch --output README.md src/README_js.md",
      "test": "mocha src/test.js"
    },
    "keywords": [
      "util",
      "mime"
    ],
    "name": "mime",
    "repository": {
      "url": "https://github.com/broofa/mime",
      "type": "git"
    },
    "version": "2.5.2",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-mime-2.5.2-6e3dc6cc2b9510643830e5f19d5cb753da5eeabe-integrity/node_modules/mime/package.json",
    "readmeFilename": "README.md",
    "readme": "<!--\n  -- This file is auto-generated from src/README_js.md. Changes should be made there.\n  -->\n# Mime\n\nA comprehensive, compact MIME type module.\n\n[![Build Status](https://travis-ci.org/broofa/mime.svg?branch=master)](https://travis-ci.org/broofa/mime)\n\n## Version 2 Notes\n\nVersion 2 is a breaking change from 1.x as the semver implies.  Specifically:\n\n* `lookup()` renamed to `getType()`\n* `extension()` renamed to `getExtension()`\n* `charset()` and `load()` methods have been removed\n\nIf you prefer the legacy version of this module please `npm install mime@^1`.  Version 1 docs may be found [here](https://github.com/broofa/mime/tree/v1.4.0).\n\n## Install\n\n### NPM\n```\nnpm install mime\n```\n\n### Browser\n\nIt is recommended that you use a bundler such as\n[webpack](https://webpack.github.io/) or [browserify](http://browserify.org/) to\npackage your code.  However, browser-ready versions are available via wzrd.in.\nE.g. For the full version:\n\n    <script src=\"https://wzrd.in/standalone/mime@latest\"></script>\n    <script>\n    mime.getType(...); // etc.\n    </script>\n\nOr, for the `mime/lite` version:\n\n    <script src=\"https://wzrd.in/standalone/mime%2flite@latest\"></script>\n    <script>\n    mimelite.getType(...); // (Note `mimelite` here)\n    </script>\n\n## Quick Start\n\nFor the full version (800+ MIME types, 1,000+ extensions):\n\n```javascript\nconst mime = require('mime');\n\nmime.getType('txt');                    // ⇨ 'text/plain'\nmime.getExtension('text/plain');        // ⇨ 'txt'\n```\n\nSee [Mime API](#mime-api) below for API details.\n\n## Lite Version\n\nThere is also a \"lite\" version of this module that omits vendor-specific\n(`*/vnd.*`) and experimental (`*/x-*`) types.  It weighs in at ~2.5KB, compared\nto 8KB for the full version.  To load the lite version:\n\n```javascript\nconst mime = require('mime/lite');\n```\n\n## Mime .vs. mime-types .vs. mime-db modules\n\nFor those of you wondering about the difference between these [popular] NPM modules,\nhere's a brief rundown ...\n\n[`mime-db`](https://github.com/jshttp/mime-db) is \"the source of\ntruth\" for MIME type information.  It is not an API.  Rather, it is a canonical\ndataset of mime type definitions pulled from IANA, Apache, NGINX, and custom mappings\nsubmitted by the Node.js community.\n\n[`mime-types`](https://github.com/jshttp/mime-types) is a thin\nwrapper around mime-db that provides an API drop-in compatible(ish) with `mime @ < v1.3.6` API.\n\n`mime` is, as of v2, a self-contained module bundled with a pre-optimized version\nof the `mime-db` dataset.  It provides a simplified API with the following characteristics:\n\n* Intelligently resolved type conflicts (See [mime-score](https://github.com/broofa/mime-score) for details)\n* Method naming consistent with industry best-practices\n* Compact footprint.  E.g. The minified+compressed sizes of the various modules:\n\nModule | Size\n--- | ---\n`mime-db`  | 18 KB\n`mime-types` | same as mime-db\n`mime` | 8 KB\n`mime/lite` | 2 KB\n\n## Mime API\n\nBoth `require('mime')` and `require('mime/lite')` return instances of the MIME\nclass, documented below.\n\nNote: Inputs to this API are case-insensitive.  Outputs (returned values) will\nbe lowercase.\n\n### new Mime(typeMap, ... more maps)\n\nMost users of this module will not need to create Mime instances directly.\nHowever if you would like to create custom mappings, you may do so as follows\n...\n\n```javascript\n// Require Mime class\nconst Mime = require('mime/Mime');\n\n// Define mime type -> extensions map\nconst typeMap = {\n  'text/abc': ['abc', 'alpha', 'bet'],\n  'text/def': ['leppard']\n};\n\n// Create and use Mime instance\nconst myMime = new Mime(typeMap);\nmyMime.getType('abc');            // ⇨ 'text/abc'\nmyMime.getExtension('text/def');  // ⇨ 'leppard'\n```\n\nIf more than one map argument is provided, each map is `define()`ed (see below), in order.\n\n### mime.getType(pathOrExtension)\n\nGet mime type for the given path or extension.  E.g.\n\n```javascript\nmime.getType('js');             // ⇨ 'application/javascript'\nmime.getType('json');           // ⇨ 'application/json'\n\nmime.getType('txt');            // ⇨ 'text/plain'\nmime.getType('dir/text.txt');   // ⇨ 'text/plain'\nmime.getType('dir\\\\text.txt');  // ⇨ 'text/plain'\nmime.getType('.text.txt');      // ⇨ 'text/plain'\nmime.getType('.txt');           // ⇨ 'text/plain'\n```\n\n`null` is returned in cases where an extension is not detected or recognized\n\n```javascript\nmime.getType('foo/txt');        // ⇨ null\nmime.getType('bogus_type');     // ⇨ null\n```\n\n### mime.getExtension(type)\nGet extension for the given mime type.  Charset options (often included in\nContent-Type headers) are ignored.\n\n```javascript\nmime.getExtension('text/plain');               // ⇨ 'txt'\nmime.getExtension('application/json');         // ⇨ 'json'\nmime.getExtension('text/html; charset=utf8');  // ⇨ 'html'\n```\n\n### mime.define(typeMap[, force = false])\n\nDefine [more] type mappings.\n\n`typeMap` is a map of type -> extensions, as documented in `new Mime`, above.\n\nBy default this method will throw an error if you try to map a type to an\nextension that is already assigned to another type.  Passing `true` for the\n`force` argument will suppress this behavior (overriding any previous mapping).\n\n```javascript\nmime.define({'text/x-abc': ['abc', 'abcd']});\n\nmime.getType('abcd');            // ⇨ 'text/x-abc'\nmime.getExtension('text/x-abc')  // ⇨ 'abc'\n```\n\n## Command Line\n\n    mime [path_or_extension]\n\nE.g.\n\n    > mime scripts/jquery.js\n    application/javascript\n\n----\nMarkdown generated from [src/README_js.md](src/README_js.md) by [![RunMD Logo](http://i.imgur.com/h0FVyzU.png)](https://github.com/broofa/runmd)",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2010 Benjamin Thomas, Robert Kieffer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mime/-/mime-2.5.2.tgz#6e3dc6cc2b9510643830e5f19d5cb753da5eeabe",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mime/-/mime-2.5.2.tgz",
    "hash": "6e3dc6cc2b9510643830e5f19d5cb753da5eeabe",
    "integrity": "sha512-tqkh47FzKeCPD2PUiPB6pkbMzsCasjxAfC62/Wap5qrUWcb+sFasXUC5I3gYM5iBM8v/Qpn4UK0x+j0iHyFPDg==",
    "registry": "npm",
    "packageName": "mime",
    "cacheIntegrity": "sha512-tqkh47FzKeCPD2PUiPB6pkbMzsCasjxAfC62/Wap5qrUWcb+sFasXUC5I3gYM5iBM8v/Qpn4UK0x+j0iHyFPDg== sha1-bj3GzCuVEGQ4MOXxnVy3U9pe6r4="
  },
  "registry": "npm",
  "hash": "6e3dc6cc2b9510643830e5f19d5cb753da5eeabe"
}