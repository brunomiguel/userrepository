{
  "manifest": {
    "name": "flatted",
    "version": "3.2.7",
    "description": "A super light and fast circular JSON parser.",
    "unpkg": "min.js",
    "types": "types.d.ts",
    "main": "./cjs/index.js",
    "scripts": {
      "build": "npm run cjs && npm run rollup:esm && npm run rollup:es && npm run rollup:babel && npm run min && npm run test && npm run size",
      "cjs": "ascjs esm cjs",
      "rollup:es": "rollup --config rollup/es.config.js && sed -i.bck 's/^var /self./' es.js && rm -rf es.js.bck",
      "rollup:esm": "rollup --config rollup/esm.config.js",
      "rollup:babel": "rollup --config rollup/babel.config.js && sed -i.bck 's/^var /self./' index.js && rm -rf index.js.bck",
      "min": "terser index.js -c -m -o min.js",
      "size": "cat index.js | wc -c;cat min.js | wc -c;gzip -c9 min.js | wc -c;cat min.js | brotli | wc -c; cat es.js | brotli | wc -c; cat esm.js | brotli | wc -c",
      "test": "c8 node test/index.js",
      "test:php": "php php/test.php",
      "coverage": "mkdir -p ./coverage; c8 report --reporter=text-lcov > ./coverage/lcov.info"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/WebReflection/flatted.git"
    },
    "keywords": [
      "circular",
      "JSON",
      "fast",
      "parser",
      "minimal"
    ],
    "author": {
      "name": "Andrea Giammarchi"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/WebReflection/flatted/issues"
    },
    "homepage": "https://github.com/WebReflection/flatted#readme",
    "devDependencies": {
      "@babel/core": "^7.18.10",
      "@babel/preset-env": "^7.18.10",
      "@ungap/structured-clone": "^1.0.1",
      "ascjs": "^5.0.1",
      "c8": "^7.12.0",
      "circular-json": "^0.5.9",
      "circular-json-es6": "^2.0.2",
      "jsan": "^3.1.14",
      "rollup": "^2.78.1",
      "rollup-plugin-babel": "^4.4.0",
      "rollup-plugin-node-resolve": "^5.2.0",
      "rollup-plugin-terser": "^7.0.2",
      "terser": "^5.14.2"
    },
    "module": "./esm/index.js",
    "type": "module",
    "exports": {
      ".": {
        "types": "./types.d.ts",
        "import": "./esm/index.js",
        "default": "./cjs/index.js"
      },
      "./esm": "./esm.js",
      "./package.json": "./package.json"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-flatted-3.2.7-609f39207cb614b89d0765b477cb2d437fbf9787-integrity/node_modules/flatted/package.json",
    "readmeFilename": "README.md",
    "readme": "# flatted\n\n[![Downloads](https://img.shields.io/npm/dm/flatted.svg)](https://www.npmjs.com/package/flatted) [![Coverage Status](https://coveralls.io/repos/github/WebReflection/flatted/badge.svg?branch=main)](https://coveralls.io/github/WebReflection/flatted?branch=main) [![Build Status](https://travis-ci.com/WebReflection/flatted.svg?branch=main)](https://travis-ci.com/WebReflection/flatted) [![License: ISC](https://img.shields.io/badge/License-ISC-yellow.svg)](https://opensource.org/licenses/ISC) ![WebReflection status](https://offline.report/status/webreflection.svg)\n\n![snow flake](./flatted.jpg)\n\n<sup>**Social Media Photo by [Matt Seymour](https://unsplash.com/@mattseymour) on [Unsplash](https://unsplash.com/)**</sup>\n\n## Announcement üì£\n\nThere is a standard approach to recursion and more data-types than what JSON allows, and it's part of the [Structured Clone polyfill](https://github.com/ungap/structured-clone/#readme).\n\nBeside acting as a polyfill, its `@ungap/structured-clone/json` export provides both `stringify` and `parse`, and it's been tested for being faster than *flatted*, but its produced output is also smaller than *flatted* in general.\n\nThe *@ungap/structured-clone* module is, in short, a drop in replacement for *flatted*, but it's not compatible with *flatted* specialized syntax.\n\nHowever, if recursion, as well as more data-types, are what you are after, or interesting for your projects/use cases, consider switching to this new module whenever you can üëç\n\n- - -\n\nA super light (0.5K) and fast circular JSON parser, directly from the creator of [CircularJSON](https://github.com/WebReflection/circular-json/#circularjson).\n\nNow available also for **[PHP](./php/flatted.php)**.\n\n```js\nnpm i flatted\n```\n\nUsable via [CDN](https://unpkg.com/flatted) or as regular module.\n\n```js\n// ESM\nimport {parse, stringify, toJSON, fromJSON} from 'flatted';\n\n// CJS\nconst {parse, stringify, toJSON, fromJSON} = require('flatted');\n\nconst a = [{}];\na[0].a = a;\na.push(a);\n\nstringify(a); // [[\"1\",\"0\"],{\"a\":\"0\"}]\n```\n\n## toJSON and fromJSON\n\nIf you'd like to implicitly survive JSON serialization, these two helpers helps:\n\n```js\nimport {toJSON, fromJSON} from 'flatted';\n\nclass RecursiveMap extends Map {\n  static fromJSON(any) {\n    return new this(fromJSON(any));\n  }\n  toJSON() {\n    return toJSON([...this.entries()]);\n  }\n}\n\nconst recursive = new RecursiveMap;\nconst same = {};\nsame.same = same;\nrecursive.set('same', same);\n\nconst asString = JSON.stringify(recursive);\nconst asMap = RecursiveMap.fromJSON(JSON.parse(asString));\nasMap.get('same') === asMap.get('same').same;\n// true\n```\n\n\n## Flatted VS JSON\n\nAs it is for every other specialized format capable of serializing and deserializing circular data, you should never `JSON.parse(Flatted.stringify(data))`, and you should never `Flatted.parse(JSON.stringify(data))`.\n\nThe only way this could work is to `Flatted.parse(Flatted.stringify(data))`, as it is also for _CircularJSON_ or any other, otherwise there's no granted data integrity.\n\nAlso please note this project serializes and deserializes only data compatible with JSON, so that sockets, or anything else with internal classes different from those allowed by JSON standard, won't be serialized and unserialized as expected.\n\n\n### New in V1: Exact same JSON API\n\n  * Added a [reviver](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Syntax) parameter to `.parse(string, reviver)` and revive your own objects.\n  * Added a [replacer](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Syntax) and a `space` parameter to `.stringify(object, replacer, space)` for feature parity with JSON signature.\n\n\n### Compatibility\nAll ECMAScript engines compatible with `Map`, `Set`, `Object.keys`, and `Array.prototype.reduce` will work, even if polyfilled.\n\n\n### How does it work ?\nWhile stringifying, all Objects, including Arrays, and strings, are flattened out and replaced as unique index. `*`\n\nOnce parsed, all indexes will be replaced through the flattened collection.\n\n<sup><sub>`*` represented as string to avoid conflicts with numbers</sub></sup>\n\n```js\n// logic example\nvar a = [{one: 1}, {two: '2'}];\na[0].a = a;\n// a is the main object, will be at index '0'\n// {one: 1} is the second object, index '1'\n// {two: '2'} the third, in '2', and it has a string\n// which will be found at index '3'\n\nFlatted.stringify(a);\n// [[\"1\",\"2\"],{\"one\":1,\"a\":\"0\"},{\"two\":\"3\"},\"2\"]\n// a[one,two]    {one: 1, a}    {two: '2'}  '2'\n```\n",
    "licenseText": "ISC License\n\nCopyright (c) 2018-2020, Andrea Giammarchi, @WebReflection\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\nOR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/flatted/-/flatted-3.2.7.tgz#609f39207cb614b89d0765b477cb2d437fbf9787",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/flatted/-/flatted-3.2.7.tgz",
    "hash": "609f39207cb614b89d0765b477cb2d437fbf9787",
    "integrity": "sha512-5nqDSxl8nn5BSNxyR3n4I6eDmbolI6WT+QqR547RwxQapgjQBmtktdP+HTBb/a/zLsbzERTONyUB5pefh5TtjQ==",
    "registry": "npm",
    "packageName": "flatted",
    "cacheIntegrity": "sha512-5nqDSxl8nn5BSNxyR3n4I6eDmbolI6WT+QqR547RwxQapgjQBmtktdP+HTBb/a/zLsbzERTONyUB5pefh5TtjQ== sha1-YJ85IHy2FLidB2W0d8stQ3+/l4c="
  },
  "registry": "npm",
  "hash": "609f39207cb614b89d0765b477cb2d437fbf9787"
}