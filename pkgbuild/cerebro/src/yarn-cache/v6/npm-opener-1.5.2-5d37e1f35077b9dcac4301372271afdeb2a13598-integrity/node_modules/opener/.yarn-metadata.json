{
  "manifest": {
    "name": "opener",
    "description": "Opens stuff, like webpages and files and executables, cross-platform",
    "version": "1.5.2",
    "author": {
      "name": "Domenic Denicola",
      "email": "d@domenic.me",
      "url": "https://domenic.me/"
    },
    "license": "(WTFPL OR MIT)",
    "repository": {
      "type": "git",
      "url": "https://github.com/domenic/opener.git"
    },
    "main": "lib/opener.js",
    "bin": {
      "opener": "bin/opener-bin.js"
    },
    "files": [
      "lib/",
      "bin/"
    ],
    "scripts": {
      "lint": "eslint ."
    },
    "devDependencies": {
      "eslint": "^7.7.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-opener-1.5.2-5d37e1f35077b9dcac4301372271afdeb2a13598-integrity/node_modules/opener/package.json",
    "readmeFilename": "README.md",
    "readme": "# It Opens Stuff\n\nThat is, in your desktop environment. This will make *actual windows pop up*, with stuff in them:\n\n```bash\nnpm install opener -g\n\nopener http://google.com\nopener ./my-file.txt\nopener firefox\nopener npm run lint\n```\n\nAlso if you want to use it programmatically you can do that too:\n\n```js\nvar opener = require(\"opener\");\n\nopener(\"http://google.com\");\nopener(\"./my-file.txt\");\nopener(\"firefox\");\nopener(\"npm run lint\");\n```\n\nPlus, it returns the child process created, so you can do things like let your script exit while the window stays open:\n\n```js\nvar editor = opener(\"documentation.odt\");\neditor.unref();\n// These other unrefs may be necessary if your OS's opener process\n// exits before the process it started is complete.\neditor.stdin.unref();\neditor.stdout.unref();\neditor.stderr.unref();\n```\n\n## Use It for Good\n\nLike opening the user's browser with a test harness in your package's test script:\n\n```json\n{\n    \"scripts\": {\n        \"test\": \"opener ./test/runner.html\"\n    },\n    \"devDependencies\": {\n        \"opener\": \"*\"\n    }\n}\n```\n\n## Why\n\nBecause Windows has `start`, Macs have `open`, and *nix has `xdg-open`. At least [according to some person on StackOverflow](http://stackoverflow.com/q/1480971/3191). And I like things that work on all three. Like Node.js. And Opener.\n",
    "licenseText": "Dual licensed under WTFPL and MIT:\n\n---\n\nCopyright © 2012–2020 Domenic Denicola <d@domenic.me>\n\nThis work is free. You can redistribute it and/or modify it under the\nterms of the Do What The Fuck You Want To Public License, Version 2,\nas published by Sam Hocevar. See below for more details.\n\n        DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO.\n\n---\n\nThe MIT License (MIT)\n\nCopyright © 2012–2020 Domenic Denicola <d@domenic.me>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/opener/-/opener-1.5.2.tgz#5d37e1f35077b9dcac4301372271afdeb2a13598",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/opener/-/opener-1.5.2.tgz",
    "hash": "5d37e1f35077b9dcac4301372271afdeb2a13598",
    "integrity": "sha512-ur5UIdyw5Y7yEj9wLzhqXiy6GZ3Mwx0yGI+5sMn2r0N0v3cKJvUmFH5yPP+WXh9e0xfyzyJX95D8l088DNFj7A==",
    "registry": "npm",
    "packageName": "opener",
    "cacheIntegrity": "sha512-ur5UIdyw5Y7yEj9wLzhqXiy6GZ3Mwx0yGI+5sMn2r0N0v3cKJvUmFH5yPP+WXh9e0xfyzyJX95D8l088DNFj7A== sha1-XTfh81B3udysQwE3InGv3rKhNZg="
  },
  "registry": "npm",
  "hash": "5d37e1f35077b9dcac4301372271afdeb2a13598"
}