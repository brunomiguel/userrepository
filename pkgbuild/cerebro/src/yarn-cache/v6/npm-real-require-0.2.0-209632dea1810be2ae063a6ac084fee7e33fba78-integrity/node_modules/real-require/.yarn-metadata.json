{
  "manifest": {
    "name": "real-require",
    "version": "0.2.0",
    "description": "Keep require and import consistent after bundling or transpiling",
    "author": {
      "name": "Paolo Insogna",
      "email": "shogun@cowtech.it"
    },
    "homepage": "https://github.com/pinojs/real-require",
    "contributors": [
      {
        "name": "Paolo Insogna",
        "url": "https://github.com/ShogunPanda"
      }
    ],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/pinojs/real-require.git"
    },
    "bugs": {
      "url": "https://github.com/pinojs/real-require/issues"
    },
    "main": "src/index.js",
    "files": [
      "src"
    ],
    "scripts": {
      "format": "prettier -w src test",
      "lint": "eslint src test",
      "test": "c8 --reporter=text --reporter=html tap --reporter=spec --no-coverage test/*.test.js",
      "test:watch": "tap --watch --reporter=spec --no-browser --coverage-report=text --coverage-report=html test/*.test.js",
      "test:ci": "c8 --reporter=text --reporter=json --check-coverage --branches 90 --functions 90 --lines 90 --statements 90 tap --no-color --no-coverage test/*.test.js",
      "ci": "npm run lint && npm run test:ci",
      "prepublishOnly": "npm run ci",
      "postpublish": "git push origin && git push origin -f --tags"
    },
    "devDependencies": {
      "eslint": "^7.12.0",
      "eslint-config-standard": "^16.0.3",
      "eslint-plugin-import": "^2.25.2",
      "eslint-plugin-node": "^11.1.0",
      "eslint-plugin-promise": "^5.1.1",
      "eslint-plugin-standard": "^5.0.0",
      "c8": "^7.10.0",
      "prettier": "^2.4.1",
      "tap": "^16.0.0"
    },
    "engines": {
      "node": ">= 12.13.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-real-require-0.2.0-209632dea1810be2ae063a6ac084fee7e33fba78-integrity/node_modules/real-require/package.json",
    "readmeFilename": "README.md",
    "readme": "# real-require\n\n[![Package Version](https://img.shields.io/npm/v/real-require.svg)](https://npm.im/real-require)\n[![Dependency Status](https://img.shields.io/librariesio/release/npm/real-require)](https://libraries.io/npm/real-require)\n[![Build](https://github.com/pinojs/real-require/workflows/CI/badge.svg)](https://github.com/pinojs/real-require/actions?query=workflow%3ACI)\n\nKeep require and import consistent after bundling or transpiling.\n\n## Installation\n\nJust run:\n\n```bash\nnpm install real-require\n```\n\n## Usage\n\nThe package provides two drop-ins functions, `realRequire` and `realImport`, which can be used in scenarios where tools like transpilers or bundlers change the native `require` or `await import` calls.\n\nThe current `realRequire`Â functions only handles webpack at the moment, wrapping the `__non_webpack__require__` implementation that webpack provides for the final bundle.\n\n### Example\n\n```js\n// After bundling, real-require will be embedded in the bundle\nconst { realImport, realRequire } = require('real-require')\n\n/*\n  By using realRequire, at build time the module will not be embedded and at runtime it will try to load path from the local filesytem.\n  This is useful in situations where the build tool does not support skipping modules to embed.\n*/\nconst { join } = realRequire('path')\n\nasync function main() {\n  // Similarly, this make sure the import call is not modified by the build tools\n  const localFunction = await realImport('./source.js')\n\n  localFunction()\n}\n\nmain().catch(console.error)\n```\n\n## Contributing\n\nSee [CONTRIBUTING.md](./CONTRIBUTING.md)\n\n## License\n\nCopyright Paolo Insogna and real-require contributors 2021. Licensed under the [MIT License](http://www.apache.org/licenses/MIT).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2021 Paolo Insogna and the real-require contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/real-require/-/real-require-0.2.0.tgz#209632dea1810be2ae063a6ac084fee7e33fba78",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/real-require/-/real-require-0.2.0.tgz",
    "hash": "209632dea1810be2ae063a6ac084fee7e33fba78",
    "integrity": "sha512-57frrGM/OCTLqLOAh0mhVA9VBMHd+9U7Zb2THMGdBUoZVOtGbJzjxsYGDJ3A9AYYCP4hn6y1TVbaOfzWtm5GFg==",
    "registry": "npm",
    "packageName": "real-require",
    "cacheIntegrity": "sha512-57frrGM/OCTLqLOAh0mhVA9VBMHd+9U7Zb2THMGdBUoZVOtGbJzjxsYGDJ3A9AYYCP4hn6y1TVbaOfzWtm5GFg== sha1-IJYy3qGBC+KuBjpqwIT+5+M/ung="
  },
  "registry": "npm",
  "hash": "209632dea1810be2ae063a6ac084fee7e33fba78"
}