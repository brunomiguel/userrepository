{
  "manifest": {
    "name": "extsprintf",
    "version": "1.4.0",
    "description": "extended POSIX-style sprintf",
    "main": "./lib/extsprintf.js",
    "repository": {
      "type": "git",
      "url": "git://github.com/davepacheco/node-extsprintf.git"
    },
    "engines": {
      "node": ">=0.6.0"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-extsprintf-1.4.0-integrity/node_modules/extsprintf/package.json",
    "readmeFilename": "README.md",
    "readme": "# extsprintf: extended POSIX-style sprintf\n\nStripped down version of s[n]printf(3c).  We make a best effort to throw an\nexception when given a format string we don't understand, rather than ignoring\nit, so that we won't break existing programs if/when we go implement the rest\nof this.\n\nThis implementation currently supports specifying\n\n* field alignment ('-' flag),\n* zero-pad ('0' flag)\n* always show numeric sign ('+' flag),\n* field width\n* conversions for strings, decimal integers, and floats (numbers).\n* argument size specifiers.  These are all accepted but ignored, since\n  Javascript has no notion of the physical size of an argument.\n\nEverything else is currently unsupported, most notably: precision, unsigned\nnumbers, non-decimal numbers, and characters.\n\nBesides the usual POSIX conversions, this implementation supports:\n\n* `%j`: pretty-print a JSON object (using node's \"inspect\")\n* `%r`: pretty-print an Error object\n\n# Example\n\nFirst, install it:\n\n    # npm install extsprintf\n\nNow, use it:\n\n    var mod_extsprintf = require('extsprintf');\n    console.log(mod_extsprintf.sprintf('hello %25s', 'world'));\n\noutputs:\n\n    hello                     world\n\n# Also supported\n\n**printf**: same args as sprintf, but prints the result to stdout\n\n**fprintf**: same args as sprintf, preceded by a Node stream.  Prints the result\nto the given stream.\n",
    "licenseText": "Copyright (c) 2012, Joyent, Inc. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.4.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.4.0.tgz",
    "hash": "",
    "integrity": "sha1-4mifjzVvrWLMplo6kcXfX5VRaS8=",
    "registry": "npm",
    "packageName": "extsprintf",
    "cacheIntegrity": "sha512-6NW8DZ8pWBc5NbGYUiqqccj9dXnuSzilZYqprdKJBZsQodGH9IyUoFOGxIWVDcBzHMb8ET24aqx9p66tZEWZkA== sha1-4mifjzVvrWLMplo6kcXfX5VRaS8="
  },
  "registry": "npm",
  "hash": "e8d5bc0d9f2958173935b198522aaa71c8fd7579ee4b38a5658aa9add289059b10a1d187f48c94a05386c485950dc0731cc6fc113db86aac7da7aead64459990"
}