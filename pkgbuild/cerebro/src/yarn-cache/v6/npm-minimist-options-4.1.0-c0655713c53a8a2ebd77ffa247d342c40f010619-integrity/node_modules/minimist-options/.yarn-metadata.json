{
  "manifest": {
    "name": "minimist-options",
    "version": "4.1.0",
    "description": "Pretty options for minimist",
    "repository": {
      "type": "git",
      "url": "https://github.com/vadimdemedes/minimist-options.git"
    },
    "author": {
      "name": "Vadim Demedes",
      "email": "vdemedes@gmail.com"
    },
    "license": "MIT",
    "keywords": [
      "minimist",
      "argv",
      "args"
    ],
    "scripts": {
      "test": "xo && ava && tsd-check"
    },
    "engines": {
      "node": ">= 6"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "dependencies": {
      "arrify": "^1.0.1",
      "is-plain-obj": "^1.1.0",
      "kind-of": "^6.0.3"
    },
    "devDependencies": {
      "@types/minimist": "^1.2.0",
      "ava": "^1.0.1",
      "tsd-check": "^0.3.0",
      "xo": "^0.24.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-minimist-options-4.1.0-c0655713c53a8a2ebd77ffa247d342c40f010619-integrity/node_modules/minimist-options/package.json",
    "readmeFilename": "readme.md",
    "readme": "# minimist-options ![test](https://github.com/vadimdemedes/minimist-options/workflows/test/badge.svg) \n\n> Write options for [minimist](https://npmjs.org/package/minimist) and [yargs](https://npmjs.org/package/yargs) in a comfortable way.\n> Supports string, boolean, number and array options.\n\n## Installation\n\n```\n$ npm install --save minimist-options\n```\n\n## Usage\n\n```js\nconst buildOptions = require('minimist-options');\nconst minimist = require('minimist');\n\nconst options = buildOptions({\n\tname: {\n\t\ttype: 'string',\n\t\talias: 'n',\n\t\tdefault: 'john'\n\t},\n\n\tforce: {\n\t\ttype: 'boolean',\n\t\talias: ['f', 'o'],\n\t\tdefault: false\n\t},\n\n\tscore: {\n\t\ttype: 'number',\n\t\talias: 's',\n\t\tdefault: 0\n\t},\n\n\tarr: {\n\t\ttype: 'array',\n\t\talias: 'a',\n\t\tdefault: []\n\t},\n\n\tstrings: {\n\t\ttype: 'string-array',\n\t\talias: 's',\n\t\tdefault: ['a', 'b']\n\t},\n\n\tbooleans: {\n\t\ttype: 'boolean-array',\n\t\talias: 'b',\n\t\tdefault: [true, false]\n\t},\n\n\tnumbers: {\n\t\ttype: 'number-array',\n\t\talias: 'n',\n\t\tdefault: [0, 1]\n\t},\n\n\tpublished: 'boolean',\n\n\t// Special option for positional arguments (`_` in minimist)\n\targuments: 'string'\n});\n\nconst args = minimist(process.argv.slice(2), options);\n```\n\ninstead of:\n\n```js\nconst minimist = require('minimist');\n\nconst options = {\n\tstring: ['name', '_'],\n\tnumber: ['score'],\n\tarray: [\n\t\t'arr',\n\t\t{key: 'strings', string: true},\n\t\t{key: 'booleans', boolean: true},\n\t\t{key: 'numbers', number: true}\n\t],\n\tboolean: ['force', 'published'],\n\talias: {\n\t\tn: 'name',\n\t\tf: 'force',\n\t\ts: 'score',\n\t\ta: 'arr'\n\t},\n\tdefault: {\n\t\tname: 'john',\n\t\tf: false,\n\t\tscore: 0,\n\t\tarr: []\n\t}\n};\n\nconst args = minimist(process.argv.slice(2), options);\n```\n\n## Array options\n\nThe `array` types are only supported by [yargs](https://npmjs.org/package/yargs).\n\n[minimist](https://npmjs.org/package/minimist) does _not_ explicitly support array type options. If you set an option multiple times, it will indeed yield an array of values. However, if you only set it once, it will simply give the value as is, without wrapping it in an array. Thus, effectively ignoring `{type: 'array'}`.\n\n`{type: 'array'}` is shorthand for `{type: 'string-array'}`. To have values coerced to `boolean` or `number`, use `boolean-array` or `number-array`, respectively.\n\n## License\n\nMIT Â© [Vadim Demedes](https://vadimdemedes.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Vadim Demedes <vdemedes@gmail.com> (vadimdemedes.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/minimist-options/-/minimist-options-4.1.0.tgz#c0655713c53a8a2ebd77ffa247d342c40f010619",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/minimist-options/-/minimist-options-4.1.0.tgz",
    "hash": "c0655713c53a8a2ebd77ffa247d342c40f010619",
    "integrity": "sha512-Q4r8ghd80yhO/0j1O3B2BjweX3fiHg9cdOwjJd2J76Q135c+NDxGCqdYKQ1SKBuFfgWbAUzBfvYjPUEeNgqN1A==",
    "registry": "npm",
    "packageName": "minimist-options",
    "cacheIntegrity": "sha512-Q4r8ghd80yhO/0j1O3B2BjweX3fiHg9cdOwjJd2J76Q135c+NDxGCqdYKQ1SKBuFfgWbAUzBfvYjPUEeNgqN1A== sha1-wGVXE8U6ii69d/+iR9NCxA8BBhk="
  },
  "registry": "npm",
  "hash": "c0655713c53a8a2ebd77ffa247d342c40f010619"
}