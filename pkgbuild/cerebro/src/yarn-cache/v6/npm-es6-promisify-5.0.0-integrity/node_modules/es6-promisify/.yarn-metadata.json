{
  "manifest": {
    "name": "es6-promisify",
    "version": "5.0.0",
    "description": "Converts callback-based functions to ES6 Promises",
    "main": "dist/promisify.js",
    "author": {
      "name": "Mike Hall",
      "email": "mikehall314@gmail.com"
    },
    "keywords": [
      "promises",
      "es6",
      "promisify"
    ],
    "license": "MIT",
    "dependencies": {
      "es6-promise": "^4.0.3"
    },
    "scripts": {
      "pretest": "./node_modules/eslint/bin/eslint.js ./lib/*.js ./tests/*.js",
      "test": "gulp && nodeunit tests"
    },
    "bugs": {
      "url": "http://github.com/digitaldesignlabs/es6-promisify/issues"
    },
    "files": [
      "dist/promisify.js",
      "dist/promise.js"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/digitaldesignlabs/es6-promisify.git"
    },
    "devDependencies": {
      "babel-preset-es2015": "^6.9.0",
      "eslint": "^2.13.1",
      "gulp": "^3.9.1",
      "gulp-babel": "^6.1.2",
      "nodeunit": "^0.10.0"
    },
    "greenkeeper": {
      "ignore": [
        "eslint"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-es6-promisify-5.0.0-integrity/node_modules/es6-promisify/package.json",
    "readmeFilename": "README.md",
    "readme": "[![Travis CI](https://travis-ci.org/digitaldesignlabs/es6-promisify.svg)](https://travis-ci.org/digitaldesignlabs/es6-promisify)\n\n# es6-promisify\n\nConverts callback-based functions to Promise-based functions.\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/es6-promisify)\n\n```bash\nnpm install --save es6-promisify\n```\n\n## Example\n\n```js\n\"use strict\";\n\n// Declare variables\nconst promisify = require(\"es6-promisify\");\nconst fs = require(\"fs\");\n\n// Convert the stat function\nconst stat = promisify(fs.stat);\n\n// Now usable as a promise!\nstat(\"example.txt\").then(function (stats) {\n    console.log(\"Got stats\", stats);\n}).catch(function (err) {\n    console.error(\"Yikes!\", err);\n});\n```\n\n## Promisify methods\n```js\n\"use strict\";\n\n// Declare variables\nconst promisify = require(\"es6-promisify\");\nconst redis = require(\"redis\").createClient(6379, \"localhost\");\n\n// Create a promise-based version of send_command\nconst client = promisify(redis.send_command, redis);\n\n// Send commands to redis and get a promise back\nclient(\"ping\").then(function (pong) {\n    console.log(\"Got\", pong);\n}).catch(function (err) {\n    console.error(\"Unexpected error\", err);\n}).then(function () {\n    redis.quit();\n});\n```\n\n## Handle callback multiple arguments\n```js\n\"use strict\";\n\n// Declare functions\nfunction test(cb) {\n    return cb(undefined, 1, 2, 3);\n}\n\n// Declare variables\nconst promisify = require(\"es6-promisify\");\n\n// Create promise-based version of test\nconst single = promisify(test);\nconst multi = promisify(test, {multiArgs: true});\n\n// Discards additional arguments\nsingle().then(function (result) {\n    console.log(result); // 1\n});\n\n// Returns all arguments as an array\nmulti().then(function (result) {\n    console.log(result); // [1, 2, 3]\n});\n```\n\n### Tests\nTest with nodeunit\n```bash\n$ npm test\n```\n\nPublished under the [MIT License](http://opensource.org/licenses/MIT).\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-5.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-5.0.0.tgz",
    "hash": "",
    "integrity": "sha1-UQnWLz5W6pZ8S2NQWu8IKRyKUgM=",
    "registry": "npm",
    "packageName": "es6-promisify",
    "cacheIntegrity": "sha512-C+d6UdsYDk0lMebHNR4S2NybQMMngAOnOwYBQjTOiv0MkoJMP0Myw2mgpDLBcpfCmRLxyFqYhS/CfOENq4SJhQ== sha1-UQnWLz5W6pZ8S2NQWu8IKRyKUgM="
  },
  "registry": "npm",
  "hash": "0be77a51db180e4d2531e6c7351e12d8dc9b40c3278003a73b06014234ce8afd0c92824c3f4332c369a0a432c17297c29912f1c85a98852fc27ce10dab848985"
}