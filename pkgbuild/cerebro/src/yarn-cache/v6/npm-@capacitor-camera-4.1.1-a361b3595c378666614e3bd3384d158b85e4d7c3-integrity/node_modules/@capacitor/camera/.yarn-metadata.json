{
  "manifest": {
    "name": "@capacitor/camera",
    "version": "4.1.1",
    "description": "The Camera API provides the ability to take a photo with the camera or choose an existing one from the photo album.",
    "main": "dist/plugin.cjs.js",
    "module": "dist/esm/index.js",
    "types": "dist/esm/index.d.ts",
    "unpkg": "dist/plugin.js",
    "files": [
      "android/src/main/",
      "android/build.gradle",
      "dist/",
      "ios/Plugin/",
      "CapacitorCamera.podspec"
    ],
    "author": {
      "name": "Ionic",
      "email": "hi@ionicframework.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ionic-team/capacitor-plugins.git"
    },
    "bugs": {
      "url": "https://github.com/ionic-team/capacitor-plugins/issues"
    },
    "keywords": [
      "capacitor",
      "plugin",
      "native"
    ],
    "scripts": {
      "verify": "npm run verify:ios && npm run verify:android && npm run verify:web",
      "verify:ios": "cd ios && pod install && xcodebuild -workspace Plugin.xcworkspace -scheme Plugin -destination generic/platform=iOS && cd ..",
      "verify:android": "cd android && ./gradlew clean build test && cd ..",
      "verify:web": "npm run build",
      "lint": "npm run eslint && npm run prettier -- --check && npm run swiftlint -- lint",
      "fmt": "npm run eslint -- --fix && npm run prettier -- --write && npm run swiftlint -- --fix --format",
      "eslint": "eslint . --ext ts",
      "prettier": "prettier \"**/*.{css,html,ts,js,java}\"",
      "swiftlint": "node-swiftlint",
      "docgen": "docgen --api CameraPlugin --output-readme README.md --output-json dist/docs.json",
      "build": "npm run clean && npm run docgen && tsc && rollup -c rollup.config.js",
      "clean": "rimraf ./dist",
      "watch": "tsc --watch",
      "prepublishOnly": "npm run build",
      "publish:cocoapod": "pod trunk push ./CapacitorCamera.podspec --allow-warnings"
    },
    "devDependencies": {
      "@capacitor/android": "^4.0.0",
      "@capacitor/core": "^4.0.0",
      "@capacitor/docgen": "0.0.18",
      "@capacitor/ios": "^4.0.0",
      "@ionic/eslint-config": "^0.3.0",
      "@ionic/prettier-config": "~1.0.1",
      "@ionic/swiftlint-config": "^1.1.2",
      "eslint": "^7.11.0",
      "prettier": "~2.3.0",
      "prettier-plugin-java": "~1.0.2",
      "rimraf": "^3.0.0",
      "rollup": "^2.29.0",
      "swiftlint": "^1.0.1",
      "typescript": "~4.1.5"
    },
    "peerDependencies": {
      "@capacitor/core": "^4.0.0"
    },
    "prettier": "@ionic/prettier-config",
    "swiftlint": "@ionic/swiftlint-config",
    "eslintConfig": {
      "extends": "@ionic/eslint-config/recommended"
    },
    "capacitor": {
      "ios": {
        "src": "ios"
      },
      "android": {
        "src": "android"
      }
    },
    "publishConfig": {
      "access": "public"
    },
    "gitHead": "1bd77dcaf3894c798da78745599b66451ec618fc",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@capacitor-camera-4.1.1-a361b3595c378666614e3bd3384d158b85e4d7c3-integrity/node_modules/@capacitor/camera/package.json",
    "readmeFilename": "README.md",
    "readme": "# @capacitor/camera\n\nThe Camera API provides the ability to take a photo with the camera or choose an existing one from the photo album.\n\n## Install\n\n```bash\nnpm install @capacitor/camera\nnpx cap sync\n```\n\n## iOS\n\niOS requires the following usage description be added and filled out for your app in `Info.plist`:\n\n- `NSCameraUsageDescription` (`Privacy - Camera Usage Description`)\n- `NSPhotoLibraryAddUsageDescription` (`Privacy - Photo Library Additions Usage Description`)\n- `NSPhotoLibraryUsageDescription` (`Privacy - Photo Library Usage Description`)\n\nRead about [Configuring `Info.plist`](https://capacitorjs.com/docs/ios/configuration#configuring-infoplist) in the [iOS Guide](https://capacitorjs.com/docs/ios) for more information on setting iOS permissions in Xcode\n\n## Android\n\nThis API requires the following permissions be added to your `AndroidManifest.xml`:\n\n```xml\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n\nThe storage permissions are for reading/saving photo files.\n\nRead about [Setting Permissions](https://capacitorjs.com/docs/android/configuration#setting-permissions) in the [Android Guide](https://capacitorjs.com/docs/android) for more information on setting Android permissions.\n\nAdditionally, because the Camera API launches a separate Activity to handle taking the photo, you should listen for `appRestoredResult` in the `App` plugin to handle any camera data that was sent in the case your app was terminated by the operating system while the Activity was running.\n\n### Variables\n\nThis plugin will use the following project variables (defined in your app's `variables.gradle` file):\n\n- `$androidxExifInterfaceVersion`: version of `androidx.exifinterface:exifinterface` (default: `1.3.3`)\n- `$androidxMaterialVersion`: version of `com.google.android.material:material` (default: `1.6.1`)\n\n## PWA Notes\n\n[PWA Elements](https://capacitorjs.com/docs/web/pwa-elements) are required for Camera plugin to work.\n\n## Example\n\n```typescript\nimport { Camera, CameraResultType } from '@capacitor/camera';\n\nconst takePicture = async () => {\n  const image = await Camera.getPhoto({\n    quality: 90,\n    allowEditing: true,\n    resultType: CameraResultType.Uri\n  });\n\n  // image.webPath will contain a path that can be set as an image src.\n  // You can access the original file using image.path, which can be\n  // passed to the Filesystem API to read the raw data of the image,\n  // if desired (or pass resultType: CameraResultType.Base64 to getPhoto)\n  var imageUrl = image.webPath;\n\n  // Can be set to the src of an image now\n  imageElement.src = imageUrl;\n};\n```\n\n## API\n\n<docgen-index>\n\n* [`getPhoto(...)`](#getphoto)\n* [`pickImages(...)`](#pickimages)\n* [`pickLimitedLibraryPhotos()`](#picklimitedlibraryphotos)\n* [`getLimitedLibraryPhotos()`](#getlimitedlibraryphotos)\n* [`checkPermissions()`](#checkpermissions)\n* [`requestPermissions(...)`](#requestpermissions)\n* [Interfaces](#interfaces)\n* [Type Aliases](#type-aliases)\n* [Enums](#enums)\n\n</docgen-index>\n\n<docgen-api>\n<!--Update the source file JSDoc comments and rerun docgen to update the docs below-->\n\n### getPhoto(...)\n\n```typescript\ngetPhoto(options: ImageOptions) => Promise<Photo>\n```\n\nPrompt the user to pick a photo from an album, or take a new photo\nwith the camera.\n\n| Param         | Type                                                  |\n| ------------- | ----------------------------------------------------- |\n| **`options`** | <code><a href=\"#imageoptions\">ImageOptions</a></code> |\n\n**Returns:** <code>Promise&lt;<a href=\"#photo\">Photo</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### pickImages(...)\n\n```typescript\npickImages(options: GalleryImageOptions) => Promise<GalleryPhotos>\n```\n\nAllows the user to pick multiple pictures from the photo gallery.\nOn iOS 13 and older it only allows to pick one picture.\n\n| Param         | Type                                                                |\n| ------------- | ------------------------------------------------------------------- |\n| **`options`** | <code><a href=\"#galleryimageoptions\">GalleryImageOptions</a></code> |\n\n**Returns:** <code>Promise&lt;<a href=\"#galleryphotos\">GalleryPhotos</a>&gt;</code>\n\n**Since:** 1.2.0\n\n--------------------\n\n\n### pickLimitedLibraryPhotos()\n\n```typescript\npickLimitedLibraryPhotos() => Promise<GalleryPhotos>\n```\n\niOS 14+ Only: Allows the user to update their limited photo library selection.\n\n**Returns:** <code>Promise&lt;<a href=\"#galleryphotos\">GalleryPhotos</a>&gt;</code>\n\n**Since:** 4.1.0\n\n--------------------\n\n\n### getLimitedLibraryPhotos()\n\n```typescript\ngetLimitedLibraryPhotos() => Promise<GalleryPhotos>\n```\n\niOS 14+ Only: Return an array of photos selected from the limited photo library.\n\n**Returns:** <code>Promise&lt;<a href=\"#galleryphotos\">GalleryPhotos</a>&gt;</code>\n\n**Since:** 4.1.0\n\n--------------------\n\n\n### checkPermissions()\n\n```typescript\ncheckPermissions() => Promise<PermissionStatus>\n```\n\nCheck camera and photo album permissions\n\n**Returns:** <code>Promise&lt;<a href=\"#permissionstatus\">PermissionStatus</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### requestPermissions(...)\n\n```typescript\nrequestPermissions(permissions?: CameraPluginPermissions | undefined) => Promise<PermissionStatus>\n```\n\nRequest camera and photo album permissions\n\n| Param             | Type                                                                        |\n| ----------------- | --------------------------------------------------------------------------- |\n| **`permissions`** | <code><a href=\"#camerapluginpermissions\">CameraPluginPermissions</a></code> |\n\n**Returns:** <code>Promise&lt;<a href=\"#permissionstatus\">PermissionStatus</a>&gt;</code>\n\n**Since:** 1.0.0\n\n--------------------\n\n\n### Interfaces\n\n\n#### Photo\n\n| Prop               | Type                 | Description                                                                                                                                                                                                      | Since |\n| ------------------ | -------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- |\n| **`base64String`** | <code>string</code>  | The base64 encoded string representation of the image, if using <a href=\"#cameraresulttype\">CameraResultType.Base64</a>.                                                                                         | 1.0.0 |\n| **`dataUrl`**      | <code>string</code>  | The url starting with 'data:image/jpeg;base64,' and the base64 encoded string representation of the image, if using <a href=\"#cameraresulttype\">CameraResultType.DataUrl</a>.                                    | 1.0.0 |\n| **`path`**         | <code>string</code>  | If using <a href=\"#cameraresulttype\">CameraResultType.Uri</a>, the path will contain a full, platform-specific file URL that can be read later using the Filsystem API.                                          | 1.0.0 |\n| **`webPath`**      | <code>string</code>  | webPath returns a path that can be used to set the src attribute of an image for efficient loading and rendering.                                                                                                | 1.0.0 |\n| **`exif`**         | <code>any</code>     | Exif data, if any, retrieved from the image                                                                                                                                                                      | 1.0.0 |\n| **`format`**       | <code>string</code>  | The format of the image, ex: jpeg, png, gif. iOS and Android only support jpeg. Web supports jpeg and png. gif is only supported if using file input.                                                            | 1.0.0 |\n| **`saved`**        | <code>boolean</code> | Whether if the image was saved to the gallery or not. On Android and iOS, saving to the gallery can fail if the user didn't grant the required permissions. On Web there is no gallery, so always returns false. | 1.1.0 |\n\n\n#### ImageOptions\n\n| Prop                     | Type                                                          | Description                                                                                                                                                                                                                                                            | Default                             | Since |\n| ------------------------ | ------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------- | ----- |\n| **`quality`**            | <code>number</code>                                           | The quality of image to return as JPEG, from 0-100                                                                                                                                                                                                                     |                                     | 1.0.0 |\n| **`allowEditing`**       | <code>boolean</code>                                          | Whether to allow the user to crop or make small edits (platform specific). On iOS 14+ it's only supported for <a href=\"#camerasource\">CameraSource.Camera</a>, but not for <a href=\"#camerasource\">CameraSource.Photos</a>.                                            |                                     | 1.0.0 |\n| **`resultType`**         | <code><a href=\"#cameraresulttype\">CameraResultType</a></code> | How the data should be returned. Currently, only 'Base64', 'DataUrl' or 'Uri' is supported                                                                                                                                                                             |                                     | 1.0.0 |\n| **`saveToGallery`**      | <code>boolean</code>                                          | Whether to save the photo to the gallery. If the photo was picked from the gallery, it will only be saved if edited.                                                                                                                                                   | <code>: false</code>                | 1.0.0 |\n| **`width`**              | <code>number</code>                                           | The desired maximum width of the saved image. The aspect ratio is respected.                                                                                                                                                                                           |                                     | 1.0.0 |\n| **`height`**             | <code>number</code>                                           | The desired maximum height of the saved image. The aspect ratio is respected.                                                                                                                                                                                          |                                     | 1.0.0 |\n| **`correctOrientation`** | <code>boolean</code>                                          | Whether to automatically rotate the image \"up\" to correct for orientation in portrait mode                                                                                                                                                                             | <code>: true</code>                 | 1.0.0 |\n| **`source`**             | <code><a href=\"#camerasource\">CameraSource</a></code>         | The source to get the photo from. By default this prompts the user to select either the photo album or take a photo.                                                                                                                                                   | <code>: CameraSource.Prompt</code>  | 1.0.0 |\n| **`direction`**          | <code><a href=\"#cameradirection\">CameraDirection</a></code>   | iOS and Web only: The camera direction.                                                                                                                                                                                                                                | <code>: CameraDirection.Rear</code> | 1.0.0 |\n| **`presentationStyle`**  | <code>'fullscreen' \\| 'popover'</code>                        | iOS only: The presentation style of the Camera.                                                                                                                                                                                                                        | <code>: 'fullscreen'</code>         | 1.0.0 |\n| **`webUseInput`**        | <code>boolean</code>                                          | Web only: Whether to use the PWA Element experience or file input. The default is to use PWA Elements if installed and fall back to file input. To always use file input, set this to `true`. Learn more about PWA Elements: https://capacitorjs.com/docs/pwa-elements |                                     | 1.0.0 |\n| **`promptLabelHeader`**  | <code>string</code>                                           | Text value to use when displaying the prompt.                                                                                                                                                                                                                          | <code>: 'Photo'</code>              | 1.0.0 |\n| **`promptLabelCancel`**  | <code>string</code>                                           | Text value to use when displaying the prompt. iOS only: The label of the 'cancel' button.                                                                                                                                                                              | <code>: 'Cancel'</code>             | 1.0.0 |\n| **`promptLabelPhoto`**   | <code>string</code>                                           | Text value to use when displaying the prompt. The label of the button to select a saved image.                                                                                                                                                                         | <code>: 'From Photos'</code>        | 1.0.0 |\n| **`promptLabelPicture`** | <code>string</code>                                           | Text value to use when displaying the prompt. The label of the button to open the camera.                                                                                                                                                                              | <code>: 'Take Picture'</code>       | 1.0.0 |\n\n\n#### GalleryPhotos\n\n| Prop         | Type                        | Description                     | Since |\n| ------------ | --------------------------- | ------------------------------- | ----- |\n| **`photos`** | <code>GalleryPhoto[]</code> | Array of all the picked photos. | 1.2.0 |\n\n\n#### GalleryPhoto\n\n| Prop          | Type                | Description                                                                                                       | Since |\n| ------------- | ------------------- | ----------------------------------------------------------------------------------------------------------------- | ----- |\n| **`path`**    | <code>string</code> | Full, platform-specific file URL that can be read later using the Filsystem API.                                  | 1.2.0 |\n| **`webPath`** | <code>string</code> | webPath returns a path that can be used to set the src attribute of an image for efficient loading and rendering. | 1.2.0 |\n| **`exif`**    | <code>any</code>    | Exif data, if any, retrieved from the image                                                                       | 1.2.0 |\n| **`format`**  | <code>string</code> | The format of the image, ex: jpeg, png, gif. iOS and Android only support jpeg. Web supports jpeg, png and gif.   | 1.2.0 |\n\n\n#### GalleryImageOptions\n\n| Prop                     | Type                                   | Description                                                                                | Default                     | Since |\n| ------------------------ | -------------------------------------- | ------------------------------------------------------------------------------------------ | --------------------------- | ----- |\n| **`quality`**            | <code>number</code>                    | The quality of image to return as JPEG, from 0-100                                         |                             | 1.2.0 |\n| **`width`**              | <code>number</code>                    | The desired maximum width of the saved image. The aspect ratio is respected.               |                             | 1.2.0 |\n| **`height`**             | <code>number</code>                    | The desired maximum height of the saved image. The aspect ratio is respected.              |                             | 1.2.0 |\n| **`correctOrientation`** | <code>boolean</code>                   | Whether to automatically rotate the image \"up\" to correct for orientation in portrait mode | <code>: true</code>         | 1.2.0 |\n| **`presentationStyle`**  | <code>'fullscreen' \\| 'popover'</code> | iOS only: The presentation style of the Camera.                                            | <code>: 'fullscreen'</code> | 1.2.0 |\n| **`limit`**              | <code>number</code>                    | iOS only: Maximum number of pictures the user will be able to choose.                      | <code>0 (unlimited)</code>  | 1.2.0 |\n\n\n#### PermissionStatus\n\n| Prop         | Type                                                                    |\n| ------------ | ----------------------------------------------------------------------- |\n| **`camera`** | <code><a href=\"#camerapermissionstate\">CameraPermissionState</a></code> |\n| **`photos`** | <code><a href=\"#camerapermissionstate\">CameraPermissionState</a></code> |\n\n\n#### CameraPluginPermissions\n\n| Prop              | Type                                |\n| ----------------- | ----------------------------------- |\n| **`permissions`** | <code>CameraPermissionType[]</code> |\n\n\n### Type Aliases\n\n\n#### CameraPermissionState\n\n<code><a href=\"#permissionstate\">PermissionState</a> | 'limited'</code>\n\n\n#### PermissionState\n\n<code>'prompt' | 'prompt-with-rationale' | 'granted' | 'denied'</code>\n\n\n#### CameraPermissionType\n\n<code>'camera' | 'photos'</code>\n\n\n### Enums\n\n\n#### CameraResultType\n\n| Members       | Value                  |\n| ------------- | ---------------------- |\n| **`Uri`**     | <code>'uri'</code>     |\n| **`Base64`**  | <code>'base64'</code>  |\n| **`DataUrl`** | <code>'dataUrl'</code> |\n\n\n#### CameraSource\n\n| Members      | Value                 | Description                                                        |\n| ------------ | --------------------- | ------------------------------------------------------------------ |\n| **`Prompt`** | <code>'PROMPT'</code> | Prompts the user to select either the photo album or take a photo. |\n| **`Camera`** | <code>'CAMERA'</code> | Take a new photo using the camera.                                 |\n| **`Photos`** | <code>'PHOTOS'</code> | Pick an existing photo from the gallery or photo album.            |\n\n\n#### CameraDirection\n\n| Members     | Value                |\n| ----------- | -------------------- |\n| **`Rear`**  | <code>'REAR'</code>  |\n| **`Front`** | <code>'FRONT'</code> |\n\n</docgen-api>\n",
    "licenseText": "Copyright 2020-present Ionic\nhttps://ionic.io\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@capacitor/camera/-/camera-4.1.1.tgz#a361b3595c378666614e3bd3384d158b85e4d7c3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@capacitor/camera/-/camera-4.1.1.tgz",
    "hash": "a361b3595c378666614e3bd3384d158b85e4d7c3",
    "integrity": "sha512-L/1KLg4IRCAUmwhmu5jIic4U2OLAHFSW5GoExFU9yR8iCJo1SBGSiay2TpU3PpgmJHRtazO6pxKUCyAmDExkhw==",
    "registry": "npm",
    "packageName": "@capacitor/camera",
    "cacheIntegrity": "sha512-L/1KLg4IRCAUmwhmu5jIic4U2OLAHFSW5GoExFU9yR8iCJo1SBGSiay2TpU3PpgmJHRtazO6pxKUCyAmDExkhw== sha1-o2GzWVw3hmZhTjvTOE0Vi4Xk18M="
  },
  "registry": "npm",
  "hash": "a361b3595c378666614e3bd3384d158b85e4d7c3"
}