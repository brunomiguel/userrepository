{
  "manifest": {
    "name": "resolve-pathname",
    "version": "3.0.0",
    "description": "Resolve URL pathnames using JavaScript",
    "repository": {
      "type": "git",
      "url": "https://github.com/mjackson/resolve-pathname.git"
    },
    "license": "MIT",
    "author": {
      "name": "Michael Jackson"
    },
    "files": [
      "cjs",
      "esm",
      "index.js",
      "umd"
    ],
    "main": "index.js",
    "module": "esm/resolve-pathname.js",
    "unpkg": "umd/resolve-pathname.js",
    "scripts": {
      "build": "rollup -c",
      "clean": "git clean -fdX .",
      "lint": "eslint modules",
      "prepublishOnly": "npm run build",
      "test": "jest"
    },
    "devDependencies": {
      "@babel/core": "^7.1.6",
      "@babel/preset-env": "^7.1.6",
      "babel-core": "^7.0.0-bridge.0",
      "babel-eslint": "^10.0.1",
      "babel-jest": "^23.6.0",
      "eslint": "^5.9.0",
      "jest": "^23.6.0",
      "rollup": "^0.67.3",
      "rollup-plugin-replace": "^2.1.0",
      "rollup-plugin-size-snapshot": "^0.7.0",
      "rollup-plugin-uglify": "^6.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-resolve-pathname-3.0.0-99d02224d3cf263689becbb393bc560313025dcd-integrity/node_modules/resolve-pathname/package.json",
    "readmeFilename": "README.md",
    "readme": "# resolve-pathname [![Travis][build-badge]][build] [![npm package][npm-badge]][npm]\n\n[build-badge]: https://img.shields.io/travis/mjackson/resolve-pathname/master.svg?style=flat-square\n[build]: https://travis-ci.org/mjackson/resolve-pathname\n[npm-badge]: https://img.shields.io/npm/v/resolve-pathname.svg?style=flat-square\n[npm]: https://www.npmjs.org/package/resolve-pathname\n\n[resolve-pathname](https://www.npmjs.com/package/resolve-pathname) resolves URL pathnames identical to the way browsers resolve the pathname of an `<a href>` value. The goals are:\n\n- 100% compatibility with browser pathname resolution\n- Pure JavaScript implementation (no DOM dependency)\n\n## Installation\n\nUsing [npm](https://www.npmjs.com/):\n\n    $ npm install --save resolve-pathname\n\nThen, use as you would anything else:\n\n```js\n// using ES6 modules\nimport resolvePathname from 'resolve-pathname';\n\n// using CommonJS modules\nvar resolvePathname = require('resolve-pathname');\n```\n\nThe UMD build is also available on [unpkg](https://unpkg.com):\n\n```html\n<script src=\"https://unpkg.com/resolve-pathname\"></script>\n```\n\nYou can find the library on `window.resolvePathname`.\n\n## Usage\n\n```js\nimport resolvePathname from 'resolve-pathname';\n\n// Simply pass the pathname you'd like to resolve. Second\n// argument is the path we're coming from, or the current\n// pathname. It defaults to \"/\".\nresolvePathname('about', '/company/jobs'); // /company/about\nresolvePathname('../jobs', '/company/team/ceo'); // /company/jobs\nresolvePathname('about'); // /about\nresolvePathname('/about'); // /about\n\n// Index paths (with a trailing slash) are also supported and\n// work the same way as browsers.\nresolvePathname('about', '/company/info/'); // /company/info/about\n\n// In browsers, it's easy to resolve a URL pathname relative to\n// the current page. Just use window.location! e.g. if\n// window.location.pathname == '/company/team/ceo' then\nresolvePathname('cto', window.location.pathname); // /company/team/cto\nresolvePathname('../jobs', window.location.pathname); // /company/jobs\n```\n\n## Prior Work\n\n- [url.resolve](https://nodejs.org/api/url.html#url_url_resolve_from_to) - node's `url.resolve` implementation for full URLs\n- [resolve-url](https://www.npmjs.com/package/resolve-url) - A DOM-dependent implementation of the same algorithm\n",
    "licenseText": "MIT License\n\nCopyright (c) Michael Jackson 2016-2018\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/resolve-pathname/-/resolve-pathname-3.0.0.tgz#99d02224d3cf263689becbb393bc560313025dcd",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/resolve-pathname/-/resolve-pathname-3.0.0.tgz",
    "hash": "99d02224d3cf263689becbb393bc560313025dcd",
    "integrity": "sha512-C7rARubxI8bXFNB/hqcp/4iUeIXJhJZvFPFPiSPRnhU5UPxzMFIl+2E6yY6c4k9giDJAhtV+enfA+G89N6Csng==",
    "registry": "npm",
    "packageName": "resolve-pathname",
    "cacheIntegrity": "sha512-C7rARubxI8bXFNB/hqcp/4iUeIXJhJZvFPFPiSPRnhU5UPxzMFIl+2E6yY6c4k9giDJAhtV+enfA+G89N6Csng== sha1-mdAiJNPPJjaJvsuzk7xWAxMCXc0="
  },
  "registry": "npm",
  "hash": "99d02224d3cf263689becbb393bc560313025dcd"
}