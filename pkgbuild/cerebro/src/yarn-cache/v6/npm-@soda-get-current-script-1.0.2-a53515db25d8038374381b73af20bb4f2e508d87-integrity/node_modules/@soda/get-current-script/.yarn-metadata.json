{
  "manifest": {
    "name": "@soda/get-current-script",
    "version": "1.0.2",
    "description": "get the current executing script, with polyfills for IE9+ and Firefox",
    "main": "index.js",
    "scripts": {
      "start": "serve .",
      "test:chrome": "nightwatch -t test.js -e chrome",
      "test:firefox": "nightwatch -t test.js -e firefox",
      "test:ie": "nightwatch -t test.js -e ie",
      "ci:chrome": "yarn start-test start http://localhost:5000 test:chrome",
      "ci:firefox": "yarn start-test start http://localhost:5000 test:firefox",
      "ci:ie": "yarn start-test start http://localhost:5000 test:ie",
      "ci": "yarn ci:chrome && yarn ci:firefox && yarn ci:ie"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/sodatea/get-current-script.git"
    },
    "author": {
      "name": "Haoqun Jiang"
    },
    "license": "MIT",
    "dependencies": {},
    "devDependencies": {
      "chromedriver": "^83.0.0",
      "geckodriver": "^1.19.1",
      "iedriver": "^3.14.1",
      "nightwatch": "^1.3.4",
      "selenium-server": "^3.141.59",
      "serve": "^11.3.1",
      "start-server-and-test": "^1.10.8"
    },
    "publishConfig": {
      "access": "public"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@soda-get-current-script-1.0.2-a53515db25d8038374381b73af20bb4f2e508d87-integrity/node_modules/@soda/get-current-script/package.json",
    "readmeFilename": "README.md",
    "readme": "# @soda/get-current-script ![CI](https://github.com/sodatea/get-current-script/workflows/CI/badge.svg)\n\nIt is basically a function that returns `document.currentScript` but with support for IE9-11, thanks to https://github.com/amiller-gh/currentScript-polyfill.\n\nIt also works around a [Firefox issue](https://bugzilla.mozilla.org/show_bug.cgi?id=1620505) when the script is called in a microtask, which makes `document.currentScript` unusable in a webpack dynamic-imported chunk.\n\nIt is shipped as a utility function rather than a polyfill, because we can't easily tell if the `document.currentScript` is returning `null` due to the Firefox issue or because it's running in an event handler / a callback.\n\nThe implementation here may not adhere strictly to `document.currentScript` spec when called in async code or in a callback. In these situations the spec calls for `document.currentScript` to return `null`. However, for the grand majority of your `document.currentScript` needs, this utility will do the job!\n\n## Usage\n\n```sh\nnpm i @soda/get-current-script\n```\n\n```js\nconst getCurrentScript = require('@soda/get-current-script')\nconst script = getCurrentScript() // the current executing <script> element\n```\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2020 Haoqun Jiang\nCopyright (c) 2015 Adam Miller\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@soda/get-current-script/-/get-current-script-1.0.2.tgz#a53515db25d8038374381b73af20bb4f2e508d87",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@soda/get-current-script/-/get-current-script-1.0.2.tgz",
    "hash": "a53515db25d8038374381b73af20bb4f2e508d87",
    "integrity": "sha512-T7VNNlYVM1SgQ+VsMYhnDkcGmWhQdL0bDyGm5TlQ3GBXnJscEClUUOKduWTmm2zCnvNLC1hc3JpuXjs/nFOc5w==",
    "registry": "npm",
    "packageName": "@soda/get-current-script",
    "cacheIntegrity": "sha512-T7VNNlYVM1SgQ+VsMYhnDkcGmWhQdL0bDyGm5TlQ3GBXnJscEClUUOKduWTmm2zCnvNLC1hc3JpuXjs/nFOc5w== sha1-pTUV2yXYA4N0OBtzryC7Ty5QjYc="
  },
  "registry": "npm",
  "hash": "a53515db25d8038374381b73af20bb4f2e508d87"
}