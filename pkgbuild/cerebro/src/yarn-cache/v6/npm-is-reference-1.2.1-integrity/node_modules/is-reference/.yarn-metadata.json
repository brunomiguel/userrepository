{
  "manifest": {
    "name": "is-reference",
    "version": "1.2.1",
    "description": "Determine whether an AST node is a reference",
    "main": "dist/is-reference.js",
    "module": "dist/is-reference.es.js",
    "types": "dist/types/index.d.ts",
    "files": [
      "dist/*.js",
      "dist/types/**/*.d.ts"
    ],
    "scripts": {
      "test": "mocha",
      "build": "rollup -c && tsc --emitDeclarationOnly",
      "pretest": "npm run build",
      "prepare": "npm run build",
      "prepublishOnly": "npm test"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/Rich-Harris/is-reference.git"
    },
    "keywords": [
      "ast",
      "javascript",
      "estree",
      "acorn"
    ],
    "author": {
      "name": "Rich Harris"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/Rich-Harris/is-reference/issues"
    },
    "homepage": "https://github.com/Rich-Harris/is-reference#readme",
    "dependencies": {
      "@types/estree": "*"
    },
    "devDependencies": {
      "acorn": "^7.2.0",
      "acorn-class-fields": "^0.3.2",
      "acorn-static-class-features": "^0.2.1",
      "estree-walker": "^2.0.1",
      "mocha": "^7.1.2",
      "rollup": "^2.10.3",
      "rollup-plugin-typescript": "^1.0.1",
      "tslib": "^2.0.0",
      "typescript": "^3.9.2"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-is-reference-1.2.1-integrity/node_modules/is-reference/package.json",
    "readmeFilename": "README.md",
    "readme": "# is-reference\n\nUtility for determining whether an AST node is a reference.\n\n`foo` is a reference in these cases:\n\n```js\nconsole.log( foo );\nvar foo;\nfunction foo () {}\nfunction bar ( foo ) {}\nexport { foo as x };\n```\n\n`foo` is *not* a reference in these cases:\n\n```js\nvar obj = { foo: 1 };\nconsole.log( obj.foo );\nexport { x as foo };\n```\n\nIn all cases, `foo` is an `Identifier` node, but the two kinds must be treated differently for the purposes of scope analysis etc. (The examples are non-exhaustive.)\n\n\n## Installation\n\n```bash\nnpm install is-reference\n```\n\n\n## Usage\n\nExample using [Acorn](https://github.com/ternjs/acorn) and [estree-walker](https://github.com/Rich-Harris/estree-walker):\n\n```js\nconst { parse } = require( 'acorn' );\nconst { walk } = require( 'estree-walker' );\nconst isReference = require( 'is-reference' );\n\nconst identifiers = [];\nconst references = [];\n\nconst ast = parse( `var a = b.c;` );\n\nwalk( ast, {\n\tenter ( node, parent ) {\n\t\tif ( node.type === 'Identifier' ) identifiers.push( node );\n\t\tif ( isReference( node, parent ) ) references.push( node );\n\t}\n});\n\nidentifiers.forEach( node => console.log( node.name ) ); // a, b, c\nreferences.forEach( node => console.log( node.name ) ); // a, b\n```\n\n\n## License\n\nMIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/is-reference/-/is-reference-1.2.1.tgz",
    "hash": "",
    "integrity": "sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ==",
    "registry": "npm",
    "packageName": "is-reference",
    "cacheIntegrity": "sha512-U82MsXXiFIrjCK4otLT+o2NA2Cd2g5MLoOVXUZjIOhLurrRxpEXzI8O0KZHr3IjLvlAH1kTPYSuqer5T9ZVBKQ== sha1-iy2sCzcfS8mU/eq6nrVC0DAC0Lc="
  },
  "registry": "npm",
  "hash": "53cd8cb175e2148ae308ae28b4b4fea36340d8277683930ba0e5575198c83a12eeaeb471a445f323c3b42991ebdc88cbbe5007d644cf612baa7abe53f5954129"
}