{
  "manifest": {
    "name": "vue-style-loader",
    "version": "4.1.3",
    "author": {
      "name": "Evan You"
    },
    "description": "Vue.js style loader module for webpack",
    "repository": {
      "type": "git",
      "url": "git@github.com:vuejs/vue-style-loader.git"
    },
    "scripts": {
      "test": "jest",
      "prepublishOnly": "conventional-changelog -p angular -r 2 -i CHANGELOG.md -s"
    },
    "license": "MIT",
    "dependencies": {
      "hash-sum": "^1.0.2",
      "loader-utils": "^1.0.2"
    },
    "devDependencies": {
      "babel-core": "^6.26.0",
      "babel-jest": "^22.1.0",
      "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0",
      "conventional-changelog-cli": "^2.0.1",
      "jest": "^22.1.4"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-vue-style-loader-4.1.3-6d55863a51fa757ab24e89d9371465072aa7bc35-integrity/node_modules/vue-style-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "# vue-style-loader [![Build Status](https://circleci.com/gh/vuejs/vue-style-loader/tree/master.svg?style=shield)](https://circleci.com/gh/vuejs/vue-loader/tree/master) [![npm package](https://img.shields.io/npm/v/vue-style-loader.svg)](https://www.npmjs.com/package/vue-style-loader)\n\nThis is a fork based on [style-loader](https://github.com/webpack/style-loader). Similar to `style-loader`, you can chain it after `css-loader` to dynamically inject CSS into the document as style tags. However, since this is included as a dependency and used by default in `vue-loader`, in most cases you don't need to configure this loader yourself.\n\n## Options\n\n- **manualInject** (3.1.0+):\n\n  Type: `boolean`. When importing the style from a non-vue-file, by default the style is injected as a side effect of the import. When `manualInject` is true, the imported style object exposes a `__inject__` method, which can then be called manually at appropriate timing. If called on the server, the method expects one argument which is the `ssrContext` to attach styles to.\n\n  ``` js\n  import styles from 'styles.scss'\n\n  export default {\n    beforeCreate() { // or create a mixin for this purpose\n      if(styles.__inject__) {\n        styles.__inject__(this.$ssrContext)\n      }\n    }\n\n    render() {\n      return <div class={styles.heading}>Hello World</div>\n    }\n  }\n  ```\n\n  Note this behavior is enabled automatically when `vue-style-loader` is used on styles imported within a `*.vue` file. The option is only exposed for advanced usage.\n\n- **ssrId** (3.1.0+):\n\n  Type: `boolean`. Add `data-vue-ssr-id` attribute to injected `<style>` tags even when not in Node.js. This can be used with pre-rendering (instead of SSR) to avoid duplicate style injection on hydration.\n\n## Differences from `style-loader`\n\n### Server-Side Rendering Support\n\nWhen bundling with `target: 'node'`, the styles in all rendered components are collected and exposed on the Vue render context object as `context.styles`, which you can simply inline into your markup's `<head>`. If you are building a Vue SSR app, you probably should use this loader for CSS imported from JavaScript files too.\n\n### Misc\n\n- Does not support url mode and reference counting mode. Also removed `singleton` and `insertAt` query options. It always automatically pick the style insertion mechanism that makes most sense. If you need these capabilities you should probably use the original `style-loader` instead.\n\n- Fixed the issue that root-relative URLs are interpreted against chrome:// urls and make source map URLs work for injected `<style>` tags in Chrome.\n\n## License\n\nMIT\n",
    "licenseText": "Copyright JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vue-style-loader/-/vue-style-loader-4.1.3.tgz#6d55863a51fa757ab24e89d9371465072aa7bc35",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vue-style-loader/-/vue-style-loader-4.1.3.tgz",
    "hash": "6d55863a51fa757ab24e89d9371465072aa7bc35",
    "integrity": "sha512-sFuh0xfbtpRlKfm39ss/ikqs9AbKCoXZBpHeVZ8Tx650o0k0q/YCM7FRvigtxpACezfq6af+a7JeqVTWvncqDg==",
    "registry": "npm",
    "packageName": "vue-style-loader",
    "cacheIntegrity": "sha512-sFuh0xfbtpRlKfm39ss/ikqs9AbKCoXZBpHeVZ8Tx650o0k0q/YCM7FRvigtxpACezfq6af+a7JeqVTWvncqDg== sha1-bVWGOlH6dXqyTonZNxRlByqnvDU="
  },
  "registry": "npm",
  "hash": "6d55863a51fa757ab24e89d9371465072aa7bc35"
}