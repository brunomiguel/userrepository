{
  "manifest": {
    "name": "get-package-type",
    "version": "0.1.0",
    "description": "Determine the `package.json#type` which applies to a location",
    "type": "module",
    "main": "index.cjs",
    "exports": "./index.cjs",
    "scripts": {
      "pretest": "if-ver -ge 10 || exit 0; cfware-lint .",
      "tests-only": "nyc -s node test.cjs",
      "test": "npm run -s tests-only",
      "posttest": "nyc report --check-coverage"
    },
    "engines": {
      "node": ">=8.0.0"
    },
    "author": {
      "name": "Corey Farrell"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/cfware/get-package-type.git"
    },
    "bugs": {
      "url": "https://github.com/cfware/get-package-type/issues"
    },
    "homepage": "https://github.com/cfware/get-package-type#readme",
    "dependencies": {},
    "devDependencies": {
      "@cfware/lint": "^1.4.3",
      "@cfware/nyc": "^0.7.0",
      "if-ver": "^1.1.0",
      "libtap": "^0.3.0",
      "nyc": "^15.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-get-package-type-0.1.0-integrity/node_modules/get-package-type/package.json",
    "readmeFilename": "README.md",
    "readme": "# get-package-type [![NPM Version][npm-image]][npm-url]\n\nDetermine the `package.json#type` which applies to a location.\n\n## Usage\n\n```js\nconst getPackageType = require('get-package-type');\n\n(async () => {\n  console.log(await getPackageType('file.js'));\n  console.log(getPackageType.sync('file.js'));\n})();\n```\n\nThis function does not validate the value found in `package.json#type`.  Any truthy value\nfound will be returned.  Non-truthy values will be reported as `commonjs`.\n\nThe argument must be a filename.\n```js\n// This never looks at `dir1/`, first attempts to load `./package.json`.\nconst type1 = await getPackageType('dir1/');\n\n// This attempts to load `dir1/package.json`.\nconst type2 = await getPackageType('dir1/index.cjs');\n```\n\nThe extension of the filename does not effect the result.  The primary use case for this\nmodule is to determine if `myapp.config.js` should be loaded with `require` or `import`.\n\n[npm-image]: https://img.shields.io/npm/v/get-package-type.svg\n[npm-url]: https://npmjs.org/package/get-package-type\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 CFWare, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz",
    "hash": "",
    "integrity": "sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==",
    "registry": "npm",
    "packageName": "get-package-type",
    "cacheIntegrity": "sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q== sha1-jeLYA8/0TfO8bEVuZmizbDkm4Ro="
  },
  "registry": "npm",
  "hash": "a63cee2ad63ae0661f5a2ccd009d1fafd56ab6d6643622b6892e37d0bb481f38c112be9b5fc026db39b8b16e11a39c23596e5c02544bd6a00c4dc5db8cd00ed9"
}