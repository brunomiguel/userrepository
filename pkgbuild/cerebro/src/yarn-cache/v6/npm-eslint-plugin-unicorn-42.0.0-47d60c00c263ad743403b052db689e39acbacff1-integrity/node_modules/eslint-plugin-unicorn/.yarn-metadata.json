{
  "manifest": {
    "name": "eslint-plugin-unicorn",
    "version": "42.0.0",
    "description": "Various awesome ESLint rules",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/eslint-plugin-unicorn.git"
    },
    "funding": "https://github.com/sindresorhus/eslint-plugin-unicorn?sponsor=1",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://sindresorhus.com"
    },
    "engines": {
      "node": ">=12"
    },
    "scripts": {
      "create-rule": "node ./scripts/create-rule.mjs && npm run generate-rule-notices && npm run generate-rules-table",
      "fix": "run-p --continue-on-error fix:*",
      "fix:js": "npm run lint:js -- --fix",
      "fix:md": "npm run lint:md -- --fix",
      "generate-rule-notices": "node ./scripts/generate-rule-notices.mjs",
      "generate-rules-table": "node ./scripts/generate-rules-table.mjs",
      "integration": "node ./test/integration/test.mjs",
      "lint": "run-p --continue-on-error lint:*",
      "lint:js": "xo",
      "lint:md": "markdownlint \"**/*.md\"",
      "lint:package-json": "npmPkgJsonLint .",
      "run-rules-on-codebase": "node ./test/run-rules-on-codebase/lint.mjs",
      "smoke": "eslint-remote-tester --config ./test/smoke/eslint-remote-tester.config.js",
      "test": "npm-run-all --continue-on-error lint test:*",
      "test:js": "c8 ava"
    },
    "files": [
      "index.js",
      "rules",
      "configs"
    ],
    "keywords": [
      "eslint",
      "eslintplugin",
      "eslint-plugin",
      "unicorn",
      "linter",
      "lint",
      "style",
      "xo"
    ],
    "dependencies": {
      "@babel/helper-validator-identifier": "^7.15.7",
      "ci-info": "^3.3.0",
      "clean-regexp": "^1.0.0",
      "eslint-utils": "^3.0.0",
      "esquery": "^1.4.0",
      "indent-string": "^4.0.0",
      "is-builtin-module": "^3.1.0",
      "lodash": "^4.17.21",
      "pluralize": "^8.0.0",
      "read-pkg-up": "^7.0.1",
      "regexp-tree": "^0.1.24",
      "safe-regex": "^2.1.1",
      "semver": "^7.3.5",
      "strip-indent": "^3.0.0"
    },
    "devDependencies": {
      "@babel/code-frame": "^7.16.0",
      "@babel/core": "^7.16.5",
      "@babel/eslint-parser": "^7.16.5",
      "@lubien/fixture-beta-package": "^1.0.0-beta.1",
      "@typescript-eslint/parser": "^5.7.0",
      "ava": "^3.15.0",
      "c8": "^7.11.0",
      "chalk": "^5.0.0",
      "enquirer": "^2.3.6",
      "eslint": "^8.8.0",
      "eslint-ava-rule-tester": "^4.0.0",
      "eslint-plugin-eslint-plugin": "^4.1.0",
      "eslint-plugin-internal-rules": "file:../../../cerebro/src/yarn-cache/v6/npm-eslint-plugin-unicorn-42.0.0-47d60c00c263ad743403b052db689e39acbacff1-integrity/node_modules/eslint-plugin-unicorn/scripts/internal-rules",
      "eslint-remote-tester": "^2.0.1",
      "eslint-remote-tester-repositories": "^0.0.3",
      "execa": "^6.0.0",
      "listr": "^0.14.3",
      "lodash-es": "^4.17.21",
      "markdownlint-cli": "^0.30.0",
      "mem": "^9.0.1",
      "npm-package-json-lint": "^5.4.2",
      "npm-run-all": "^4.1.5",
      "outdent": "^0.8.0",
      "typescript": "^4.5.4",
      "vue-eslint-parser": "^8.0.1",
      "xo": "^0.48.0"
    },
    "peerDependencies": {
      "eslint": ">=8.8.0"
    },
    "ava": {
      "files": [
        "test/*.mjs",
        "test/unit/*.mjs"
      ]
    },
    "c8": {
      "reporter": [
        "text",
        "lcov"
      ]
    },
    "xo": {
      "ignores": [
        ".cache-eslint-remote-tester",
        "eslint-remote-tester-results",
        "test/integration/{fixtures,fixtures-local}/**"
      ],
      "rules": {
        "unicorn/no-null": "error",
        "unicorn/prefer-array-flat": [
          "error",
          {
            "functions": [
              "flat",
              "flatten"
            ]
          }
        ]
      },
      "overrides": [
        {
          "files": [
            "**/*.js"
          ],
          "parserOptions": {
            "sourceType": "script"
          },
          "rules": {
            "strict": "error",
            "unicorn/prefer-module": "off"
          }
        },
        {
          "files": [
            "rules/*.js"
          ],
          "plugins": [
            "eslint-plugin"
          ],
          "extends": [
            "plugin:eslint-plugin/all"
          ],
          "rules": {
            "eslint-plugin/require-meta-docs-description": [
              "error",
              {
                "pattern": ".+"
              }
            ],
            "eslint-plugin/require-meta-docs-url": "off",
            "eslint-plugin/require-meta-has-suggestions": "off",
            "eslint-plugin/require-meta-schema": "off"
          }
        },
        {
          "files": [
            "rules/**/*.js"
          ],
          "extends": [
            "plugin:internal-rules/all"
          ]
        }
      ]
    },
    "npmpackagejsonlint": {
      "rules": {
        "prefer-caret-version-devDependencies": [
          "error",
          {
            "exceptions": [
              "eslint-plugin-internal-rules"
            ]
          }
        ]
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-eslint-plugin-unicorn-42.0.0-47d60c00c263ad743403b052db689e39acbacff1-integrity/node_modules/eslint-plugin-unicorn/package.json",
    "readmeFilename": "readme.md",
    "readme": "# eslint-plugin-unicorn [![Coverage Status](https://codecov.io/gh/sindresorhus/eslint-plugin-unicorn/branch/main/graph/badge.svg)](https://codecov.io/gh/sindresorhus/eslint-plugin-unicorn/branch/main) [![npm version](https://img.shields.io/npm/v/eslint-plugin-unicorn.svg?style=flat)](https://npmjs.com/package/eslint-plugin-unicorn)\n\n<!-- markdownlint-disable-next-line no-inline-html -->\n<img src=\"https://cloud.githubusercontent.com/assets/170270/18659176/1cc373d0-7f33-11e6-890f-0ba35362ee7e.jpg\" width=\"180\" align=\"right\">\n\n> Various awesome ESLint rules\n\nYou might want to check out [XO](https://github.com/xojs/xo), which includes this plugin.\n\n[**Propose or contribute a new rule âž¡**](.github/contributing.md)\n\n## Install\n\n```sh\nnpm install --save-dev eslint eslint-plugin-unicorn\n```\n\n## Usage\n\nUse a [preset config](#preset-configs) or configure each rules in `package.json`.\n\n```json\n{\n\t\"name\": \"my-awesome-project\",\n\t\"eslintConfig\": {\n\t\t\"env\": {\n\t\t\t\"es2022\": true\n\t\t},\n\t\t\"parserOptions\": {\n\t\t\t\"ecmaVersion\": \"latest\",\n\t\t\t\"sourceType\": \"module\"\n\t\t},\n\t\t\"plugins\": [\n\t\t\t\"unicorn\"\n\t\t],\n\t\t\"rules\": {\n\t\t\t\"unicorn/better-regex\": \"error\",\n\t\t\t\"unicorn/â€¦\": \"error\"\n\t\t}\n\t}\n}\n```\n\n## Rules\n\nEach rule has emojis denoting:\n\n- âœ… if it belongs to the `recommended` configuration\n- ðŸ”§ if some problems reported by the rule are automatically fixable by the `--fix` [command line](https://eslint.org/docs/user-guide/command-line-interface#fixing-problems) option\n- ðŸ’¡ if some problems reported by the rule are manually fixable by editor [suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions)\n\n<!-- Do not manually modify RULES_TABLE part. Run: `npm run generate-rules-table` -->\n<!-- RULES_TABLE -->\n| Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Description | âœ… | ðŸ”§ | ðŸ’¡ |\n| :-- | :-- | :-- | :-- | :-- |\n| [better-regex](docs/rules/better-regex.md) | Improve regexes by making them shorter, consistent, and safer. | âœ… | ðŸ”§ |  |\n| [catch-error-name](docs/rules/catch-error-name.md) | Enforce a specific parameter name in catch clauses. | âœ… | ðŸ”§ |  |\n| [consistent-destructuring](docs/rules/consistent-destructuring.md) | Use destructured variables over properties. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [consistent-function-scoping](docs/rules/consistent-function-scoping.md) | Move function definitions to the highest possible scope. | âœ… |  |  |\n| [custom-error-definition](docs/rules/custom-error-definition.md) | Enforce correct `Error` subclassing. |  | ðŸ”§ |  |\n| [empty-brace-spaces](docs/rules/empty-brace-spaces.md) | Enforce no spaces between braces. | âœ… | ðŸ”§ |  |\n| [error-message](docs/rules/error-message.md) | Enforce passing a `message` value when creating a built-in error. | âœ… |  |  |\n| [escape-case](docs/rules/escape-case.md) | Require escape sequences to use uppercase values. | âœ… | ðŸ”§ |  |\n| [expiring-todo-comments](docs/rules/expiring-todo-comments.md) | Add expiration conditions to TODO comments. | âœ… |  |  |\n| [explicit-length-check](docs/rules/explicit-length-check.md) | Enforce explicitly comparing the `length` or `size` property of a value. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [filename-case](docs/rules/filename-case.md) | Enforce a case style for filenames. | âœ… |  |  |\n| [import-index](docs/rules/import-index.md) | Enforce importing index files with `.`. |  | ðŸ”§ |  |\n| [import-style](docs/rules/import-style.md) | Enforce specific import styles per module. | âœ… |  |  |\n| [new-for-builtins](docs/rules/new-for-builtins.md) | Enforce the use of `new` for all builtins, except `String`, `Number`, `Boolean`, `Symbol` and `BigInt`. | âœ… | ðŸ”§ |  |\n| [no-abusive-eslint-disable](docs/rules/no-abusive-eslint-disable.md) | Enforce specifying rules to disable in `eslint-disable` comments. | âœ… |  |  |\n| [no-array-callback-reference](docs/rules/no-array-callback-reference.md) | Prevent passing a function reference directly to iterator methods. | âœ… |  | ðŸ’¡ |\n| [no-array-for-each](docs/rules/no-array-for-each.md) | Prefer `forâ€¦of` over `Array#forEach(â€¦)`. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [no-array-method-this-argument](docs/rules/no-array-method-this-argument.md) | Disallow using the `this` argument in array methods. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [no-array-push-push](docs/rules/no-array-push-push.md) | Enforce combining multiple `Array#push()` into one call. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [no-array-reduce](docs/rules/no-array-reduce.md) | Disallow `Array#reduce()` and `Array#reduceRight()`. | âœ… |  |  |\n| [no-await-expression-member](docs/rules/no-await-expression-member.md) | Disallow member access from await expression. | âœ… | ðŸ”§ |  |\n| [no-console-spaces](docs/rules/no-console-spaces.md) | Do not use leading/trailing space between `console.log` parameters. | âœ… | ðŸ”§ |  |\n| [no-document-cookie](docs/rules/no-document-cookie.md) | Do not use `document.cookie` directly. | âœ… |  |  |\n| [no-empty-file](docs/rules/no-empty-file.md) | Disallow empty files. | âœ… |  |  |\n| [no-for-loop](docs/rules/no-for-loop.md) | Do not use a `for` loop that can be replaced with a `for-of` loop. | âœ… | ðŸ”§ |  |\n| [no-hex-escape](docs/rules/no-hex-escape.md) | Enforce the use of Unicode escapes instead of hexadecimal escapes. | âœ… | ðŸ”§ |  |\n| [no-instanceof-array](docs/rules/no-instanceof-array.md) | Require `Array.isArray()` instead of `instanceof Array`. | âœ… | ðŸ”§ |  |\n| [no-invalid-remove-event-listener](docs/rules/no-invalid-remove-event-listener.md) | Prevent calling `EventTarget#removeEventListener()` with the result of an expression. | âœ… |  |  |\n| [no-keyword-prefix](docs/rules/no-keyword-prefix.md) | Disallow identifiers starting with `new` or `class`. |  |  |  |\n| [no-lonely-if](docs/rules/no-lonely-if.md) | Disallow `if` statements as the only statement in `if` blocks without `else`. | âœ… | ðŸ”§ |  |\n| [no-nested-ternary](docs/rules/no-nested-ternary.md) | Disallow nested ternary expressions. | âœ… | ðŸ”§ |  |\n| [no-new-array](docs/rules/no-new-array.md) | Disallow `new Array()`. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [no-new-buffer](docs/rules/no-new-buffer.md) | Enforce the use of `Buffer.from()` and `Buffer.alloc()` instead of the deprecated `new Buffer()`. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [no-null](docs/rules/no-null.md) | Disallow the use of the `null` literal. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [no-object-as-default-parameter](docs/rules/no-object-as-default-parameter.md) | Disallow the use of objects as default parameters. | âœ… |  |  |\n| [no-process-exit](docs/rules/no-process-exit.md) | Disallow `process.exit()`. | âœ… |  |  |\n| [no-static-only-class](docs/rules/no-static-only-class.md) | Disallow classes that only have static members. | âœ… | ðŸ”§ |  |\n| [no-thenable](docs/rules/no-thenable.md) | Disallow `then` property. | âœ… |  |  |\n| [no-this-assignment](docs/rules/no-this-assignment.md) | Disallow assigning `this` to a variable. | âœ… |  |  |\n| [no-unreadable-array-destructuring](docs/rules/no-unreadable-array-destructuring.md) | Disallow unreadable array destructuring. | âœ… | ðŸ”§ |  |\n| [no-unreadable-iife](docs/rules/no-unreadable-iife.md) | Disallow unreadable IIFEs. | âœ… |  |  |\n| [no-unsafe-regex](docs/rules/no-unsafe-regex.md) | Disallow unsafe regular expressions. |  |  |  |\n| [no-unused-properties](docs/rules/no-unused-properties.md) | Disallow unused object properties. |  |  |  |\n| [no-useless-fallback-in-spread](docs/rules/no-useless-fallback-in-spread.md) | Disallow useless fallback when spreading in object literals. | âœ… | ðŸ”§ |  |\n| [no-useless-length-check](docs/rules/no-useless-length-check.md) | Disallow useless array length check. | âœ… | ðŸ”§ |  |\n| [no-useless-promise-resolve-reject](docs/rules/no-useless-promise-resolve-reject.md) | Disallow returning/yielding `Promise.resolve/reject()` in async functions or promise callbacks | âœ… | ðŸ”§ |  |\n| [no-useless-spread](docs/rules/no-useless-spread.md) | Disallow unnecessary spread. | âœ… | ðŸ”§ |  |\n| [no-useless-switch-case](docs/rules/no-useless-switch-case.md) | Disallow useless case in switch statements. | âœ… |  | ðŸ’¡ |\n| [no-useless-undefined](docs/rules/no-useless-undefined.md) | Disallow useless `undefined`. | âœ… | ðŸ”§ |  |\n| [no-zero-fractions](docs/rules/no-zero-fractions.md) | Disallow number literals with zero fractions or dangling dots. | âœ… | ðŸ”§ |  |\n| [number-literal-case](docs/rules/number-literal-case.md) | Enforce proper case for numeric literals. | âœ… | ðŸ”§ |  |\n| [numeric-separators-style](docs/rules/numeric-separators-style.md) | Enforce the style of numeric separators by correctly grouping digits. | âœ… | ðŸ”§ |  |\n| [prefer-add-event-listener](docs/rules/prefer-add-event-listener.md) | Prefer `.addEventListener()` and `.removeEventListener()` over `on`-functions. | âœ… | ðŸ”§ |  |\n| [prefer-array-find](docs/rules/prefer-array-find.md) | Prefer `.find(â€¦)` over the first element from `.filter(â€¦)`. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-array-flat](docs/rules/prefer-array-flat.md) | Prefer `Array#flat()` over legacy techniques to flatten arrays. | âœ… | ðŸ”§ |  |\n| [prefer-array-flat-map](docs/rules/prefer-array-flat-map.md) | Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`. | âœ… | ðŸ”§ |  |\n| [prefer-array-index-of](docs/rules/prefer-array-index-of.md) | Prefer `Array#indexOf()` over `Array#findIndex()` when looking for the index of an item. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-array-some](docs/rules/prefer-array-some.md) | Prefer `.some(â€¦)` over `.filter(â€¦).length` check and `.find(â€¦)`. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-at](docs/rules/prefer-at.md) | Prefer `.at()` method for index access and `String#charAt()`. |  | ðŸ”§ | ðŸ’¡ |\n| [prefer-code-point](docs/rules/prefer-code-point.md) | Prefer `String#codePointAt(â€¦)` over `String#charCodeAt(â€¦)` and `String.fromCodePoint(â€¦)` over `String.fromCharCode(â€¦)`. | âœ… |  | ðŸ’¡ |\n| [prefer-date-now](docs/rules/prefer-date-now.md) | Prefer `Date.now()` to get the number of milliseconds since the Unix Epoch. | âœ… | ðŸ”§ |  |\n| [prefer-default-parameters](docs/rules/prefer-default-parameters.md) | Prefer default parameters over reassignment. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-dom-node-append](docs/rules/prefer-dom-node-append.md) | Prefer `Node#append()` over `Node#appendChild()`. | âœ… | ðŸ”§ |  |\n| [prefer-dom-node-dataset](docs/rules/prefer-dom-node-dataset.md) | Prefer using `.dataset` on DOM elements over calling attribute methods. | âœ… | ðŸ”§ |  |\n| [prefer-dom-node-remove](docs/rules/prefer-dom-node-remove.md) | Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-dom-node-text-content](docs/rules/prefer-dom-node-text-content.md) | Prefer `.textContent` over `.innerText`. | âœ… |  | ðŸ’¡ |\n| [prefer-export-from](docs/rules/prefer-export-from.md) | Prefer `exportâ€¦from` when re-exporting. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-includes](docs/rules/prefer-includes.md) | Prefer `.includes()` over `.indexOf()` and `Array#some()` when checking for existence or non-existence. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-json-parse-buffer](docs/rules/prefer-json-parse-buffer.md) | Prefer reading a JSON file as a buffer. |  | ðŸ”§ |  |\n| [prefer-keyboard-event-key](docs/rules/prefer-keyboard-event-key.md) | Prefer `KeyboardEvent#key` over `KeyboardEvent#keyCode`. | âœ… | ðŸ”§ |  |\n| [prefer-math-trunc](docs/rules/prefer-math-trunc.md) | Enforce the use of `Math.trunc` instead of bitwise operators. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-modern-dom-apis](docs/rules/prefer-modern-dom-apis.md) | Prefer `.before()` over `.insertBefore()`, `.replaceWith()` over `.replaceChild()`, prefer one of `.before()`, `.after()`, `.append()` or `.prepend()` over `insertAdjacentText()` and `insertAdjacentElement()`. | âœ… | ðŸ”§ |  |\n| [prefer-modern-math-apis](docs/rules/prefer-modern-math-apis.md) | Prefer modern `Math` APIs over legacy patterns. | âœ… | ðŸ”§ |  |\n| [prefer-module](docs/rules/prefer-module.md) | Prefer JavaScript modules (ESM) over CommonJS. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-native-coercion-functions](docs/rules/prefer-native-coercion-functions.md) | Prefer using `String`, `Number`, `BigInt`, `Boolean`, and `Symbol` directly. | âœ… | ðŸ”§ |  |\n| [prefer-negative-index](docs/rules/prefer-negative-index.md) | Prefer negative index over `.length - index` for `{String,Array,TypedArray}#slice()`, `Array#splice()` and `Array#at()`. | âœ… | ðŸ”§ |  |\n| [prefer-node-protocol](docs/rules/prefer-node-protocol.md) | Prefer using the `node:` protocol when importing Node.js builtin modules. | âœ… | ðŸ”§ |  |\n| [prefer-number-properties](docs/rules/prefer-number-properties.md) | Prefer `Number` static properties over global ones. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-object-from-entries](docs/rules/prefer-object-from-entries.md) | Prefer using `Object.fromEntries(â€¦)` to transform a list of key-value pairs into an object. | âœ… | ðŸ”§ |  |\n| [prefer-optional-catch-binding](docs/rules/prefer-optional-catch-binding.md) | Prefer omitting the `catch` binding parameter. | âœ… | ðŸ”§ |  |\n| [prefer-prototype-methods](docs/rules/prefer-prototype-methods.md) | Prefer borrowing methods from the prototype instead of the instance. | âœ… | ðŸ”§ |  |\n| [prefer-query-selector](docs/rules/prefer-query-selector.md) | Prefer `.querySelector()` over `.getElementById()`, `.querySelectorAll()` over `.getElementsByClassName()` and `.getElementsByTagName()`. | âœ… | ðŸ”§ |  |\n| [prefer-reflect-apply](docs/rules/prefer-reflect-apply.md) | Prefer `Reflect.apply()` over `Function#apply()`. | âœ… | ðŸ”§ |  |\n| [prefer-regexp-test](docs/rules/prefer-regexp-test.md) | Prefer `RegExp#test()` over `String#match()` and `RegExp#exec()`. | âœ… | ðŸ”§ |  |\n| [prefer-set-has](docs/rules/prefer-set-has.md) | Prefer `Set#has()` over `Array#includes()` when checking for existence or non-existence. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-spread](docs/rules/prefer-spread.md) | Prefer the spread operator over `Array.from(â€¦)`, `Array#concat(â€¦)`, `Array#slice()` and `String#split('')`. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-string-replace-all](docs/rules/prefer-string-replace-all.md) | Prefer `String#replaceAll()` over regex searches with the global flag. |  | ðŸ”§ |  |\n| [prefer-string-slice](docs/rules/prefer-string-slice.md) | Prefer `String#slice()` over `String#substr()` and `String#substring()`. | âœ… | ðŸ”§ |  |\n| [prefer-string-starts-ends-with](docs/rules/prefer-string-starts-ends-with.md) | Prefer `String#startsWith()` & `String#endsWith()` over `RegExp#test()`. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [prefer-string-trim-start-end](docs/rules/prefer-string-trim-start-end.md) | Prefer `String#trimStart()` / `String#trimEnd()` over `String#trimLeft()` / `String#trimRight()`. | âœ… | ðŸ”§ |  |\n| [prefer-switch](docs/rules/prefer-switch.md) | Prefer `switch` over multiple `else-if`. | âœ… | ðŸ”§ |  |\n| [prefer-ternary](docs/rules/prefer-ternary.md) | Prefer ternary expressions over simple `if-else` statements. | âœ… | ðŸ”§ |  |\n| [prefer-top-level-await](docs/rules/prefer-top-level-await.md) | Prefer top-level await over top-level promises and async function calls. |  |  | ðŸ’¡ |\n| [prefer-type-error](docs/rules/prefer-type-error.md) | Enforce throwing `TypeError` in type checking conditions. | âœ… | ðŸ”§ |  |\n| [prevent-abbreviations](docs/rules/prevent-abbreviations.md) | Prevent abbreviations. | âœ… | ðŸ”§ |  |\n| [relative-url-style](docs/rules/relative-url-style.md) | Enforce consistent relative URL style. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [require-array-join-separator](docs/rules/require-array-join-separator.md) | Enforce using the separator argument with `Array#join()`. | âœ… | ðŸ”§ |  |\n| [require-number-to-fixed-digits-argument](docs/rules/require-number-to-fixed-digits-argument.md) | Enforce using the digits argument with `Number#toFixed()`. | âœ… | ðŸ”§ |  |\n| [require-post-message-target-origin](docs/rules/require-post-message-target-origin.md) | Enforce using the `targetOrigin` argument with `window.postMessage()`. |  |  | ðŸ’¡ |\n| [string-content](docs/rules/string-content.md) | Enforce better string content. |  | ðŸ”§ | ðŸ’¡ |\n| [template-indent](docs/rules/template-indent.md) | Fix whitespace-insensitive template indentation. | âœ… | ðŸ”§ |  |\n| [text-encoding-identifier-case](docs/rules/text-encoding-identifier-case.md) | Enforce consistent case for text encoding identifiers. | âœ… | ðŸ”§ | ðŸ’¡ |\n| [throw-new-error](docs/rules/throw-new-error.md) | Require `new` when throwing an error. | âœ… | ðŸ”§ |  |\n<!-- /RULES_TABLE -->\n\n### Deprecated Rules\n\nSee [docs/deprecated-rules.md](docs/deprecated-rules.md)\n\n## Preset configs\n\nSee the [ESLint docs](https://eslint.org/docs/user-guide/configuring/configuration-files#extending-configuration-files) for more information about extending config files.\n\n**Note**: Preset configs will also enable the correct [parser options](https://eslint.org/docs/user-guide/configuring/language-options#specifying-parser-options) and [environment](https://eslint.org/docs/user-guide/configuring/language-options#specifying-environments).\n\n### Recommended config\n\nThis plugin exports a [`recommended` config](configs/recommended.js) that enforces good practices.\n\n```json\n{\n\t\"name\": \"my-awesome-project\",\n\t\"eslintConfig\": {\n\t\t\"extends\": \"plugin:unicorn/recommended\"\n\t}\n}\n```\n\n### All config\n\nThis plugin exports an [`all` config](configs/all.js) that makes use of all rules (except for deprecated ones).\n\n```json\n{\n\t\"name\": \"my-awesome-project\",\n\t\"eslintConfig\": {\n\t\t\"extends\": \"plugin:unicorn/all\"\n\t}\n}\n```\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Fisker Cheung](https://github.com/fisker)\n- [Bryan Mishkin](https://github.com/bmish)\n- [futpib](https://github.com/futpib)\n\n### Former\n\n- [Jeroen Engels](https://github.com/jfmengels)\n- [Sam Verschueren](https://github.com/SamVerschueren)\n- [Adam Babcock](https://github.com/MrHen)\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-unicorn/-/eslint-plugin-unicorn-42.0.0.tgz#47d60c00c263ad743403b052db689e39acbacff1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-unicorn/-/eslint-plugin-unicorn-42.0.0.tgz",
    "hash": "47d60c00c263ad743403b052db689e39acbacff1",
    "integrity": "sha512-ixBsbhgWuxVaNlPTT8AyfJMlhyC5flCJFjyK3oKE8TRrwBnaHvUbuIkCM1lqg8ryYrFStL/T557zfKzX4GKSlg==",
    "registry": "npm",
    "packageName": "eslint-plugin-unicorn",
    "cacheIntegrity": "sha512-ixBsbhgWuxVaNlPTT8AyfJMlhyC5flCJFjyK3oKE8TRrwBnaHvUbuIkCM1lqg8ryYrFStL/T557zfKzX4GKSlg== sha1-R9YMAMJjrXQ0A7BS22ieOay6z/E="
  },
  "registry": "npm",
  "hash": "47d60c00c263ad743403b052db689e39acbacff1"
}