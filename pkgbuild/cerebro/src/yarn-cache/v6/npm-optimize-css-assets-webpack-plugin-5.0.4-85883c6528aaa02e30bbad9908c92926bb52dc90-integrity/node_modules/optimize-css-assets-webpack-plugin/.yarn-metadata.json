{
  "manifest": {
    "name": "optimize-css-assets-webpack-plugin",
    "version": "5.0.4",
    "description": "A Webpack plugin to optimize \\ minimize CSS assets.",
    "keywords": [
      "CSS",
      "duplicate",
      "extract-text-webpack-plugin",
      "minimize",
      "optimize",
      "remove",
      "webpack"
    ],
    "homepage": "http://github.com/NMFR/optimize-css-assets-webpack-plugin",
    "license": "MIT",
    "author": {
      "name": "Nuno Rodrigues"
    },
    "main": "src/index.js",
    "repository": {
      "type": "git",
      "url": "http://github.com/NMFR/optimize-css-assets-webpack-plugin.git"
    },
    "scripts": {
      "test": "jest",
      "test:watch": "jest --watch"
    },
    "jest": {
      "testEnvironment": "node",
      "watchPathIgnorePatterns": [
        "<rootDir>/test/js/*.*"
      ]
    },
    "dependencies": {
      "cssnano": "^4.1.10",
      "last-call-webpack-plugin": "^3.0.0"
    },
    "devDependencies": {
      "babel-core": "^6.26.3",
      "babel-jest": "^26.3.0",
      "babel-plugin-transform-object-rest-spread": "^6.26.0",
      "babel-polyfill": "^6.26.0",
      "babel-preset-env": "^1.7.0",
      "css-loader": "^3.6.0",
      "extract-text-webpack-plugin": "next",
      "jest": "^26.4.2",
      "style-loader": "^0.20.1",
      "webpack": "^4.44.1"
    },
    "peerDependencies": {
      "webpack": "^4.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-optimize-css-assets-webpack-plugin-5.0.4-85883c6528aaa02e30bbad9908c92926bb52dc90-integrity/node_modules/optimize-css-assets-webpack-plugin/package.json",
    "readmeFilename": "README.md",
    "readme": "# Optimize CSS Assets Webpack Plugin\n\nA Webpack plugin to optimize \\ minimize CSS assets.\n\n## What does the plugin do?\n\nIt will search for CSS assets during the Webpack build and will optimize \\ minimize the CSS (by default it uses [cssnano](http://github.com/ben-eb/cssnano) but a custom CSS processor can be specified).\n\n### Solves [extract-text-webpack-plugin](http://github.com/webpack/extract-text-webpack-plugin) CSS duplication problem:\n\nSince [extract-text-webpack-plugin](http://github.com/webpack/extract-text-webpack-plugin) only bundles (merges) text chunks, if it's used to bundle CSS, the bundle might have duplicate entries (chunks can be duplicate free but when merged, duplicate CSS can be created).\n\n## Installation:\n\nUsing npm:\n```shell\n$ npm install --save-dev optimize-css-assets-webpack-plugin\n```\n\n> :warning: For webpack v3 or below please use `optimize-css-assets-webpack-plugin@3.2.0`. The `optimize-css-assets-webpack-plugin@4.0.0` version and above supports webpack v4.\n\n## Configuration:\n\nThe plugin can receive the following options (all of them are optional):\n* `assetNameRegExp`: A regular expression that indicates the names of the assets that should be optimized \\ minimized. The regular expression provided is run against the filenames of the files exported by the `ExtractTextPlugin` instances in your configuration, not the filenames of your source CSS files. Defaults to `/\\.css$/g`\n* `cssProcessor`: The CSS processor used to optimize \\ minimize the CSS, defaults to [`cssnano`](http://github.com/ben-eb/cssnano). This should be a function that follows `cssnano.process` interface (receives a CSS and options parameters and returns a Promise).\n* `cssProcessorOptions`: The options passed to the `cssProcessor`, defaults to `{}`\n* `cssProcessorPluginOptions`: The plugin options passed to the `cssProcessor`, defaults to `{}`\n* `canPrint`: A boolean indicating if the plugin can print messages to the console, defaults to `true`\n\n## Example:\n\n``` javascript\nvar OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract('style-loader', 'css-loader')\n      }\n    ]\n  },\n  plugins: [\n    new ExtractTextPlugin('styles.css'),\n    new OptimizeCssAssetsPlugin({\n      assetNameRegExp: /\\.optimize\\.css$/g,\n      cssProcessor: require('cssnano'),\n      cssProcessorPluginOptions: {\n        preset: ['default', { discardComments: { removeAll: true } }],\n      },\n      canPrint: true\n    })\n  ]\n};\n```\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Nuno Rodrigues\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/optimize-css-assets-webpack-plugin/-/optimize-css-assets-webpack-plugin-5.0.4.tgz#85883c6528aaa02e30bbad9908c92926bb52dc90",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/optimize-css-assets-webpack-plugin/-/optimize-css-assets-webpack-plugin-5.0.4.tgz",
    "hash": "85883c6528aaa02e30bbad9908c92926bb52dc90",
    "integrity": "sha512-wqd6FdI2a5/FdoiCNNkEvLeA//lHHfG24Ln2Xm2qqdIk4aOlsR18jwpyOihqQ8849W3qu2DX8fOYxpvTMj+93A==",
    "registry": "npm",
    "packageName": "optimize-css-assets-webpack-plugin",
    "cacheIntegrity": "sha512-wqd6FdI2a5/FdoiCNNkEvLeA//lHHfG24Ln2Xm2qqdIk4aOlsR18jwpyOihqQ8849W3qu2DX8fOYxpvTMj+93A== sha1-hYg8ZSiqoC4wu62ZCMkpJrtS3JA="
  },
  "registry": "npm",
  "hash": "85883c6528aaa02e30bbad9908c92926bb52dc90"
}