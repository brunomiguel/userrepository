{
  "manifest": {
    "name": "kleur",
    "version": "3.0.3",
    "repository": {
      "type": "git",
      "url": "https://github.com/lukeed/kleur.git"
    },
    "description": "The fastest Node.js library for formatting terminal text with ANSI colors~!",
    "license": "MIT",
    "files": [
      "*.js",
      "*.d.ts"
    ],
    "author": {
      "name": "Luke Edwards",
      "email": "luke.edwards05@gmail.com",
      "url": "lukeed.com"
    },
    "scripts": {
      "test": "tape test/*.js | tap-spec"
    },
    "engines": {
      "node": ">=6"
    },
    "keywords": [
      "ansi",
      "cli",
      "color",
      "colors",
      "console",
      "terminal"
    ],
    "types": "kleur.d.ts",
    "devDependencies": {
      "tap-spec": "^5.0.0",
      "tape": "^4.9.1"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-kleur-3.0.3-integrity/node_modules/kleur/package.json",
    "readmeFilename": "readme.md",
    "readme": "<div align=\"center\">\n  <img src=\"shots/logo.png\" alt=\"kleur\" height=\"120\" />\n</div>\n\n<div align=\"center\">\n  <a href=\"https://npmjs.org/package/kleur\">\n    <img src=\"https://badgen.now.sh/npm/v/kleur\" alt=\"version\" />\n  </a>\n  <a href=\"https://travis-ci.org/lukeed/kleur\">\n    <img src=\"https://badgen.now.sh/travis/lukeed/kleur\" alt=\"travis\" />\n  </a>\n  <a href=\"https://npmjs.org/package/kleur\">\n    <img src=\"https://badgen.now.sh/npm/dm/kleur\" alt=\"downloads\" />\n  </a>\n  <a href=\"https://packagephobia.now.sh/result?p=kleur\">\n    <img src=\"https://packagephobia.now.sh/badge?p=kleur\" alt=\"install size\" />\n  </a>\n</div>\n\n<div align=\"center\">The fastest Node.js library for formatting terminal text with ANSI colors~!</div>\n\n## Features\n\n* No dependencies\n* Super [lightweight](#load-time) & [performant](#performance)\n* Supports [nested](#nested-methods) & [chained](#chained-methods) colors\n* No `String.prototype` modifications\n* Conditional [color support](#conditional-support)\n* Familiar [API](#api)\n\n---\n\nAs of `v3.0` the Chalk-style syntax (magical getter) is no longer used.<br>If you need or require that syntax, consider using [`ansi-colors`](https://github.com/doowb/ansi-colors), which maintains `chalk` parity.\n\n---\n\n\n## Install\n\n```\n$ npm install --save kleur\n```\n\n\n## Usage\n\n```js\nconst { red, white, blue, bold } = require('kleur');\n\n// basic usage\nred('red text');\n\n// chained methods\nblue().bold().underline('howdy partner');\n\n// nested methods\nbold(`${ white().bgRed('[ERROR]') } ${ red().italic('Something happened')}`);\n```\n\n### Chained Methods\n\n```js\nconsole.log(bold().red('this is a bold red message'));\nconsole.log(bold().italic('this is a bold italicized message'));\nconsole.log(bold().yellow().bgRed().italic('this is a bold yellow italicized message'));\nconsole.log(green().bold().underline('this is a bold green underlined message'));\n```\n\n<img src=\"shots/1.png\" width=\"300\" />\n\n### Nested Methods\n\n```js\nconst { yellow, red, cyan } = require('kleur');\n\nconsole.log(yellow(`foo ${red().bold('red')} bar ${cyan('cyan')} baz`));\nconsole.log(yellow('foo ' + red().bold('red') + ' bar ' + cyan('cyan') + ' baz'));\n```\n\n<img src=\"shots/2.png\" width=\"300\" />\n\n\n### Conditional Support\n\nToggle color support as needed; `kleur` includes simple auto-detection which may not cover all cases.\n\n```js\nconst kleur = require('kleur');\n\n// manually disable\nkleur.enabled = false;\n\n// or use another library to detect support\nkleur.enabled = require('color-support').level;\n\nconsole.log(kleur.red('I will only be colored red if the terminal supports colors'));\n```\n\n\n## API\n\nAny `kleur` method returns a `String` when invoked with input; otherwise chaining is expected.\n\n> It's up to the developer to pass the output to destinations like `console.log`, `process.stdout.write`, etc.\n\nThe methods below are grouped by type for legibility purposes only. They each can be [chained](#chained-methods) or [nested](#nested-methods) with one another.\n\n***Colors:***\n> black &mdash; red &mdash; green &mdash; yellow &mdash; blue &mdash; magenta &mdash; cyan &mdash; white &mdash; gray &mdash; grey\n\n***Backgrounds:***\n> bgBlack &mdash; bgRed &mdash; bgGreen &mdash; bgYellow &mdash; bgBlue &mdash; bgMagenta &mdash; bgCyan &mdash; bgWhite\n\n***Modifiers:***\n> reset &mdash; bold &mdash; dim &mdash; italic* &mdash; underline &mdash; inverse &mdash; hidden &mdash; strikethrough*\n\n<sup>* <em>Not widely supported</em></sup>\n\n\n## Benchmarks\n\n> Using Node v10.13.0\n\n### Load time\n\n```\nchalk       :: 14.543ms\nkleur       ::  0.474ms\nansi-colors ::  1.923ms\n```\n\n### Performance\n\n```\n# All Colors\n  ansi-colors  x 199,381 ops/sec ±1.04% (96 runs sampled)\n  chalk        x  12,107 ops/sec ±2.07% (87 runs sampled)\n  kleur        x 715,334 ops/sec ±0.30% (93 runs sampled)\n\n# Stacked colors\n  ansi-colors  x 24,494 ops/sec ±1.03% (93 runs sampled)\n  chalk        x  2,650 ops/sec ±2.06% (85 runs sampled)\n  kleur        x 75,798 ops/sec ±0.19% (97 runs sampled)\n\n# Nested colors\n  ansi-colors  x  77,766 ops/sec ±0.32% (94 runs sampled)\n  chalk        x   5,596 ops/sec ±1.85% (86 runs sampled)\n  kleur        x 137,660 ops/sec ±0.31% (93 runs sampled)\n```\n\n\n## Credits\n\nThis project originally forked [Brian Woodward](https://github.com/doowb)'s awesome [`ansi-colors`](https://github.com/doowb/ansi-colors) library.\n\nBeginning with `kleur@3.0`, the Chalk-style syntax (magical getter) has been replaced with function calls per key:\n\n```js\n// Old:\nc.red.bold.underline('old');\n\n// New:\nc.red().bold().underline('new');\n```\n> <sup><em>As I work more with Rust, the newer syntax feels so much better & more natural!</em></sup>\n\nIf you prefer the old syntax, you may migrate to `ansi-colors`. Versions below `kleur@3.0` have been deprecated.\n\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",
    "hash": "",
    "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==",
    "registry": "npm",
    "packageName": "kleur",
    "cacheIntegrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w== sha1-p5yezIbuHOP6YgbRIWxQHxR/wH4="
  },
  "registry": "npm",
  "hash": "793233955392511f89c5d0c57a911870132d67d42a75e7feae7cd675166e31b3b2c2ee6d3b6c3637baea8e800d67993dbf2c212fa06bd55463508813431e04f3"
}