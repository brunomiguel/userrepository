{
  "manifest": {
    "name": "vue-toasted",
    "description": "Responsive Touch Compatible Toast plugin for VueJS 2+",
    "version": "1.1.28",
    "author": {
      "name": "Shakeeb Sadikeen",
      "email": "shakee.zats@gmail.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/shakee93/vue-toasted.git"
    },
    "main": "./dist/vue-toasted.min.js",
    "types": "./types/index.d.ts",
    "scripts": {
      "dev": "cross-env NODE_ENV=development webpack-dev-server --open --hot",
      "build": "cross-env NODE_ENV=production webpack --config ./build/webpack.release.js --progress --hide-modules",
      "build-local-watch": "cross-env NODE_ENV=production webpack --config ./build/webpack.release.js --progress --hide-modules --watch",
      "release": "npm run build && npm run core && npm run css",
      "css": "cross-env NODE_ENV=production webpack --config ./build/webpack.release.css.js --progress --hide-modules ",
      "core": "cross-env NODE_ENV=production webpack --config ./build/webpack.release.core.js --progress --hide-modules",
      "es": "babel src --presets babel-preset-es2015 --out-dir dist"
    },
    "keywords": [
      "toast",
      "vue",
      "vue-toasted",
      "toasted",
      "responsive",
      "touch-compatible",
      "touch",
      "vue-toast",
      "vue-toastr",
      "toastr"
    ],
    "dependencies": {},
    "devDependencies": {
      "animejs": "^2.2.0",
      "autoprefixer": "^7.2.6",
      "babel-cli": "^6.26.0",
      "babel-core": "^6.26.3",
      "babel-loader": "^6.4.1",
      "babel-preset-es2015": "^6.22.0",
      "babel-preset-latest": "^6.24.1",
      "cross-env": "^3.2.4",
      "css-loader": "^0.25.0",
      "es6-object-assign": "^1.1.0",
      "extract-text-webpack-plugin": "^2.1.2",
      "file-loader": "^0.9.0",
      "hammerjs": "^2.0.8",
      "node-sass": "^4.13.1",
      "postcss-loader": "^2.1.6",
      "requirejs": "^2.3.6",
      "sass-loader": "^6.0.7",
      "shortid": "^2.2.15",
      "style-loader": "^0.18.2",
      "vue-loader": "^11.0.0",
      "vue-style-loader": "^3.1.2",
      "vue-template-compiler": "^2.6.11",
      "webpack": "^2.7.0",
      "webpack-bundle-analyzer": "^2.13.1",
      "webpack-dev-server": "^2.11.5"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-vue-toasted-1.1.28-dbabb83acc89f7a9e8765815e491d79f0dc65c26-integrity/node_modules/vue-toasted/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n    <a href=\"https://github.com/shakee93/vue-toasted\" target=\"_blank\">\n    <img width=\"250\"src=\"https://freshpixl.com/vue-toasted.png?new\">\n    </a>\n</p> \n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/vue-toasted\"><img src=\"https://img.shields.io/npm/v/vue-toasted.svg?style=flat-square\"/> <img src=\"https://img.shields.io/npm/dm/vue-toasted.svg?style=flat-square\"/></a>\n  <a href=\"https://github.com/vuejs/awesome-vue\"><img src=\"https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg\"/></a>\n  <a href=\"https://vuejs.org/\"><img src=\"https://img.shields.io/badge/vue-2.x-brightgreen.svg?style=flat-square\"/></a>\n  <a href=\"https://github.com/shakee93/vue-toasted/\"><img src=\"http://img.badgesize.io/shakee93/vue-toasted/master/dist/vue-toasted.min.js?compression=gzip&style=flat-square\"/></a>\n  <a href=\"http://packagequality.com/#?package=vue-toasted\"><img src=\"http://npm.packagequality.com/shield/vue-toasted.svg?style=flat-square\"/></a>\n </p>\n\n## Introduction\n\nVue Toasted is One of the Best Toast plugin available for VueJS. it is used by VueJS, Laravel, NuxtJS and trusted by many more organizations it is responsive, touch compatible, easy to use, attractive and feature rich with icons, actions etc...\n\n#### Interactive Demo\n\nCheckout the <a target=\"_blank\" href=\"https://shakee93.github.io/vue-toasted/\"> Interactive Demo </a> here.\n\n<p align=\"center\">\n    <img src=\"https://shakee93.github.io/vue-toasted/assets/images/vue-toasted-demo-x3.gif\">\n</p>\n\n#### Menu\n\n- [Installation](#installation)\n    - [Npm](#install-using-npm)\n    - [Yarn](#install-using-yarn)\n    - [Direct Usage](#direct-usage-with-html)\n    - [Nuxt](#nuxt--officially-uses-vue-toasted-for-their-toast-module)\n- [Usage](#usage)\n    - [Basic Usage](#usage)\n    - [Actions](#actions--fire)\n    - [Icons](#icons-fire)\n    - [Standalone Usage](#browsers-support)\n- [Api](#api)\n    - [Options](#options)\n    - [Methods](#methods)\n    - [Toast Object](#toast-object)\n    - [Custom Toast Registration](#custom-toast-registration)\n    - [Vue Router](#vue-router)\n- [Browser Support](#browsers-support)\n- [Mobile Responsiveness](#mobile-responsiveness)\n- [Credits](#credits)\n\n\n## Installation\n\n#### Install using npm\n```bash\n# install it via npm\nnpm install vue-toasted --save\n```\n\n#### Install using yarn\n```bash\n# install it via yarn\nyarn add vue-toasted\n```\n\n#### Direct usage with html\n```html\n<!-- Insert the vue core before vue-toasted -->\n<script src=\"https://unpkg.com/vue-toasted\"></script>\n\n<script>\n    Vue.use(Toasted)\n</script>\n```\n\n<hr>\n\n#### [Nuxt](https://github.com/nuxt/nuxt.js) ðŸ’“ Officially uses `vue-toasted` for their toast module.\n\ninstallation guide ðŸ‘‰  [@nuxtjs/toast](https://github.com/nuxt-community/modules/tree/master/packages/toast)\n\n## Usage\n\nIt is simple. couple of lines all what you need.\n\n```javascript\n// register the plugin on vue\nimport Toasted from 'vue-toasted';\n\nVue.use(Toasted)\n\n// you can also pass options, check options reference below\nVue.use(Toasted, Options)\n\n```\n\n```javascript\n// you can call like this in your component\nthis.$toasted.show('hello billo')\n\n// and also\nVue.toasted.show('hola billo');\n```\n\nAll Good Now you have this cool toast in your project..\n\n\n### Icons :fire:\n[Material Icons](http://google.github.io/material-design-icons/), [Fontawesome](http://fontawesome.io/cheatsheet/) and [Material Design Icons](https://materialdesignicons.com/) are supported. you will have to import the icon packs into your project. <a href=\"/examples/using-icons.js\"> example using icons </a>\n\n```javascript\n{\n    // pass the icon name as string\n    icon : 'check'\n    \n    // or you can pass an object\n    icon : {\n        name : 'watch',\n        after : true // this will append the icon to the end of content\n    }\n}\n```\n\n### Actions  :fire:\n<p align=\"center\">\n    <a href=\"https://github.com/shakee93/vue-toasted\" target=\"_blank\">\n    <img width=\"300\" src=\"https://shakee93.github.io/vue-toasted/assets/images/action-preview.jpg\">\n    </a>\n</p> \n<p>You can have single or multiple actions in the toast. take a look at the example below</p>\n<p>Check below Vue Router section for router integration</p>\n\n**Parameters**|**Type's**|**Default**|**Description**\n-----|-----|-----|-----\ntext*|String|-| name of action\nhref|String|`null`| url of action\nicon|String|`null`| name of material for action\ntarget|String|`null`| target of url\nclass|String/Array|`null`| custom css class for the action\npush|Object |`null`|  Vue Router push parameters\nonClick|Function(e,toastObject) |`null`|  onClick Function of action\n\n##### Examples\n```javascript\n{\n    // you can pass a single action as below\n    action : {\n        text : 'Cancel',\n        onClick : (e, toastObject) => {\n            toastObject.goAway(0);\n        }\n    },\n\n    // you can pass a multiple actions as an array of actions\n    action : [\n        {\n            text : 'Cancel',\n            onClick : (e, toastObject) => {\n                toastObject.goAway(0);\n            }\n        },\n        {\n            text : 'Undo',\n            // router navigation\n            push : { \n            \tname : 'somewhere',\n            \t// this will prevent toast from closing\n            \tdontClose : true\n             }\n        }\n    ]\n}\n```\n\n\n## API\n\n### Options\n\nbelow are the options you can pass to create a toast\n\n**Option**|**Type's**|**Default**|**Description**\n-----|-----|-----|-----\nposition|String|'top-right'|Position of the toast container <br> **['top-right', 'top-center', 'top-left', 'bottom-right', 'bottom-center', 'bottom-left']**\nduration|Number|null|Display time of the toast in millisecond\nkeepOnHover|Boolean|false|When mouse is over a toast's element, the corresponding `duration` timer is paused until the cursor leaves the element\naction|Object, Array|null|Add single or multiple actions to toast  [explained here](#actions--fire)\nfullWidth|Boolean|false|Enable Full Width\nfitToScreen|Boolean|false|Fits to Screen on Full Width\nclassName|String, Array|null|Custom css class name of the toast\ncontainerClass|String, Array|null|Custom css classes for toast container\niconPack|String|'material'| Icon pack type to be used <br> **['material', 'fontawesome', 'mdi', 'custom-class', 'callback']**\nIcon|String, Object|null|Material icon name as string.  [explained here](#icons-fire)\ntype|String|'default'| Type of the Toast  **['success', 'info', 'error']**\ntheme|String|'toasted-primary'|Theme of the toast you prefer<br> **['toasted-primary', 'outline', 'bubble']**\nonComplete|Function|null|Trigger when toast is completed\ncloseOnSwipe|Boolean|true|Closes the toast when the user swipes it\nsingleton|Boolean|false| Only allows one toast at a time.\n\n### Methods\n\nMethods available on Toasted...\n\n```javascript\n// you can pass string or html to message\nVue.toasted.show( 'my message', { /* some option */ })\n```\n\n**Method**|**Parameter's**|**Description**\n-----|-----|-----\nshow|message, options| show a toast with default style\nsuccess|message, options| show a toast with success style\ninfo|message, options| show a toast with info style\nerror|message, options | show a toast with error style\nregister | name, message, options | register your own toast with options [explained here](#custom-toast-registration) \nclear | - | clear all toasts\n\n### Toast Object\nEach Toast Returns a Toast Object where you can manipulate the toast.\n\n```javascript\n\n// html element of the toast\nel : HtmlElement\n\n// change text or html of the toast\ntext : Function(text)\n\n// fadeAway the toast. default delay will be 800ms\ngoAway : Function(delay = 800)\n\n```\n\nusing the toast object\n\n```javascript\nlet myToast = this.$toasted.show(\"Holla !!\");\nmyToast.text(\"Changing the text !!!\").goAway(1500);\n```\n\n\n### Vue Router\n\nAdding vue-router to vue-toasted where you can use it on toast actions.\n\n```javascript\n\n// your app router instance\nvar router = new VueRouter({\n\tmode: 'history',\n\troutes: [{\n\t\tpath: '/foo',\n\t\tname : 'foo-name'\n\t}],\n\tlinkActiveClass: \"active\"\n});\n\n// pass it to vue toasted as below..\nVue.use(Toasted, {\n\trouter\n});\n```\n\n### Custom Toast Registration\n\nYou can register your own toasts like below and it will be available all over the application.\n\n`Toasted.register` methods api details...\n\n**Parameters**|**Type's**|**Default**|**Description**\n-----|-----|-----|-----\nname*|String|-| name of your toast\nmessage*|String/Function(payload) |-|  Toast Body Content\noptions|String/Object| {} | Toast Options as Object or either of these strings **['success', 'info', 'error']**\n\nTake a look at the below examples\n\n##### Simple Example \n```javascript\nimport Toasted from 'vue-toasted';\nVue.use(Toasted);\n\n// Lets Register a Global Error Notification Toast.\nVue.toasted.register('my_app_error', 'Oops.. Something Went Wrong..', {\n    type : 'error',\n    icon : 'error_outline'\n})\n```\n\nAfter Registering your toast you can easily access it in the vue component like below\n\n```javascript\n// this will show a toast with message 'Oops.. Something Went Wrong..'\n// all the custom toasts will be available under `toasted.global`\nthis.$toasted.global.my_app_error();\n```\n\n##### Advanced Example \n\nYou can also pass message as a function. which will give you more power.\nLets think you need to pass a custom message to the error notification we built above.\n\n```javascript\nthis.$toasted.global.my_app_error({\n    message : 'Not Authorized to Access'\n});\n```\nyou can register a toast with payload like below on the example.\n\n```javascript\nimport Toasted from 'vue-toasted';\nVue.use(Toasted);\n\n// options to the toast\nlet options = {\n    type : 'error',\n    icon : 'error_outline'\n};\n\n// register the toast with the custom message\nVue.toasted.register('my_app_error',\n    (payload) => {\n\t\t\n        // if there is no message passed show default message\n        if(! payload.message) {\n    \t    return \"Oops.. Something Went Wrong..\"\n        }\n\t\t\n        // if there is a message show it with the message\n        return \"Oops.. \" + payload.message;\n    },\n    options\n)\n```\n\n\n#### Browsers support\n\n| [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/edge.png\" alt=\"IE / Edge\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>IE / Edge | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/firefox.png\" alt=\"Firefox\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Firefox | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/chrome.png\" alt=\"Chrome\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Chrome | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/safari.png\" alt=\"Safari\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Safari | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/opera.png\" alt=\"Opera\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Opera | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/safari-ios.png\" alt=\"iOS Safari\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>iOS Safari | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/chrome-android.png\" alt=\"Chrome for Android\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Chrome for Android |\n| --------- | --------- | --------- | --------- | --------- | --------- | --------- |\n| IE10, IE11, Edge| last 7 versions| last 7 versions| last 7 versions| last 7 versions| last 3 versions| last 3 versions\n\nPlease Report If You have Found any Issues.\n\n### Mobile Responsiveness\n\nOn Mobile Toasts will be on full width. according to the position the toast will either be on top or bottom.\n\n\n### Credits\n\n+ Inspired and developed from [materialize-css](https://github.com/Dogfalo/materialize) toast.\n+ Uses [hammerjs](http://hammerjs.github.io/) for touch events\n+ Uses lightweight and fast [animejs](http://animejs.com/) for animations.\n+ Whoever contributes to this project :wink:\n\nEnjoy Toasting !!\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Shakeeb Sadikeen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vue-toasted/-/vue-toasted-1.1.28.tgz#dbabb83acc89f7a9e8765815e491d79f0dc65c26",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vue-toasted/-/vue-toasted-1.1.28.tgz",
    "hash": "dbabb83acc89f7a9e8765815e491d79f0dc65c26",
    "integrity": "sha512-UUzr5LX51UbbiROSGZ49GOgSzFxaMHK6L00JV8fir/CYNJCpIIvNZ5YmS4Qc8Y2+Z/4VVYRpeQL2UO0G800Raw==",
    "registry": "npm",
    "packageName": "vue-toasted",
    "cacheIntegrity": "sha512-UUzr5LX51UbbiROSGZ49GOgSzFxaMHK6L00JV8fir/CYNJCpIIvNZ5YmS4Qc8Y2+Z/4VVYRpeQL2UO0G800Raw== sha1-26u4OsyJ96nodlgV5JHXnw3GXCY="
  },
  "registry": "npm",
  "hash": "dbabb83acc89f7a9e8765815e491d79f0dc65c26"
}