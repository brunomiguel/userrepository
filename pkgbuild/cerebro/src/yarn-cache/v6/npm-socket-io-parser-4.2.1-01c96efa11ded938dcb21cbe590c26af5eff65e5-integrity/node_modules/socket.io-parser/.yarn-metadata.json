{
  "manifest": {
    "name": "socket.io-parser",
    "version": "4.2.1",
    "description": "socket.io protocol parser",
    "repository": {
      "type": "git",
      "url": "https://github.com/socketio/socket.io-parser.git"
    },
    "files": [
      "build/"
    ],
    "main": "./build/cjs/index.js",
    "module": "./build/esm/index.js",
    "types": "./build/esm/index.d.ts",
    "exports": {
      "import": {
        "node": "./build/esm-debug/index.js",
        "default": "./build/esm/index.js"
      },
      "require": "./build/cjs/index.js"
    },
    "dependencies": {
      "@socket.io/component-emitter": "~3.1.0",
      "debug": "~4.3.1"
    },
    "devDependencies": {
      "@babel/core": "~7.9.6",
      "@babel/preset-env": "~7.9.6",
      "@types/debug": "^4.1.5",
      "@types/node": "^14.11.1",
      "babelify": "~10.0.0",
      "benchmark": "2.1.2",
      "expect.js": "0.3.1",
      "mocha": "3.2.0",
      "prettier": "^2.1.2",
      "rimraf": "^3.0.2",
      "socket.io-browsers": "^1.0.0",
      "typescript": "^4.0.3",
      "zuul": "3.11.1",
      "zuul-ngrok": "4.0.0"
    },
    "scripts": {
      "compile": "rimraf ./build && tsc && tsc -p tsconfig.esm.json && ./postcompile.sh",
      "test": "npm run format:check && npm run compile && if test \"$BROWSERS\" = \"1\" ; then npm run test:browser; else npm run test:node; fi",
      "test:node": "mocha --reporter dot --bail test/index.js",
      "test:browser": "zuul test/index.js --no-coverage",
      "format:fix": "prettier --write --parser typescript 'lib/**/*.ts' 'test/**/*.js'",
      "format:check": "prettier --check --parser typescript 'lib/**/*.ts' 'test/**/*.js'",
      "prepack": "npm run compile"
    },
    "license": "MIT",
    "engines": {
      "node": ">=10.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-socket-io-parser-4.2.1-01c96efa11ded938dcb21cbe590c26af5eff65e5-integrity/node_modules/socket.io-parser/package.json",
    "readmeFilename": "Readme.md",
    "readme": "\n# socket.io-parser\n\n[![Build Status](https://github.com/socketio/socket.io-parser/workflows/CI/badge.svg)](https://github.com/socketio/socket.io-parser/actions)\n[![NPM version](https://badge.fury.io/js/socket.io-parser.svg)](http://badge.fury.io/js/socket.io-parser)\n\nA socket.io encoder and decoder written in JavaScript complying with version `5`\nof [socket.io-protocol](https://github.com/socketio/socket.io-protocol).\nUsed by [socket.io](https://github.com/automattic/socket.io) and\n[socket.io-client](https://github.com/automattic/socket.io-client).\n\nCompatibility table:\n\n| Parser version | Socket.IO server version | Protocol revision |\n|----------------| ------------------------ | ----------------- |\n| 3.x            | 1.x / 2.x                | 4                 |\n| 4.x            | 3.x                      | 5                 |\n\n\n## Parser API\n\n  socket.io-parser is the reference implementation of socket.io-protocol. Read\n  the full API here:\n  [socket.io-protocol](https://github.com/learnboost/socket.io-protocol).\n\n## Example Usage\n\n### Encoding and decoding a packet\n\n```js\nvar parser = require('socket.io-parser');\nvar encoder = new parser.Encoder();\nvar packet = {\n  type: parser.EVENT,\n  data: 'test-packet',\n  id: 13\n};\nencoder.encode(packet, function(encodedPackets) {\n  var decoder = new parser.Decoder();\n  decoder.on('decoded', function(decodedPacket) {\n    // decodedPacket.type == parser.EVENT\n    // decodedPacket.data == 'test-packet'\n    // decodedPacket.id == 13\n  });\n\n  for (var i = 0; i < encodedPackets.length; i++) {\n    decoder.add(encodedPackets[i]);\n  }\n});\n```\n\n### Encoding and decoding a packet with binary data\n\n```js\nvar parser = require('socket.io-parser');\nvar encoder = new parser.Encoder();\nvar packet = {\n  type: parser.BINARY_EVENT,\n  data: {i: new Buffer(1234), j: new Blob([new ArrayBuffer(2)])},\n  id: 15\n};\nencoder.encode(packet, function(encodedPackets) {\n  var decoder = new parser.Decoder();\n  decoder.on('decoded', function(decodedPacket) {\n    // decodedPacket.type == parser.BINARY_EVENT\n    // Buffer.isBuffer(decodedPacket.data.i) == true\n    // Buffer.isBuffer(decodedPacket.data.j) == true\n    // decodedPacket.id == 15\n  });\n\n  for (var i = 0; i < encodedPackets.length; i++) {\n    decoder.add(encodedPackets[i]);\n  }\n});\n```\nSee the test suite for more examples of how socket.io-parser is used.\n\n\n## License\n\nMIT\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2014 Guillermo Rauch <guillermo@learnboost.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the 'Software'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/socket.io-parser/-/socket.io-parser-4.2.1.tgz#01c96efa11ded938dcb21cbe590c26af5eff65e5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/socket.io-parser/-/socket.io-parser-4.2.1.tgz",
    "hash": "01c96efa11ded938dcb21cbe590c26af5eff65e5",
    "integrity": "sha512-V4GrkLy+HeF1F/en3SpUaM+7XxYXpuMUWLGde1kSSh5nQMN4hLrbPIkD+otwh6q9R6NOQBN4AMaOZ2zVjui82g==",
    "registry": "npm",
    "packageName": "socket.io-parser",
    "cacheIntegrity": "sha512-V4GrkLy+HeF1F/en3SpUaM+7XxYXpuMUWLGde1kSSh5nQMN4hLrbPIkD+otwh6q9R6NOQBN4AMaOZ2zVjui82g== sha1-Aclu+hHe2Tjcshy+WQwmr17/ZeU="
  },
  "registry": "npm",
  "hash": "01c96efa11ded938dcb21cbe590c26af5eff65e5"
}