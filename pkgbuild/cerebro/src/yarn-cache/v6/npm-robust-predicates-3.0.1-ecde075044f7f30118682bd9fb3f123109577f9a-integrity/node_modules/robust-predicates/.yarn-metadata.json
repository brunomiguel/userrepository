{
  "manifest": {
    "name": "robust-predicates",
    "version": "3.0.1",
    "description": "Fast robust predicates for computational geometry",
    "keywords": [
      "computational geometry",
      "robust arithmetic"
    ],
    "author": {
      "name": "Vladimir Agafonkin"
    },
    "license": "Unlicense",
    "type": "module",
    "main": "index.js",
    "unpkg": "umd/predicates.min.js",
    "module": "index.js",
    "exports": "./index.js",
    "types": "index.d.ts",
    "scripts": {
      "build": "mkdirp esm && node compile.js",
      "lint": "eslint *.js src test/test.js",
      "test": "npm run lint && npm run build && node test/test.js",
      "cov": "c8 node test/test.js",
      "bench": "node bench.js",
      "prepublishOnly": "npm run test && rollup -c"
    },
    "devDependencies": {
      "c8": "^7.7.0",
      "eslint": "^7.23.0",
      "eslint-config-mourner": "^3.0.0",
      "mkdirp": "^1.0.4",
      "nextafter": "^1.0.0",
      "robust-in-sphere": "^1.1.3",
      "robust-orientation": "^1.1.3",
      "rollup": "^2.44.0",
      "rollup-plugin-terser": "^7.0.2",
      "tape": "^5.2.2",
      "terser": "^5.6.1"
    },
    "files": [
      "index.js",
      "index.d.ts",
      "esm",
      "umd"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/mourner/robust-predicates.git"
    },
    "eslintConfig": {
      "extends": "mourner",
      "parserOptions": {
        "ecmaVersion": 2020
      },
      "rules": {
        "camelcase": 0,
        "new-cap": 0,
        "no-unused-vars": [
          2,
          {
            "varsIgnorePattern": "splitter|bvirt|c|[ab]hi|[ab]lo|_[ijk0]|u3|[st][01]"
          }
        ],
        "no-lonely-if": 0
      },
      "globals": {
        "$Fast_Two_Sum": false,
        "$Two_Sum": false,
        "$Two_Diff_Tail": false,
        "$Split": false,
        "$Two_Product": false,
        "$Two_Product_Presplit": false,
        "$Two_One_Product": false,
        "$Cross_Product": false,
        "$Square_Sum": false,
        "$Two_Product_Sum": false
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-robust-predicates-3.0.1-ecde075044f7f30118682bd9fb3f123109577f9a-integrity/node_modules/robust-predicates/package.json",
    "readmeFilename": "README.md",
    "readme": "# robust-predicates\n\nFast robust predicates for computational geometry in JavaScript. Provides reliable 2D and 3D point orientation tests (`orient2d`, `orient3d`, `incircle`, `insphere`) that are not susceptible to floating point errors (without sacrificing performance). A modern port of [Jonathan R Shewchuk's C code](https://www.cs.cmu.edu/~quake/robust.html), an industry standard since 1996.\n\n<a href=\"https://observablehq.com/@mourner/non-robust-arithmetic-as-art\"><img width=\"600\" height=\"200\" src=\"predicates.png\" /></a>\n\n_Figure: non-robust vs robust `orient2d` test for points within a tiny range (2<sup>-42</sup>)._\n\n[![Build Status](https://travis-ci.com/mourner/robust-predicates.svg?branch=master)](https://travis-ci.com/mourner/robust-predicates)\n[![Simply Awesome](https://img.shields.io/badge/simply-awesome-brightgreen.svg)](https://github.com/mourner/projects)\n[![Browser Build](https://badgen.net/bundlephobia/minzip/robust-predicates)](https://unpkg.com/robust-predicates)\n\n## [Demo](https://observablehq.com/@mourner/non-robust-arithmetic-as-art)\n\n## API\n\nNote: unlike J. Shewchuk's original code, all the functions in this library assume `y` axis is oriented _downwards_ &darr;, so the semantics are different.\n\n### `orient2d(ax,ay, bx,by, cx,cy)`\n\n- Returns a *positive* value if the points `a`, `b`, and `c` occur in _counterclockwise_ order (`c` lies to the left of the directed line defined by points `a` and `b`).\n- Returns a *negative* value if they occur in _clockwise_ order (`c` lies to the right of the directed line `ab`).\n- Returns *zero* if they are _collinear_.\n\nThe result is also an approximation of twice the signed area of the triangle defined by the three points.\n\n### `incircle(ax,ay, bx,by, cx,cy, dx,dy)`\n\n- Returns a _positive_ value if the point `d` lies _outside_ the circle passing through `a`, `b`, and `c`.\n- Returns a _negative_ value if it lies _inside_.\n- Returns _zero_ if the four points are _cocircular_.\n\nThe points `a`, `b`, and `c` must be in _counterclockwise_ order, or the sign of the result will be reversed.\n\n### `orient3d(ax,ay,az, bx,by,bz, cx,cy,cz, dx,dy,dz)`\n\n- Returns a _positive_ value if the point `d` lies _above_ the plane passing through `a`, `b`, and `c`, meaning that `a`, `b`, and `c` appear in counterclockwise order when viewed from `d`.\n- Returns a _negative_ value if `d` lies _below_ the plane.\n- Returns _zero_ if the points are _coplanar_.\n\nThe result is also an approximation of six times the signed volume of the tetrahedron defined by the four points.\n\n### `insphere(ax,ay,az, bx,by,bz, cx,cy,cz, dx,dy,dz, ex,ey,ez)`\n\n- Returns a _positive_ value if the point `e` lies _outside_ the sphere passing through `a`, `b`, `c`, and `d`.\n- Returns a _negative_ value if it lies _inside_.\n- Returns _zero_ if the five points are _cospherical_.\n\nThe points `a`, `b`, `c`, and `d` must be ordered so that they have a _positive orientation_\n(as defined by `orient3d`), or the sign of the result will be reversed.\n\n### `orient2dfast`, `orient3dfast`, `incirclefast`, `inspherefast`\n\nSimple, approximate, non-robust versions of predicates above. Use when robustness isn't needed.\n\n## Example\n\n```js\nimport {orient2d} from 'robust-predicates';\n\nconst ccw = orient2d(ax, ay, bx, by, cx, cy) > 0;\n````\n\n## Install\n\nInstall with `npm install robust-predicates` or `yarn add robust-predicates`, or use one of the browser builds:\n\n- [predicates.min.js](https://unpkg.com/robust-predicates/umd/predicates.min.js) (all predicates)\n- [orient2d.min.js](https://unpkg.com/robust-predicates/umd/orient2d.min.js) (`orient2d`, `orient2dfast`)\n- [orient3d.min.js](https://unpkg.com/robust-predicates/umd/orient3d.min.js) (`orient3d`, `orient3dfast`)\n- [incircle.min.js](https://unpkg.com/robust-predicates/umd/incircle.min.js) (`incircle`, `incirclefast`)\n- [insphere.min.js](https://unpkg.com/robust-predicates/umd/insphere.min.js) (`insphere`, `inspherefast`)\n\n## Thanks\n\nThis project is just a port â€” all the brilliant, hard work was done by [Jonathan Richard Shewchuk](https://people.eecs.berkeley.edu/~jrs/).\n\nThe port was also inspired by [Mikola Lysenko](https://twitter.com/MikolaLysenko)'s excellent [Robust Arithmetic Notes](https://github.com/mikolalysenko/robust-arithmetic-notes) and related projects like [robust-orientation](https://github.com/mikolalysenko/robust-orientation) and [robust-in-sphere](https://github.com/mikolalysenko/robust-in-sphere).\n\n## License\n\nSince the original code is in the public domain, this project follows the same choice. See [Unlicense](https://unlicense.org).\n",
    "licenseText": "This is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org>\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/robust-predicates/-/robust-predicates-3.0.1.tgz#ecde075044f7f30118682bd9fb3f123109577f9a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/robust-predicates/-/robust-predicates-3.0.1.tgz",
    "hash": "ecde075044f7f30118682bd9fb3f123109577f9a",
    "integrity": "sha512-ndEIpszUHiG4HtDsQLeIuMvRsDnn8c8rYStabochtUeCvfuvNptb5TUbVD68LRAILPX7p9nqQGh4xJgn3EHS/g==",
    "registry": "npm",
    "packageName": "robust-predicates",
    "cacheIntegrity": "sha512-ndEIpszUHiG4HtDsQLeIuMvRsDnn8c8rYStabochtUeCvfuvNptb5TUbVD68LRAILPX7p9nqQGh4xJgn3EHS/g== sha1-7N4HUET38wEYaCvZ+z8SMQlXf5o="
  },
  "registry": "npm",
  "hash": "ecde075044f7f30118682bd9fb3f123109577f9a"
}