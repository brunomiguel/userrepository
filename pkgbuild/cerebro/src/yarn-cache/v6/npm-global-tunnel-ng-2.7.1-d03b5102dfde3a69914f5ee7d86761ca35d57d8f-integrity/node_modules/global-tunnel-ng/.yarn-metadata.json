{
  "manifest": {
    "name": "global-tunnel-ng",
    "version": "2.7.1",
    "description": "Global HTTP & HTTPS tunneling",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/np-maintain/global-tunnel.git"
    },
    "engines": {
      "node": ">=0.10"
    },
    "dependencies": {
      "encodeurl": "^1.0.2",
      "lodash": "^4.17.10",
      "npm-conf": "^1.1.3",
      "tunnel": "^0.0.6"
    },
    "devDependencies": {
      "chai": "^4.1.2",
      "eslint": "^5.1.0",
      "eslint-config-prettier": "^3.0.0",
      "eslint-config-xo": "^0.25.0",
      "eslint-plugin-prettier": "^3.0.0",
      "mocha": "^5.2.0",
      "prettier": "^1.13.7",
      "request": "^2.83.0",
      "sinon": "^6.0.1"
    },
    "scripts": {
      "test": "mocha test"
    },
    "eslintConfig": {
      "extends": [
        "xo",
        "prettier"
      ],
      "env": {
        "mocha": true,
        "node": true
      },
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "singleQuote": true,
            "printWidth": 90
          }
        ]
      },
      "plugins": [
        "prettier"
      ]
    },
    "keywords": [
      "http",
      "https",
      "tunnel",
      "global"
    ],
    "author": {
      "name": "GoInstant Inc., a salesforce.com company"
    },
    "license": "BSD-3-Clause",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-global-tunnel-ng-2.7.1-d03b5102dfde3a69914f5ee7d86761ca35d57d8f-integrity/node_modules/global-tunnel-ng/package.json",
    "readmeFilename": "README.md",
    "readme": "[![dependencies Status](https://david-dm.org/np-maintain/global-tunnel/status.svg)](https://david-dm.org/np-maintain/global-tunnel)\n[![devDependencies Status](https://david-dm.org/np-maintain/global-tunnel/dev-status.svg)](https://david-dm.org/np-maintain/global-tunnel?type=dev)\n[![Build Status](https://travis-ci.org/np-maintain/global-tunnel.png)](https://travis-ci.org/np-maintain/global-tunnel) [![Greenkeeper badge](https://badges.greenkeeper.io/np-maintain/global-tunnel.svg)](https://greenkeeper.io/)\n\n# global-tunnel\n\nConfigures the [global\n`http`](http://nodejs.org/docs/v0.10.24/api/all.html#all_http_globalagent) and\n[`https`](http://nodejs.org/docs/v0.10.24/api/all.html#all_https_globalagent)\nagents to use an upstream HTTP proxy.\n\nWorks transparently to tunnel modules that use node's default [`http.request()`\nmethod](http://nodejs.org/docs/v0.10.24/api/all.html#all_http_request_options_callback)\nas well as the popular [`request` module](https://npmjs.org/package/request).\n\n# Installation\n\nYou can install this package by just executing the following:\n\n    npm install global-tunnel-ng\n\n# Usage\n\nTo make all HTTP and HTTPS connections go through an outbound HTTP proxy:\n\n```js\nvar globalTunnel = require('global-tunnel-ng');\n\nglobalTunnel.initialize({\n  host: '10.0.0.10',\n  port: 8080,\n  proxyAuth: 'userId:password', // optional authentication\n  sockets: 50 // optional pool size for each http and https\n});\n```\n\nThis will use the `CONNECT` method for HTTPS requests and absolute-URIs for\nHTTP requests, which is how many network proxies are configured.\n\nOptionally, to tear-down the global agent and restore node's default global\nagents:\n\n```js\nglobalTunnel.end();\n```\n\nAny active connections will be allowed to run to completion, but new\nconnections will use the default global agents.\n\n# Advanced Usage\n\n## Options\n\nThe complete list of options to `globalTunnel.initialize`:\n\n- **host** - the hostname or IP of the HTTP proxy to use\n- **port** - the TCP port to use on that proxy\n- **connect** _(optional)_ controls what protocols use the `CONNECT` method.  It\n  has three possible values (strings):\n  - **neither** - don't use `CONNECT`; just use absolute URIs\n  - **https** - _(the default)_ only use `CONNECT` for HTTPS requests\n  - **both** - use `CONNECT` for both HTTP and HTTPS requests\n- **protocol** - the protocol that the proxy speaks, either `http:` or `https:`.\n- **proxyAuth** - _(optional)_ to authenticate `userId:password`\n- **sockets** - _(optional)_ maximum number of TCP sockets to use in each pool.\n  There are two pools: one for HTTP and one for HTTPS.  Uses node's default (5)\n  if falsy.\n\n## Variations\n\nHere's a few interesting variations on the basic config.\n\n### Absolute URI Proxies\n\nAnother common proxy configuration is one that expects clients to use an\n[absolute URI for the\nRequest-URI](https://tools.ietf.org/html/rfc2616#section-5.1.2) for all HTTP\nand HTTPS requests.  This is common for networks that use a proxy for security\nscanning and access control.\n\nWhat does this mean? It means that instead of ...\n\n```http\nGET / HTTP/1.1\nHost: example.com\n```\n\n... your proxy expects ...\n\n```http\nGET https://example.com/ HTTP/1.1\n```\n\nYou'll need to specify `connect: 'neither'` if this is the case.  If the proxy\nspeaks HTTP (i.e. the connection from node --> proxy is not encrypted):\n\n```js\nglobalTunnel.initialize({\n  connect: 'neither',\n  host: '10.0.0.10',\n  port: 3128\n});\n```\n\nor, if the proxy speaks HTTPS to your app instead:\n\n```js\nglobalTunnel.initialize({\n  connect: 'neither',\n  protocol: 'https:',\n  host: '10.0.0.10',\n  port: 3129\n});\n```\n\n### Always-CONNECT Proxies\n\nIf the proxy expects you to use the `CONNECT` method for both HTTP and HTTPS\nrequests, you'll need the `connect: 'both'` option.\n\nWhat does this mean?  It means that instead of ...\n\n```http\nGET https://example.com/ HTTP/1.1\n```\n\n... your proxy expects ...\n\n```http\nCONNECT example.com:443 HTTP/1.1\n```\n\nBe sure to set the `protocol:` option based on what protocol the proxy speaks.\n\n```js\nglobalTunnel.initialize({\n  connect: 'both',\n  host: '10.0.0.10',\n  port: 3130\n});\n```\n\n### HTTPS configuration\n\n_EXPERIMENTAL_\n\nIf tunnelling both protocols, you can use different HTTPS client configurations\nfor the two phases of the connection.\n\n```js\nglobalTunnel.initialize({\n  connect: 'both',\n  protocol: 'https:'\n  host: '10.0.0.10',\n  port: 3130,\n  proxyHttpsOptions: {\n    // use this config for app -> proxy\n  },\n  originHttpsOptions: {\n    // use this config for proxy -> origin\n  }\n});\n```\n\n## Auto-Config\n\nIf `globalTunnel.initialize` doesnt receive a configuration as its first parameter the `http_proxys` and `http_proxy` environment variables will be used.\n\nIf these are missing the npm configurations `https-proxy`, `http-proxy`, `proxy` will be used instead.\n\nIf no environment variables or npm configurations are found nothing will be done.\n\n## Retrieving proxy URL, parsed config and proxy status\n\nAs the module does some extra job determining the proxy (including parsing the environment variables) and does some normalization (like defaulting the protocol to `http:`) it may be useful to retrieve the proxy URL used by the module.\n\nThe property `globalTunnel.proxyUrl` is the URL-formatted (including the optional basic auth if provided) proxy config currently in use. It is `null` if the proxy is not currently enabled.\n\nSimilarly, the `globalTunnel.proxyConfig` contains the entire parsed and normalized config.\n\nThe property `globalTunnel.isProxying` contains the information about whether the global proxy is on or off.\n\n# Compatibility\n\nAny module that doesn't specify [an explicit `agent:` option to\n`http.request`](http://nodejs.org/docs/v0.10.24/api/all.html#all_http_request_options_callback)\nwill also work with global-tunnel.\n\nThe unit tests for this module verify that the popular [`request`\nmodule](https://npmjs.org/package/request) works with global-tunnel active.\n\nFor untested modules, it's recommended that you load and initialize\nglobal-tunnel first.  This way, any copies of `http.globalAgent` will point to\nthe right thing.\n\n# Contributing\n\nIf you'd like to contribute to or modify global-tunnel, here's a quick guide\nto get you started.\n\n## Development Dependencies\n\n- [node.js](http://nodejs.org) >= 0.10\n\n## Set-Up\n\nDownload via GitHub and install npm dependencies:\n\n```sh\ngit clone git@github.com:np-maintain/global-tunnel.git\ncd global-tunnel\nnpm install\n```\n\n## Testing\n\nTesting is with the [mocha](https://github.com/visionmedia/mocha) framework.\nTests are located in the `test/` directory.\n\nTo run the tests:\n\n```sh\nnpm test\n```\n\n# Support\n\nAs this is a hard fork, you may still contact the given contacts below.\n\nEmail [GoInstant Support](mailto:support@goinstant.com) or stop by [#goinstant on freenode](irc://irc.freenode.net#goinstant).\n\nFor responsible disclosures, email [GoInstant Security](mailto:security@goinstant.com).\n\nTo [file a bug](https://github.com/np-maintain/global-tunnel/issues) or\n[propose a patch](https://github.com/np-maintain/global-tunnel/pulls),\nplease use github directly.\n\n# Legal\n\n&copy; 2014 GoInstant Inc., a salesforce.com company\n\nLicensed under the BSD 3-clause license.\n",
    "licenseText": "Copyright (c) 2013, GoInstant Inc., a salesforce.com company\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n* Neither the name of salesforce.com, nor GoInstant, nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/global-tunnel-ng/-/global-tunnel-ng-2.7.1.tgz#d03b5102dfde3a69914f5ee7d86761ca35d57d8f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/global-tunnel-ng/-/global-tunnel-ng-2.7.1.tgz",
    "hash": "d03b5102dfde3a69914f5ee7d86761ca35d57d8f",
    "integrity": "sha512-4s+DyciWBV0eK148wqXxcmVAbFVPqtc3sEtUE/GTQfuU80rySLcMhUmHKSHI7/LDj8q0gDYI1lIhRRB7ieRAqg==",
    "registry": "npm",
    "packageName": "global-tunnel-ng",
    "cacheIntegrity": "sha512-4s+DyciWBV0eK148wqXxcmVAbFVPqtc3sEtUE/GTQfuU80rySLcMhUmHKSHI7/LDj8q0gDYI1lIhRRB7ieRAqg== sha1-0DtRAt/eOmmRT17n2GdhyjXVfY8="
  },
  "registry": "npm",
  "hash": "d03b5102dfde3a69914f5ee7d86761ca35d57d8f"
}