{
  "manifest": {
    "name": "async-settle",
    "version": "1.0.0",
    "description": "Settle an async function.",
    "author": {
      "name": "Gulp Team",
      "email": "team@gulpjs.com",
      "url": "http://gulpjs.com/"
    },
    "contributors": [
      {
        "name": "Blaine Bublitz",
        "email": "blaine.bublitz@gmail.com"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/gulpjs/async-settle.git"
    },
    "license": "MIT",
    "engines": {
      "node": ">= 0.10"
    },
    "main": "index.js",
    "files": [
      "index.js",
      "LICENSE"
    ],
    "scripts": {
      "lint": "eslint . && jscs index.js test/",
      "pretest": "npm run lint",
      "test": "mocha --async-only",
      "cover": "istanbul cover _mocha --report lcovonly",
      "coveralls": "npm run cover && istanbul-coveralls"
    },
    "dependencies": {
      "async-done": "^1.2.2"
    },
    "devDependencies": {
      "eslint": "^1.7.3",
      "eslint-config-gulp": "^2.0.0",
      "expect": "^1.19.0",
      "istanbul": "^0.4.3",
      "istanbul-coveralls": "^1.0.3",
      "jscs": "^2.3.5",
      "jscs-preset-gulp": "^1.0.0",
      "mocha": "^2.4.5"
    },
    "keywords": [
      "settle",
      "async",
      "async-done",
      "complete",
      "error",
      "parallel"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-async-settle-1.0.0-integrity/node_modules/async-settle/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n  <a href=\"http://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n</p>\n\n# async-settle\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]\n\nSettle an async function. It will always complete successfully with an object of the resulting state.\n\nHandles completion and errors for callbacks, promises, observables and streams.\n\nWill run call the function on `nextTick`. This will cause all functions to be async.\n\n## Usage\n\n### Successful completion\n\n```js\nvar asyncSettle = require('async-settle');\n\nasyncSettle(function(done){\n  // do async things\n  done(null, 2);\n}, function(error, result){\n  // `error` will ALWAYS be null on execution of the first function.\n  // `result` will ALWAYS be a settled object with the result or error of the first function.\n});\n```\n\n### Failed completion\n\n```js\nvar asyncSettle = require('async-settle');\n\nasyncSettle(function(done){\n  // do async things\n  done(new Error('Some Error Occurred'));\n}, function(error, result){\n  // `error` will ALWAYS be null on execution of the first function.\n  // `result` will ALWAYS be a settled object with the result or error of the first function.\n});\n```\n\n## API\n\n### `asyncSettle(fn, callback)`\n\nTakes a function to execute (`fn`) and a function to call on completion (`callback`).\n\n#### `fn([done])`\n\nOptionally takes a callback (`done`) to call when async tasks are complete.\n\nExecuted in the context of [`async-done`][async-done], with all errors and results being settled.\n\nCompletion is handled by [`async-done` completion and error resolution][completions].\n\n#### `callback(error, result)`\n\nCalled on completion of `fn` and recieves a settled object as the `result` argument.\n\nThe `error` argument will always be `null`.\n\n#### Settled Object\n\nSettled values have two properties, `state` and `value`.\n\n`state` has two possible options `'error'` and `'success'`.\n\n`value` will be the value passed to original callback.\n\n## License\n\nMIT\n\n[async-done]: https://github.com/gulpjs/async-done\n[completions]: https://github.com/gulpjs/async-done#completion-and-error-resolution\n\n[downloads-image]: http://img.shields.io/npm/dm/async-settle.svg\n[npm-url]: https://www.npmjs.com/package/async-settle\n[npm-image]: http://img.shields.io/npm/v/async-settle.svg\n\n[travis-url]: https://travis-ci.org/gulpjs/async-settle\n[travis-image]: http://img.shields.io/travis/gulpjs/async-settle.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/async-settle\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/async-settle.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/async-settle\n[coveralls-image]: http://img.shields.io/coveralls/gulpjs/async-settle/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014 Blaine Bublitz, Eric Schoffstall and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/async-settle/-/async-settle-1.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/async-settle/-/async-settle-1.0.0.tgz",
    "hash": "",
    "integrity": "sha1-HQqRS7Aldb7IqPOnTlCA9yssDGs=",
    "registry": "npm",
    "packageName": "async-settle",
    "cacheIntegrity": "sha512-VPXfB4Vk49z1LHHodrEQ6Xf7W4gg1w0dAPROHngx7qgDjqmIQ+fXmwgGXTW/ITLai0YLSvWepJOP9EVpMnEAcw== sha1-HQqRS7Aldb7IqPOnTlCA9yssDGs="
  },
  "registry": "npm",
  "hash": "54f5df078564e3dcf52c71e876b110e977fb5b8820d70d1d00f44e1e7831eea8038ea98843e7d79b08065d35bf2132da8b460b4af59ea4938ff4456932710073"
}