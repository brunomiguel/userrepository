{
  "manifest": {
    "name": "galactus",
    "version": "0.2.1",
    "description": "Prunes dependencies from your package",
    "main": "lib/index.js",
    "scripts": {
      "build": "tsc",
      "prepublish": "npm run build",
      "lint": "tslint src/**/*.ts test/**/*.ts",
      "mocha": "nyc mocha test/*_spec.ts",
      "test": "npm run lint && npm run mocha"
    },
    "keywords": [
      "prune",
      "production"
    ],
    "author": {
      "name": "Samuel Attard"
    },
    "license": "MIT",
    "devDependencies": {
      "@types/chai": "^4.0.10",
      "@types/debug": "^0.0.30",
      "@types/fs-extra": "^4.0.0",
      "@types/mocha": "^2.2.45",
      "@types/tempy": "^0.1.0",
      "chai": "^4.1.2",
      "mocha": "^4.1.0",
      "nyc": "^11.4.1",
      "tempy": "^0.2.1",
      "ts-node": "^4.1.0",
      "tslint": "^5.9.1",
      "typescript": "^2.4.2"
    },
    "dependencies": {
      "debug": "^3.1.0",
      "flora-colossus": "^1.0.0",
      "fs-extra": "^4.0.0"
    },
    "nyc": {
      "extension": [
        ".ts"
      ],
      "instrument": true,
      "require": [
        "ts-node/register"
      ],
      "sourceMap": true
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-galactus-0.2.1-cbed2d20a40c1f5679a35908e2b9415733e78db9-integrity/node_modules/galactus/package.json",
    "readmeFilename": "README.md",
    "readme": "Galactus\n-----------\n\n> A JS implementation of `prune --production`\n\n## Installation\n\n```bash\nnpm i --save-dev galactus\n```\n\n## API\n\n### Class: `DestroyerOfModules`\n\n```js\nimport { DestroyerOfModules } from 'galactus';\n\n// modulePath is the root folder of your module\nconst destroyer = new DestroyerOfModules({\n  rootDirectory: __dirname,\n  // Optionally provide your own walker from 'flora-colossus'\n  walker: myWalker,\n  // Optionally provide a method to override the default\n  // keep or destroy test\n  shouldKeepModuleTest: (module, isDepDep) => true,\n});\n```\n\n#### `destroyer.destroy()`\n\nReturns a `Promise` that resolves once the destruction is complete. By default\nit will destroy all dependencies that aren't required for production or\noptional dependencies. You can override this behavior by providing a\n`shouldKeepModuleTest` function in the constructor.\n\n#### `destroyer.collectKeptModules()`\n\nReturns a `Promise` of a `ModuleMap` (a `Map` of paths to `Module`s). The\n`Promise` resolves when the walker finishes walking the module tree. The\n`ModuleMap` only contains the `Module`s that would be kept by a call\nto `destroy()`.\n\nThere is one optional keyword argument, `relativePaths`. By default, the paths\nin the `ModuleMap` are absolute. If `relativePaths` is `true`, they are relative\nto the `rootDirectory` specified in the constructor.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/galactus/-/galactus-0.2.1.tgz#cbed2d20a40c1f5679a35908e2b9415733e78db9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/galactus/-/galactus-0.2.1.tgz",
    "hash": "cbed2d20a40c1f5679a35908e2b9415733e78db9",
    "integrity": "sha512-mDc8EQJKtxjp9PMYS3PbpjjbX3oXhBTxoGaPahw620XZBIHJ4+nvw5KN/tRtmmSDR9dypstGNvqQ3C29QGoGHQ==",
    "registry": "npm",
    "packageName": "galactus",
    "cacheIntegrity": "sha512-mDc8EQJKtxjp9PMYS3PbpjjbX3oXhBTxoGaPahw620XZBIHJ4+nvw5KN/tRtmmSDR9dypstGNvqQ3C29QGoGHQ== sha1-y+0tIKQMH1Z5o1kI4rlBVzPnjbk="
  },
  "registry": "npm",
  "hash": "cbed2d20a40c1f5679a35908e2b9415733e78db9"
}