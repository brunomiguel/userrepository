{
  "manifest": {
    "name": "pixelmatch",
    "version": "4.0.2",
    "description": "The smallest and fastest pixel-level image comparison library.",
    "main": "index.js",
    "bin": {
      "pixelmatch": "bin/pixelmatch"
    },
    "dependencies": {
      "pngjs": "^3.0.0"
    },
    "devDependencies": {
      "eslint": "^3.2.2",
      "eslint-config-mourner": "^2.0.1",
      "tap": "^6.3.0"
    },
    "scripts": {
      "pretest": "eslint index.js bin/pixelmatch test/test.js",
      "test": "tap test/test.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/mapbox/pixelmatch.git"
    },
    "keywords": [
      "image",
      "comparison",
      "diff"
    ],
    "eslintConfig": {
      "extends": "mourner"
    },
    "author": {
      "name": "Vladimir Agafonkin"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/mapbox/pixelmatch/issues"
    },
    "homepage": "https://github.com/mapbox/pixelmatch#readme",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-pixelmatch-4.0.2-integrity/node_modules/pixelmatch/package.json",
    "readmeFilename": "README.md",
    "readme": "## pixelmatch\n\n[![Build Status](https://travis-ci.org/mapbox/pixelmatch.svg?branch=master)](https://travis-ci.org/mapbox/pixelmatch)\n[![Coverage Status](https://coveralls.io/repos/mapbox/pixelmatch/badge.svg?branch=master&service=github)](https://coveralls.io/github/mapbox/pixelmatch?branch=master)\n[![](https://img.shields.io/badge/simply-awesome-brightgreen.svg)](https://github.com/mourner/projects)\n\nThe smallest, simplest and fastest JavaScript pixel-level image comparison library,\noriginally created to compare screenshots in tests.\n\nFeatures accurate **anti-aliased pixels detection**\nand **perceptual color difference metrics**.\n\nInspired by [Resemble.js](https://github.com/Huddle/Resemble.js)\nand [Blink-diff](https://github.com/yahoo/blink-diff).\nUnlike these libraries, pixelmatch is around **90 lines of code**,\nhas **no dependencies**, and works on **raw arrays** of image data,\nso it's **blazing fast** and can be used in **any environment** (Node or browsers).\n\n```js\nvar numDiffPixels = pixelmatch(img1, img2, diff, 800, 600, {threshold: 0.1});\n```\n\nImplements ideas from the following papers:\n\n- [Measuring perceived color difference using YIQ NTSC transmission color space in mobile applications](http://www.progmat.uaem.mx:8080/artVol2Num2/Articulo3Vol2Num2.pdf) (2010, Yuriy Kotsarenko, Fernando Ramos)\n- [Anti-aliased pixel and intensity slope detector](http://www.ee.ktu.lt/journal/2009/7/25_ISSN_1392-1215_Anti-aliased%20Pxel%20and%20Intensity%20Slope%20Detector.pdf) (2009, Vytautas Vyšniauskas)\n\n### Example output\n\n| expected | actual | diff |\n| --- | --- | --- |\n| ![](test/fixtures/4a.png) | ![](test/fixtures/4b.png) | ![1diff](test/fixtures/4diff.png) |\n| ![](test/fixtures/3a.png) | ![](test/fixtures/3b.png) | ![1diff](test/fixtures/3diff.png) |\n| ![](test/fixtures/1a.png) | ![](test/fixtures/1b.png) | ![1diff](test/fixtures/1diff.png) |\n\n### API\n\n#### pixelmatch(img1, img2, output, width, height[, options])\n\n- `img1`, `img2` — Image data of the images to compare (`Buffer` or `Uint8Array`).\n- `output` — Image data to write the diff to, or `null` if don't need a diff image.\n- `width`, `height` — Width and height of the images. Note that _all three images_ need to have the same dimensions.\n\n`options` is an object literal with the following properties:\n\n- `threshold` — Matching threshold, ranges from `0` to `1`. Smaller values make the comparison more sensitive. `0.1` by default.\n- `includeAA` — If `true`, disables detecting and ignoring anti-aliased pixels. `false` by default.\n\nCompares two images, writes the output diff and returns the number of mismatched pixels.\n\n### Command line\n\nPixelmatch comes with a binary that works with PNG images:\n\n```bash\npixelmatch image1.png image2.png output.png 0.1\n```\n\n### Example usage\n\n#### Node.js\n\n```js\nvar fs = require('fs'),\n    PNG = require('pngjs').PNG,\n    pixelmatch = require('pixelmatch');\n\nvar img1 = fs.createReadStream('img1.png').pipe(new PNG()).on('parsed', doneReading),\n    img2 = fs.createReadStream('img2.png').pipe(new PNG()).on('parsed', doneReading),\n    filesRead = 0;\n\nfunction doneReading() {\n    if (++filesRead < 2) return;\n    var diff = new PNG({width: img1.width, height: img1.height});\n\n    pixelmatch(img1.data, img2.data, diff.data, img1.width, img1.height, {threshold: 0.1});\n\n    diff.pack().pipe(fs.createWriteStream('diff.png'));\n}\n```\n\n#### Browsers\n\n```js\nvar img1 = img1Ctx.getImageData(0, 0, width, height),\n    img2 = img2Ctx.getImageData(0, 0, width, height),\n    diff = diffCtx.createImageData(width, height);\n\npixelmatch(img1.data, img2.data, diff.data, width, height, {threshold: 0.1});\n\ndiffCtx.putImageData(diff, 0, 0);\n```\n\n### Install\n\nInstall with NPM:\n\n```bash\nnpm install pixelmatch\n```\n\nTo build a browser-compatible version, clone the repository locally, then run:\n\n```bash\nnpm install -g browserify\nbrowserify -s pixelmatch index.js > pixelmatch.js\n```\n\n### [Changelog](https://github.com/mapbox/pixelmatch/releases)\n",
    "licenseText": "ISC License\n\nCopyright (c) 2015, Mapbox\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/pixelmatch/-/pixelmatch-4.0.2.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/pixelmatch/-/pixelmatch-4.0.2.tgz",
    "hash": "",
    "integrity": "sha1-j0fc7FARtHe2fbA8JDvB8wheiFQ=",
    "registry": "npm",
    "packageName": "pixelmatch",
    "cacheIntegrity": "sha512-J8B6xqiO37sU/gkcMglv6h5Jbd9xNER7aHzpfRdNmV4IbQBzBpe4l9XmbG+xPF/znacgu2jfEw+wHffaq/YkXA== sha1-j0fc7FARtHe2fbA8JDvB8wheiFQ="
  },
  "registry": "npm",
  "hash": "27c07ac6a88edfbb14fe091c32096fea1e496ddf7134447b687ce97d174d995e086d00730697b897d5e66c6fb13c5ff39da720bb68df130fb01df7daabf6245c"
}