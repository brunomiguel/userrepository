{
  "manifest": {
    "name": "shell-quote",
    "description": "quote and parse shell commands",
    "version": "1.7.4",
    "author": {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "http://substack.net"
    },
    "funding": {
      "url": "https://github.com/sponsors/ljharb"
    },
    "bugs": {
      "url": "https://github.com/ljharb/shell-quote/issues"
    },
    "devDependencies": {
      "@ljharb/eslint-config": "^21.0.0",
      "aud": "^2.0.1",
      "auto-changelog": "^2.4.0",
      "eslint": "=8.8.0",
      "in-publish": "^2.0.1",
      "npmignore": "^0.3.0",
      "safe-publish-latest": "^2.0.0",
      "tape": "^5.6.1"
    },
    "homepage": "https://github.com/ljharb/shell-quote",
    "keywords": [
      "command",
      "parse",
      "quote",
      "shell"
    ],
    "license": "MIT",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "http://github.com/ljharb/shell-quote.git"
    },
    "scripts": {
      "prepack": "npmignore --auto --commentLines=autogenerated",
      "prepublish": "not-in-publish || npm run prepublishOnly",
      "prepublishOnly": "safe-publish-latest",
      "lint": "eslint --ext=js,mjs .",
      "pretest": "npm run lint",
      "tests-only": "tape 'test/**/*.js'",
      "test": "npm run tests-only",
      "posttest": "aud --production",
      "version": "auto-changelog && git add CHANGELOG.md",
      "postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
    },
    "auto-changelog": {
      "output": "CHANGELOG.md",
      "template": "keepachangelog",
      "unreleased": false,
      "commitLimit": false,
      "backfillLimit": false,
      "hideCredit": true,
      "startingVersion": "1.7.4"
    },
    "publishConfig": {
      "ignore": [
        ".github/workflows"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-shell-quote-1.7.4-33fe15dee71ab2a81fcbd3a52106c5cfb9fb75d8-integrity/node_modules/shell-quote/package.json",
    "readmeFilename": "README.md",
    "readme": "# shell-quote <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nParse and quote shell commands.\n\n# example\n\n## quote\n\n``` js\nvar quote = require('shell-quote').quote;\nvar s = quote([ 'a', 'b c d', '$f', '\"g\"' ]);\nconsole.log(s);\n```\n\noutput\n\n```\na 'b c d' \\$f '\"g\"'\n```\n\n## parse\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('a \"b c\" \\\\$def \\'it\\\\\\'s great\\'');\nconsole.dir(xs);\n```\n\noutput\n\n```\n[ 'a', 'b c', '\\\\$def', 'it\\'s great' ]\n```\n\n## parse with an environment variable\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep --boop=\"$PWD\"', { PWD: '/home/robot' });\nconsole.dir(xs);\n```\n\noutput\n\n```\n[ 'beep', '--boop=/home/robot' ]\n```\n\n## parse with custom escape character\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep --boop=\"$PWD\"', { PWD: '/home/robot' }, { escape: '^' });\nconsole.dir(xs);\n```\n\noutput\n\n```\n[ 'beep', '--boop=/home/robot' ]\n```\n\n## parsing shell operators\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep || boop > /byte');\nconsole.dir(xs);\n```\n\noutput:\n\n```\n[ 'beep', { op: '||' }, 'boop', { op: '>' }, '/byte' ]\n```\n\n## parsing shell comment\n\n``` js\nvar parse = require('shell-quote').parse;\nvar xs = parse('beep > boop # > kaboom');\nconsole.dir(xs);\n```\n\noutput:\n\n```\n[ 'beep', { op: '>' }, 'boop', { comment: '> kaboom' } ]\n```\n\n# methods\n\n``` js\nvar quote = require('shell-quote').quote;\nvar parse = require('shell-quote').parse;\n```\n\n## quote(args)\n\nReturn a quoted string for the array `args` suitable for using in shell\ncommands.\n\n## parse(cmd, env={})\n\nReturn an array of arguments from the quoted string `cmd`.\n\nInterpolate embedded bash-style `$VARNAME` and `${VARNAME}` variables with\nthe `env` object which like bash will replace undefined variables with `\"\"`.\n\n`env` is usually an object but it can also be a function to perform lookups.\nWhen `env(key)` returns a string, its result will be output just like `env[key]`\nwould. When `env(key)` returns an object, it will be inserted into the result\narray like the operator objects.\n\nWhen a bash operator is encountered, the element in the array with be an object\nwith an `\"op\"` key set to the operator string. For example:\n\n```\n'beep || boop > /byte'\n```\n\nparses as:\n\n```\n[ 'beep', { op: '||' }, 'boop', { op: '>' }, '/byte' ]\n```\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install shell-quote\n```\n\n# license\n\nMIT\n\n[package-url]: https://npmjs.org/package/shell-quote\n[npm-version-svg]: https://versionbadg.es/ljharb/shell-quote.svg\n[deps-svg]: https://david-dm.org/ljharb/shell-quote.svg\n[deps-url]: https://david-dm.org/ljharb/shell-quote\n[dev-deps-svg]: https://david-dm.org/ljharb/shell-quote/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/shell-quote#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/shell-quote.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/shell-quote.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/shell-quote.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=shell-quote\n[codecov-image]: https://codecov.io/gh/ljharb/shell-quote/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/shell-quote/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/shell-quote\n[actions-url]: https://github.com/ljharb/shell-quote/actions\n",
    "licenseText": "The MIT License\n\nCopyright (c) 2013 James Halliday (mail@substack.net)\n\nPermission is hereby granted, free of charge, \nto any person obtaining a copy of this software and \nassociated documentation files (the \"Software\"), to \ndeal in the Software without restriction, including \nwithout limitation the rights to use, copy, modify, \nmerge, publish, distribute, sublicense, and/or sell \ncopies of the Software, and to permit persons to whom \nthe Software is furnished to do so, \nsubject to the following conditions:\n\nThe above copyright notice and this permission notice \nshall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES \nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR \nANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, \nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/shell-quote/-/shell-quote-1.7.4.tgz#33fe15dee71ab2a81fcbd3a52106c5cfb9fb75d8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/shell-quote/-/shell-quote-1.7.4.tgz",
    "hash": "33fe15dee71ab2a81fcbd3a52106c5cfb9fb75d8",
    "integrity": "sha512-8o/QEhSSRb1a5i7TFR0iM4G16Z0vYB2OQVs4G3aAFXjn3T6yEx8AZxy1PgDF7I00LZHYA3WxaSYIf5e5sAX8Rw==",
    "registry": "npm",
    "packageName": "shell-quote",
    "cacheIntegrity": "sha512-8o/QEhSSRb1a5i7TFR0iM4G16Z0vYB2OQVs4G3aAFXjn3T6yEx8AZxy1PgDF7I00LZHYA3WxaSYIf5e5sAX8Rw== sha1-M/4V3ucasqgfy9OlIQbFz7n7ddg="
  },
  "registry": "npm",
  "hash": "33fe15dee71ab2a81fcbd3a52106c5cfb9fb75d8"
}