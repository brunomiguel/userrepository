{
  "manifest": {
    "name": "entities",
    "version": "4.4.0",
    "description": "Encode & decode XML and HTML entities with ease & speed",
    "author": {
      "name": "Felix Boehm",
      "email": "me@feedic.com"
    },
    "funding": "https://github.com/fb55/entities?sponsor=1",
    "sideEffects": false,
    "keywords": [
      "entity",
      "decoding",
      "encoding",
      "html",
      "xml",
      "html entities"
    ],
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "module": "lib/esm/index.js",
    "exports": {
      ".": {
        "require": "./lib/index.js",
        "import": "./lib/esm/index.js"
      },
      "./lib/decode.js": {
        "require": "./lib/decode.js",
        "import": "./lib/esm/decode.js"
      },
      "./lib/escape.js": {
        "require": "./lib/escape.js",
        "import": "./lib/esm/escape.js"
      }
    },
    "files": [
      "lib/**/*"
    ],
    "engines": {
      "node": ">=0.12"
    },
    "devDependencies": {
      "@types/jest": "^28.1.8",
      "@types/node": "^18.7.14",
      "@typescript-eslint/eslint-plugin": "^5.36.1",
      "@typescript-eslint/parser": "^5.36.1",
      "eslint": "^8.23.0",
      "eslint-config-prettier": "^8.5.0",
      "eslint-plugin-node": "^11.1.0",
      "jest": "^28.1.3",
      "prettier": "^2.7.1",
      "ts-jest": "^28.0.8",
      "typedoc": "^0.23.12",
      "typescript": "^4.8.2"
    },
    "scripts": {
      "test": "npm run test:jest && npm run lint",
      "test:jest": "jest",
      "lint": "npm run lint:es && npm run lint:prettier",
      "lint:es": "eslint .",
      "lint:prettier": "npm run prettier -- --check",
      "format": "npm run format:es && npm run format:prettier",
      "format:es": "npm run lint:es -- --fix",
      "format:prettier": "npm run prettier -- --write",
      "prettier": "prettier '**/*.{ts,md,json,yml}'",
      "build": "npm run build:cjs && npm run build:esm",
      "build:cjs": "tsc --sourceRoot https://raw.githubusercontent.com/fb55/entities/$(git rev-parse HEAD)/src/",
      "build:esm": "npm run build:cjs -- --module esnext --target es2019 --outDir lib/esm && echo '{\"type\":\"module\"}' > lib/esm/package.json",
      "build:docs": "typedoc --hideGenerator src/index.ts",
      "build:trie": "ts-node scripts/write-decode-map.ts",
      "build:encode-trie": "ts-node scripts/write-encode-map.ts",
      "prepare": "npm run build"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/fb55/entities.git"
    },
    "license": "BSD-2-Clause",
    "jest": {
      "preset": "ts-jest",
      "coverageProvider": "v8",
      "moduleNameMapper": {
        "^(.*)\\.js$": "$1"
      }
    },
    "prettier": {
      "tabWidth": 4,
      "proseWrap": "always"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-entities-4.4.0-97bdaba170339446495e653cfd2db78962900174-integrity/node_modules/entities/package.json",
    "readmeFilename": "readme.md",
    "readme": "# entities [![NPM version](http://img.shields.io/npm/v/entities.svg)](https://npmjs.org/package/entities) [![Downloads](https://img.shields.io/npm/dm/entities.svg)](https://npmjs.org/package/entities) [![Build Status](http://img.shields.io/travis/fb55/entities.svg)](http://travis-ci.org/fb55/entities) [![Coverage](http://img.shields.io/coveralls/fb55/entities.svg)](https://coveralls.io/r/fb55/entities)\n\nEncode & decode HTML & XML entities with ease & speed.\n\n## Features\n\n-   😇 Tried and true: `entities` is used by many popular libraries; eg.\n    [`htmlparser2`](https://github.com/fb55/htmlparser2), the official\n    [AWS SDK](https://github.com/aws/aws-sdk-js-v3) and\n    [`commonmark`](https://github.com/commonmark/commonmark.js) use it to\n    process HTML entities.\n-   ⚡️ Fast: `entities` is the fastes library for decoding HTML entities (as of\n    April 2022); see [performance](#performance).\n-   🎛 Configurable: Get an output tailored for your needs. You are fine with\n    UTF8? That'll safe you some bytes. Prefer to only have ASCII characters? We\n    can do that as well!\n\n## How to…\n\n### …install `entities`\n\n    npm install entities\n\n### …use `entities`\n\n```javascript\nconst entities = require(\"entities\");\n\n// Encoding\nentities.escapeUTF8(\"&#38; ü\"); // \"&amp;#38; ü\"\nentities.encodeXML(\"&#38; ü\"); // \"&amp;#38; &#xfc;\"\nentities.encodeHTML(\"&#38; ü\"); // \"&amp;&num;38&semi; &uuml;\"\n\n// Decoding\nentities.decodeXML(\"asdf &amp; &#xFF; &#xFC; &apos;\"); // \"asdf & ÿ ü '\"\nentities.decodeHTML(\"asdf &amp; &yuml; &uuml; &apos;\"); // \"asdf & ÿ ü '\"\n```\n\n## Performance\n\nThis is how `entities` compares to other libraries on a very basic benchmark\n(see `scripts/benchmark.ts`, for 10,000,000 iterations; **lower is better**):\n\n| Library        | Version | `decode` perf | `encode` perf | `escape` perf |\n| -------------- | ------- | ------------- | ------------- | ------------- |\n| entities       | `3.0.1` | 1.418s        | 6.786s        | 2.196s        |\n| html-entities  | `2.3.2` | 2.530s        | 6.829s        | 2.415s        |\n| he             | `1.2.0` | 5.800s        | 24.237s       | 3.624s        |\n| parse-entities | `3.0.0` | 9.660s        | N/A           | N/A           |\n\n---\n\n## FAQ\n\n> What methods should I actually use to encode my documents?\n\nIf your target supports UTF-8, the `escapeUTF8` method is going to be your best\nchoice. Otherwise, use either `encodeHTML` or `encodeXML` based on whether\nyou're dealing with an HTML or an XML document.\n\nYou can have a look at the options for the `encode` and `decode` methods to see\neverything you can configure.\n\n> When should I use strict decoding?\n\nWhen strict decoding, entities not terminated with a semicolon will be ignored.\nThis is helpful for decoding entities in legacy environments.\n\n> Why should I use `entities` instead of alternative modules?\n\nAs of April 2022, `entities` is a bit faster than other modules. Still, this is\nnot a very differentiated space and other modules can catch up.\n\n**More importantly**, you might already have `entities` in your dependency graph\n(as a dependency of eg. `cheerio`, or `htmlparser2`), and including it directly\nmight not even increase your bundle size. The same is true for other entity\nlibraries, so have a look through your `node_modules` directory!\n\n> Does `entities` support tree shaking?\n\nYes! `entities` ships as both a CommonJS and a ES module. Note that for best\nresults, you should not use the `encode` and `decode` functions, as they wrap\naround a number of other functions, all of which will remain in the bundle.\nInstead, use the functions that you need directly.\n\n---\n\n## Acknowledgements\n\nThis libary wouldn't be possible without the work of these individuals. Thanks\nto\n\n-   [@mathiasbynens](https://github.com/mathiasbynens) for his explanations\n    about character encodings, and his library `he`, which was one of the\n    inspirations for `entities`\n-   [@inikulin](https://github.com/inikulin) for his work on optimized tries for\n    decoding HTML entities for the `parse5` project\n-   [@mdevils](https://github.com/mdevils) for taking on the challenge of\n    producing a quick entity library with his `html-entities` library.\n    `entities` would be quite a bit slower if there wasn't any competition.\n    Right now `entities` is on top, but we'll see how long that lasts!\n\n---\n\nLicense: BSD-2-Clause\n\n## Security contact information\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security). Tidelift will\ncoordinate the fix and disclosure.\n\n## `entities` for enterprise\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of `entities` and thousands of other packages are working with\nTidelift to deliver commercial support and maintenance for the open source\ndependencies you use to build your applications. Save time, reduce risk, and\nimprove code health, while paying the maintainers of the exact dependencies you\nuse.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-entities?utm_source=npm-entities&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n",
    "licenseText": "Copyright (c) Felix Böhm\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/entities/-/entities-4.4.0.tgz#97bdaba170339446495e653cfd2db78962900174",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/entities/-/entities-4.4.0.tgz",
    "hash": "97bdaba170339446495e653cfd2db78962900174",
    "integrity": "sha512-oYp7156SP8LkeGD0GF85ad1X9Ai79WtRsZ2gxJqtBuzH+98YUV6jkHEKlZkMbcrjJjIVJNIDP/3WL9wQkoPbWA==",
    "registry": "npm",
    "packageName": "entities",
    "cacheIntegrity": "sha512-oYp7156SP8LkeGD0GF85ad1X9Ai79WtRsZ2gxJqtBuzH+98YUV6jkHEKlZkMbcrjJjIVJNIDP/3WL9wQkoPbWA== sha1-l72roXAzlEZJXmU8/S23iWKQAXQ="
  },
  "registry": "npm",
  "hash": "97bdaba170339446495e653cfd2db78962900174"
}