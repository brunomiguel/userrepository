{
  "manifest": {
    "name": "@jridgewell/sourcemap-codec",
    "version": "1.4.14",
    "description": "Encode/decode sourcemap mappings",
    "keywords": [
      "sourcemap",
      "vlq"
    ],
    "main": "dist/sourcemap-codec.umd.js",
    "module": "dist/sourcemap-codec.mjs",
    "typings": "dist/types/sourcemap-codec.d.ts",
    "files": [
      "dist",
      "src"
    ],
    "exports": {
      ".": [
        {
          "types": "./dist/types/sourcemap-codec.d.ts",
          "browser": "./dist/sourcemap-codec.umd.js",
          "import": "./dist/sourcemap-codec.mjs",
          "require": "./dist/sourcemap-codec.umd.js"
        },
        "./dist/sourcemap-codec.umd.js"
      ],
      "./package.json": "./package.json"
    },
    "scripts": {
      "benchmark": "run-s build:rollup benchmark:*",
      "benchmark:install": "cd benchmark && npm install",
      "benchmark:only": "node --expose-gc benchmark/index.js",
      "build": "run-s -n build:*",
      "build:rollup": "rollup -c rollup.config.js",
      "build:ts": "tsc --project tsconfig.build.json",
      "lint": "run-s -n lint:*",
      "lint:prettier": "npm run test:lint:prettier -- --write",
      "lint:ts": "npm run test:lint:ts -- --fix",
      "prebuild": "rm -rf dist",
      "prepublishOnly": "npm run preversion",
      "preversion": "run-s test build",
      "pretest": "run-s build:rollup",
      "test": "run-s -n test:lint test:only",
      "test:debug": "mocha --inspect-brk",
      "test:lint": "run-s -n test:lint:*",
      "test:lint:prettier": "prettier --check '{src,test}/**/*.ts'",
      "test:lint:ts": "eslint '{src,test}/**/*.ts'",
      "test:only": "mocha",
      "test:coverage": "c8 mocha",
      "test:watch": "mocha --watch"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/jridgewell/sourcemap-codec.git"
    },
    "author": {
      "name": "Rich Harris"
    },
    "license": "MIT",
    "devDependencies": {
      "@rollup/plugin-typescript": "8.3.0",
      "@types/node": "17.0.15",
      "@typescript-eslint/eslint-plugin": "5.10.0",
      "@typescript-eslint/parser": "5.10.0",
      "benchmark": "2.1.4",
      "c8": "7.11.2",
      "eslint": "8.7.0",
      "eslint-config-prettier": "8.3.0",
      "mocha": "9.2.0",
      "npm-run-all": "4.1.5",
      "prettier": "2.5.1",
      "rollup": "2.64.0",
      "source-map": "0.6.1",
      "source-map-js": "1.0.2",
      "sourcemap-codec": "1.4.8",
      "typescript": "4.5.4"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@jridgewell-sourcemap-codec-1.4.14-add4c98d341472a289190b424efbdb096991bb24-integrity/node_modules/@jridgewell/sourcemap-codec/package.json",
    "readmeFilename": "README.md",
    "readme": "# sourcemap-codec\n\nEncode/decode the `mappings` property of a [sourcemap](https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit).\n\n\n## Why?\n\nSourcemaps are difficult to generate and manipulate, because the `mappings` property – the part that actually links the generated code back to the original source – is encoded using an obscure method called [Variable-length quantity](https://en.wikipedia.org/wiki/Variable-length_quantity). On top of that, each segment in the mapping contains offsets rather than absolute indices, which means that you can't look at a segment in isolation – you have to understand the whole sourcemap.\n\nThis package makes the process slightly easier.\n\n\n## Installation\n\n```bash\nnpm install sourcemap-codec\n```\n\n\n## Usage\n\n```js\nimport { encode, decode } from 'sourcemap-codec';\n\nvar decoded = decode( ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' );\n\nassert.deepEqual( decoded, [\n\t// the first line (of the generated code) has no mappings,\n\t// as shown by the starting semi-colon (which separates lines)\n\t[],\n\n\t// the second line contains four (comma-separated) segments\n\t[\n\t\t// segments are encoded as you'd expect:\n\t\t// [ generatedCodeColumn, sourceIndex, sourceCodeLine, sourceCodeColumn, nameIndex ]\n\n\t\t// i.e. the first segment begins at column 2, and maps back to the second column\n\t\t// of the second line (both zero-based) of the 0th source, and uses the 0th\n\t\t// name in the `map.names` array\n\t\t[ 2, 0, 2, 2, 0 ],\n\n\t\t// the remaining segments are 4-length rather than 5-length,\n\t\t// because they don't map a name\n\t\t[ 4, 0, 2, 4 ],\n\t\t[ 6, 0, 2, 5 ],\n\t\t[ 7, 0, 2, 7 ]\n\t],\n\n\t// the final line contains two segments\n\t[\n\t\t[ 2, 1, 10, 19 ],\n\t\t[ 12, 1, 11, 20 ]\n\t]\n]);\n\nvar encoded = encode( decoded );\nassert.equal( encoded, ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' );\n```\n\n## Benchmarks\n\n```\nnode v18.0.0\n\namp.js.map - 45120 segments\n\nDecode Memory Usage:\n@jridgewell/sourcemap-codec       5479160 bytes\nsourcemap-codec                   5659336 bytes\nsource-map-0.6.1                 17144440 bytes\nsource-map-0.8.0                  6867424 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec\n\nDecode speed:\ndecode: @jridgewell/sourcemap-codec x 502 ops/sec ±1.03% (90 runs sampled)\ndecode: sourcemap-codec x 445 ops/sec ±0.97% (92 runs sampled)\ndecode: source-map-0.6.1 x 36.01 ops/sec ±1.64% (49 runs sampled)\ndecode: source-map-0.8.0 x 367 ops/sec ±0.04% (95 runs sampled)\nFastest is decode: @jridgewell/sourcemap-codec\n\nEncode Memory Usage:\n@jridgewell/sourcemap-codec       1261620 bytes\nsourcemap-codec                   9119248 bytes\nsource-map-0.6.1                  8968560 bytes\nsource-map-0.8.0                  8952952 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec\n\nEncode speed:\nencode: @jridgewell/sourcemap-codec x 738 ops/sec ±0.42% (98 runs sampled)\nencode: sourcemap-codec x 238 ops/sec ±0.73% (88 runs sampled)\nencode: source-map-0.6.1 x 162 ops/sec ±0.43% (84 runs sampled)\nencode: source-map-0.8.0 x 191 ops/sec ±0.34% (90 runs sampled)\nFastest is encode: @jridgewell/sourcemap-codec\n\n\n***\n\n\nbabel.min.js.map - 347793 segments\n\nDecode Memory Usage:\n@jridgewell/sourcemap-codec      35338184 bytes\nsourcemap-codec                  35922736 bytes\nsource-map-0.6.1                 62366360 bytes\nsource-map-0.8.0                 44337416 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec\n\nDecode speed:\ndecode: @jridgewell/sourcemap-codec x 40.35 ops/sec ±4.47% (54 runs sampled)\ndecode: sourcemap-codec x 36.76 ops/sec ±3.67% (51 runs sampled)\ndecode: source-map-0.6.1 x 4.44 ops/sec ±2.15% (16 runs sampled)\ndecode: source-map-0.8.0 x 59.35 ops/sec ±0.05% (78 runs sampled)\nFastest is decode: source-map-0.8.0\n\nEncode Memory Usage:\n@jridgewell/sourcemap-codec       7212604 bytes\nsourcemap-codec                  21421456 bytes\nsource-map-0.6.1                 25286888 bytes\nsource-map-0.8.0                 25498744 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec\n\nEncode speed:\nencode: @jridgewell/sourcemap-codec x 112 ops/sec ±0.13% (84 runs sampled)\nencode: sourcemap-codec x 30.23 ops/sec ±2.76% (53 runs sampled)\nencode: source-map-0.6.1 x 19.43 ops/sec ±3.70% (37 runs sampled)\nencode: source-map-0.8.0 x 19.40 ops/sec ±3.26% (37 runs sampled)\nFastest is encode: @jridgewell/sourcemap-codec\n\n\n***\n\n\npreact.js.map - 1992 segments\n\nDecode Memory Usage:\n@jridgewell/sourcemap-codec        500272 bytes\nsourcemap-codec                    516864 bytes\nsource-map-0.6.1                  1596672 bytes\nsource-map-0.8.0                   517272 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec\n\nDecode speed:\ndecode: @jridgewell/sourcemap-codec x 16,137 ops/sec ±0.17% (99 runs sampled)\ndecode: sourcemap-codec x 12,139 ops/sec ±0.13% (99 runs sampled)\ndecode: source-map-0.6.1 x 1,264 ops/sec ±0.12% (100 runs sampled)\ndecode: source-map-0.8.0 x 9,894 ops/sec ±0.08% (101 runs sampled)\nFastest is decode: @jridgewell/sourcemap-codec\n\nEncode Memory Usage:\n@jridgewell/sourcemap-codec        321026 bytes\nsourcemap-codec                    830832 bytes\nsource-map-0.6.1                   586608 bytes\nsource-map-0.8.0                   586680 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec\n\nEncode speed:\nencode: @jridgewell/sourcemap-codec x 19,876 ops/sec ±0.78% (95 runs sampled)\nencode: sourcemap-codec x 6,983 ops/sec ±0.15% (100 runs sampled)\nencode: source-map-0.6.1 x 5,070 ops/sec ±0.12% (102 runs sampled)\nencode: source-map-0.8.0 x 5,641 ops/sec ±0.17% (100 runs sampled)\nFastest is encode: @jridgewell/sourcemap-codec\n\n\n***\n\n\nreact.js.map - 5726 segments\n\nDecode Memory Usage:\n@jridgewell/sourcemap-codec        734848 bytes\nsourcemap-codec                    954200 bytes\nsource-map-0.6.1                  2276432 bytes\nsource-map-0.8.0                   955488 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec\n\nDecode speed:\ndecode: @jridgewell/sourcemap-codec x 5,723 ops/sec ±0.12% (98 runs sampled)\ndecode: sourcemap-codec x 4,555 ops/sec ±0.09% (101 runs sampled)\ndecode: source-map-0.6.1 x 437 ops/sec ±0.11% (93 runs sampled)\ndecode: source-map-0.8.0 x 3,441 ops/sec ±0.15% (100 runs sampled)\nFastest is decode: @jridgewell/sourcemap-codec\n\nEncode Memory Usage:\n@jridgewell/sourcemap-codec        638672 bytes\nsourcemap-codec                   1109840 bytes\nsource-map-0.6.1                  1321224 bytes\nsource-map-0.8.0                  1324448 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec\n\nEncode speed:\nencode: @jridgewell/sourcemap-codec x 6,801 ops/sec ±0.48% (98 runs sampled)\nencode: sourcemap-codec x 2,533 ops/sec ±0.13% (101 runs sampled)\nencode: source-map-0.6.1 x 2,248 ops/sec ±0.08% (100 runs sampled)\nencode: source-map-0.8.0 x 2,303 ops/sec ±0.15% (100 runs sampled)\nFastest is encode: @jridgewell/sourcemap-codec\n```\n\n# License\n\nMIT\n",
    "licenseText": "The MIT License\n\nCopyright (c) 2015 Rich Harris\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz#add4c98d341472a289190b424efbdb096991bb24",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.14.tgz",
    "hash": "add4c98d341472a289190b424efbdb096991bb24",
    "integrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw==",
    "registry": "npm",
    "packageName": "@jridgewell/sourcemap-codec",
    "cacheIntegrity": "sha512-XPSJHWmi394fuUuzDnGz1wiKqWfo1yXecHQMRf2l6hztTO+nPru658AyDngaBe7isIxEkRsPR3FZh+s7iVa4Uw== sha1-rdTJjTQUcqKJGQtCTvvbCWmRuyQ="
  },
  "registry": "npm",
  "hash": "add4c98d341472a289190b424efbdb096991bb24"
}