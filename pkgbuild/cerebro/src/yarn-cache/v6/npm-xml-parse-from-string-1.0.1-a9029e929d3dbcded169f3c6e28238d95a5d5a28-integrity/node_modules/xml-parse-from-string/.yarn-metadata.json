{
  "manifest": {
    "name": "xml-parse-from-string",
    "version": "1.0.1",
    "description": "DOMParser.parseFromString for XML with IE8 fallback",
    "main": "index.js",
    "license": "MIT",
    "author": {
      "name": "Matt DesLauriers",
      "email": "dave.des@gmail.com",
      "url": "https://github.com/mattdesl"
    },
    "dependencies": {},
    "devDependencies": {
      "brfs": "^1.4.0",
      "browserify": "^9.0.3",
      "faucet": "0.0.1",
      "tape": "^3.5.0",
      "testling": "^1.7.1"
    },
    "scripts": {
      "test": "browserify test.js -t brfs | testling | faucet"
    },
    "keywords": [
      "ie8",
      "fallback",
      "dom",
      "parser",
      "DOMParser",
      "xml",
      "string",
      "parse",
      "browser",
      "browserify",
      "webpack",
      "activeXObject"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/Jam3/xml-parse-from-string.git"
    },
    "homepage": "https://github.com/Jam3/xml-parse-from-string",
    "bugs": {
      "url": "https://github.com/Jam3/xml-parse-from-string/issues"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-xml-parse-from-string-1.0.1-a9029e929d3dbcded169f3c6e28238d95a5d5a28-integrity/node_modules/xml-parse-from-string/package.json",
    "readmeFilename": "README.md",
    "readme": "# xml-parse-from-string\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nA light browser wrapper around `DOMParser.parseFromString` for XML, with fallback for IE8 and other browsers.\n\n- attempts to use DOMParser with `\"application/xml\"`\n- falls back to `ActiveXObject('Microsoft.XMLDOM')`\n- then falls back to `createElement` / `innerHTML`  \n\n```js\nvar parseXML = require('xml-parse-from-string')\n\nvar str = '<root><foobar id=\"blah\"></foobar></root>'\nvar doc = parseXML(str)\nvar tag = doc.getElementsByTagName('foobar')[0]\n\nconsole.log(tag.getAttribute('id')) // -> \"blah\"\n```\n\nBe wary of subtle differences between implementations, such as case-sensitivity in `attribute.nodeName`.\n\nPRs for Node version welcome.\n\n## Usage\n\n[![NPM](https://nodei.co/npm/xml-parse-from-string.png)](https://www.npmjs.com/package/xml-parse-from-string)\n\n#### `root = parse(str)`\n\nParses the string as XML and returns the `root` element as a DOM element, so you can do operations similar to `document.getElementById`, `document.getElementsByTagName`, and so forth.\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/Jam3/xml-parse-from-string/blob/master/LICENSE.md) for details.\n",
    "licenseText": "The MIT License (MIT)\nCopyright (c) 2015 Jam3\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/xml-parse-from-string/-/xml-parse-from-string-1.0.1.tgz#a9029e929d3dbcded169f3c6e28238d95a5d5a28",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/xml-parse-from-string/-/xml-parse-from-string-1.0.1.tgz",
    "hash": "a9029e929d3dbcded169f3c6e28238d95a5d5a28",
    "integrity": "sha512-ErcKwJTF54uRzzNMXq2X5sMIy88zJvfN2DmdoQvy7PAFJ+tPRU6ydWuOKNMyfmOjdyBQTFREi60s0Y0SyI0G0g==",
    "registry": "npm",
    "packageName": "xml-parse-from-string",
    "cacheIntegrity": "sha512-ErcKwJTF54uRzzNMXq2X5sMIy88zJvfN2DmdoQvy7PAFJ+tPRU6ydWuOKNMyfmOjdyBQTFREi60s0Y0SyI0G0g== sha1-qQKekp09vN7RafPG4oI42VpdWig="
  },
  "registry": "npm",
  "hash": "a9029e929d3dbcded169f3c6e28238d95a5d5a28"
}