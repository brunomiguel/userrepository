{
  "manifest": {
    "name": "sortablejs",
    "exportName": "Sortable",
    "version": "1.10.2",
    "devDependencies": {
      "@babel/core": "^7.4.4",
      "@babel/plugin-transform-object-assign": "^7.2.0",
      "@babel/preset-env": "^7.4.4",
      "rollup": "^1.11.3",
      "rollup-plugin-babel": "^4.3.2",
      "rollup-plugin-json": "^4.0.0",
      "rollup-plugin-node-resolve": "^5.0.0",
      "testcafe": "^1.3.1",
      "testcafe-browser-provider-saucelabs": "^1.7.0",
      "testcafe-reporter-xunit": "^2.1.0",
      "uglify-js": "^3.5.12"
    },
    "description": "JavaScript library for reorderable drag-and-drop lists on modern browsers and touch devices. No jQuery required. Supports Meteor, AngularJS, React, Polymer, Vue, Knockout and any CSS library, e.g. Bootstrap.",
    "main": "./Sortable.js",
    "module": "modular/sortable.esm.js",
    "scripts": {
      "build:umd": "NODE_ENV=umd rollup -c ./scripts/umd-build.js",
      "build:umd:watch": "set NODE_ENV=umd&& rollup -w -c ./scripts/umd-build.js",
      "build:es": "set NODE_ENV=es&& rollup -c ./scripts/esm-build.js",
      "build:es:watch": "set NODE_ENV=es&& rollup -w -c ./scripts/esm-build.js",
      "minify": "node ./scripts/minify.js",
      "build": "npm run build:es && npm run build:umd && npm run minify",
      "test:compat": "node ./scripts/test-compat.js",
      "test": "node ./scripts/test.js"
    },
    "maintainers": [
      {
        "name": "Konstantin Lebedev",
        "email": "ibnRubaXa@gmail.com"
      },
      {
        "name": "Owen Mills",
        "email": "owen23355@gmail.com"
      }
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/SortableJS/Sortable.git"
    },
    "files": [
      "Sortable.js",
      "Sortable.min.js",
      "modular/"
    ],
    "keywords": [
      "sortable",
      "reorder",
      "drag",
      "meteor",
      "angular",
      "ng-sortable",
      "react",
      "vue",
      "mixin"
    ],
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-sortablejs-1.10.2-6e40364d913f98b85a14f6678f92b5c1221f5290-integrity/node_modules/sortablejs/package.json",
    "readmeFilename": "README.md",
    "readme": "# Sortable &nbsp; [![Financial Contributors on Open Collective](https://opencollective.com/Sortable/all/badge.svg?label=financial+contributors)](https://opencollective.com/Sortable) [![CircleCI](https://circleci.com/gh/SortableJS/Sortable.svg?style=svg)](https://circleci.com/gh/SortableJS/Sortable) [![DeepScan grade](https://deepscan.io/api/teams/3901/projects/5666/branches/43977/badge/grade.svg)](https://deepscan.io/dashboard#view=project&tid=3901&pid=5666&bid=43977) [![](https://data.jsdelivr.com/v1/package/npm/sortablejs/badge)](https://www.jsdelivr.com/package/npm/sortablejs) [![npm](https://img.shields.io/npm/v/sortablejs.svg)](https://www.npmjs.com/package/sortablejs)\n\nSortable is a JavaScript library for reorderable drag-and-drop lists.\n\nDemo: http://sortablejs.github.io/Sortable/\n\n[<img width=\"250px\" src=\"https://raw.githubusercontent.com/SortableJS/Sortable/HEAD/st/saucelabs.svg?sanitize=true\">](https://saucelabs.com/)\n\n## Features\n\n * Supports touch devices and [modern](http://caniuse.com/#search=drag) browsers (including IE9)\n * Can drag from one list to another or within the same list\n * CSS animation when moving items\n * Supports drag handles *and selectable text* (better than voidberg's html5sortable)\n * Smart auto-scrolling\n * Advanced swap detection\n * Smooth animations\n * [Multi-drag](https://github.com/SortableJS/Sortable/tree/master/plugins/MultiDrag) support\n * Support for CSS transforms\n * Built using native HTML5 drag and drop API\n * Supports\n   * [Meteor](https://github.com/SortableJS/meteor-sortablejs)\n   * Angular\n     * [2.0+](https://github.com/SortableJS/angular-sortablejs)\n     * [1.&ast;](https://github.com/SortableJS/angular-legacy-sortablejs)\n   * React\n     * [ES2015+](https://github.com/SortableJS/react-sortablejs)\n     * [Mixin](https://github.com/SortableJS/react-mixin-sortablejs)\n   * [Knockout](https://github.com/SortableJS/knockout-sortablejs)\n   * [Polymer](https://github.com/SortableJS/polymer-sortablejs)\n   * [Vue](https://github.com/SortableJS/Vue.Draggable)\n   * [Ember](https://github.com/SortableJS/ember-sortablejs)\n * Supports any CSS library, e.g. [Bootstrap](#bs)\n * Simple API\n * Support for [plugins](#plugins)\n * [CDN](#cdn)\n * No jQuery required (but there is [support](https://github.com/SortableJS/jquery-sortablejs))\n * Typescript definitions at `@types/sortablejs`\n\n\n<br/>\n\n\n### Articles\n\n * [Dragging Multiple Items in Sortable](https://github.com/SortableJS/Sortable/wiki/Dragging-Multiple-Items-in-Sortable) (April 26, 2019)\n * [Swap Thresholds and Direction](https://github.com/SortableJS/Sortable/wiki/Swap-Thresholds-and-Direction) (December 2, 2018)\n * [Sortable v1.0 — New capabilities](https://github.com/SortableJS/Sortable/wiki/Sortable-v1.0-—-New-capabilities/) (December 22, 2014)\n * [Sorting with the help of HTML5 Drag'n'Drop API](https://github.com/SortableJS/Sortable/wiki/Sorting-with-the-help-of-HTML5-Drag'n'Drop-API/) (December 23, 2013)\n\n<br/>\n\n### Getting Started\n\nInstall with NPM:\n```bash\n$ npm install sortablejs --save\n```\n\nInstall with Bower:\n```bash\n$ bower install --save sortablejs\n```\n\nImport into your project:\n```js\n// Default SortableJS\nimport Sortable from 'sortablejs';\n\n// Core SortableJS (without default plugins)\nimport Sortable from 'sortablejs/modular/sortable.core.esm.js';\n\n// Complete SortableJS (with all plugins)\nimport Sortable from 'sortablejs/modular/sortable.complete.esm.js';\n```\n\nCherrypick plugins:\n```js\n// Cherrypick extra plugins\nimport Sortable, { MultiDrag, Swap } from 'sortablejs';\n\nSortable.mount(new MultiDrag(), new Swap());\n\n\n// Cherrypick default plugins\nimport Sortable, { AutoScroll } from 'sortablejs/modular/sortable.core.esm.js';\n\nSortable.mount(new AutoScroll());\n```\n\n\n---\n\n\n### Usage\n```html\n<ul id=\"items\">\n\t<li>item 1</li>\n\t<li>item 2</li>\n\t<li>item 3</li>\n</ul>\n```\n\n```js\nvar el = document.getElementById('items');\nvar sortable = Sortable.create(el);\n```\n\nYou can use any element for the list and its elements, not just `ul`/`li`. Here is an [example with `div`s](https://jsbin.com/visimub/edit?html,js,output).\n\n\n---\n\n\n### Options\n```js\nvar sortable = new Sortable(el, {\n\tgroup: \"name\",  // or { name: \"...\", pull: [true, false, 'clone', array], put: [true, false, array] }\n\tsort: true,  // sorting inside list\n\tdelay: 0, // time in milliseconds to define when the sorting should start\n\tdelayOnTouchOnly: false, // only delay if user is using touch\n\ttouchStartThreshold: 0, // px, how many pixels the point should move before cancelling a delayed drag event\n\tdisabled: false, // Disables the sortable if set to true.\n\tstore: null,  // @see Store\n\tanimation: 150,  // ms, animation speed moving items when sorting, `0` — without animation\n\teasing: \"cubic-bezier(1, 0, 0, 1)\", // Easing for animation. Defaults to null. See https://easings.net/ for examples.\n\thandle: \".my-handle\",  // Drag handle selector within list items\n\tfilter: \".ignore-elements\",  // Selectors that do not lead to dragging (String or Function)\n\tpreventOnFilter: true, // Call `event.preventDefault()` when triggered `filter`\n\tdraggable: \".item\",  // Specifies which items inside the element should be draggable\n\n\tdataIdAttr: 'data-id',\n\n\tghostClass: \"sortable-ghost\",  // Class name for the drop placeholder\n\tchosenClass: \"sortable-chosen\",  // Class name for the chosen item\n\tdragClass: \"sortable-drag\",  // Class name for the dragging item\n\n\tswapThreshold: 1, // Threshold of the swap zone\n\tinvertSwap: false, // Will always use inverted swap zone if set to true\n\tinvertedSwapThreshold: 1, // Threshold of the inverted swap zone (will be set to swapThreshold value by default)\n\tdirection: 'horizontal', // Direction of Sortable (will be detected automatically if not given)\n\n\tforceFallback: false,  // ignore the HTML5 DnD behaviour and force the fallback to kick in\n\n\tfallbackClass: \"sortable-fallback\",  // Class name for the cloned DOM Element when using forceFallback\n\tfallbackOnBody: false,  // Appends the cloned DOM Element into the Document's Body\n\tfallbackTolerance: 0, // Specify in pixels how far the mouse should move before it's considered as a drag.\n\n\tdragoverBubble: false,\n\tremoveCloneOnHide: true, // Remove the clone element when it is not showing, rather than just hiding it\n\temptyInsertThreshold: 5, // px, distance mouse must be from empty sortable to insert drag element into it\n\n\n\tsetData: function (/** DataTransfer */dataTransfer, /** HTMLElement*/dragEl) {\n\t\tdataTransfer.setData('Text', dragEl.textContent); // `dataTransfer` object of HTML5 DragEvent\n\t},\n\n\t// Element is chosen\n\tonChoose: function (/**Event*/evt) {\n\t\tevt.oldIndex;  // element index within parent\n\t},\n\n\t// Element is unchosen\n\tonUnchoose: function(/**Event*/evt) {\n\t\t// same properties as onEnd\n\t},\n\n\t// Element dragging started\n\tonStart: function (/**Event*/evt) {\n\t\tevt.oldIndex;  // element index within parent\n\t},\n\n\t// Element dragging ended\n\tonEnd: function (/**Event*/evt) {\n\t\tvar itemEl = evt.item;  // dragged HTMLElement\n\t\tevt.to;    // target list\n\t\tevt.from;  // previous list\n\t\tevt.oldIndex;  // element's old index within old parent\n\t\tevt.newIndex;  // element's new index within new parent\n\t\tevt.oldDraggableIndex; // element's old index within old parent, only counting draggable elements\n\t\tevt.newDraggableIndex; // element's new index within new parent, only counting draggable elements\n\t\tevt.clone // the clone element\n\t\tevt.pullMode;  // when item is in another sortable: `\"clone\"` if cloning, `true` if moving\n\t},\n\n\t// Element is dropped into the list from another list\n\tonAdd: function (/**Event*/evt) {\n\t\t// same properties as onEnd\n\t},\n\n\t// Changed sorting within list\n\tonUpdate: function (/**Event*/evt) {\n\t\t// same properties as onEnd\n\t},\n\n\t// Called by any change to the list (add / update / remove)\n\tonSort: function (/**Event*/evt) {\n\t\t// same properties as onEnd\n\t},\n\n\t// Element is removed from the list into another list\n\tonRemove: function (/**Event*/evt) {\n\t\t// same properties as onEnd\n\t},\n\n\t// Attempt to drag a filtered element\n\tonFilter: function (/**Event*/evt) {\n\t\tvar itemEl = evt.item;  // HTMLElement receiving the `mousedown|tapstart` event.\n\t},\n\n\t// Event when you move an item in the list or between lists\n\tonMove: function (/**Event*/evt, /**Event*/originalEvent) {\n\t\t// Example: https://jsbin.com/nawahef/edit?js,output\n\t\tevt.dragged; // dragged HTMLElement\n\t\tevt.draggedRect; // DOMRect {left, top, right, bottom}\n\t\tevt.related; // HTMLElement on which have guided\n\t\tevt.relatedRect; // DOMRect\n\t\tevt.willInsertAfter; // Boolean that is true if Sortable will insert drag element after target by default\n\t\toriginalEvent.clientY; // mouse position\n\t\t// return false; — for cancel\n\t\t// return -1; — insert before target\n\t\t// return 1; — insert after target\n\t},\n\n\t// Called when creating a clone of element\n\tonClone: function (/**Event*/evt) {\n\t\tvar origEl = evt.item;\n\t\tvar cloneEl = evt.clone;\n\t},\n\n\t// Called when dragging element changes position\n\tonChange: function(/**Event*/evt) {\n\t\tevt.newIndex // most likely why this event is used is to get the dragging element's current index\n\t\t// same properties as onEnd\n\t}\n});\n```\n\n\n---\n\n\n#### `group` option\nTo drag elements from one list into another, both lists must have the same `group` value.\nYou can also define whether lists can give away, give and keep a copy (`clone`), and receive elements.\n\n * name: `String` — group name\n * pull: `true|false|[\"foo\", \"bar\"]|'clone'|function` — ability to move from the list. `clone` — copy the item, rather than move. Or an array of group names which the elements may be put in. Defaults to `true`.\n * put: `true|false|[\"baz\", \"qux\"]|function` — whether elements can be added from other lists, or an array of group names from which elements can be added.\n * revertClone: `boolean` — revert cloned element to initial position after moving to a another list.\n\n\nDemo:\n - https://jsbin.com/hijetos/edit?js,output\n - https://jsbin.com/nacoyah/edit?js,output — use of complex logic in the `pull` and` put`\n - https://jsbin.com/bifuyab/edit?js,output — use `revertClone: true`\n\n\n---\n\n\n#### `sort` option\nAllow sorting inside list.\n\nDemo: https://jsbin.com/jayedig/edit?js,output\n\n\n---\n\n\n#### `delay` option\nTime in milliseconds to define when the sorting should start.\nUnfortunately, due to browser restrictions, delaying is not possible on IE or Edge with native drag & drop.\n\nDemo: https://jsbin.com/zosiwah/edit?js,output\n\n\n---\n\n\n#### `delayOnTouchOnly` option\nWhether or not the delay should be applied only if the user is using touch (eg. on a mobile device). No delay will be applied in any other case. Defaults to `false`.\n\n\n---\n\n\n#### `swapThreshold` option\nPercentage of the target that the swap zone will take up, as a float between `0` and `1`.\n\n[Read more](https://github.com/SortableJS/Sortable/wiki/Swap-Thresholds-and-Direction#swap-threshold)\n\nDemo: http://sortablejs.github.io/Sortable#thresholds\n\n\n---\n\n\n#### `invertSwap` option\nSet to `true` to set the swap zone to the sides of the target, for the effect of sorting \"in between\" items.\n\n[Read more](https://github.com/SortableJS/Sortable/wiki/Swap-Thresholds-and-Direction#forcing-inverted-swap-zone)\n\nDemo: http://sortablejs.github.io/Sortable#thresholds\n\n\n---\n\n\n#### `invertedSwapThreshold` option\nPercentage of the target that the inverted swap zone will take up, as a float between `0` and `1`. If not given, will default to `swapThreshold`.\n\n[Read more](https://github.com/SortableJS/Sortable/wiki/Swap-Thresholds-and-Direction#dealing-with-swap-glitching)\n\n\n---\n\n\n#### `direction` option\nDirection that the Sortable should sort in. Can be set to `'vertical'`, `'horizontal'`, or a function, which will be called whenever a target is dragged over. Must return `'vertical'` or `'horizontal'`.\n\n[Read more](https://github.com/SortableJS/Sortable/wiki/Swap-Thresholds-and-Direction#direction)\n\n\nExample of direction detection for vertical list that includes full column and half column elements:\n\n```js\nSortable.create(el, {\n\tdirection: function(evt, target, dragEl) {\n\t\tif (target !== null && target.className.includes('half-column') && dragEl.className.includes('half-column')) {\n\t\t\treturn 'horizontal';\n\t\t}\n\t\treturn 'vertical';\n\t}\n});\n```\n\n\n---\n\n\n#### `touchStartThreshold` option\nThis option is similar to `fallbackTolerance` option.\n\nWhen the `delay` option is set, some phones with very sensitive touch displays like the Samsung Galaxy S8 will fire\nunwanted touchmove events even when your finger is not moving, resulting in the sort not triggering.\n\nThis option sets the minimum pointer movement that must occur before the delayed sorting is cancelled.\n\nValues between 3 to 5 are good.\n\n\n---\n\n\n#### `disabled` options\nDisables the sortable if set to `true`.\n\nDemo: https://jsbin.com/sewokud/edit?js,output\n\n```js\nvar sortable = Sortable.create(list);\n\ndocument.getElementById(\"switcher\").onclick = function () {\n\tvar state = sortable.option(\"disabled\"); // get\n\n\tsortable.option(\"disabled\", !state); // set\n};\n```\n\n\n---\n\n\n#### `handle` option\nTo make list items draggable, Sortable disables text selection by the user.\nThat's not always desirable. To allow text selection, define a drag handler,\nwhich is an area of every list element that allows it to be dragged around.\n\nDemo: https://jsbin.com/numakuh/edit?html,js,output\n\n```js\nSortable.create(el, {\n\thandle: \".my-handle\"\n});\n```\n\n```html\n<ul>\n\t<li><span class=\"my-handle\">::</span> list item text one\n\t<li><span class=\"my-handle\">::</span> list item text two\n</ul>\n```\n\n```css\n.my-handle {\n\tcursor: move;\n\tcursor: -webkit-grabbing;\n}\n```\n\n\n---\n\n\n#### `filter` option\n\n\n```js\nSortable.create(list, {\n\tfilter: \".js-remove, .js-edit\",\n\tonFilter: function (evt) {\n\t\tvar item = evt.item,\n\t\t\tctrl = evt.target;\n\n\t\tif (Sortable.utils.is(ctrl, \".js-remove\")) {  // Click on remove button\n\t\t\titem.parentNode.removeChild(item); // remove sortable item\n\t\t}\n\t\telse if (Sortable.utils.is(ctrl, \".js-edit\")) {  // Click on edit link\n\t\t\t// ...\n\t\t}\n\t}\n})\n```\n\n\n---\n\n\n#### `ghostClass` option\nClass name for the drop placeholder (default `sortable-ghost`).\n\nDemo: https://jsbin.com/henuyiw/edit?css,js,output\n\n```css\n.ghost {\n  opacity: 0.4;\n}\n```\n\n```js\nSortable.create(list, {\n  ghostClass: \"ghost\"\n});\n```\n\n\n---\n\n\n#### `chosenClass` option\nClass name for the chosen item  (default `sortable-chosen`).\n\nDemo: https://jsbin.com/hoqufox/edit?css,js,output\n\n```css\n.chosen {\n  color: #fff;\n  background-color: #c00;\n}\n```\n\n```js\nSortable.create(list, {\n  delay: 500,\n  chosenClass: \"chosen\"\n});\n```\n\n\n---\n\n\n#### `forceFallback` option\nIf set to `true`, the Fallback for non HTML5 Browser will be used, even if we are using an HTML5 Browser.\nThis gives us the possibility to test the behaviour for older Browsers even in newer Browser, or make the Drag 'n Drop feel more consistent between Desktop , Mobile and old Browsers.\n\nOn top of that, the Fallback always generates a copy of that DOM Element and appends the class `fallbackClass` defined in the options. This behaviour controls the look of this 'dragged' Element.\n\nDemo: https://jsbin.com/sibiput/edit?html,css,js,output\n\n\n---\n\n\n#### `fallbackTolerance` option\nEmulates the native drag threshold. Specify in pixels how far the mouse should move before it's considered as a drag.\nUseful if the items are also clickable like in a list of links.\n\nWhen the user clicks inside a sortable element, it's not uncommon for your hand to move a little between the time you press and the time you release.\nDragging only starts if you move the pointer past a certain tolerance, so that you don't accidentally start dragging every time you click.\n\n3 to 5 are probably good values.\n\n\n---\n\n\n#### `dragoverBubble` option\nIf set to `true`, the dragover event will bubble to parent sortables. Works on both fallback and native dragover event.\nBy default, it is false, but Sortable will only stop bubbling the event once the element has been inserted into a parent Sortable, or *can* be inserted into a parent Sortable, but isn't at that specific time (due to animation, etc).\n\nSince 1.8.0, you will probably want to leave this option as false. Before 1.8.0, it may need to be `true` for nested sortables to work.\n\n\n---\n\n\n#### `removeCloneOnHide` option\nIf set to `false`, the clone is hidden by having it's CSS `display` property set to `none`.\nBy default, this option is `true`, meaning Sortable will remove the cloned element from the DOM when it is supposed to be hidden.\n\n\n---\n\n\n#### `emptyInsertThreshold` option\nThe distance (in pixels) the mouse must be from an empty sortable while dragging for the drag element to be inserted into that sortable. Defaults to `5`. Set to `0` to disable this feature.\n\nDemo: https://jsbin.com/becavoj/edit?js,output\n\n\n---\n### Event object ([demo](https://jsbin.com/fogujiv/edit?js,output))\n\n - to:`HTMLElement` — list, in which moved element\n - from:`HTMLElement` — previous list\n - item:`HTMLElement` — dragged element\n - clone:`HTMLElement`\n - oldIndex:`Number|undefined` — old index within parent\n - newIndex:`Number|undefined` — new index within parent\n - oldDraggableIndex: `Number|undefined` — old index within parent, only counting draggable elements\n - newDraggableIndex: `Number|undefined` — new index within parent, only counting draggable elements\n - pullMode:`String|Boolean|undefined` — Pull mode if dragging into another sortable (`\"clone\"`, `true`, or `false`), otherwise undefined\n\n\n#### `move` event object\n - to:`HTMLElement`\n - from:`HTMLElement`\n - dragged:`HTMLElement`\n - draggedRect:`DOMRect`\n - related:`HTMLElement` — element on which have guided\n - relatedRect:`DOMRect`\n - willInsertAfter:`Boolean` — `true` if will element be inserted after target (or `false` if before)\n\n\n---\n\n\n### Method\n\n\n##### option(name:`String`[, value:`*`]):`*`\nGet or set the option.\n\n\n\n##### closest(el:`String`[, selector:`HTMLElement`]):`HTMLElement|null`\nFor each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\n\n##### toArray():`String[]`\nSerializes the sortable's item `data-id`'s (`dataIdAttr` option) into an array of string.\n\n\n##### sort(order:`String[]`)\nSorts the elements according to the array.\n\n```js\nvar order = sortable.toArray();\nsortable.sort(order.reverse()); // apply\n```\n\n\n##### save()\nSave the current sorting (see [store](#store))\n\n\n##### destroy()\nRemoves the sortable functionality completely.\n\n\n---\n\n\n<a name=\"store\"></a>\n### Store\nSaving and restoring of the sort.\n\n```html\n<ul>\n\t<li data-id=\"1\">order</li>\n\t<li data-id=\"2\">save</li>\n\t<li data-id=\"3\">restore</li>\n</ul>\n```\n\n```js\nSortable.create(el, {\n\tgroup: \"localStorage-example\",\n\tstore: {\n\t\t/**\n\t\t * Get the order of elements. Called once during initialization.\n\t\t * @param   {Sortable}  sortable\n\t\t * @returns {Array}\n\t\t */\n\t\tget: function (sortable) {\n\t\t\tvar order = localStorage.getItem(sortable.options.group.name);\n\t\t\treturn order ? order.split('|') : [];\n\t\t},\n\n\t\t/**\n\t\t * Save the order of elements. Called onEnd (when the item is dropped).\n\t\t * @param {Sortable}  sortable\n\t\t */\n\t\tset: function (sortable) {\n\t\t\tvar order = sortable.toArray();\n\t\t\tlocalStorage.setItem(sortable.options.group.name, order.join('|'));\n\t\t}\n\t}\n})\n```\n\n\n---\n\n\n<a name=\"bs\"></a>\n### Bootstrap\nDemo: https://jsbin.com/visimub/edit?html,js,output\n\n```html\n<!-- Latest compiled and minified CSS -->\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\"/>\n\n\n<!-- Latest Sortable -->\n<script src=\"http://SortableJS.github.io/Sortable/Sortable.js\"></script>\n\n\n<!-- Simple List -->\n<ul id=\"simpleList\" class=\"list-group\">\n\t<li class=\"list-group-item\">This is <a href=\"http://SortableJS.github.io/Sortable/\">Sortable</a></li>\n\t<li class=\"list-group-item\">It works with Bootstrap...</li>\n\t<li class=\"list-group-item\">...out of the box.</li>\n\t<li class=\"list-group-item\">It has support for touch devices.</li>\n\t<li class=\"list-group-item\">Just drag some elements around.</li>\n</ul>\n\n<script>\n    // Simple list\n    Sortable.create(simpleList, { /* options */ });\n</script>\n```\n\n\n---\n\n\n### Static methods & properties\n\n\n\n##### Sortable.create(el:`HTMLElement`[, options:`Object`]):`Sortable`\nCreate new instance.\n\n\n---\n\n\n##### Sortable.active:`Sortable`\nThe active Sortable instance.\n\n\n---\n\n\n##### Sortable.dragged:`HTMLElement`\nThe element being dragged.\n\n\n---\n\n\n##### Sortable.ghost:`HTMLElement`\nThe ghost element.\n\n\n---\n\n\n##### Sortable.clone:`HTMLElement`\nThe clone element.\n\n\n---\n\n\n##### Sortable.get(element:`HTMLElement`):`Sortable`\nGet the Sortable instance on an element.\n\n\n---\n\n\n##### Sortable.mount(plugin:`...SortablePlugin|SortablePlugin[]`)\nMounts a plugin to Sortable.\n\n\n---\n\n\n##### Sortable.utils\n* on(el`:HTMLElement`, event`:String`, fn`:Function`) — attach an event handler function\n* off(el`:HTMLElement`, event`:String`, fn`:Function`) — remove an event handler\n* css(el`:HTMLElement`)`:Object` — get the values of all the CSS properties\n* css(el`:HTMLElement`, prop`:String`)`:Mixed` — get the value of style properties\n* css(el`:HTMLElement`, prop`:String`, value`:String`) — set one CSS properties\n* css(el`:HTMLElement`, props`:Object`) — set more CSS properties\n* find(ctx`:HTMLElement`, tagName`:String`[, iterator`:Function`])`:Array` — get elements by tag name\n* bind(ctx`:Mixed`, fn`:Function`)`:Function` — Takes a function and returns a new one that will always have a particular context\n* is(el`:HTMLElement`, selector`:String`)`:Boolean` — check the current matched set of elements against a selector\n* closest(el`:HTMLElement`, selector`:String`[, ctx`:HTMLElement`])`:HTMLElement|Null` — for each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree\n* clone(el`:HTMLElement`)`:HTMLElement` — create a deep copy of the set of matched elements\n* toggleClass(el`:HTMLElement`, name`:String`, state`:Boolean`) — add or remove one classes from each element\n* detectDirection(el`:HTMLElement`)`:String` — automatically detect the [direction](https://github.com/SortableJS/Sortable/wiki/Swap-Thresholds-and-Direction#direction) of the element as either `'vertical'` or `'horizontal'`\n\n\n---\n\n\n### Plugins\n#### Extra Plugins (included in complete versions)\n - [MultiDrag](https://github.com/SortableJS/Sortable/tree/master/plugins/MultiDrag)\n - [Swap](https://github.com/SortableJS/Sortable/tree/master/plugins/Swap)\n\n#### Default Plugins (included in default versions)\n - [AutoScroll](https://github.com/SortableJS/Sortable/tree/master/plugins/AutoScroll)\n - [OnSpill](https://github.com/SortableJS/Sortable/tree/master/plugins/OnSpill)\n\n\n---\n\n\n<a name=\"cdn\"></a>\n### CDN\n\n```html\n<!-- jsDelivr :: Sortable :: Latest (https://www.jsdelivr.com/package/npm/sortablejs) -->\n<script src=\"https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js\"></script>\n```\n\n\n---\n\n\n### Contributing (Issue/PR)\n\nPlease, [read this](CONTRIBUTING.md).\n\n\n---\n\n\n## Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/SortableJS/Sortable/graphs/contributors\"><img src=\"https://opencollective.com/Sortable/contributors.svg?width=890&button=false\" /></a>\n\n### Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/Sortable/contribute)]\n\n#### Individuals\n\n<a href=\"https://opencollective.com/Sortable\"><img src=\"https://opencollective.com/Sortable/individuals.svg?width=890\"></a>\n\n#### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/Sortable/contribute)]\n\n<a href=\"https://opencollective.com/Sortable/organization/0/website\"><img src=\"https://opencollective.com/Sortable/organization/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/Sortable/organization/1/website\"><img src=\"https://opencollective.com/Sortable/organization/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/Sortable/organization/2/website\"><img src=\"https://opencollective.com/Sortable/organization/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/Sortable/organization/3/website\"><img src=\"https://opencollective.com/Sortable/organization/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/Sortable/organization/4/website\"><img src=\"https://opencollective.com/Sortable/organization/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/Sortable/organization/5/website\"><img src=\"https://opencollective.com/Sortable/organization/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/Sortable/organization/6/website\"><img src=\"https://opencollective.com/Sortable/organization/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/Sortable/organization/7/website\"><img src=\"https://opencollective.com/Sortable/organization/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/Sortable/organization/8/website\"><img src=\"https://opencollective.com/Sortable/organization/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/Sortable/organization/9/website\"><img src=\"https://opencollective.com/Sortable/organization/9/avatar.svg\"></a>\n\n## MIT LICENSE\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 All contributors to Sortable\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/sortablejs/-/sortablejs-1.10.2.tgz#6e40364d913f98b85a14f6678f92b5c1221f5290",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/sortablejs/-/sortablejs-1.10.2.tgz",
    "hash": "6e40364d913f98b85a14f6678f92b5c1221f5290",
    "integrity": "sha512-YkPGufevysvfwn5rfdlGyrGjt7/CRHwvRPogD/lC+TnvcN29jDpCifKP+rBqf+LRldfXSTh+0CGLcSg0VIxq3A==",
    "registry": "npm",
    "packageName": "sortablejs",
    "cacheIntegrity": "sha512-YkPGufevysvfwn5rfdlGyrGjt7/CRHwvRPogD/lC+TnvcN29jDpCifKP+rBqf+LRldfXSTh+0CGLcSg0VIxq3A== sha1-bkA2TZE/mLhaFPZnj5K1wSIfUpA="
  },
  "registry": "npm",
  "hash": "6e40364d913f98b85a14f6678f92b5c1221f5290"
}