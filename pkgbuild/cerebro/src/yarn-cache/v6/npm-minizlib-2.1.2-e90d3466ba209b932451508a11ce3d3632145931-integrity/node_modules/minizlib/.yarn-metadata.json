{
  "manifest": {
    "name": "minizlib",
    "version": "2.1.2",
    "description": "A small fast zlib stream built on [minipass](http://npm.im/minipass) and Node.js's zlib binding.",
    "main": "index.js",
    "dependencies": {
      "minipass": "^3.0.0",
      "yallist": "^4.0.0"
    },
    "scripts": {
      "test": "tap test/*.js --100 -J",
      "preversion": "npm test",
      "postversion": "npm publish",
      "postpublish": "git push origin --all; git push origin --tags"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/isaacs/minizlib.git"
    },
    "keywords": [
      "zlib",
      "gzip",
      "gunzip",
      "deflate",
      "inflate",
      "compression",
      "zip",
      "unzip"
    ],
    "author": {
      "name": "Isaac Z. Schlueter",
      "email": "i@izs.me",
      "url": "http://blog.izs.me/"
    },
    "license": "MIT",
    "devDependencies": {
      "tap": "^14.6.9"
    },
    "files": [
      "index.js",
      "constants.js"
    ],
    "engines": {
      "node": ">= 8"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-minizlib-2.1.2-e90d3466ba209b932451508a11ce3d3632145931-integrity/node_modules/minizlib/package.json",
    "readmeFilename": "README.md",
    "readme": "# minizlib\n\nA fast zlib stream built on [minipass](http://npm.im/minipass) and\nNode.js's zlib binding.\n\nThis module was created to serve the needs of\n[node-tar](http://npm.im/tar) and\n[minipass-fetch](http://npm.im/minipass-fetch).\n\nBrotli is supported in versions of node with a Brotli binding.\n\n## How does this differ from the streams in `require('zlib')`?\n\nFirst, there are no convenience methods to compress or decompress a\nbuffer.  If you want those, use the built-in `zlib` module.  This is\nonly streams.  That being said, Minipass streams to make it fairly easy to\nuse as one-liners: `new zlib.Deflate().end(data).read()` will return the\ndeflate compressed result.\n\nThis module compresses and decompresses the data as fast as you feed\nit in.  It is synchronous, and runs on the main process thread.  Zlib\nand Brotli operations can be high CPU, but they're very fast, and doing it\nthis way means much less bookkeeping and artificial deferral.\n\nNode's built in zlib streams are built on top of `stream.Transform`.\nThey do the maximally safe thing with respect to consistent\nasynchrony, buffering, and backpressure.\n\nSee [Minipass](http://npm.im/minipass) for more on the differences between\nNode.js core streams and Minipass streams, and the convenience methods\nprovided by that class.\n\n## Classes\n\n- Deflate\n- Inflate\n- Gzip\n- Gunzip\n- DeflateRaw\n- InflateRaw\n- Unzip\n- BrotliCompress (Node v10 and higher)\n- BrotliDecompress (Node v10 and higher)\n\n## USAGE\n\n```js\nconst zlib = require('minizlib')\nconst input = sourceOfCompressedData()\nconst decode = new zlib.BrotliDecompress()\nconst output = whereToWriteTheDecodedData()\ninput.pipe(decode).pipe(output)\n```\n\n## REPRODUCIBLE BUILDS\n\nTo create reproducible gzip compressed files across different operating\nsystems, set `portable: true` in the options.  This causes minizlib to set\nthe `OS` indicator in byte 9 of the extended gzip header to `0xFF` for\n'unknown'.\n",
    "licenseText": "Minizlib was created by Isaac Z. Schlueter.\nIt is a derivative work of the Node.js project.\n\n\"\"\"\nCopyright Isaac Z. Schlueter and Contributors\nCopyright Node.js contributors. All rights reserved.\nCopyright Joyent, Inc. and other Node contributors. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\"\"\"\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/minizlib/-/minizlib-2.1.2.tgz#e90d3466ba209b932451508a11ce3d3632145931",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/minizlib/-/minizlib-2.1.2.tgz",
    "hash": "e90d3466ba209b932451508a11ce3d3632145931",
    "integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
    "registry": "npm",
    "packageName": "minizlib",
    "cacheIntegrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg== sha1-6Q00Zrogm5MkUVCKEc49NjIUWTE="
  },
  "registry": "npm",
  "hash": "e90d3466ba209b932451508a11ce3d3632145931"
}