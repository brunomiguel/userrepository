{
  "manifest": {
    "name": "vinyl-sourcemaps-apply",
    "version": "0.2.1",
    "description": "Apply a source map to a vinyl file, merging it with preexisting source maps",
    "homepage": "http://github.com/floridoo/vinyl-sourcemaps-apply",
    "repository": {
      "type": "git",
      "url": "git://github.com/floridoo/vinyl-sourcemaps-apply.git"
    },
    "main": "index.js",
    "scripts": {
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "keywords": [
      "vinyl",
      "sourcemaps",
      "source maps",
      "gulp"
    ],
    "author": {
      "name": "Florian Reiterer",
      "email": "me@florianreiterer.com"
    },
    "license": "ISC",
    "dependencies": {
      "source-map": "^0.5.1"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-vinyl-sourcemaps-apply-0.2.1-ab6549d61d172c2b1b87be5c508d239c8ef87705-integrity/node_modules/vinyl-sourcemaps-apply/package.json",
    "readmeFilename": "README.md",
    "readme": "# vinyl-sourcemaps-apply\n\nApply a source map to a vinyl file, merging it with preexisting source maps.\n\n## Usage:\n\n```javascript\nvar applySourceMap = require('vinyl-sourcemaps-apply');\napplySourceMap(vinylFile, sourceMap);\n```\n\n### Example (Gulp plugin):\n\n```javascript\nvar through = require('through2');\nvar applySourceMap = require('vinyl-sourcemaps-apply');\nvar myTransform = require('myTransform');\n\nmodule.exports = function(options) {\n\n  function transform(file, encoding, callback) {\n    // generate source maps if plugin source-map present\n    if (file.sourceMap) {\n      options.makeSourceMaps = true;\n    }\n\n    // do normal plugin logic\n    var result = myTransform(file.contents, options);\n    file.contents = new Buffer(result.code);\n\n    // apply source map to the chain\n    if (file.sourceMap) {\n      applySourceMap(file, result.map);\n    }\n\n    this.push(file);\n    callback();\n  }\n\n  return through.obj(transform);\n};\n```"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vinyl-sourcemaps-apply/-/vinyl-sourcemaps-apply-0.2.1.tgz#ab6549d61d172c2b1b87be5c508d239c8ef87705",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vinyl-sourcemaps-apply/-/vinyl-sourcemaps-apply-0.2.1.tgz",
    "hash": "ab6549d61d172c2b1b87be5c508d239c8ef87705",
    "integrity": "sha512-+oDh3KYZBoZC8hfocrbrxbLUeaYtQK7J5WU5Br9VqWqmCll3tFJqKp97GC9GmMsVIL0qnx2DgEDVxdo5EZ5sSw==",
    "registry": "npm",
    "packageName": "vinyl-sourcemaps-apply",
    "cacheIntegrity": "sha512-+oDh3KYZBoZC8hfocrbrxbLUeaYtQK7J5WU5Br9VqWqmCll3tFJqKp97GC9GmMsVIL0qnx2DgEDVxdo5EZ5sSw== sha1-q2VJ1h0XLCsbh75cUI0jnI74dwU="
  },
  "registry": "npm",
  "hash": "ab6549d61d172c2b1b87be5c508d239c8ef87705"
}