{
  "manifest": {
    "name": "css-select",
    "version": "4.1.3",
    "description": "a CSS selector compiler/engine",
    "author": {
      "name": "Felix Boehm",
      "email": "me@feedic.com"
    },
    "funding": {
      "url": "https://github.com/sponsors/fb55"
    },
    "keywords": [
      "css",
      "selector",
      "sizzle"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/fb55/css-select.git"
    },
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "files": [
      "lib"
    ],
    "dependencies": {
      "boolbase": "^1.0.0",
      "css-what": "^5.0.0",
      "domhandler": "^4.2.0",
      "domutils": "^2.6.0",
      "nth-check": "^2.0.0"
    },
    "devDependencies": {
      "@types/boolbase": "^1.0.0",
      "@types/jest": "^26.0.14",
      "@types/node": "^15.0.2",
      "@typescript-eslint/eslint-plugin": "^4.1.0",
      "@typescript-eslint/parser": "^4.1.0",
      "cheerio-soupselect": "^0.1.1",
      "coveralls": "^3.0.2",
      "eslint": "^7.9.0",
      "eslint-config-prettier": "^8.1.0",
      "htmlparser2": "^6.0.0",
      "jest": "^27.0.3",
      "prettier": "^2.1.2",
      "ts-jest": "^27.0.1",
      "typescript": "^4.0.2"
    },
    "scripts": {
      "test": "jest --coverage && npm run lint",
      "coverage": "cat coverage/lcov.info | coveralls",
      "lint": "npm run lint:es && npm run lint:prettier",
      "lint:es": "eslint src",
      "lint:prettier": "npm run prettier -- --check",
      "format": "npm run format:es && npm run format:prettier",
      "format:es": "npm run lint:es -- --fix",
      "format:prettier": "npm run prettier -- --write",
      "prettier": "prettier '**/*.{ts,md,json,yml}'",
      "build": "tsc",
      "prepare": "npm run build"
    },
    "license": "BSD-2-Clause",
    "prettier": {
      "tabWidth": 4,
      "proseWrap": "always"
    },
    "jest": {
      "preset": "ts-jest",
      "testEnvironment": "node",
      "testMatch": [
        "<rootDir>/test/*.ts"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-css-select-4.1.3-a70440f70317f2669118ad74ff105e65849c7067-integrity/node_modules/css-select/package.json",
    "readmeFilename": "README.md",
    "readme": "# css-select [![NPM version](http://img.shields.io/npm/v/css-select.svg)](https://npmjs.org/package/css-select) [![Build Status](https://travis-ci.com/fb55/css-select.svg?branch=master)](http://travis-ci.com/fb55/css-select) [![Downloads](https://img.shields.io/npm/dm/css-select.svg)](https://npmjs.org/package/css-select) [![Coverage](https://coveralls.io/repos/fb55/css-select/badge.svg?branch=master)](https://coveralls.io/r/fb55/css-select)\n\na CSS selector compiler/engine\n\n## What?\n\ncss-select turns CSS selectors into functions that tests if elements match them.\nWhen searching for elements, testing is executed \"from the top\", similar to how\nbrowsers execute CSS selectors.\n\nIn its default configuration, css-select queries the DOM structure of the\n[`domhandler`](https://github.com/fb55/domhandler) module (also known as\nhtmlparser2 DOM). It uses [`domutils`](https://github.com/fb55/domutils) as its\ndefault adapter over the DOM structure. See Options below for details on\nquerying alternative DOM structures.\n\n**Features:**\n\n-   Full implementation of CSS3 selectors\n-   Partial implementation of jQuery/Sizzle extensions\n-   Very high test coverage\n-   Pretty good performance\n\n## Why?\n\nThe traditional approach of executing CSS selectors, named left-to-right\nexecution, is to execute every component of the selector in order, from left to\nright _(duh)_. The execution of the selector `a b` for example will first query\nfor `a` elements, then search these for `b` elements. (That's the approach of\neg. [`Sizzle`](https://github.com/jquery/sizzle),\n[`nwmatcher`](https://github.com/dperini/nwmatcher/) and\n[`qwery`](https://github.com/ded/qwery).)\n\nWhile this works, it has some downsides: Children of `a`s will be checked\nmultiple times; first, to check if they are also `a`s, then, for every superior\n`a` once, if they are `b`s. Using\n[Big O notation](http://en.wikipedia.org/wiki/Big_O_notation), that would be\n`O(n^(k+1))`, where `k` is the number of descendant selectors (that's the space\nin the example above).\n\nThe far more efficient approach is to first look for `b` elements, then check if\nthey have superior `a` elements: Using big O notation again, that would be\n`O(n)`. That's called right-to-left execution.\n\nAnd that's what css-select does â€“ and why it's quite performant.\n\n## How does it work?\n\nBy building a stack of functions.\n\n_Wait, what?_\n\nOkay, so let's suppose we want to compile the selector `a b` again, for\nright-to-left execution. We start by _parsing_ the selector, which means we turn\nthe selector into an array of the building-blocks of the selector, so we can\ndistinguish them easily. That's what the\n[`css-what`](https://github.com/fb55/css-what) module is for, if you want to\nhave a look.\n\nAnyway, after parsing, we end up with an array like this one:\n\n```js\n[\n    { type: \"tag\", name: \"a\" },\n    { type: \"descendant\" },\n    { type: \"tag\", name: \"b\" },\n];\n```\n\nActually, this array is wrapped in another array, but that's another story\n(involving commas in selectors).\n\nNow that we know the meaning of every part of the selector, we can compile it.\nThat's where it becomes interesting.\n\nThe basic idea is to turn every part of the selector into a function, which\ntakes an element as its only argument. The function checks whether a passed\nelement matches its part of the selector: If it does, the element is passed to\nthe next turned-into-a-function part of the selector, which does the same. If an\nelement is accepted by all parts of the selector, it _matches_ the selector and\ndouble rainbow ALL THE WAY.\n\nAs said before, we want to do right-to-left execution with all the big O\nimprovements nonsense, so elements are passed from the rightmost part of the\nselector (`b` in our example) to the leftmost (~~which would be `c`~~ of course\n`a`).\n\n_//TODO: More in-depth description. Implementation details. Build a spaceship._\n\n## API\n\n```js\nconst CSSselect = require(\"css-select\");\n```\n\n**Note:** css-select throws errors when invalid selectors are passed to it,\ncontrary to the behavior in browsers, which swallow them. This is done to aid\nwith writing css selectors, but can be unexpected when processing arbitrary\nstrings.\n\n#### `CSSselect.selectAll(query, elems, options)`\n\nQueries `elems`, returns an array containing all matches.\n\n-   `query` can be either a CSS selector or a function.\n-   `elems` can be either an array of elements, or a single element. If it is an\n    element, its children will be queried.\n-   `options` is described below.\n\nAliases: `default` export, `CSSselect.iterate(query, elems)`.\n\n#### `CSSselect.compile(query, options)`\n\nCompiles the query, returns a function.\n\n#### `CSSselect.is(elem, query, options)`\n\nTests whether or not an element is matched by `query`. `query` can be either a\nCSS selector or a function.\n\n#### `CSSselect.selectOne(query, elems, options)`\n\nArguments are the same as for `CSSselect.selectAll(query, elems)`. Only returns\nthe first match, or `null` if there was no match.\n\n### Options\n\nAll options are optional.\n\n-   `xmlMode`: When enabled, tag names will be case-sensitive. Default: `false`.\n-   `rootFunc`: The last function in the stack, will be called with the last\n    element that's looked at.\n-   `adapter`: The adapter to use when interacting with the backing DOM\n    structure. By default it uses the `domutils` module.\n-   `context`: The context of the current query. Used to limit the scope of\n    searches. Can be matched directly using the `:scope` pseudo-selector.\n-   `cacheResults`: Allow css-select to cache results for some selectors,\n    sometimes greatly improving querying performance. Disable this if your\n    document can change in between queries with the same compiled selector.\n    Default: `true`.\n\n#### Custom Adapters\n\nA custom adapter must match the interface described\n[here](https://github.com/fb55/css-select/blob/1aa44bdd64aaf2ebdfd7f338e2e76bed36521957/src/types.ts#L6-L96).\n\nYou may want to have a look at [`domutils`](https://github.com/fb55/domutils) to\nsee the default implementation, or at\n[`css-select-browser-adapter`](https://github.com/nrkn/css-select-browser-adapter/blob/master/index.js)\nfor an implementation backed by the DOM.\n\n## Supported selectors\n\n_As defined by CSS 4 and / or jQuery._\n\n-   [Selector lists](https://developer.mozilla.org/en-US/docs/Web/CSS/Selector_list)\n    (`,`)\n-   [Universal](https://developer.mozilla.org/en-US/docs/Web/CSS/Universal_selectors)\n    (`*`)\n-   [Type](https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors)\n    (`<tagname>`)\n-   [Descendant](https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator)\n    (` `)\n-   [Child](https://developer.mozilla.org/en-US/docs/Web/CSS/Child_combinator)\n    (`>`)\n-   Parent (`<`)\n-   [Adjacent sibling](https://developer.mozilla.org/en-US/docs/Web/CSS/Adjacent_sibling_combinator)\n    (`+`)\n-   [General sibling](https://developer.mozilla.org/en-US/docs/Web/CSS/General_sibling_combinator)\n    (`~`)\n-   [Attribute](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors)\n    (`[attr=foo]`), with supported comparisons:\n    -   `[attr]` (existential)\n    -   `=`\n    -   `~=`\n    -   `|=`\n    -   `*=`\n    -   `^=`\n    -   `$=`\n    -   `!=`\n    -   Also, `i` can be added after the comparison to make the comparison\n        case-insensitive (eg. `[attr=foo i]`)\n-   Pseudos:\n    -   [`:not`](https://developer.mozilla.org/en-US/docs/Web/CSS/:not)\n    -   [`:contains`](https://api.jquery.com/contains-selector)\n    -   `:icontains` (case-insensitive version of `:contains`)\n    -   [`:has`](https://developer.mozilla.org/en-US/docs/Web/CSS/:has)\n    -   [`:root`](https://developer.mozilla.org/en-US/docs/Web/CSS/:root)\n    -   [`:empty`](https://developer.mozilla.org/en-US/docs/Web/CSS/:empty)\n    -   [`:parent`](https://api.jquery.com/parent-selector)\n    -   [`:first-child`](https://developer.mozilla.org/en-US/docs/Web/CSS/:first-child),\n        [`:last-child`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-child),\n        [`:first-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:first-of-type),\n        [`:last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type)\n    -   [`:only-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:only-of-type),\n        [`:only-child`](https://developer.mozilla.org/en-US/docs/Web/CSS/:only-child)\n    -   [`:nth-child`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child),\n        [`:nth-last-child`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-last-child),\n        [`:nth-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-of-type),\n        [`:nth-last-of-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-last-of-type),\n    -   [`:link`](https://developer.mozilla.org/en-US/docs/Web/CSS/:link),\n        [`:any-link`](https://developer.mozilla.org/en-US/docs/Web/CSS/:any-link)\n    -   [`:visited`](https://developer.mozilla.org/en-US/docs/Web/CSS/:visited),\n        [`:hover`](https://developer.mozilla.org/en-US/docs/Web/CSS/:hover),\n        [`:active`](https://developer.mozilla.org/en-US/docs/Web/CSS/:active)\n        (these depend on optional `Adapter` methods, so these will only match\n        elements if implemented in `Adapter`)\n    -   [`:selected`](https://api.jquery.com/selected-selector),\n        [`:checked`](https://developer.mozilla.org/en-US/docs/Web/CSS/:checked)\n    -   [`:enabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:enabled),\n        [`:disabled`](https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled)\n    -   [`:required`](https://developer.mozilla.org/en-US/docs/Web/CSS/:required),\n        [`:optional`](https://developer.mozilla.org/en-US/docs/Web/CSS/:optional)\n    -   [`:header`](https://api.jquery.com/header-selector),\n        [`:button`](https://api.jquery.com/button-selector),\n        [`:input`](https://api.jquery.com/input-selector),\n        [`:text`](https://api.jquery.com/text-selector),\n        [`:checkbox`](https://api.jquery.com/checkbox-selector),\n        [`:file`](https://api.jquery.com/file-selector),\n        [`:password`](https://api.jquery.com/password-selector),\n        [`:reset`](https://api.jquery.com/reset-selector),\n        [`:radio`](https://api.jquery.com/radio-selector) etc.\n    -   [`:is`](https://developer.mozilla.org/en-US/docs/Web/CSS/:is), plus its\n        legacy alias `:matches`\n    -   [`:scope`](https://developer.mozilla.org/en-US/docs/Web/CSS/:scope)\n        (uses the context from the passed options)\n\n---\n\nLicense: BSD-2-Clause\n\n## Security contact information\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security). Tidelift will\ncoordinate the fix and disclosure.\n\n## `css-select` for enterprise\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of `css-select` and thousands of other packages are working with\nTidelift to deliver commercial support and maintenance for the open source\ndependencies you use to build your applications. Save time, reduce risk, and\nimprove code health, while paying the maintainers of the exact dependencies you\nuse.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-css-select?utm_source=npm-css-select&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n",
    "licenseText": "Copyright (c) Felix BÃ¶hm\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/css-select/-/css-select-4.1.3.tgz#a70440f70317f2669118ad74ff105e65849c7067",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/css-select/-/css-select-4.1.3.tgz",
    "hash": "a70440f70317f2669118ad74ff105e65849c7067",
    "integrity": "sha512-gT3wBNd9Nj49rAbmtFHj1cljIAOLYSX1nZ8CB7TBO3INYckygm5B7LISU/szY//YmdiSLbJvDLOx9VnMVpMBxA==",
    "registry": "npm",
    "packageName": "css-select",
    "cacheIntegrity": "sha512-gT3wBNd9Nj49rAbmtFHj1cljIAOLYSX1nZ8CB7TBO3INYckygm5B7LISU/szY//YmdiSLbJvDLOx9VnMVpMBxA== sha1-pwRA9wMX8maRGK10/xBeZYSccGc="
  },
  "registry": "npm",
  "hash": "a70440f70317f2669118ad74ff105e65849c7067"
}