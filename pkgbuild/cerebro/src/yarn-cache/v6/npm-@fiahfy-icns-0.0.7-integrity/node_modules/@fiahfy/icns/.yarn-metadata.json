{
  "manifest": {
    "name": "@fiahfy/icns",
    "description": "Apple Icon Image format parser and builder",
    "version": "0.0.7",
    "author": {
      "name": "fiahfy",
      "email": "d.fiahfy@gmail.com",
      "url": "https://fiahfy.github.io/"
    },
    "bugs": {
      "url": "https://github.com/fiahfy/icns/issues"
    },
    "dependencies": {
      "@fiahfy/packbits": "^0.0.6",
      "pngjs": "^6.0.0"
    },
    "devDependencies": {
      "@fiahfy/eslint-config": "^0.0.11",
      "@types/jest": "^26.0.19",
      "@types/node": "^14.14.16",
      "@types/pngjs": "^3.4.2",
      "eslint": "^7.16.0",
      "jest": "^26.6.3",
      "prettier": "^2.2.1",
      "ts-jest": "^26.4.4",
      "typescript": "^4.1.3"
    },
    "engines": {
      "node": ">=8"
    },
    "files": [
      "dist"
    ],
    "homepage": "https://github.com/fiahfy/icns",
    "keywords": [
      "builder",
      "icns",
      "parser"
    ],
    "license": "MIT",
    "main": "dist/index.js",
    "publishConfig": {
      "access": "public"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/fiahfy/icns.git"
    },
    "scripts": {
      "build": "tsc",
      "dev": "tsc -w",
      "lint": "npm run lint:eslint && npm run lint:prettier",
      "lint:eslint": "eslint -f codeframe --ext .js,.ts --ignore-path .gitignore .",
      "lint:prettier": "prettier -c --ignore-path .gitignore **/*.{js,ts}",
      "test": "npm run lint && jest"
    },
    "types": "dist/index.d.js",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@fiahfy-icns-0.0.7-integrity/node_modules/@fiahfy/icns/package.json",
    "readmeFilename": "README.md",
    "readme": "<!-- markdownlint-disable MD024 -->\n\n# icns\n\n![badge](https://github.com/fiahfy/icns/workflows/Node.js%20Package/badge.svg)\n\n> [Apple Icon Image format](https://en.wikipedia.org/wiki/Apple_Icon_Image_format) parser and builder.\n\n## Installation\n\n```bash\nnpm install @fiahfy/icns\n```\n\n## Usage\n\n### Parsing\n\n```js\nimport fs from 'fs'\nimport { Icns } from '@fiahfy/icns'\n\nconst buf = fs.readFileSync('icon.icns')\nconst icns = Icns.from(buf)\nconst imagesAsBuffers = icns.images.map((icon) => icon.image)\n```\n\nNote that the images may be encoded in different file formats, in accordance with [Apple's _icon type_ specifications](https://en.wikipedia.org/wiki/Apple_Icon_Image_format#Icon_types).\n\n### Building\n\n```js\nimport fs from 'fs'\nimport { Icns, IcnsImage } from '@fiahfy/icns'\n\nconst icns = new Icns()\nlet buf, image\n\nbuf = fs.readFileSync('512x512.png')\nimage = IcnsImage.fromPNG(buf, 'ic09')\nicns.append(image)\n\nbuf = fs.readFileSync('1024x1024.png')\nimage = IcnsImage.fromPNG(buf, 'ic10')\nicns.append(image)\n\n/* Some other PNG files */\n\nfs.writeFileSync('icon.icns', icns.data)\n```\n\n## API\n\n### Class: Icns\n\n#### static from(buffer)\n\nCreate ICNS from the icon buffer.\n\n##### buffer\n\nType: `Buffer`\n\nThe ICNS icon buffer.\n\n#### append(image)\n\nAdds ICNS image at the end.\n\n##### image\n\nType: `IcnsImage`\n\nThe ICNS Image to append.\n\n#### insert(image, index)\n\nInserts ICNS image at the specified position.\n\n##### image\n\nType: `IcnsImage`\n\nThe ICNS Image to insert.\n\n##### index\n\nType: `number`\n\nThe position at which to insert the ICNS Image.\n\n#### remove(index)\n\nRemoves ICNS image at the specified position.\n\n##### index\n\nType: `number`\n\nThe position of the ICNS Image to remove.\n\n#### fileHeader\n\nType: `IcnsFileHeader`\n\nReturn the file header on the ICNS.\n\n#### images\n\nType: `IcnsImage[]`\n\nReturn the ICNS images on the ICNS.\n\n#### data\n\nType: `Buffer`\n\nReturn the ICNS buffer.\n\n### Class: IcnsImage\n\n#### static from(buffer)\n\nCreate ICNS image from the buffer.\n\n##### buffer\n\nType: `Buffer`\n\nThe ICNS image buffer.\n\n#### static fromPNG(buffer, osType)\n\nCreate ICNS Image from the PNG image buffer.\n\n##### buffer\n\nType: `Buffer`\n\nThe PNG image buffer.\n\n##### osType\n\nType: `OSType`\n\nThe icon OSType.\n\n### Class: IcnsFileHeader\n\n#### static from(buffer)\n\nCreate ICNS file header from the buffer.\n\n##### buffer\n\nType: `Buffer`\n\nThe ICNS file header buffer.\n\n## Specifications\n\n### Supported OSTypes\n\n| OSType | OS Version | Size | Description                                                           |\n| ------ | ---------- | ---- | --------------------------------------------------------------------- |\n| is32   | 8.5        | 16   | 16×16 24-bit icon                                                     |\n| il32   | 8.5        | 32   | 32x32 24-bit icon                                                     |\n| ih32   | 8.5        | 48   | 48×48 24-bit icon                                                     |\n| it32   | 10.0       | 128  | 128x128 24-bit icon                                                   |\n| s8mk   | 8.5        | 16   | 16x16 8-bit mask                                                      |\n| l8mk   | 8.5        | 32   | 32×32 8-bit mask                                                      |\n| h8mk   | 8.5        | 48   | 48×48 8-bit mask                                                      |\n| t8mk   | 10.0       | 128  | 128x128 8-bit mask                                                    |\n| ic04   |            | 16   | 16x16 ARGB                                                            |\n| ic05   |            | 32   | 32x32 ARGB                                                            |\n| icp4   | 10.7       | 16   | 16x16 icon in PNG format                                              |\n| icp5   | 10.7       | 32   | 32x32 icon in PNG format                                              |\n| icp6   | 10.7       | 64   | 64x64 icon in PNG format                                              |\n| ic07   | 10.7       | 128  | 128x128 icon in PNG format                                            |\n| ic08   | 10.5       | 256  | 256×256 icon in PNG format                                            |\n| ic09   | 10.5       | 512  | 512×512 icon in PNG format                                            |\n| ic10   | 10.7       | 1024 | 1024×1024 in 10.7 (or 512x512@2x \"retina\" in 10.8) icon in PNG format |\n| ic11   | 10.8       | 32   | 16x16@2x \"retina\" icon in PNG format                                  |\n| ic12   | 10.8       | 64   | 32x32@2x \"retina\" icon in PNG format                                  |\n| ic13   | 10.8       | 256  | 128x128@2x \"retina\" icon in PNG format                                |\n| ic14   | 10.8       | 512  | 256x256@2x \"retina\" icon in PNG format                                |\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 fiahfy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@fiahfy/icns/-/icns-0.0.7.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@fiahfy/icns/-/icns-0.0.7.tgz",
    "hash": "",
    "integrity": "sha512-0apAtbUXTU3Opy/Z4h69o53voBa+am8FmdZauyagUMskAVYN1a5yIRk48Sf+tEdBLlefbvqLWPJ4pxr/Y/QtTg==",
    "registry": "npm",
    "packageName": "@fiahfy/icns",
    "cacheIntegrity": "sha512-0apAtbUXTU3Opy/Z4h69o53voBa+am8FmdZauyagUMskAVYN1a5yIRk48Sf+tEdBLlefbvqLWPJ4pxr/Y/QtTg== sha1-VJJCDGT1IvOoh2WgWOqb9g7kxkg="
  },
  "registry": "npm",
  "hash": "d1aa40b5b5174d4dcea72fd9e21ebda39defa016be6a6f0599d65abb26a050cb2401560dd5ae72211938f127feb447412e579f6efa8b58f278a71aff63f42d4e"
}