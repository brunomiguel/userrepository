/// <reference types="node" />
import { IcnsFileHeader } from './icns-file-header';
import { IcnsImage } from './icns-image';
import { OSType, Format } from './types';
export declare class Icns {
    static readonly supportedIconTypes: {
        osType: OSType;
        size: number;
        format: Format;
    }[];
    private _fileHeader;
    private _images;
    constructor(fileHeader?: IcnsFileHeader, images?: IcnsImage[]);
    /**
     * Create ICNS from the icon buffer.
     * @param buffer The ICNS icon buffer.
     */
    static from(buffer: Buffer): Icns;
    get fileHeader(): IcnsFileHeader;
    get images(): ReadonlyArray<IcnsImage>;
    set images(images: ReadonlyArray<IcnsImage>);
    get data(): Buffer;
    /**
     * Adds ICNS image at the end.
     * @param image The ICNS Image to append.
     */
    append(image: IcnsImage): void;
    /**
     * Inserts ICNS image at the specified position.
     * @param image The ICNS Image to insert.
     * @param index The position at which to insert the ICNS Image.
     */
    insert(image: IcnsImage, index: number): void;
    /**
     * Removes ICNS image at the specified position.
     * @param index The position of the ICNS Image to remove.
     */
    remove(index: number): void;
}
