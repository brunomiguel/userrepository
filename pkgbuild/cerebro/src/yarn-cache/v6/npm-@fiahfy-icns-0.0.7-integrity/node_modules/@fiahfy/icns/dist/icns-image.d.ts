/// <reference types="node" />
import { PNG } from 'pngjs';
import { OSType, Format } from './types';
export declare class BitmapBuilder {
    readonly png: PNG;
    readonly osType: OSType;
    readonly format: Format;
    constructor(png: PNG, osType: OSType, format: Format);
    build(): Buffer | undefined;
    private get mask();
    private get rgb();
    private get argb();
    private getChannel;
}
export declare class IcnsImage {
    readonly osType: OSType;
    readonly bytes: number;
    readonly image: Buffer;
    constructor(osType?: OSType, bytes?: number, image?: Buffer);
    /**
     * Create ICNS image from the buffer.
     * @param buffer The ICNS image buffer.
     */
    static from(buffer: Buffer): IcnsImage;
    /**
     * Create ICNS Image from the PNG image buffer.
     * @param buffer The PNG image buffer.
     * @param osType The icon OSType.
     */
    static fromPNG(buffer: Buffer, osType: OSType): IcnsImage;
    get data(): Buffer;
    private static readPNG;
}
