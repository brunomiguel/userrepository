{
  "manifest": {
    "name": "less-loader",
    "version": "5.0.0",
    "description": "A Less loader for webpack. Compiles Less to CSS.",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/webpack-contrib/less-loader.git"
    },
    "author": {
      "name": "Johannes Ewald @jhnns"
    },
    "homepage": "https://github.com/webpack-contrib/less-loader",
    "bugs": {
      "url": "https://github.com/webpack-contrib/less-loader/issues"
    },
    "main": "dist/cjs.js",
    "engines": {
      "node": ">= 4.8.0"
    },
    "scripts": {
      "start": "npm run build -- -w",
      "prebuild": "npm run clean",
      "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js' --copy-files",
      "build:fixtures": "babel-node test/helpers/createSpec.js",
      "clean": "del-cli dist",
      "commitlint": "commitlint --from=master",
      "lint": "eslint --cache src test",
      "prepare": "npm run build",
      "release": "standard-version",
      "security": "npm audit",
      "test:only": "cross-env NODE_ENV=test npm run build:fixtures && jest",
      "test:watch": "cross-env NODE_ENV=test npm run build:fixtures && jest --watch",
      "test:coverage": "cross-env NODE_ENV=test npm run build:fixtures && jest --collectCoverageFrom='src/**/*.js' --coverage",
      "pretest": "npm run lint",
      "test": "cross-env NODE_ENV=test npm run test:coverage",
      "defaults": "webpack-defaults"
    },
    "files": [
      "dist"
    ],
    "peerDependencies": {
      "less": "^2.3.1 || ^3.0.0",
      "webpack": "^2.0.0 || ^3.0.0 || ^4.0.0"
    },
    "dependencies": {
      "clone": "^2.1.1",
      "loader-utils": "^1.1.0",
      "pify": "^4.0.1"
    },
    "devDependencies": {
      "@babel/cli": "^7.4.4",
      "@babel/core": "^7.4.4",
      "@babel/node": "^7.2.2",
      "@babel/preset-env": "^7.4.4",
      "@commitlint/cli": "^7.5.2",
      "@commitlint/config-conventional": "^7.5.0",
      "@webpack-contrib/defaults": "^4.0.1",
      "@webpack-contrib/eslint-config-webpack": "^3.0.0",
      "babel-jest": "^24.7.1",
      "commitlint-azure-pipelines-cli": "^1.0.1",
      "cross-env": "^5.2.0",
      "del": "^4.1.1",
      "del-cli": "^1.1.0",
      "eslint": "^5.16.0",
      "eslint-plugin-import": "^2.17.2",
      "eslint-plugin-prettier": "^3.0.1",
      "husky": "^2.1.0",
      "inspect-loader": "^1.0.0",
      "jest": "^24.7.1",
      "jest-junit": "^6.3.0",
      "less": "^3.9.0",
      "lint-staged": "^8.1.5",
      "memory-fs": "^0.4.1",
      "prettier": "^1.17.0",
      "standard-version": "^5.0.2",
      "webpack": "^4.30.0"
    },
    "keywords": [
      "webpack",
      "loader",
      "less",
      "lesscss",
      "less.js",
      "css",
      "preprocessor"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-less-loader-5.0.0-498dde3a6c6c4f887458ee9ed3f086a12ad1b466-integrity/node_modules/less-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# less-loader\n\nA Less loader for webpack. Compiles Less to CSS.\n\n## Getting Started\n\nTo begin, you'll need to install `less-loader`:\n\n```console\n$ npm install less-loader --save-dev\n```\n\nThen add the loader to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        loader: 'less-loader', // compiles Less to CSS\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method.\n\nThe `less-loader` requires [less](https://github.com/less/less.js) as [`peerDependency`](https://docs.npmjs.com/files/package.json#peerdependencies).\nThus you are able to control the versions accurately.\n\n## Examples\n\nChain the `less-loader` with the\n[`css-loader`](https://github.com/webpack-contrib/css-loader) and the\n[`style-loader`](https://github.com/webpack-contrib/style-loader) to immediately\napply all styles to the DOM.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'style-loader', // creates style nodes from JS strings\n          },\n          {\n            loader: 'css-loader', // translates CSS into CommonJS\n          },\n          {\n            loader: 'less-loader', // compiles Less to CSS\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nYou can pass any Less specific options to the `less-loader` via [loader options](https://webpack.js.org/configuration/module/#rule-options-rule-query).\nSee the [Less documentation](http://lesscss.org/usage/#command-line-usage-options)\nfor all available options in dash-case. Since we're passing these options to\nLess programmatically, you need to pass them in camelCase here:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'style-loader',\n          },\n          {\n            loader: 'css-loader',\n          },\n          {\n            loader: 'less-loader',\n            options: {\n              strictMath: true,\n              noIeCompat: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nUnfortunately, Less doesn't map all options 1-by-1 to camelCase. When in doubt,\n[check their executable](https://github.com/less/less.js/blob/3.x/bin/lessc)\nand search for the dash-case option.\n\n### In production\n\nUsually, it's recommended to extract the style sheets into a dedicated file in\nproduction using the\n[MiniCssExtractPlugin](https://github.com/webpack-contrib/mini-css-extract-plugin).\nThis way your styles are not dependent on JavaScript.\n\n### Imports\n\nStarting with `less-loader` 4, you can now choose between Less' builtin resolver\nand webpack's resolver. By default, webpack's resolver is used.\n\n#### webpack resolver\n\nwebpack provides an\n[advanced mechanism to resolve files](https://webpack.js.org/configuration/resolve/).\nThe `less-loader` applies a Less plugin that passes all queries to the webpack\nresolver. Thus you can import your Less modules from `node_modules`. Just\nprepend them with a `~` which tells webpack to look up the\n[`modules`](https://webpack.js.org/configuration/resolve/#resolve-modules).\n\n```css\n@import '~bootstrap/less/bootstrap';\n```\n\nIt's important to only prepend it with `~`, because `~/` resolves to the\nhome-directory. webpack needs to distinguish between `bootstrap` and\n`~bootstrap`, because CSS and Less files have no special syntax for importing\nrelative files. Writing `@import \"file\"` is the same as `@import \"./file\";`\n\n##### Non-Less imports\n\nUsing webpack's resolver, you can import any file type. You just need a loader\nthat exports valid Less code. Often, you will also want to set the `issuer`\ncondition to ensure that this rule is only applied on imports originating from\nLess files:\n\n```js\n// webpack.config.js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        issuer: /\\.less$/,\n        use: [\n          {\n            loader: 'js-to-less-loader',\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### Less resolver\n\nIf you specify the `paths` option, the `less-loader` will not use webpack's\nresolver. Modules, that can't be resolved in the local folder, will be searched\nin the given `paths`. This is Less' default behavior. `paths` should be an array\nwith absolute paths:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'style-loader',\n          },\n          {\n            loader: 'css-loader',\n          },\n          {\n            loader: 'less-loader',\n            options: {\n              paths: [path.resolve(__dirname, 'node_modules')],\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nIn this case, all webpack features like importing non-Less files or aliasing\nwon't work of course.\n\n### Plugins\n\nIn order to use [plugins](http://lesscss.org/usage/#plugins), simply set the\n`plugins` option like this:\n\n```js\n// webpack.config.js\nconst CleanCSSPlugin = require('less-plugin-clean-css');\n\nmodule.exports = {\n  ...\n    {\n      loader: 'less-loader', options: {\n        plugins: [\n          new CleanCSSPlugin({ advanced: true })\n        ]\n      }\n    }]\n  ...\n};\n```\n\n### Extracting style sheets\n\nBundling CSS with webpack has some nice advantages like referencing images and\nfonts with hashed urls or\n[hot module replacement](https://webpack.js.org/concepts/hot-module-replacement/)\nin development. In production, on the other hand, it's not a good idea to apply\nyour style sheets depending on JS execution. Rendering may be delayed or even a\n[FOUC](https://en.wikipedia.org/wiki/Flash_of_unstyled_content) might be visible.\nThus it's often still better to have them as separate files in your final\nproduction build.\n\nThere are two possibilities to extract a style sheet from the bundle:\n\n- [`extract-loader`](https://github.com/peerigon/extract-loader) (simpler, but\n  specialized on the css-loader's output)\n- [MiniCssExtractPlugin](https://github.com/webpack-contrib/mini-css-extract-plugin)\n  (more complex, but works in all use-cases)\n\n### Source maps\n\nTo enable CSS source maps, you'll need to pass the `sourceMap` option to the\n`less-loader` _and_ the `css-loader`. Your `webpack.config.js` should look\nlike this:\n\n**webpack.config.js**\n\n```javascript\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'style-loader',\n          },\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n          {\n            loader: 'less-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nAlso checkout the [sourceMaps example](https://github.com/webpack-contrib/less-loader/tree/master/examples/sourceMaps).\n\nIf you want to edit the original Less files inside Chrome,\n[there's a good blog post](https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0).\nThe blog post is about Sass but it also works for Less.\n\n### CSS modules gotcha\n\nThere is a known problem with Less and\n[CSS modules](https://github.com/css-modules/css-modules) regarding relative\nfile paths in `url(...)` statements.\n[See this issue for an explanation](https://github.com/webpack-contrib/less-loader/issues/109#issuecomment-253797335).\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/less-loader.svg\n[npm-url]: https://npmjs.com/package/less-loader\n[node]: https://img.shields.io/node/v/less-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/less-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/less-loader\n[tests]: https://dev.azure.com/webpack-contrib/less-loader/_apis/build/status/webpack-contrib.less-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/less-loader/_build/latest?definitionId=2&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/less-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/less-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=less-loader\n[size-url]: https://packagephobia.now.sh/result?p=less-loader\n",
    "licenseText": "Copyright JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/less-loader/-/less-loader-5.0.0.tgz#498dde3a6c6c4f887458ee9ed3f086a12ad1b466",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/less-loader/-/less-loader-5.0.0.tgz",
    "hash": "498dde3a6c6c4f887458ee9ed3f086a12ad1b466",
    "integrity": "sha512-bquCU89mO/yWLaUq0Clk7qCsKhsF/TZpJUzETRvJa9KSVEL9SO3ovCvdEHISBhrC81OwC8QSVX7E0bzElZj9cg==",
    "registry": "npm",
    "packageName": "less-loader",
    "cacheIntegrity": "sha512-bquCU89mO/yWLaUq0Clk7qCsKhsF/TZpJUzETRvJa9KSVEL9SO3ovCvdEHISBhrC81OwC8QSVX7E0bzElZj9cg== sha1-SY3eOmxsT4h0WO6e0/CGoSrRtGY="
  },
  "registry": "npm",
  "hash": "498dde3a6c6c4f887458ee9ed3f086a12ad1b466"
}