{
  "manifest": {
    "name": "open-editor",
    "version": "4.0.0",
    "description": "Open files in your editor at a specific line and column",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/open-editor.git"
    },
    "funding": "https://github.com/sponsors/sindresorhus",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://sindresorhus.com"
    },
    "type": "module",
    "exports": "./index.js",
    "engines": {
      "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
    },
    "scripts": {
      "test": "xo && ava && tsd"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "keywords": [
      "open",
      "editor",
      "launch",
      "files",
      "file",
      "line",
      "column",
      "position",
      "path",
      "filepath",
      "editors",
      "start",
      "app",
      "sublime",
      "atom",
      "vscode",
      "webstorm",
      "textmate",
      "vim",
      "neovim",
      "intellij",
      "emacs",
      "nano"
    ],
    "dependencies": {
      "env-editor": "^1.0.0",
      "execa": "^5.1.1",
      "line-column-path": "^3.0.0",
      "open": "^8.4.0"
    },
    "devDependencies": {
      "ava": "^3.15.0",
      "tsd": "^0.18.0",
      "xo": "^0.45.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-open-editor-4.0.0-881900b3c5540eaeef5b880abd05638ee82ca81f-integrity/node_modules/open-editor/package.json",
    "readmeFilename": "readme.md",
    "readme": "# open-editor\n\n> Open files in your editor at a specific line and column\n\nSupports any editor, but only the following editors will open at a specific line and column:\n\n- Sublime Text\n- Atom\n- Visual Studio Code\n- WebStorm*\n- TextMate\n- Vim\n- NeoVim\n- IntelliJ IDEA*\n\n*\\*Doesn't support column.*\n\n## Install\n\n```sh\nnpm install open-editor\n```\n\n## Usage\n\n```js\nimport openEditor from 'open-editor';\n\nopenEditor([\n\t{\n\t\tfile: 'readme.md',\n\t\tline: 10,\n\t\tcolumn: 2,\n\t}\n]);\n\nopenEditor([\n\t'unicorn.js:5:3',\n]);\n```\n\n## API\n\n### openEditor(files, options?)\n\nOpen the given files in the user's editor at specific line and column if supported by the editor. It does not wait for the editor to start or quit.\n\n#### files\n\nType: `Array<string | object>`\n\nItems should be in the format `foo.js:1:5` or `{file: 'foo.js', line: 1: column: 5}`.\n\n#### options\n\nType: `object`\n\n##### editor\n\nType: `string`\\\nDefault: [Auto-detected](https://github.com/sindresorhus/env-editor)\n\nThe name, command, or binary path of the editor.\n\n**Only use this option if you really have to.** Can be useful if you want to force a specific editor or implement your own auto-detection.\n\n### getEditorRunConfig(files, options?)\n\nSame as `openEditor()`, but returns an object with the binary name, arguments, and a flag indicating whether the editor runs in the terminal.\n\nExample: `{binary: 'subl', arguments: ['foo.js:1:5'], isTerminalEditor: false}`\n\nCan be useful if you want to handle opening the files yourself.\n\n```js\nimport {getEditorInfo} from 'open-editor';\n\ngetEditorInfo([\n\t{\n\t\tfile: 'foo.js',\n\t\tline: 1,\n\t\tcolumn: 5,\n\t}\n]);\n//=> {binary: 'subl', arguments: ['foo.js:1:5'], isTerminalEditor: false}\n```\n\n## Related\n\n- [open-editor-cli](https://github.com/sindresorhus/open-editor-cli) - CLI for this module\n- [open](https://github.com/sindresorhus/open) - Open stuff like URLs, files, executables\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/open-editor/-/open-editor-4.0.0.tgz#881900b3c5540eaeef5b880abd05638ee82ca81f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/open-editor/-/open-editor-4.0.0.tgz",
    "hash": "881900b3c5540eaeef5b880abd05638ee82ca81f",
    "integrity": "sha512-5mKZ98iFdkivozt5XTCOspoKbL3wtYu6oOoVxfWQ0qUX9NYsK8pdkHE7VUHXr+CwyC3nf6mV0S5FPsMS65innw==",
    "registry": "npm",
    "packageName": "open-editor",
    "cacheIntegrity": "sha512-5mKZ98iFdkivozt5XTCOspoKbL3wtYu6oOoVxfWQ0qUX9NYsK8pdkHE7VUHXr+CwyC3nf6mV0S5FPsMS65innw== sha1-iBkAs8VUDq7vW4gKvQVjjugsqB8="
  },
  "registry": "npm",
  "hash": "881900b3c5540eaeef5b880abd05638ee82ca81f"
}