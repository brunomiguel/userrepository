{
  "manifest": {
    "name": "peek-readable",
    "version": "5.0.0",
    "description": "Read and peek from a readable stream",
    "author": {
      "name": "Borewit",
      "url": "https://github.com/Borewit"
    },
    "funding": {
      "type": "github",
      "url": "https://github.com/sponsors/Borewit"
    },
    "scripts": {
      "clean": "del-cli lib/**/*.js lib/**/*.js.map lib/**/*.d.ts test/**/*.js test/**/*.js.map coverage .nyc_output",
      "build": "npm run clean && npm run compile",
      "compile-src": "tsc -p lib",
      "compile-test": "tsc -p test",
      "compile": "npm run compile-src && yarn run compile-test",
      "eslint": "eslint lib test --ext .ts --ignore-pattern *.d.ts",
      "lint-md": "remark -u preset-lint-recommended .",
      "lint": "npm run lint-md && npm run eslint",
      "test": "mocha",
      "test-coverage": "c8 npm run test",
      "start": "npm run compile && npm run lint && npm run cover-test"
    },
    "engines": {
      "node": ">=14.16"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/Borewit/peek-readable"
    },
    "license": "MIT",
    "type": "module",
    "exports": "./lib/index.js",
    "types": "lib/index.d.ts",
    "bugs": {
      "url": "https://github.com/Borewit/peek-readable/issues"
    },
    "files": [
      "lib/**/*.js",
      "lib/**/*.d.ts"
    ],
    "devDependencies": {
      "@types/chai": "^4.3.1",
      "@types/mocha": "^9.1.1",
      "@types/node": "^18.6.3",
      "@typescript-eslint/eslint-plugin": "^4.33.0",
      "@typescript-eslint/parser": "^4.33.0",
      "c8": "^7.12.0",
      "chai": "^4.3.6",
      "coveralls": "^3.1.1",
      "del-cli": "^5.0.0",
      "eslint": "^7.32.0",
      "eslint-config-prettier": "^8.5.0",
      "eslint-import-resolver-typescript": "^3.4.0",
      "eslint-plugin-import": "^2.26.0",
      "eslint-plugin-jsdoc": "^39.3.4",
      "eslint-plugin-node": "^11.1.0",
      "eslint-plugin-unicorn": "^40.1.0",
      "mocha": "^10.0.0",
      "remark-cli": "^11.0.0",
      "remark-preset-lint-recommended": "^6.1.2",
      "ts-node": "^10.9.1",
      "typescript": "^4.7.4"
    },
    "keywords": [
      "readable",
      "buffer",
      "stream",
      "read"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-peek-readable-5.0.0-7ead2aff25dc40458c60347ea76cfdfd63efdfec-integrity/node_modules/peek-readable/package.json",
    "readmeFilename": "README.md",
    "readme": "![Node.js CI](https://github.com/Borewit/peek-readable/workflows/Node.js%20CI/badge.svg)\n[![NPM version](https://badge.fury.io/js/peek-readable.svg)](https://npmjs.org/package/peek-readable)\n[![npm downloads](http://img.shields.io/npm/dm/peek-readable.svg)](https://npmcharts.com/compare/peek-readable?start=600&interval=30)\n[![Coverage Status](https://coveralls.io/repos/github/Borewit/peek-readable/badge.svg?branch=master)](https://coveralls.io/github/Borewit/peek-readable?branch=master)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/d4b511481b3a4634b6ca5c0724407eb9)](https://www.codacy.com/gh/Borewit/peek-readable/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Borewit/peek-readable&amp;utm_campaign=Badge_Grade)\n[![Total alerts](https://img.shields.io/lgtm/alerts/g/Borewit/peek-readable.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Borewit/peek-readable/alerts/)\n[![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/Borewit/peek-readable.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Borewit/peek-readable/context:javascript)\n[![Known Vulnerabilities](https://snyk.io/test/github/Borewit/peek-readable/badge.svg?targetFile=package.json)](https://snyk.io/test/github/Borewit/peek-readable?targetFile=package.json)\n\n# peek-readable\n\nA promise based asynchronous stream reader, which makes reading from a stream easy.\n\nAllows to read and peek from a [Readable Stream](https://nodejs.org/api/stream.html#stream_readable_streams) \n\nNote that [peek-readable](https://github.com/Borewit/peek-readable) was formally released as [then-read-stream](https://github.com/Borewit/peek-readable).\n\n## Usage\n\n### Installation\n\n```shell script\nnpm install --save peek-readable\n```\n\nThe `peek-readable` contains one class: `StreamReader`, which reads from a [stream.Readable](https://nodejs.org/api/stream.html#stream_class_stream_readable).\n\n### Compatibility\n\nModule: version 5 migrated from [CommonJS](https://en.wikipedia.org/wiki/CommonJS) to [pure ECMAScript Module (ESM)](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c).\nJavaScript is compliant with [ECMAScript 2019 (ES10)](https://en.wikipedia.org/wiki/ECMAScript#10th_Edition_%E2%80%93_ECMAScript_2019).\nRequires Node.js â‰¥ 14.16 engine.\n\n## Examples\n\nIn the following example we read the first 16 bytes from a stream and store them in our buffer.\nSource code of examples can be found [here](test/examples.ts).\n\n```js\nimport fs from 'node:fs';\nimport { StreamReader } from 'peek-readable';\n\n(async () => {\n  const readable = fs.createReadStream('JPEG_example_JPG_RIP_001.jpg');\n  const streamReader = new StreamReader(readable);\n  const uint8Array = new Uint8Array(16);\n  const bytesRead = await streamReader.read(uint8Array, 0, 16);;\n  // buffer contains 16 bytes, if the end-of-stream has not been reached\n})();\n```\n\nEnd-of-stream detection:\n```js\n(async () => {\n\n  const fileReadStream = fs.createReadStream('JPEG_example_JPG_RIP_001.jpg');\n  const streamReader = new StreamReader(fileReadStream);\n  const buffer = Buffer.alloc(16); // or use: new Uint8Array(16);\n\n  try {\n    await streamReader.read(buffer, 0, 16);\n    // buffer contains 16 bytes, if the end-of-stream has not been reached\n  } catch(error) {\n    if (error instanceof EndOfStreamError) {\n      console.log('End-of-stream reached');\n    }\n  }\n})();\n```\n\nWith peek you can read ahead:\n```js\nimport fs from 'node:fs';\nimport { StreamReader } from 'peek-readable';\n\nconst fileReadStream = fs.createReadStream('JPEG_example_JPG_RIP_001.jpg');\nconst streamReader = new StreamReader(fileReadStream);\nconst buffer = Buffer.alloc(20);\n\n(async () => {\n  let bytesRead = await streamReader.peek(buffer, 0, 3);\n  if (bytesRead === 3 && buffer[0] === 0xFF && buffer[1] === 0xD8 && buffer[2] === 0xFF) {\n    console.log('This is a JPEG file');\n  } else {\n    throw Error('Expected a JPEG file');\n  }\n\n  bytesRead = await streamReader.read(buffer, 0, 20); // Read JPEG header\n  if (bytesRead === 20) {\n    console.log('Got the JPEG header');\n  } else {\n    throw Error('Failed to read JPEG header');\n  }\n})();\n```\n",
    "licenseText": "The MIT License\n\nCopyright (c) 2010-2017 Borewit\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/peek-readable/-/peek-readable-5.0.0.tgz#7ead2aff25dc40458c60347ea76cfdfd63efdfec",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/peek-readable/-/peek-readable-5.0.0.tgz",
    "hash": "7ead2aff25dc40458c60347ea76cfdfd63efdfec",
    "integrity": "sha512-YtCKvLUOvwtMGmrniQPdO7MwPjgkFBtFIrmfSbYmYuq3tKDV/mcfAhBth1+C3ru7uXIZasc/pHnb+YDYNkkj4A==",
    "registry": "npm",
    "packageName": "peek-readable",
    "cacheIntegrity": "sha512-YtCKvLUOvwtMGmrniQPdO7MwPjgkFBtFIrmfSbYmYuq3tKDV/mcfAhBth1+C3ru7uXIZasc/pHnb+YDYNkkj4A== sha1-fq0q/yXcQEWMYDR+p2z9/WPv3+w="
  },
  "registry": "npm",
  "hash": "7ead2aff25dc40458c60347ea76cfdfd63efdfec"
}