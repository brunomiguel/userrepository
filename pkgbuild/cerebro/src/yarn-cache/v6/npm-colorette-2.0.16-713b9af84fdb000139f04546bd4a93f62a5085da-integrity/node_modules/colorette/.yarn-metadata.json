{
  "manifest": {
    "name": "colorette",
    "version": "2.0.16",
    "type": "module",
    "main": "index.cjs",
    "module": "index.js",
    "types": "index.d.ts",
    "description": "ðŸŒˆEasily set your terminal text color & styles.",
    "repository": {
      "type": "git",
      "url": "https://github.com/jorgebucaran/colorette.git"
    },
    "license": "MIT",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "require": "./index.cjs",
        "import": "./index.js"
      }
    },
    "files": [
      "*.*(c)[tj]s*"
    ],
    "author": {
      "name": "Jorge Bucaran"
    },
    "keywords": [
      "terminal",
      "styles",
      "color",
      "ansi"
    ],
    "scripts": {
      "test": "c8 twist tests/*.js",
      "build": "npx rollup --format cjs --input index.js --file index.cjs",
      "deploy": "npm test && git commit --all --message $tag && git tag --sign $tag --message $tag && git push && git push --tags",
      "release": "tag=$npm_package_version npm run deploy && npm publish --access public",
      "prepare": "npm run build"
    },
    "devDependencies": {
      "c8": "*",
      "twist": "*"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-colorette-2.0.16-713b9af84fdb000139f04546bd4a93f62a5085da-integrity/node_modules/colorette/package.json",
    "readmeFilename": "README.md",
    "readme": "# ðŸŒˆColorette\n\n> Easily set your terminal text color & styles.\n\n- No dependecies\n- Automatic color support detection\n- Up to [2x faster](#benchmarks) than alternatives\n- TypeScript support\n- [`NO_COLOR`](https://no-color.org) friendly\n- Node >= `10`\n\n> [**Upgrading from Colorette `1.x`?**](https://github.com/jorgebucaran/colorette/issues/70)\n\n## Quickstart\n\n```js\nimport { blue, bold, underline } from \"colorette\"\n\nconsole.log(\n  blue(\"I'm blue\"),\n  bold(blue(\"da ba dee\")),\n  underline(bold(blue(\"da ba daa\")))\n)\n```\n\nHere's an example using [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals).\n\n```js\nconsole.log(`\n  There's a ${underline(blue(\"house\"))},\n  With a ${bold(blue(\"window\"))},\n  And a ${blue(\"corvette\")}\n  And everything is blue\n`)\n```\n\nYou can also nest styles without breaking existing color sequences.\n\n```js\nconsole.log(bold(`I'm ${blue(`da ba ${underline(\"dee\")} da ba`)} daa`))\n```\n\nNeed to override terminal color detection? You can do that too.\n\n```js\nimport { createColors } from \"colorette\"\n\nconst { blue } = createColors({ useColor: false })\n\nconsole.log(blue(\"Blue? Nope, nah\"))\n```\n\n## Installation\n\n```console\nnpm install colorette\n```\n\n## API\n\n### \\<color\\>()\n\n> See all [supported colors](#supported-colors).\n\n```js\nimport { blue } from \"colorette\"\n\nblue(\"I'm blue\") //=> \\x1b[34mI'm blue\\x1b[39m\n```\n\n### createColors()\n\nOverride terminal color detection via `createColors({ useColor })`.\n\n```js\nimport { createColors } from \"colorette\"\n\nconst { blue } = createColors({ useColor: false })\n```\n\n### isColorSupported\n\n`true` if your terminal supports color, `false` otherwise. Used internally, but exposed for convenience.\n\n## Environment\n\nYou can override color detection from the CLI by setting the `--no-color` or `--color` flags.\n\n```console\n$ ./example.js --no-color | ./consumer.js\n```\n\nOr if you can't use CLI flags, by setting the `NO_COLOR=` or `FORCE_COLOR=` environment variables.\n\n```console\n$ NO_COLOR= ./example.js | ./consumer.js\n```\n\n## Supported colors\n\n| Colors  | Background Colors | Bright Colors | Bright Background Colors | Modifiers         |\n| ------- | ----------------- | ------------- | ------------------------ | ----------------- |\n| black   | bgBlack           | blackBright   | bgBlackBright            | dim               |\n| red     | bgRed             | redBright     | bgRedBright              | **bold**          |\n| green   | bgGreen           | greenBright   | bgGreenBright            | hidden            |\n| yellow  | bgYellow          | yellowBright  | bgYellowBright           | _italic_          |\n| blue    | bgBlue            | blueBright    | bgBlueBright             | <u>underline</u>  |\n| magenta | bgMagenta         | magentaBright | bgMagentaBright          | ~~strikethrough~~ |\n| cyan    | bgCyan            | cyanBright    | bgCyanBright             | reset             |\n| white   | bgWhite           | whiteBright   | bgWhiteBright            |                   |\n| gray    |                   |               |                          |                   |\n\n## [Benchmarks](https://github.com/jorgebucaran/colorette/actions/workflows/bench.yml)\n\n```console\nnpm --prefix bench start\n```\n\n```diff\n  chalk         1,786,703 ops/sec\n  kleur         1,618,960 ops/sec\n  colors          646,823 ops/sec\n  ansi-colors     786,149 ops/sec\n  picocolors    2,871,758 ops/sec\n+ colorette     3,002,751 ops/sec\n```\n\n## Acknowledgements\n\nColorette started out in 2015 by [@jorgebucaran](https://github.com/jorgebucaran) as a lightweight alternative to [Chalk](https://github.com/chalk/chalk) and was introduced originally as [Clor](https://github.com/jorgebucaran/colorette/commit/b01b5b9961ceb7df878583a3002e836fae9e37ce). Our terminal color detection logic borrows heavily from [@sindresorhus](https://github.com/sindresorhus) and [@Qix-](https://github.com/Qix-) work on Chalk. The idea of slicing strings to clear bleeding sequences was adapted from a similar technique used by [@alexeyraspopov](https://github.com/alexeyraspopov) in [picocolors](https://github.com/alexeyraspopov/picocolors). Thank you to all our contributors! <3\n\n## License\n\n[MIT](LICENSE.md)\n",
    "licenseText": "Copyright Â© Jorge Bucaran <<https://jorgebucaran.com>>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/colorette/-/colorette-2.0.16.tgz#713b9af84fdb000139f04546bd4a93f62a5085da",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/colorette/-/colorette-2.0.16.tgz",
    "hash": "713b9af84fdb000139f04546bd4a93f62a5085da",
    "integrity": "sha512-hUewv7oMjCp+wkBv5Rm0v87eJhq4woh5rSR+42YSQJKecCqgIqNkZ6lAlQms/BwHPJA5NKMRlpxPRv0n8HQW6g==",
    "registry": "npm",
    "packageName": "colorette",
    "cacheIntegrity": "sha512-hUewv7oMjCp+wkBv5Rm0v87eJhq4woh5rSR+42YSQJKecCqgIqNkZ6lAlQms/BwHPJA5NKMRlpxPRv0n8HQW6g== sha1-cTua+E/bAAE58EVGvUqT9ipQhdo="
  },
  "registry": "npm",
  "hash": "713b9af84fdb000139f04546bd4a93f62a5085da"
}