{
  "manifest": {
    "name": "env-editor",
    "version": "1.1.0",
    "description": "Get metadata on the default editor or a specific editor",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/env-editor.git"
    },
    "funding": "https://github.com/sponsors/sindresorhus",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://sindresorhus.com"
    },
    "type": "module",
    "exports": "./index.js",
    "engines": {
      "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
    },
    "scripts": {
      "test": "xo && ava && tsd"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "keywords": [
      "env",
      "editor",
      "environment",
      "variable",
      "default",
      "editors",
      "main",
      "user",
      "meta",
      "metadata",
      "info",
      "name",
      "binary",
      "path",
      "sublime",
      "atom",
      "vscode",
      "webstorm",
      "textmate",
      "vim",
      "neovim",
      "intellij",
      "nano",
      "emacs"
    ],
    "devDependencies": {
      "ava": "^3.15.0",
      "tsd": "^0.17.0",
      "xo": "^0.44.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-env-editor-1.1.0-bd510b6cb1528a64b17273aaeba272c050e786e9-integrity/node_modules/env-editor/package.json",
    "readmeFilename": "readme.md",
    "readme": "# env-editor\n\n> Get metadata on the default editor or a specific editor\n\nThis module is used by [`open-editor`](https://github.com/sindresorhus/open-editor).\n\n## Supported editors\n\n- Sublime Text\n- Atom\n- Visual Studio Code\n- WebStorm\n- TextMate\n- Vim\n- NeoVim\n- IntelliJ\n- GNU nano\n- GNU Emacs\n- Android Studio\n- Xcode\n\n## Install\n\n```\n$ npm install env-editor\n```\n\n## Usage\n\n```js\nimport {defaultEditor, getEditor, allEditors} from 'env-editor';\n\ndefaultEditor();\n/*\n{\n\tid: 'atom',\n\tname: 'Atom',\n\tbinary: 'atom',\n\tisTerminalEditor: false,\n\tpaths: [\n\t\t'/Applications/Atom.app/Contents/Resources/app/atom.sh'\n\t],\n\tkeywords: []\n}\n*/\n\ngetEditor('sublime');\n/*\n{\n\tid: 'sublime',\n\tname: 'Sublime Text',\n\tbinary: 'subl',\n\tisTerminalEditor: false,\n\tpaths: [\n\t\t'/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl',\n\t\t'/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl'\n\t],\n\tkeywords: []\n}\n*/\n\nallEditors();\n/*\n[\n\t{\n\t\tid: 'atom',\n\t\t…\n\t},\n\t{\n\t\tid: 'sublime,\n\t\t…\n\t},\n\t…\n]\n*/\n```\n\n## API\n\n### defaultEditor()\n\nReturns metadata on the default editor.\n\nThe user is expected to have the `$EDITOR` environment variable set, and if not, a user-friendly error is thrown.\n\n### getEditor(editor)\n\nReturns metadata on the specified editor.\n\n#### editor\n\nType: `string`\n\nThis can be pretty flexible. It matches against all the data it has.\n\nFor example, to get Sublime Text, you could write either of the following: `sublime`, `Sublime Text`, `subl`.\n\n### allEditors()\n\nReturns an array with metadata on all the editors.\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/env-editor/-/env-editor-1.1.0.tgz#bd510b6cb1528a64b17273aaeba272c050e786e9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/env-editor/-/env-editor-1.1.0.tgz",
    "hash": "bd510b6cb1528a64b17273aaeba272c050e786e9",
    "integrity": "sha512-7AXskzN6T7Q9TFcKAGJprUbpQa4i1VsAetO9rdBqbGMGlragTziBgWt4pVYJMBWHQlLoX0buy6WFikzPH4Qjpw==",
    "registry": "npm",
    "packageName": "env-editor",
    "cacheIntegrity": "sha512-7AXskzN6T7Q9TFcKAGJprUbpQa4i1VsAetO9rdBqbGMGlragTziBgWt4pVYJMBWHQlLoX0buy6WFikzPH4Qjpw== sha1-vVELbLFSimSxcnOq66JywFDnhuk="
  },
  "registry": "npm",
  "hash": "bd510b6cb1528a64b17273aaeba272c050e786e9"
}