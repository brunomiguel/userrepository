{
  "manifest": {
    "name": "any-base",
    "version": "1.1.0",
    "description": "Converter from any base to other any base",
    "main": "index.js",
    "scripts": {
      "start": "./node_modules/.bin/watchify . -s AnyBase -o dist/any-base.js -v -d",
      "build": "./node_modules/.bin/browserify . -s AnyBase | ./node_modules/.bin/uglifyjs -cm > dist/any-base.min.js",
      "test": "node tests/test.js"
    },
    "keywords": [
      "number",
      "convert",
      "base",
      "alphabet",
      "short number",
      "long numbers",
      "dec",
      "hex",
      "bin",
      "oct",
      "any"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/HarasimowiczKamil/any-base.git"
    },
    "author": {
      "name": "Kamil Harasimowicz",
      "email": "mifczu@gmail.com"
    },
    "license": "MIT",
    "dependencies": {},
    "devDependencies": {
      "browserify": "^13.1.1",
      "punycode": "^2.1.0",
      "uglify-js": "^2.7.4",
      "watchify": "^3.7.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-any-base-1.1.0-ae101a62bc08a597b4c9ab5b7089d456630549fe-integrity/node_modules/any-base/package.json",
    "readmeFilename": "README.md",
    "readme": "# README #\n\nThe library allows you to convert any large numbers in any number base to another number base. The base is determined by specifying the alphabet. So is full freedom\n\n[![NPM](https://nodei.co/npm/any-base.png?downloads=true&stars=true)](https://nodei.co/npm/any-base/)\n\n## Installation ##\n\n```\nnpm install any-base --save\n```\n\n## API ##\n\n### AnyBase() ###\n\n```\nconverterFunction = anyBase(sourceAlphabet, destinationAlphabet);\n```\n\n#### Parameters ####\n\n* {String} __sourceAlphabet__      digits from smallest to the largest\n* {String} __destinationAlphabet__ digits from smallest to the largest\n\n#### Return Values ####\n\nReturns __function__ that converts the number of source base to the destination\n\n### Convert() ###\n\n```\nconverterFunction(number)\n```\n\n#### Parameters ####\n\n* {String} __number__ number of source base\n\n#### Return Values ####\n\nReturns number of destonation base\n\n## Example ##\n\n```js\nvar anyBase = require('any-base'),\ndec2hex = anyBase(anyBase.DEC, anyBase.HEX),\nshortId = anyBase(anyBase.DEC, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-+!@#$^'),\nlongId  = anyBase('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-+!@#$^', anyBase.DEC);\n\ndec2hex('123456'); // return: '1E240'\nshortId('1234567890'); // return: 'PtmIa'\nlongId('PtmIa'); // return: '1234567890'\n```\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Kamil Harasimowicz and contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/any-base/-/any-base-1.1.0.tgz#ae101a62bc08a597b4c9ab5b7089d456630549fe",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/any-base/-/any-base-1.1.0.tgz",
    "hash": "ae101a62bc08a597b4c9ab5b7089d456630549fe",
    "integrity": "sha512-uMgjozySS8adZZYePpaWs8cxB9/kdzmpX6SgJZ+wbz1K5eYk5QMYDVJaZKhxyIHUdnnJkfR7SVgStgH7LkGUyg==",
    "registry": "npm",
    "packageName": "any-base",
    "cacheIntegrity": "sha512-uMgjozySS8adZZYePpaWs8cxB9/kdzmpX6SgJZ+wbz1K5eYk5QMYDVJaZKhxyIHUdnnJkfR7SVgStgH7LkGUyg== sha1-rhAaYrwIpZe0yatbcInUVmMFSf4="
  },
  "registry": "npm",
  "hash": "ae101a62bc08a597b4c9ab5b7089d456630549fe"
}