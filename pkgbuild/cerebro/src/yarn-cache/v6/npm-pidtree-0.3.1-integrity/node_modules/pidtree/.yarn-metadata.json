{
  "manifest": {
    "name": "pidtree",
    "version": "0.3.1",
    "description": "Cross platform children list of a PID",
    "license": "MIT",
    "homepage": "http://github.com/simonepri/pidtree#readme",
    "repository": {
      "type": "git",
      "url": "https://github.com/simonepri/pidtree.git"
    },
    "bugs": {
      "url": "https://github.com/simonepri/pidtree/issues",
      "email": "simonepri@outlook.com"
    },
    "author": {
      "name": "Simone Primarosa",
      "email": "simonepri@outlook.com",
      "url": "https://github.com/simonepri"
    },
    "contributors": [
      {
        "name": "Simone Primarosa",
        "email": "simonepri@outlook.com",
        "url": "https://github.com/simonepri"
      }
    ],
    "keywords": [
      "ps-tree",
      "ps",
      "tree",
      "ppid",
      "pid",
      "pidtree",
      "pgrep",
      "list",
      "all",
      "system",
      "process",
      "processes"
    ],
    "main": "index.js",
    "bin": {
      "pidtree": "bin/pidtree.js"
    },
    "files": [
      "bin",
      "lib",
      "index.js"
    ],
    "engines": {
      "node": ">=0.10"
    },
    "scripts": {
      "start": "node ./bin/pidtree.js",
      "update": "npm-check -u",
      "release": "np",
      "lint": "xo",
      "test": "nyc ava -m \"!*benchmark*\"",
      "bench": "ava -m \"*benchmark*\"",
      "coverage": "codecov"
    },
    "devDependencies": {
      "ava": "~0.25.0",
      "codecov": "^3.6.5",
      "mockery": "^2.1.0",
      "np": "^2.20.1",
      "npm-check": "^5.9.2",
      "nyc": "^11.6.0",
      "pify": "^3.0.0",
      "string-to-stream": "^1.1.0",
      "through": "^2.3.8",
      "time-span": "^2.0.0",
      "tree-kill": "^1.1.0",
      "xo": "~0.20.3"
    },
    "ava": {
      "verbose": true
    },
    "nyc": {
      "reporter": [
        "lcovonly",
        "text"
      ]
    },
    "xo": {
      "prettier": true,
      "space": true,
      "rules": {
        "prefer-destructuring": 0,
        "prefer-arrow-callback": 0,
        "no-var": 0,
        "object-shorthand": 0,
        "unicorn/no-for-loop": 0,
        "unicorn/prefer-string-slice": 0,
        "unicorn/string-content": 0
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-pidtree-0.3.1-integrity/node_modules/pidtree/package.json",
    "readmeFilename": "readme.md",
    "readme": "<h1 align=\"center\">\n  <b>pidtree</b>\n</h1>\n<p align=\"center\">\n  <!-- CI - TravisCI -->\n  <a href=\"https://travis-ci.org/simonepri/pidtree\">\n    <img src=\"https://img.shields.io/travis/simonepri/pidtree/master.svg?label=MacOS%20%26%20Linux\" alt=\"Mac/Linux Build Status\" />\n  </a>\n  <!-- CI - AppVeyor -->\n  <a href=\"https://ci.appveyor.com/project/simonepri/pidtree\">\n    <img src=\"https://img.shields.io/appveyor/ci/simonepri/pidtree/master.svg?label=Windows\" alt=\"Windows Build status\" />\n  </a>\n  <!-- Coverage - Codecov -->\n  <a href=\"https://codecov.io/gh/simonepri/pidtree\">\n    <img src=\"https://img.shields.io/codecov/c/github/simonepri/pidtree/master.svg\" alt=\"Codecov Coverage report\" />\n  </a>\n  <!-- DM - Snyk -->\n  <a href=\"https://snyk.io/test/github/simonepri/pidtree?targetFile=package.json\">\n    <img src=\"https://snyk.io/test/github/simonepri/pidtree/badge.svg?targetFile=package.json\" alt=\"Known Vulnerabilities\" />\n  </a>\n  <!-- DM - David -->\n  <a href=\"https://david-dm.org/simonepri/pidtree\">\n    <img src=\"https://david-dm.org/simonepri/pidtree/status.svg\" alt=\"Dependency Status\" />\n  </a>\n\n  <br/>\n\n  <!-- Code Style - XO-Prettier -->\n  <a href=\"https://github.com/xojs/xo\">\n    <img src=\"https://img.shields.io/badge/code_style-XO+Prettier-5ed9c7.svg\" alt=\"XO Code Style used\" />\n  </a>\n  <!-- Test Runner - AVA -->\n  <a href=\"https://github.com/avajs/ava\">\n    <img src=\"https://img.shields.io/badge/test_runner-AVA-fb3170.svg\" alt=\"AVA Test Runner used\" />\n  </a>\n  <!-- Test Coverage - Istanbul -->\n  <a href=\"https://github.com/istanbuljs/nyc\">\n    <img src=\"https://img.shields.io/badge/test_coverage-NYC-fec606.svg\" alt=\"Istanbul Test Coverage used\" />\n  </a>\n  <!-- Init - ni -->\n  <a href=\"https://github.com/simonepri/ni\">\n    <img src=\"https://img.shields.io/badge/initialized_with-ni-e74c3c.svg\" alt=\"NI Scaffolding System used\" />\n  </a>\n  <!-- Release - np -->\n  <a href=\"https://github.com/sindresorhus/np\">\n    <img src=\"https://img.shields.io/badge/released_with-np-6c8784.svg\" alt=\"NP Release System used\" />\n  </a>\n\n  <br/>\n\n  <!-- Version - npm -->\n  <a href=\"https://www.npmjs.com/package/pidtree\">\n    <img src=\"https://img.shields.io/npm/v/pidtree.svg\" alt=\"Latest version on npm\" />\n  </a>\n  <!-- License - MIT -->\n  <a href=\"https://github.com/simonepri/pidtree/tree/master/license\">\n    <img src=\"https://img.shields.io/github/license/simonepri/pidtree.svg\" alt=\"Project license\" />\n  </a>\n</p>\n<p align=\"center\">\n  üö∏ Cross platform children list of a PID.\n\n  <br/>\n\n  <sub>\n    Coded with ‚ù§Ô∏è by <a href=\"#authors\">Simone Primarosa</a>.\n  </sub>\n</p>\n\n## Synopsis\n\nThis package is really similar to [ps-tree][gh:ps-tree] but is faster, safer and\nprovides sub-children results.  \nFurthermore ps-tree is [unmaintained][gh:ps-tree-um].\n\nUuh, and a fancy [CLI](#cli) is also available!\n\n## Usage\n\n```js\nvar pidtree = require('pidtree')\n\n// Get childs of current process\npidtree(process.pid, function (err, pids) {\n  console.log(pids)\n  // => []\n})\n\n// Include the given pid in the result array\npidtree(process.pid, {root: true}, function (err, pids) {\n  console.log(pids)\n  // => [727]\n})\n\n// Get all the processes of the System (-1 is a special value of this package)\npidtree(-1, function (err, pids) {\n  console.log(pids)\n  // => [530, 42, ..., 41241]\n})\n\n// Include PPID in the results\npidtree(1, {advanced: true}, function (err, pids) {\n  console.log(pids)\n  // => [{ppid: 1, pid: 530}, {ppid: 1, pid: 42}, ..., {ppid: 1, pid: 41241}]\n})\n\n// If no callback is given it returns a promise instead\nconst pids = await pidtree(1)\nconsole.log(pids)\n// => [141, 42, ..., 15242]\n```\n\n## Compatibility\n\n| Linux | FreeBSD | NetBSD | SunOS | macOS | Win | AIX |\n| --- | --- | --- | --- | --- | --- | --- |\n| ‚úÖ | ‚ùì | ‚ùì | ‚ùì | ‚úÖ | ‚úÖ | ‚ùì |\n\n‚úÖ = Working\n‚ùì = Not tested but should work\n\nPlease if your platform is not supported [file an issue][new issue].\n\n## CLI\n\n<img src=\"https://github.com/simonepri/pidtree/raw/master/media/cli.gif\" alt=\"pidtree cli\" width=\"300\" align=\"right\"/>\nShow a tree of the processes inside your system inside your terminal.\n\n```bash\nnpx pidtree $PPID\n```\nJust replace `$PPID` with one of the pids inside your system.\n\nOr don't pass anything if you want all the pids inside your system.\n\n```bash\nnpx pidtree\n```\n\nTo display the output as a list, similar to the one produced from `pgrep -P $PID`,\npass the `--list` flag.\n\n```bash\nnpx pidtree --list\n```\n\n## API\n\n<a name=\"pidtree\"></a>\n\n## pidtree(pid, [options], [callback]) ‚áí <code>[Promise.&lt;Array.&lt;Object&gt;&gt;]</code>\nGet the list of children pids of the given pid.\n\n**Kind**: global function  \n**Returns**: <code>Promise.&lt;Array.&lt;Object&gt;&gt;</code> - Only when the callback is not provided.  \n**Access**: public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| pid | <code>Number</code> \\| <code>String</code> |  | A pid. If -1 will return all the pids. |\n| [options] | <code>Object</code> |  | Optional options object. |\n| [options.root] | <code>Boolean</code> | <code>false</code> | Include the provided pid in the list. Ignored if -1 is passed as pid. |\n| [callback] | <code>function</code> |  | Called when the list is ready. If not provided a promise is returned instead. |\n\n## Related\n\n- [pidusage][gh:pidusage] -\nCross-platform process cpu % and memory usage of a PID\n\n## Authors\n\n- **Simone Primarosa** - [simonepri][github:simonepri]\n\nSee also the list of [contributors][contributors] who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [license][license] file for details.\n\n<!-- Links -->\n[new issue]: https://github.com/simonepri/pidtree/issues/new\n[license]: https://github.com/simonepri/pidtree/tree/master/license\n[contributors]: https://github.com/simonepri/pidtree/contributors\n\n[github:simonepri]: https://github.com/simonepri\n\n[gh:pidusage]: https://github.com/soyuka/pidusage\n[gh:ps-tree]: https://github.com/indexzero/ps-tree\n[gh:ps-tree-um]: https://github.com/indexzero/ps-tree/issues/30\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Simone Primarosa\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/pidtree/-/pidtree-0.3.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/pidtree/-/pidtree-0.3.1.tgz",
    "hash": "",
    "integrity": "sha512-qQbW94hLHEqCg7nhby4yRC7G2+jYHY4Rguc2bjw7Uug4GIJuu1tvf2uHaZv5Q8zdt+WKJ6qK1FOI6amaWUo5FA==",
    "registry": "npm",
    "packageName": "pidtree",
    "cacheIntegrity": "sha512-qQbW94hLHEqCg7nhby4yRC7G2+jYHY4Rguc2bjw7Uug4GIJuu1tvf2uHaZv5Q8zdt+WKJ6qK1FOI6amaWUo5FA== sha1-7wmsLMBTPfHzJQzPLE02aw0SEUo="
  },
  "registry": "npm",
  "hash": "a906d6f7884b1c4a8283b9e16f2e32442ec6dbe8d81d8e1182e7366e3c3b52e83818826ebb5b6f7f6b87699bf943ccddb7e58a27aa8ad45388e9a99a594a3914"
}