"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _makerBase = _interopRequireDefault(require("@electron-forge/maker-base"));
var _path = _interopRequireDefault(require("path"));
var _util = require("util");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
class MakerZIP extends _makerBase.default {
    isSupportedOnCurrentPlatform() {
        return true;
    }
    async make({ dir , makeDir , appName , packageJSON , targetArch , targetPlatform  }) {
        // eslint-disable-next-line global-require
        const { zip  } = require('cross-zip');
        const zipDir = [
            'darwin',
            'mas'
        ].includes(targetPlatform) ? _path.default.resolve(dir, `${appName}.app`) : dir;
        const zipPath = _path.default.resolve(makeDir, 'zip', targetPlatform, targetArch, `${_path.default.basename(dir)}-${packageJSON.version}.zip`);
        await this.ensureFile(zipPath);
        await (0, _util).promisify(zip)(zipDir, zipPath);
        return [
            zipPath
        ];
    }
    constructor(...args){
        super(...args);
        this.name = 'zip';
        this.defaultPlatforms = [
            'darwin',
            'mas',
            'win32',
            'linux'
        ];
    }
}
exports.default = MakerZIP;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9NYWtlclpJUC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTWFrZXJCYXNlLCB7IEVtcHR5Q29uZmlnLCBNYWtlck9wdGlvbnMgfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2UvbWFrZXItYmFzZSc7XG5pbXBvcnQgeyBGb3JnZVBsYXRmb3JtIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL3NoYXJlZC10eXBlcyc7XG5cbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgcHJvbWlzaWZ5IH0gZnJvbSAndXRpbCc7XG5cbmV4cG9ydCB0eXBlIE1ha2VyWklQQ29uZmlnID0gRW1wdHlDb25maWc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1ha2VyWklQIGV4dGVuZHMgTWFrZXJCYXNlPE1ha2VyWklQQ29uZmlnPiB7XG4gIG5hbWUgPSAnemlwJztcblxuICBkZWZhdWx0UGxhdGZvcm1zOiBGb3JnZVBsYXRmb3JtW10gPSBbJ2RhcndpbicsICdtYXMnLCAnd2luMzInLCAnbGludXgnXTtcblxuICBpc1N1cHBvcnRlZE9uQ3VycmVudFBsYXRmb3JtKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgYXN5bmMgbWFrZSh7IGRpciwgbWFrZURpciwgYXBwTmFtZSwgcGFja2FnZUpTT04sIHRhcmdldEFyY2gsIHRhcmdldFBsYXRmb3JtIH06IE1ha2VyT3B0aW9ucyk6IFByb21pc2U8c3RyaW5nW10+IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZ2xvYmFsLXJlcXVpcmVcbiAgICBjb25zdCB7IHppcCB9ID0gcmVxdWlyZSgnY3Jvc3MtemlwJyk7XG5cbiAgICBjb25zdCB6aXBEaXIgPSBbJ2RhcndpbicsICdtYXMnXS5pbmNsdWRlcyh0YXJnZXRQbGF0Zm9ybSkgPyBwYXRoLnJlc29sdmUoZGlyLCBgJHthcHBOYW1lfS5hcHBgKSA6IGRpcjtcblxuICAgIGNvbnN0IHppcFBhdGggPSBwYXRoLnJlc29sdmUobWFrZURpciwgJ3ppcCcsIHRhcmdldFBsYXRmb3JtLCB0YXJnZXRBcmNoLCBgJHtwYXRoLmJhc2VuYW1lKGRpcil9LSR7cGFja2FnZUpTT04udmVyc2lvbn0uemlwYCk7XG5cbiAgICBhd2FpdCB0aGlzLmVuc3VyZUZpbGUoemlwUGF0aCk7XG4gICAgYXdhaXQgcHJvbWlzaWZ5KHppcCkoemlwRGlyLCB6aXBQYXRoKTtcblxuICAgIHJldHVybiBbemlwUGF0aF07XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJNYWtlclpJUCIsIk1ha2VyQmFzZSIsImlzU3VwcG9ydGVkT25DdXJyZW50UGxhdGZvcm0iLCJtYWtlIiwiZGlyIiwibWFrZURpciIsImFwcE5hbWUiLCJwYWNrYWdlSlNPTiIsInRhcmdldEFyY2giLCJ0YXJnZXRQbGF0Zm9ybSIsInppcCIsInJlcXVpcmUiLCJ6aXBEaXIiLCJpbmNsdWRlcyIsInBhdGgiLCJyZXNvbHZlIiwiemlwUGF0aCIsImJhc2VuYW1lIiwidmVyc2lvbiIsImVuc3VyZUZpbGUiLCJwcm9taXNpZnkiLCJuYW1lIiwiZGVmYXVsdFBsYXRmb3JtcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQsR0FBNEIsQ0FBNUIsVUFBNEI7QUFHaEUsR0FBTSxDQUFOLEtBQU07QUFDRyxHQUFNLENBQU4sS0FBTTs7Ozs7O01BSVhBLFFBQVEsU0FBU0MsVUFBUztJQUs3Q0MsNEJBQTRCLEdBQVksQ0FBQztRQUN2QyxNQUFNLENBQUMsSUFBSTtJQUNiLENBQUM7VUFFS0MsSUFBSSxDQUFDLENBQUMsQ0FBQ0MsR0FBRyxHQUFFQyxPQUFPLEdBQUVDLE9BQU8sR0FBRUMsV0FBVyxHQUFFQyxVQUFVLEdBQUVDLGNBQWMsRUFBZSxDQUFDLEVBQXFCLENBQUM7UUFDL0csRUFBMEMsQUFBMUMsd0NBQTBDO1FBQzFDLEtBQUssQ0FBQyxDQUFDLENBQUNDLEdBQUcsRUFBQyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxDQUFXO1FBRW5DLEtBQUssQ0FBQ0MsTUFBTSxHQUFHLENBQUM7WUFBQSxDQUFRO1lBQUUsQ0FBSztRQUFBLENBQUMsQ0FBQ0MsUUFBUSxDQUFDSixjQUFjLElBQUlLLEtBQUksU0FBQ0MsT0FBTyxDQUFDWCxHQUFHLEtBQUtFLE9BQU8sQ0FBQyxJQUFJLEtBQUtGLEdBQUc7UUFFckcsS0FBSyxDQUFDWSxPQUFPLEdBQUdGLEtBQUksU0FBQ0MsT0FBTyxDQUFDVixPQUFPLEVBQUUsQ0FBSyxNQUFFSSxjQUFjLEVBQUVELFVBQVUsS0FBS00sS0FBSSxTQUFDRyxRQUFRLENBQUNiLEdBQUcsRUFBRSxDQUFDLEVBQUVHLFdBQVcsQ0FBQ1csT0FBTyxDQUFDLElBQUk7UUFFMUgsS0FBSyxDQUFDLElBQUksQ0FBQ0MsVUFBVSxDQUFDSCxPQUFPO1FBQzdCLEtBQUssS0FBQ0ksS0FBUyxZQUFDVixHQUFHLEVBQUVFLE1BQU0sRUFBRUksT0FBTztRQUVwQyxNQUFNLENBQUMsQ0FBQ0E7WUFBQUEsT0FBTztRQUFBLENBQUM7SUFDbEIsQ0FBQzs7O1FBckJZLElBc0JkLENBckJDSyxJQUFJLEdBQUcsQ0FBSztRQURDLElBc0JkLENBbkJDQyxnQkFBZ0IsR0FBb0IsQ0FBQztZQUFBLENBQVE7WUFBRSxDQUFLO1lBQUUsQ0FBTztZQUFFLENBQU87UUFBQSxDQUFDOzs7a0JBSHBEdEIsUUFBUSJ9