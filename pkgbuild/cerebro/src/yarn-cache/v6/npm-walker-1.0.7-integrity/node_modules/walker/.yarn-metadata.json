{
  "manifest": {
    "name": "walker",
    "description": "A simple directory tree walker.",
    "version": "1.0.7",
    "homepage": "https://github.com/daaku/nodejs-walker",
    "author": {
      "name": "Naitik Shah",
      "email": "n@daaku.org"
    },
    "keywords": [
      "utils",
      "fs",
      "filesystem"
    ],
    "main": "lib/walker",
    "repository": {
      "type": "git",
      "url": "https://github.com/daaku/nodejs-walker"
    },
    "scripts": {
      "test": "NODE_PATH=./lib mocha --ui exports"
    },
    "dependencies": {
      "makeerror": "1.0.x"
    },
    "devDependencies": {
      "mocha": "0.12.x"
    },
    "license": "Apache-2.0",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-walker-1.0.7-integrity/node_modules/walker/package.json",
    "readmeFilename": "readme.md",
    "readme": "walker [![Build Status](https://secure.travis-ci.org/daaku/nodejs-walker.png)](http://travis-ci.org/daaku/nodejs-walker)\n======\n\nA nodejs directory walker. Broadcasts events for various file types as well as\na generic \"entry\" event for all types and provides the ability to prune\ndirectory trees. This shows the entire API; everything is optional:\n\n```javascript\nWalker('/etc/')\n  .filterDir(function(dir, stat) {\n    if (dir === '/etc/pam.d') {\n      console.warn('Skipping /etc/pam.d and children')\n      return false\n    }\n    return true\n  })\n  .on('entry', function(entry, stat) {\n    console.log('Got entry: ' + entry)\n  })\n  .on('dir', function(dir, stat) {\n    console.log('Got directory: ' + dir)\n  })\n  .on('file', function(file, stat) {\n    console.log('Got file: ' + file)\n  })\n  .on('symlink', function(symlink, stat) {\n    console.log('Got symlink: ' + symlink)\n  })\n  .on('blockDevice', function(blockDevice, stat) {\n    console.log('Got blockDevice: ' + blockDevice)\n  })\n  .on('fifo', function(fifo, stat) {\n    console.log('Got fifo: ' + fifo)\n  })\n  .on('socket', function(socket, stat) {\n    console.log('Got socket: ' + socket)\n  })\n  .on('characterDevice', function(characterDevice, stat) {\n    console.log('Got characterDevice: ' + characterDevice)\n  })\n  .on('error', function(er, entry, stat) {\n    console.log('Got error ' + er + ' on entry ' + entry)\n  })\n  .on('end', function() {\n    console.log('All files traversed.')\n  })\n```\n\nYou specify a root directory to walk and optionally specify a function to prune\nsub-directory trees via the `filterDir` function. The Walker exposes a number\nof events, broadcasting various file type events a generic error event and\nfinally the event to signal the end of the process.\n",
    "licenseText": "Copyright 2013 Naitik Shah\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",
    "hash": "",
    "integrity": "sha1-L3+bj9ENZ3JisYqITijRlhjgKPs=",
    "registry": "npm",
    "packageName": "walker",
    "cacheIntegrity": "sha512-cF4je9Fgt6sj1PKfuFt9jpQPeHosM+Ryma/hfY9U7uXGKM7pJCsF0v2r55o+Il54+i77SyYWetB4tD1dEygRkw== sha1-L3+bj9ENZ3JisYqITijRlhjgKPs="
  },
  "registry": "npm",
  "hash": "705e237bd160b7ab23d4f29fb85b7d8e940f787a2c33e47299afe17d8f54eee5c628cee9242b05d2fdabe79a3e225e78fa2efb4b26167ad078b43d5d13281193"
}