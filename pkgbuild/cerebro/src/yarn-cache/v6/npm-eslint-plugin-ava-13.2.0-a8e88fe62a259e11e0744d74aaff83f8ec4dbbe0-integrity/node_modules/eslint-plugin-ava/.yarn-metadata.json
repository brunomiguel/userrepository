{
  "manifest": {
    "name": "eslint-plugin-ava",
    "version": "13.2.0",
    "description": "ESLint rules for AVA",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/avajs/eslint-plugin-ava.git"
    },
    "engines": {
      "node": ">=12.22 <13 || >=14.17 <15 || >=16.4"
    },
    "scripts": {
      "test": "xo && c8 ava",
      "integration": "node ./test/integration/test.js"
    },
    "files": [
      "index.js",
      "create-ava-rule.js",
      "util.js",
      "rules"
    ],
    "keywords": [
      "eslint",
      "eslintplugin",
      "eslint-plugin",
      "ava",
      "test",
      "runner",
      "assert",
      "asserts",
      "assertion",
      "mocha"
    ],
    "dependencies": {
      "enhance-visitors": "^1.0.0",
      "eslint-utils": "^3.0.0",
      "espree": "^9.0.0",
      "espurify": "^2.1.1",
      "import-modules": "^2.1.0",
      "micro-spelling-correcter": "^1.1.1",
      "pkg-dir": "^5.0.0",
      "resolve-from": "^5.0.0"
    },
    "devDependencies": {
      "@typescript-eslint/parser": "^5.9.0",
      "ava": "^3.15.0",
      "c8": "^7.7.3",
      "chalk": "^4.1.1",
      "del": "^6.0.0",
      "eslint": "^8.0.1",
      "eslint-ava-rule-tester": "^4.0.0",
      "eslint-plugin-eslint-plugin": "^4.0.1",
      "execa": "^5.1.1",
      "listr": "^0.14.3",
      "outdent": "^0.8.0",
      "pify": "^5.0.0",
      "tempy": "^1.0.1",
      "xo": "^0.46.4"
    },
    "peerDependencies": {
      "eslint": ">=7.22.0"
    },
    "ava": {
      "files": [
        "!rules",
        "test/*.js"
      ]
    },
    "xo": {
      "plugins": [
        "eslint-plugin"
      ],
      "parserOptions": {
        "sourceType": "script"
      },
      "extends": [
        "plugin:eslint-plugin/all"
      ],
      "overrides": [
        {
          "files": "create-ava-rule.js",
          "rules": {
            "eslint-plugin/require-meta-docs-url": "off"
          }
        }
      ],
      "rules": {
        "strict": "error",
        "ava/no-ignored-test-files": "off",
        "eslint-plugin/prefer-message-ids": "off",
        "eslint-plugin/require-meta-docs-description": "off",
        "eslint-plugin/require-meta-has-suggestions": "off",
        "eslint-plugin/prefer-placeholders": "off",
        "import/extensions": "off",
        "unicorn/prefer-module": "off"
      }
    },
    "c8": {
      "reporter": [
        "html",
        "lcov",
        "text"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-eslint-plugin-ava-13.2.0-a8e88fe62a259e11e0744d74aaff83f8ec4dbbe0-integrity/node_modules/eslint-plugin-ava/package.json",
    "readmeFilename": "readme.md",
    "readme": "# eslint-plugin-ava [![Coverage Status](https://coveralls.io/repos/github/avajs/eslint-plugin-ava/badge.svg?branch=main)](https://coveralls.io/github/avajs/eslint-plugin-ava?branch=main)\n\n> ESLint rules for [AVA](https://avajs.dev)\n\nTranslations: [Français](https://github.com/avajs/ava-docs/blob/main/fr_FR/related/eslint-plugin-ava/readme.md)\n\nThis plugin is bundled in [XO](https://github.com/xojs/xo). No need to do anything if you're using it.\n\n[**Propose or contribute a new rule ➡**](.github/contributing.md)\n\n## Install\n\n```\n$ npm install --save-dev eslint eslint-plugin-ava\n```\n\n## Usage\n\nConfigure it in `package.json`.\n\n```json\n{\n\t\"name\": \"my-awesome-project\",\n\t\"eslintConfig\": {\n\t\t\"env\": {\n\t\t\t\"es6\": true\n\t\t},\n\t\t\"parserOptions\": {\n\t\t\t\"ecmaVersion\": \"latest\",\n\t\t\t\"sourceType\": \"module\"\n\t\t},\n\t\t\"plugins\": [\n\t\t\t\"ava\"\n\t\t],\n\t\t\"rules\": {\n\t\t\t\"ava/assertion-arguments\": \"error\",\n\t\t\t\"ava/hooks-order\": \"error\",\n\t\t\t\"ava/max-asserts\": [\n\t\t\t\t\"off\",\n\t\t\t\t5\n\t\t\t],\n\t\t\t\"ava/no-async-fn-without-await\": \"error\",\n\t\t\t\"ava/no-duplicate-modifiers\": \"error\",\n\t\t\t\"ava/no-identical-title\": \"error\",\n\t\t\t\"ava/no-ignored-test-files\": \"error\",\n\t\t\t\"ava/no-import-test-files\": \"error\",\n\t\t\t\"ava/no-incorrect-deep-equal\": \"error\",\n\t\t\t\"ava/no-inline-assertions\": \"error\",\n\t\t\t\"ava/no-nested-tests\": \"error\",\n\t\t\t\"ava/no-only-test\": \"error\",\n\t\t\t\"ava/no-skip-assert\": \"error\",\n\t\t\t\"ava/no-skip-test\": \"error\",\n\t\t\t\"ava/no-todo-implementation\": \"error\",\n\t\t\t\"ava/no-todo-test\": \"warn\",\n\t\t\t\"ava/no-unknown-modifiers\": \"error\",\n\t\t\t\"ava/prefer-async-await\": \"error\",\n\t\t\t\"ava/prefer-power-assert\": \"off\",\n\t\t\t\"ava/prefer-t-regex\": \"error\",\n\t\t\t\"ava/test-title\": \"error\",\n\t\t\t\"ava/test-title-format\": \"off\",\n\t\t\t\"ava/use-t\": \"error\",\n\t\t\t\"ava/use-t-throws-async-well\": \"error\",\n\t\t\t\"ava/use-t-well\": \"error\",\n\t\t\t\"ava/use-test\": \"error\",\n\t\t\t\"ava/use-true-false\": \"error\"\n\t\t}\n\t}\n}\n```\n\n## Rules\n\nThe rules will only activate in test files.\n\n- [assertion-arguments](docs/rules/assertion-arguments.md) - Enforce passing correct arguments to assertions.\n- [hooks-order](docs/rules/hooks-order.md) - Enforce test hook ordering. *(fixable)*\n- [max-asserts](docs/rules/max-asserts.md) - Limit the number of assertions in a test.\n- [no-async-fn-without-await](docs/rules/no-async-fn-without-await.md) - Ensure that async tests use `await`.\n- [no-duplicate-modifiers](docs/rules/no-duplicate-modifiers.md) - Ensure tests do not have duplicate modifiers.\n- [no-identical-title](docs/rules/no-identical-title.md) - Ensure no tests have the same title.\n- [no-ignored-test-files](docs/rules/no-ignored-test-files.md) - Ensure no tests are written in ignored files.\n- [no-import-test-files](docs/rules/no-import-test-files.md) - Ensure no test files are imported anywhere.\n- [no-incorrect-deep-equal](docs/rules/no-incorrect-deep-equal.md) - Avoid using `deepEqual` with primitives. *(fixable)*\n- [no-inline-assertions](docs/rules/no-inline-assertions.md) - Ensure assertions are not called from inline arrow functions. *(fixable)*\n- [no-nested-tests](docs/rules/no-nested-tests.md) - Ensure no tests are nested.\n- [no-only-test](docs/rules/no-only-test.md) - Ensure no `test.only()` are present.\n- [no-skip-assert](docs/rules/no-skip-assert.md) - Ensure no assertions are skipped.\n- [no-skip-test](docs/rules/no-skip-test.md) - Ensure no tests are skipped.\n- [no-todo-implementation](docs/rules/no-todo-implementation.md) - Ensure `test.todo()` is not given an implementation function.\n- [no-todo-test](docs/rules/no-todo-test.md) - Ensure no `test.todo()` is used.\n- [no-unknown-modifiers](docs/rules/no-unknown-modifiers.md) - Prevent the use of unknown test modifiers.\n- [prefer-async-await](docs/rules/prefer-async-await.md) - Prefer using async/await instead of returning a Promise.\n- [prefer-power-assert](docs/rules/prefer-power-assert.md) - Allow only use of the asserts that have no [power-assert](https://github.com/power-assert-js/power-assert) alternative.\n- [prefer-t-regex](docs/rules/prefer-t-regex.md) - Prefer using `t.regex()` to test regular expressions. *(fixable)*\n- [test-title](docs/rules/test-title.md) - Ensure tests have a title.\n- [test-title-format](docs/rules/test-title-format.md) - Ensure test titles have a certain format.\n- [use-t](docs/rules/use-t.md) - Ensure test functions use `t` as their parameter.\n- [use-t-throws-async-well](docs/rules/use-t-throws-async-well.md) - Ensure that `t.throwsAsync()` and `t.notThrowsAsync()` are awaited. *(partly fixable)*\n- [use-t-well](docs/rules/use-t-well.md) - Prevent the incorrect use of `t`. *(partly fixable)*\n- [use-test](docs/rules/use-test.md) - Ensure that AVA is imported with `test` as the variable name.\n- [use-true-false](docs/rules/use-true-false.md) - Ensure that `t.true()`/`t.false()` are used instead of `t.truthy()`/`t.falsy()`.\n\n## Recommended config\n\nThis plugin exports a [`recommended` config](index.js) that enforces good practices.\n\nEnable it in your `package.json` with the `extends` option:\n\n```json\n{\n\t\"name\": \"my-awesome-project\",\n\t\"eslintConfig\": {\n\t\t\"extends\": \"plugin:ava/recommended\"\n\t}\n}\n```\n\nSee the [ESLint docs](https://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information about extending config files.\n\n**Note**: This config will also enable the correct [parser options](https://eslint.org/docs/user-guide/configuring#specifying-parser-options) and [environment](https://eslint.org/docs/user-guide/configuring#specifying-environments).\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-ava/-/eslint-plugin-ava-13.2.0.tgz#a8e88fe62a259e11e0744d74aaff83f8ec4dbbe0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-ava/-/eslint-plugin-ava-13.2.0.tgz",
    "hash": "a8e88fe62a259e11e0744d74aaff83f8ec4dbbe0",
    "integrity": "sha512-i5B5izsEdERKQLruk1nIWzTTE7C26/ju8qQf7JeyRv32XT2lRMW0zMFZNhIrEf5/5VvpSz2rqrV7UcjClGbKsw==",
    "registry": "npm",
    "packageName": "eslint-plugin-ava",
    "cacheIntegrity": "sha512-i5B5izsEdERKQLruk1nIWzTTE7C26/ju8qQf7JeyRv32XT2lRMW0zMFZNhIrEf5/5VvpSz2rqrV7UcjClGbKsw== sha1-qOiP5iolnhHgdE10qv+D+OxNu+A="
  },
  "registry": "npm",
  "hash": "a8e88fe62a259e11e0744d74aaff83f8ec4dbbe0"
}