{
  "manifest": {
    "name": "rc-select",
    "version": "12.1.2",
    "description": "React Select",
    "engines": {
      "node": ">=8.x"
    },
    "keywords": [
      "react",
      "react-component",
      "react-select",
      "select"
    ],
    "main": "./lib/index",
    "module": "./es/index",
    "types": "./lib/index.d.ts",
    "files": [
      "assets/*.css",
      "assets/*.less",
      "es",
      "lib"
    ],
    "homepage": "http://github.com/react-component/select",
    "repository": {
      "type": "git",
      "url": "git@github.com:react-component/select.git"
    },
    "bugs": {
      "url": "http://github.com/react-component/select/issues"
    },
    "license": "MIT",
    "scripts": {
      "start": "cross-env NODE_ENV=development father doc dev --storybook",
      "build": "father doc build --storybook",
      "compile": "father build",
      "prepublishOnly": "npm run compile && np --yolo --no-publish",
      "lint": "eslint src/ examples/ --ext .tsx,.ts,.jsx,.js",
      "test": "father test",
      "now-build": "npm run build"
    },
    "peerDependencies": {
      "react": "*",
      "react-dom": "*"
    },
    "dependencies": {
      "@babel/runtime": "^7.10.1",
      "classnames": "2.x",
      "rc-motion": "^2.0.1",
      "rc-overflow": "^1.0.0",
      "rc-trigger": "^5.0.4",
      "rc-util": "^5.0.1",
      "rc-virtual-list": "^3.2.0"
    },
    "devDependencies": {
      "@types/enzyme": "^3.10.5",
      "@types/jest": "^26.0.0",
      "@types/react": "^16.8.19",
      "@types/react-dom": "^16.8.4",
      "cross-env": "^7.0.0",
      "enzyme": "^3.3.0",
      "enzyme-to-json": "^3.4.0",
      "eslint": "^7.1.0",
      "father": "^2.13.2",
      "jsonp": "^0.2.1",
      "np": "^6.0.0",
      "rc-dialog": "^8.1.1",
      "typescript": "^3.9.3"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-rc-select-12.1.2-7f5f06838b8a8c86516acb66ead26adbc55fbc16-integrity/node_modules/rc-select/package.json",
    "readmeFilename": "README.md",
    "readme": "# rc-select\n\n---\n\nReact Select\n\n[![NPM version][npm-image]][npm-url]\n[![npm download][download-image]][download-url]\n[![build status][github-actions-image]][github-actions-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Dependencies][david-image]](david-url)\n[![DevDependencies][david-dev-image]][david-dev-url]\n[![bundle size][bundlephobia-image]][bundlephobia-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-select.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-select\n[travis-image]: https://img.shields.io/travis/react-component/select/master?style=flat-square\n[travis-url]: https://travis-ci.com/react-component/select\n[github-actions-image]: https://github.com/react-component/select/workflows/CI/badge.svg\n[github-actions-url]: https://github.com/react-component/select/actions\n[coveralls-image]: https://img.shields.io/coveralls/react-component/select.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/react-component/select?branch=master\n[codecov-image]: https://img.shields.io/codecov/c/github/react-component/select/master.svg?style=flat-square\n[codecov-url]: https://codecov.io/gh/react-component/select/branch/master\n[david-url]: https://david-dm.org/react-component/select\n[david-image]: https://david-dm.org/react-component/select/status.svg?style=flat-square\n[david-dev-url]: https://david-dm.org/react-component/select?type=dev\n[david-dev-image]: https://david-dm.org/react-component/select/dev-status.svg?style=flat-square\n[download-image]: https://img.shields.io/npm/dm/rc-select.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-select\n[bundlephobia-url]: https://bundlephobia.com/result?p=rc-select\n[bundlephobia-image]: https://badgen.net/bundlephobia/minzip/rc-select\n\n## Screenshots\n\n<img src=\"https://gw.alipayobjects.com/zos/antfincdn/d13eUZlgdJ/tupian.png\" />\n\n## Feature\n\n- support IE11+,Chrome,Firefox,Safari\n\n### Keyboard\n\n- Open select (focus input || focus and click)\n- KeyDown/KeyUp/Enter to navigate menu\n\n## install\n\n[![rc-select](https://nodei.co/npm/rc-select.png)](https://npmjs.org/package/rc-select)\n\n## Usage\n\n### basic use\n\n```js\nimport Select, { Option } from 'rc-select';\n\nexport default () => (\n  <Select>\n    <Option value=\"jack\">jack</Option>\n    <Option value=\"lucy\">lucy</Option>\n    <Option value=\"yiminghe\">yiminghe</Option>\n  </Select>\n);\n```\n\n## API\n\n### Select props\n\n| name | description | type | default |\n| --- | --- | --- | --- |\n| id | html id to set on the component wrapper | String | '' |\n| className | additional css class of root dom node | String | '' |\n| data-\\* | html data attributes to set on the component wrapper | String | '' |\n| prefixCls | prefix class | String | '' |\n| animation | dropdown animation name. only support slide-up now | String | '' |\n| transitionName | dropdown css animation name | String | '' |\n| choiceTransitionName | css animation name for selected items at multiple mode | String | '' |\n| dropdownMatchSelectWidth | whether dropdown's with is same with select | bool | true |\n| dropdownClassName | additional className applied to dropdown | String | - |\n| dropdownStyle | additional style applied to dropdown | Object | {} |\n| dropdownAlign | additional align applied to dropdown | Object | {} |\n| dropdownMenuStyle | additional style applied to dropdown menu | Object | {} |\n| notFoundContent | specify content to show when no result matches. | String | 'Not Found' |\n| tokenSeparators | separator used to tokenize on tag/multiple mode | string[]? |  |\n| open | control select open | bool |  |\n| defaultOpen | control select default open | bool |  |\n| placeholder | select placeholder | React Node |  |\n| showSearch | whether show search input in single mode | bool | true |\n| showArrow | whether show arrow | bool | true (single mode), false (multiple mode) |\n| allowClear | whether allowClear | bool | false |\n| tags | when tagging is enabled the user can select from pre-existing options or create a new tag by picking the first choice, which is what the user has typed into the search box so far. | bool | false |\n| tagRender | render custom tags. | (props: CustomTagProps) => ReactNode | - |\n| maxTagTextLength | max tag text length to show | number | - |\n| maxTagCount | max tag count to show | number | - |\n| maxTagPlaceholder | placeholder for omitted values | ReactNode/function(omittedValues) | - |\n| combobox | enable combobox mode(can not set multiple at the same time) | bool | false |\n| multiple | whether multiple select | bool | false |\n| disabled | whether disabled select | bool | false |\n| filterOption | whether filter options by input value. default filter by option's optionFilterProp prop's value | bool | true/Function(inputValue:string, option:Option) |\n| optionFilterProp | which prop value of option will be used for filter if filterOption is true | String | 'value' |\n| filterSort | Sort function for search options sorting, see [Array.sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort)'s compareFunction. | Function(optionA:Option, optionB: Option) | - |\n| optionLabelProp | render option value or option children as content of select | String: 'value'/'children' | 'value' |\n| defaultValue | initial selected option(s) | String/Array<String> | - |\n| value | current selected option(s) | String/Array<String>/{key:String, label:React.Node}/Array<{key, label}> | - |\n| labelInValue | whether to embed label in value, see above value type. Not support `combobox` mode | Bool | false |\n| backfill | whether backfill select option to search input (Only works in single and combobox mode) | Bool | false |\n| onChange | called when select an option or input value change(combobox) | function(value, option:Option/Array<Option>) | - |\n| onSearch | called when input changed | function | - |\n| onBlur | called when blur | function | - |\n| onFocus | called when focus | function | - |\n| onPopupScroll | called when menu is scrolled | function | - |\n| onSelect | called when a option is selected. param is option's value and option instance | Function(value, option:Option) | - |\n| onDeselect | called when a option is deselected. param is option's value. only called for multiple or tags | Function(value, option:Option) | - |\n| onInputKeyDown | called when key down on input | Function(event) | - |\n| defaultActiveFirstOption | whether active first option by default | bool | true |\n| getPopupContainer | container which popup select menu rendered into | function(trigger:Node):Node | function(){return document.body;} |\n| getInputElement | customize input element | function(): Element | - |\n| showAction | actions trigger the dropdown to show | String[]? | - |\n| autoFocus | focus select after mount | Bool | - |\n| autoClearSearchValue | auto clear search input value when multiple select is selected/deselected | boolean | true |\n| inputIcon | specify the select arrow icon | ReactNode | - |\n| clearIcon | specify the clear icon | ReactNode | - |\n| removeIcon | specify the remove icon | ReactNode | - |\n| menuItemSelectedIcon | specify the remove icon | ReactNode \\| (props: MenuItemProps) => ReactNode | - |\n| dropdownRender | render custom dropdown menu | (menu: React.Node, props: MenuProps) => ReactNode | - |\n| loading | show loading icon in arrow | Boolean | false |\n| virtual | Disable virtual scroll | Boolean | true |\n| direction | direction of dropdown | 'ltr' \\| 'rtl' | 'ltr' |\n\n### Methods\n\n| name  | description               | parameters | return |\n| ----- | ------------------------- | ---------- | ------ |\n| focus | focus select programmably | -          | -      |\n| blur  | blur select programmably  | -          | -      |\n\n### Option props\n\n| name | description | type | default |\n| --- | --- | --- | --- |\n| className | additional class to option | String | '' |\n| disabled | no effect for click or keydown for this item | bool | false |\n| key | if react want you to set key, then key is same as value, you can omit value | String/number | - |\n| value | default filter by this attribute. if react want you to set key, then key is same as value, you can omit value | String/number | - |\n| title | if you are not satisfied with auto-generated `title` which is show while hovering on selected value, you can customize it with this property | String | - |\n\n### OptGroup props\n\n| name | description | type | default |\n| --- | --- | --- | --- |\n| label | group label | String/React.Element | - |\n| key | - | String | - |\n| value | default filter by this attribute. if react want you to set key, then key is same as value, you can omit value | String | - |\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nlocal example: http://localhost:9001/\n\nonline example: http://select.react-component.now.sh/\n\n## Test Case\n\n```\nnpm test\n```\n\n## Coverage\n\n```\nnpm run coverage\n```\n\n## License\n\nrc-select is released under the MIT license.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014-present alipay.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rc-select/-/rc-select-12.1.2.tgz#7f5f06838b8a8c86516acb66ead26adbc55fbc16",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rc-select/-/rc-select-12.1.2.tgz",
    "hash": "7f5f06838b8a8c86516acb66ead26adbc55fbc16",
    "integrity": "sha512-WEcqj4ljz5kgp/yPN4RDQEZRvjGkwdk1PugpFrtd6tY+YqwKZs7vSZt6xphVIvWlmtwmZMe7e9G1U8XykUN0+g==",
    "registry": "npm",
    "packageName": "rc-select",
    "cacheIntegrity": "sha512-WEcqj4ljz5kgp/yPN4RDQEZRvjGkwdk1PugpFrtd6tY+YqwKZs7vSZt6xphVIvWlmtwmZMe7e9G1U8XykUN0+g== sha1-f18Gg4uKjIZRastm6tJq28VfvBY="
  },
  "registry": "npm",
  "hash": "7f5f06838b8a8c86516acb66ead26adbc55fbc16"
}