{
  "manifest": {
    "name": "@leichtgewicht/ip-codec",
    "version": "2.0.3",
    "description": "Small package to encode or decode IP addresses from buffers to strings.",
    "main": "index.js",
    "types": "types",
    "scripts": {
      "lint": "standard && dtslint --localTs node_modules/typescript/lib types",
      "test": "fresh-tape test.js",
      "test-cov": "c8 npm run test"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/martinheidegger/ip-codec.git"
    },
    "keywords": [
      "ip",
      "ipv4",
      "ipv6",
      "codec",
      "codecs",
      "buffer",
      "conversion"
    ],
    "author": {
      "name": "Martin Heidegger"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/martinheidegger/ip-codec/issues"
    },
    "homepage": "https://github.com/martinheidegger/ip-codec#readme",
    "devDependencies": {
      "c8": "^7.7.3",
      "dtslint": "^4.1.1",
      "fresh-tape": "^5.2.4",
      "standard": "^16.0.3",
      "typescript": "^4.3.5"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@leichtgewicht-ip-codec-2.0.3-0300943770e04231041a51bd39f0439b5c7ab4f0-integrity/node_modules/@leichtgewicht/ip-codec/package.json",
    "readmeFilename": "Readme.md",
    "readme": "# @leichtgewicht/ip-codec\n\nSmall package to encode or decode IP addresses from buffers to strings.\nSupports IPV4 and IPV6.\n\n## Usage\n\nThe basics are straigthforward\n\n```js\nconst { encode, decode, sizeOf, familyOf } = require('@leichtgewicht/ip-codec')\n\nconst uint8Array = encode(\"127.0.0.1\")\nconst str = decode(uint8Array)\n\ntry {\n  switch sizeOf(str) {\n    case 4: // IPv4\n    case 16: // IPv6\n  }\n  switch familyOf(str) {\n    case: 1: // IPv4\n    case: 2: // IPv6\n  }\n} catch (err) {\n  // Invalid IP\n}\n```\n\nBy default the library will work with Uint8Array's but you can bring your own buffer:\n\n```js\nconst buf = Buffer.alloc(4)\nencode('127.0.0.1', buf)\n```\n\nIt is also possible to de-encode at a location inside a given buffer\n\n```js\nconst buf = Buffer.alloc(10)\nencode('127.0.0.1', buf, 4)\n```\n\nAllocation of a buffer may be difficult if you don't know what type the buffer:\nyou can pass in a generator to allocate it for you:\n\n```js\nencode('127.0.0.1', Buffer.alloc)\n```\n\nYou can also de/encode ipv4 or ipv6 specifically:\n\n```js\nconst { v4, v6 } = require('@leichtgewicht/ip-codec')\n\nv4.decode(v4.encode('127.0.0.1'))\nv6.decode(v6.encode('::'))\n```\n\n## History\n\nThe code in this package was originally extracted from [node-ip](https://github.com/indutny/node-ip) and since improved.\n\nNotable changes are the removal of the `Buffer` dependency and better support for detection of\nformats and allocation of buffers.\n\n## License\n\n[MIT](./LICENSE)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2021 Martin Heidegger\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@leichtgewicht/ip-codec/-/ip-codec-2.0.3.tgz#0300943770e04231041a51bd39f0439b5c7ab4f0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@leichtgewicht/ip-codec/-/ip-codec-2.0.3.tgz",
    "hash": "0300943770e04231041a51bd39f0439b5c7ab4f0",
    "integrity": "sha512-nkalE/f1RvRGChwBnEIoBfSEYOXnCRdleKuv6+lePbMDrMZXeDQnqak5XDOeBgrPPyPfAdcCu/B5z+v3VhplGg==",
    "registry": "npm",
    "packageName": "@leichtgewicht/ip-codec",
    "cacheIntegrity": "sha512-nkalE/f1RvRGChwBnEIoBfSEYOXnCRdleKuv6+lePbMDrMZXeDQnqak5XDOeBgrPPyPfAdcCu/B5z+v3VhplGg== sha1-AwCUN3DgQjEEGlG9OfBDm1x6tPA="
  },
  "registry": "npm",
  "hash": "0300943770e04231041a51bd39f0439b5c7ab4f0"
}