{
  "manifest": {
    "name": "callsites",
    "version": "2.0.0",
    "description": "Get callsites from the V8 stack trace API",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/callsites.git"
    },
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "engines": {
      "node": ">=4"
    },
    "scripts": {
      "test": "xo && ava"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "stacktrace",
      "v8",
      "callsite",
      "callsites",
      "stack",
      "trace",
      "function",
      "file",
      "line",
      "debug"
    ],
    "devDependencies": {
      "ava": "*",
      "xo": "*"
    },
    "xo": {
      "esnext": true
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-callsites-2.0.0-06eb84f00eea413da86affefacbffb36093b3c50-integrity/node_modules/callsites/package.json",
    "readmeFilename": "readme.md",
    "readme": "# callsites [![Build Status](https://travis-ci.org/sindresorhus/callsites.svg?branch=master)](https://travis-ci.org/sindresorhus/callsites)\n\n> Get callsites from the [V8 stack trace API](https://github.com/v8/v8/wiki/Stack-Trace-API)\n\n\n## Install\n\n```\n$ npm install --save callsites\n```\n\n\n## Usage\n\n```js\nconst callsites = require('callsites');\n\nfunction unicorn() {\n\tconsole.log(callsites()[0].getFileName());\n\t//=> '/Users/sindresorhus/dev/callsites/test.js'\n}\n\nunicorn();\n```\n\n\n## API\n\nReturns an array of callsite objects with the following methods:\n\n- `getTypeName`: returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object's [[Class]] internal property.\n- `getFunctionName`: returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\n- `getMethodName`: returns the name of the property of this or one of its prototypes that holds the current function\n- `getFileName`: if this function was defined in a script returns the name of the script\n- `getLineNumber`: if this function was defined in a script returns the current line number\n- `getColumnNumber`: if this function was defined in a script returns the current column number\n- `getEvalOrigin`: if this function was created using a call to eval returns a CallSite object representing the location where eval was called\n- `isToplevel`: is this a top-level invocation, that is, is this the global object?\n- `isEval`: does this call take place in code defined by a call to eval?\n- `isNative`: is this call in native V8 code?\n- `isConstructor`: is this a constructor call?\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/callsites/-/callsites-2.0.0.tgz#06eb84f00eea413da86affefacbffb36093b3c50",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/callsites/-/callsites-2.0.0.tgz",
    "hash": "06eb84f00eea413da86affefacbffb36093b3c50",
    "integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA=",
    "registry": "npm",
    "packageName": "callsites",
    "cacheIntegrity": "sha512-ksWePWBloaWPxJYQ8TL0JHvtci6G5QTKwQ95RcWAa/lzoAKuAOflGdAK92hpHXjkwb8zLxoLNUoNYZgVsaJzvQ== sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="
  },
  "registry": "npm",
  "hash": "06eb84f00eea413da86affefacbffb36093b3c50"
}