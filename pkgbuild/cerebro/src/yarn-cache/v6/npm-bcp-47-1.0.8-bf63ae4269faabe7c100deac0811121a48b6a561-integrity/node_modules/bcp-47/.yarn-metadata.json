{
  "manifest": {
    "name": "bcp-47",
    "version": "1.0.8",
    "description": "Parse and stringify BCP 47 language tags",
    "license": "MIT",
    "keywords": [
      "bcp",
      "47",
      "bcp47",
      "bcp-47",
      "language",
      "tag",
      "parse"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/wooorm/bcp-47.git"
    },
    "bugs": {
      "url": "https://github.com/wooorm/bcp-47/issues"
    },
    "funding": {
      "type": "github",
      "url": "https://github.com/sponsors/wooorm"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "files": [
      "index.js",
      "lib/"
    ],
    "dependencies": {
      "is-alphabetical": "^1.0.0",
      "is-alphanumerical": "^1.0.0",
      "is-decimal": "^1.0.0"
    },
    "devDependencies": {
      "browserify": "^17.0.0",
      "is-hidden": "^1.0.0",
      "not": "^0.1.0",
      "nyc": "^15.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^9.0.0",
      "remark-preset-wooorm": "^8.0.0",
      "tape": "^5.0.0",
      "tinyify": "^3.0.0",
      "xo": "^0.34.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "build-bundle": "browserify index.js -s bcp47 -o bcp-47.js",
      "build-mangle": "browserify index.js -s bcp47 -p tinyify -o bcp-47.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test/index.js",
      "test": "npm run format && npm run build && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "eqeqeq": [
          "error",
          "always",
          {
            "null": "ignore"
          }
        ],
        "no-eq-null": "off",
        "no-multi-assign": "off",
        "unicorn/explicit-length-check": "off",
        "unicorn/no-fn-reference-in-iterator": "off",
        "unicorn/prefer-includes": "off"
      },
      "ignores": [
        "bcp-47.js"
      ]
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-bcp-47-1.0.8-bf63ae4269faabe7c100deac0811121a48b6a561-integrity/node_modules/bcp-47/package.json",
    "readmeFilename": "readme.md",
    "readme": "# bcp-47\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n\nParse and stringify [BCP 47][spec] language tags.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install bcp-47\n```\n\n## Contents\n\n*   [Use](#use)\n*   [API](#api)\n    *   [`bcp47.parse(tag[, options])`](#bcp47parsetag-options)\n    *   [`bcp47.stringify(schema)`](#bcp47stringifyschema)\n    *   [`schema`](#schema)\n    *   [`function warning(reason, code, offset)`](#function-warningreason-code-offset)\n*   [Related](#related)\n*   [License](#license)\n\n## Use\n\n```js\nvar bcp47 = require('bcp-47')\n\nvar schema = bcp47.parse('hy-Latn-IT-arevela')\n\nconsole.log(schema)\nconsole.log(bcp47.stringify(schema))\n```\n\nYields:\n\n```js\n{ language: 'hy',\n  extendedLanguageSubtags: [],\n  script: 'Latn',\n  region: 'IT',\n  variants: ['arevela'],\n  extensions: [],\n  privateuse: [],\n  irregular: null,\n  regular: null }\n'hy-Latn-IT-arevela'\n```\n\n## API\n\n### `bcp47.parse(tag[, options])`\n\nParse a BCP 47 tag into a language schema.\nNote that the algorithm is case-insensitive.\n\n###### `options.normalize`\n\nWhether to normalize legacy tags when possible (`boolean`, default:\n`true`).  For example, `i-klingon` does not match the BCP 47 language\nalgorithm but is valid nonetheless.  It is suggested to use `tlh`\ninstead (the ISO 639-3 code for Klingon).  When `normalize` is true,\npassing `i-klingon`, or other deprecated tags, is handled as if their\nsuggested valid tag was given.\n\n###### `options.forgiving`\n\nBy default, when an error is encountered, an empty object is returned.\nWhen in forgiving mode, all found values up to the point of the error\nare included (`boolean`, default: `false`).  So, for example, where by\ndefault `en-GB-abcdefghi` an empty object is returned (as the language\nvariant is too long), in `forgiving` mode the `language` of `schema` is\npopulated with `en` and the `region` is populated with `GB`.\n\n###### `options.warning`\n\nWhen given, `warning` is invoked when an error is encountered\n([`Function`][warning]).\n\n###### Returns\n\n[`Schema`][schema] — Parsed BCP 47 language tag.\n\n###### Throws\n\nWhen `tag` is `null` or `undefined`.\n\n### `bcp47.stringify(schema)`\n\nCompile a [`schema`][schema] into a BCP 47 language tag.\n\n###### Returns\n\n`string` — BCP 47 language tag.\n\n### `schema`\n\nA schema may have the following properties.  A schema is deemed empty\nwhen it has neither `language`, `irregular`, `regular`, nor `privateuse`\n(where an empty `privateuse` array is handled as no `privateuse`, too).\n\n###### `schema.language`\n\nTwo or three character [ISO 639][iso-639] language code, four character\nreserved language code, or 5 to 8 (inclusive) characters registered\nlanguage subtag (`string`).  For example, `en` (English) or `cmn`\n(Mandarin Chinese).\n\n###### `schema.extendedLanguageSubtags`\n\nSelected three-character [ISO 639][iso-639] codes(`Array.<string>`),\nsuch as `yue` in `zh-yue-HK` (Chinese, Cantonese, as used in Hong Kong\nSAR).\n\n###### `schema.script`\n\nFour character [ISO 15924][iso-15924] script code (`string`), such as\n`Latn` in `hy-Latn-IT-arevela` (Eastern Armenian written in Latin\nscript, as used in Italy).\n\n###### `schema.region`\n\nTwo alphabetical character [ISO 3166-1][iso-3166-1] code, or three\ndigit [UN M.49][un-m49] code (`string`).  For example, `CN` in\n`cmn-Hans-CN` (Mandarin Chinese, Simplified script, as used in China).\n\n###### `schema.variants`\n\n5 to 8 (inclusive) character language variants (`Array.<string>`), such\nas both `rozaj` and `biske` in `sl-rozaj-biske` (San Giorgio dialect\nof Resian dialect of Slovenian).\n\n###### `schema.extensions`\n\nList of extensions (`Array.<Object>`), each an object containing a one\ncharacter `singleton`, and a list of `extensions` (`string`).\n`singleton` cannot be `x` (case-insensitive), and `extensions` must be\nbetween two and eight (inclusive) characters.  For example, an extension\nwould be `u-co-phonebk` in `de-DE-u-co-phonebk` (German, as used in\nGermany, using German phonebook sort order), where `u` is the `singleton`\nand `co` and `phonebk` are its extensions.\n\n###### `schema.privateuse`\n\nList of private-use subtags (`Array.<string>`), where each subtag must\nbe between one and eight (inclusive) characters.\n\n###### `schema.regular`\n\nOne of the `regular` tags (`string`): tags which are seen as something\ndifferent by the algorithm.\n\nValid values are:\n\n*   `art-lojban`\n*   `cel-gaulish`\n*   `no-bok`\n*   `no-nyn`\n*   `zh-guoyu`\n*   `zh-hakka`\n*   `zh-min`\n*   `zh-min-nan`\n*   `zh-xiang`\n\n###### `schema.irregular`\n\nOne of the `irregular` tags (`string`): tags which are seen as\ninvalid by the algorithm).\n\nValid values are:\n\n*   `en-GB-oed`\n*   `i-ami`\n*   `i-bnn`\n*   `i-default`\n*   `i-enochian`\n*   `i-hak`\n*   `i-klingon`\n*   `i-lux`\n*   `i-mingo`\n*   `i-navajo`\n*   `i-pwn`\n*   `i-tao`\n*   `i-tay`\n*   `i-tsu`\n*   `sgn-BE-FR`\n*   `sgn-BE-NL`\n*   `sgn-CH-DE`\n\n### `function warning(reason, code, offset)`\n\nInvoked when an error occurs.\n\n###### Parameters\n\n*   `reason` (`string`) — English reason for failure\n*   `code` (`number`) — Code for failure\n*   `offset` (`number`) — Index-based position of error\n\n###### Warnings\n\n| code | reason                                                                 |\n| :--- | :--------------------------------------------------------------------- |\n| 1    | Too long variant, expected at most 8 characters                        |\n| 2    | Too long extension, expected at most 8 characters                      |\n| 3    | Too many extended language subtags, expected at most 3 subtags         |\n| 4    | Empty extension, extensions must have at least 2 characters of content |\n| 5    | Too long private-use area, expected at most 8 characters               |\n| 6    | Found superfluous content after tag                                    |\n\n## Related\n\n*   [`bcp-47-match`](https://github.com/wooorm/bcp-47-match)\n    — Match BCP 47 language tags with language ranges per RFC 4647\n*   [`bcp-47-normalize`](https://github.com/wooorm/bcp-47-normalize)\n    — Normalize, canonicalize, and format BCP 47 tags\n*   [`iso-3166`](https://github.com/wooorm/iso-3166)\n    — ISO 3166 codes\n*   [`iso-639-2`](https://github.com/wooorm/iso-639-2)\n    — ISO 639-2 codes\n*   [`iso-639-3`](https://github.com/wooorm/iso-639-3)\n    — ISO 639-3 codes\n*   [`iso-15924`](https://github.com/wooorm/iso-15924)\n    — ISO 15924 codes\n*   [`un-m49`](https://github.com/wooorm/un-m49)\n    — UN M49 codes\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/bcp-47.svg\n\n[build]: https://travis-ci.org/wooorm/bcp-47\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/bcp-47.svg\n\n[coverage]: https://codecov.io/github/wooorm/bcp-47\n\n[downloads-badge]: https://img.shields.io/npm/dm/bcp-47.svg\n\n[downloads]: https://www.npmjs.com/package/bcp-47\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/bcp-47.svg\n\n[size]: https://bundlephobia.com/result?p=bcp-47\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[spec]: https://tools.ietf.org/html/bcp47\n\n[warning]: #function-warningreason-code-offset\n\n[schema]: #schema\n\n[iso-639]: https://en.wikipedia.org/wiki/ISO_639\n\n[iso-15924]: https://en.wikipedia.org/wiki/ISO_15924\n\n[iso-3166-1]: https://en.wikipedia.org/wiki/ISO_3166-1\n\n[un-m49]: https://en.wikipedia.org/wiki/UN_M.49\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/bcp-47/-/bcp-47-1.0.8.tgz#bf63ae4269faabe7c100deac0811121a48b6a561",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/bcp-47/-/bcp-47-1.0.8.tgz",
    "hash": "bf63ae4269faabe7c100deac0811121a48b6a561",
    "integrity": "sha512-Y9y1QNBBtYtv7hcmoX0tR+tUNSFZGZ6OL6vKPObq8BbOhkCoyayF6ogfLTgAli/KuAEbsYHYUNq2AQuY6IuLag==",
    "registry": "npm",
    "packageName": "bcp-47",
    "cacheIntegrity": "sha512-Y9y1QNBBtYtv7hcmoX0tR+tUNSFZGZ6OL6vKPObq8BbOhkCoyayF6ogfLTgAli/KuAEbsYHYUNq2AQuY6IuLag== sha1-v2OuQmn6q+fBAN6sCBESGki2pWE="
  },
  "registry": "npm",
  "hash": "bf63ae4269faabe7c100deac0811121a48b6a561"
}