{
  "manifest": {
    "name": "html-entities",
    "version": "2.3.3",
    "description": "Fastest HTML entities encode/decode library.",
    "keywords": [
      "html",
      "html entities",
      "html entities encode",
      "html entities decode",
      "entities",
      "entities encode",
      "entities decode"
    ],
    "author": {
      "name": "Marat Dulin",
      "email": "mdevils@yandex.ru"
    },
    "devDependencies": {
      "@types/benchmark": "^2.1.0",
      "@types/chai": "^4.2.11",
      "@types/he": "^1.1.1",
      "@types/mocha": "^7.0.2",
      "@types/node": "^13.13.4",
      "@typescript-eslint/eslint-plugin": "^4.6.1",
      "@typescript-eslint/parser": "^4.6.1",
      "benchmark": "^2.1.4",
      "chai": "^4.2.0",
      "entities": "^3.0.1",
      "eslint": "^7.12.1",
      "eslint-config-prettier": "^6.15.0",
      "eslint-plugin-import": "^2.22.1",
      "eslint-plugin-prettier": "^3.1.4",
      "flowgen": "^1.13.0",
      "he": "^1.2.0",
      "husky": "^4.3.6",
      "mocha": "^9.1.3",
      "prettier": "^2.1.2",
      "terser": "^5.6.1",
      "ts-node": "^8.9.1",
      "ttypescript": "^1.5.12",
      "typescript": "^3.8.3",
      "typescript-transform-macros": "^1.1.1"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mdevils/html-entities.git"
    },
    "sideEffects": false,
    "main": "./lib/index.js",
    "typings": "./lib/index.d.ts",
    "types": "./lib/index.d.ts",
    "scripts": {
      "test": "TS_NODE_COMPILER=ttypescript mocha --recursive -r ts-node/register test/**/*.ts",
      "test:lib": "TEST_LIB=1 npm run test",
      "benchmark": "TS_NODE_COMPILER=ttypescript ts-node benchmark/benchmark",
      "lint": "eslint src/**.ts",
      "flow-type-gen": "flowgen --add-flow-header lib/index.d.ts -o lib/index.js.flow",
      "remove-unused-declarations": "find lib -type f \\( -name '*.d.ts' ! -name index.d.ts \\) | xargs rm",
      "minimize-lib-files": "find lib -type f \\( -name '*.js' ! -name index.js \\) | while read fn; do terser $fn -o $fn; done",
      "build": "rm -Rf lib/* && ttsc && npm run remove-unused-declarations && npm run flow-type-gen && npm run minimize-lib-files && npm run test:lib",
      "prepublishOnly": "npm run build"
    },
    "files": [
      "lib",
      "LICENSE"
    ],
    "husky": {
      "hooks": {
        "pre-commit": "npm run lint && npm run test"
      }
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-html-entities-2.3.3-117d7626bece327fc8baace8868fa6f5ef856e46-integrity/node_modules/html-entities/package.json",
    "readmeFilename": "README.md",
    "readme": "html-entities\n=============\n\nFastest HTML entities library.\n\nComes with both TypeScript and Flow types.\n\nInstallation\n------------\n\n```bash\n$ npm install html-entities\n```\n\nUsage\n-----\n\n### encode(text, options)\n\nEncodes text replacing HTML special characters (`<>&\"'`) plus other character ranges depending on `mode` option value.\n\n```js\nimport {encode} from 'html-entities';\n\nencode('< > \" \\' & © ∆');\n// -> '&lt; &gt; &quot; &apos; &amp; © ∆'\n\nencode('< ©', {mode: 'nonAsciiPrintable'});\n// -> '&lt; &copy;'\n\nencode('< ©', {mode: 'nonAsciiPrintable', level: 'xml'});\n// -> '&lt; &#169;'\n```\n\nOptions:\n\n#### level\n\n * `all` alias to `html5` (default).\n * `html5` uses `HTML5` named references.\n * `html4` uses `HTML4` named references.\n * `xml` uses `XML` named references.\n\n#### mode\n\n * `specialChars` encodes only HTML special characters (default).\n * `nonAscii` encodes HTML special characters and everything outside of the [ASCII character range](https://en.wikipedia.org/wiki/ASCII).\n * `nonAsciiPrintable` encodes HTML special characters and everything outiside of the [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).\n * `extensive` encodes all non-printable characters, non-ASCII characters and all characters with named references.\n\n#### numeric\n\n * `decimal` uses decimal numbers when encoding html entities. i.e. `&#169;` (default).\n * `hexadecimal` uses hexadecimal numbers when encoding html entities. i.e. `&#xa9;`.\n\n\n### decode(text, options)\n\nDecodes text replacing entities to characters. Unknown entities are left as is.\n\n```js\nimport {decode} from 'html-entities';\n\ndecode('&lt; &gt; &quot; &apos; &amp; &#169; &#8710;');\n// -> '< > \" \\' & © ∆'\n\ndecode('&copy;', {level: 'html5'});\n// -> '©'\n\ndecode('&copy;', {level: 'xml'});\n// -> '&copy;'\n```\n\nOptions:\n\n#### level\n\n * `all` alias to `html5` (default).\n * `html5` uses `HTML5` named references.\n * `html4` uses `HTML4` named references.\n * `xml` uses `XML` named references.\n\n#### scope\n\n * `body` emulates behavior of browser when parsing tag bodies: entities without semicolon are also replaced (default).\n * `attribute` emulates behavior of browser when parsing tag attributes: entities without semicolon are replaced when not followed by equality sign `=`.\n * `strict` ignores entities without semicolon.\n\n### decodeEntity(text, options)\n\nDecodes a single HTML entity. Unknown entitiy is left as is.\n\n```js\nimport {decodeEntity} from 'html-entities';\n\ndecodeEntity('&lt;');\n// -> '<'\n\ndecodeEntity('&copy;', {level: 'html5'});\n// -> '©'\n\ndecodeEntity('&copy;', {level: 'xml'});\n// -> '&copy;'\n```\n\nOptions:\n\n#### level\n\n * `all` alias to `html5` (default).\n * `html5` uses `HTML5` named references.\n * `html4` uses `HTML4` named references.\n * `xml` uses `XML` named references.\n\nPerformance\n-----------\n\nStatistically significant comparison with other libraries using `benchmark.js`.\nResults by this library are marked with `*`.\nThe source code of the benchmark is available at `benchmark/benchmark.ts`.\n\n```\nCommon\n\n    Initialization / Load speed\n\n      * #1: html-entities x 2,632,942 ops/sec ±3.71% (72 runs sampled)\n        #2: entities x 1,379,154 ops/sec ±5.87% (75 runs sampled)\n        #3: he x 1,334,035 ops/sec ±3.14% (83 runs sampled)\n\nHTML5\n\n    Encode test\n\n      * #1: html-entities.encode - html5, nonAscii x 415,806 ops/sec ±0.73% (85 runs sampled)\n      * #2: html-entities.encode - html5, nonAsciiPrintable x 401,420 ops/sec ±0.35% (93 runs sampled)\n        #3: entities.encodeNonAsciiHTML x 401,235 ops/sec ±0.41% (88 runs sampled)\n        #4: entities.encodeHTML x 284,868 ops/sec ±0.45% (93 runs sampled)\n      * #5: html-entities.encode - html5, extensive x 237,613 ops/sec ±0.42% (93 runs sampled)\n        #6: he.encode x 91,459 ops/sec ±0.50% (84 runs sampled)\n\n    Decode test\n\n        #1: entities.decodeHTMLStrict x 614,920 ops/sec ±0.41% (89 runs sampled)\n        #2: entities.decodeHTML x 577,698 ops/sec ±0.44% (90 runs sampled)\n      * #3: html-entities.decode - html5, strict x 323,680 ops/sec ±0.39% (92 runs sampled)\n      * #4: html-entities.decode - html5, body x 297,548 ops/sec ±0.45% (91 runs sampled)\n      * #5: html-entities.decode - html5, attribute x 293,617 ops/sec ±0.37% (94 runs sampled)\n        #6: he.decode x 145,383 ops/sec ±0.36% (94 runs sampled)\n\nHTML4\n\n    Encode test\n\n      * #1: html-entities.encode - html4, nonAscii x 379,799 ops/sec ±0.29% (96 runs sampled)\n      * #2: html-entities.encode - html4, nonAsciiPrintable x 350,003 ops/sec ±0.42% (92 runs sampled)\n      * #3: html-entities.encode - html4, extensive x 169,759 ops/sec ±0.43% (90 runs sampled)\n\n    Decode test\n\n      * #1: html-entities.decode - html4, attribute x 291,048 ops/sec ±0.42% (92 runs sampled)\n      * #2: html-entities.decode - html4, strict x 287,110 ops/sec ±0.56% (93 runs sampled)\n      * #3: html-entities.decode - html4, body x 285,529 ops/sec ±0.57% (93 runs sampled)\n\nXML\n\n    Encode test\n\n        #1: entities.encodeXML x 418,561 ops/sec ±0.80% (90 runs sampled)\n      * #2: html-entities.encode - xml, nonAsciiPrintable x 402,868 ops/sec ±0.30% (89 runs sampled)\n      * #3: html-entities.encode - xml, nonAscii x 403,669 ops/sec ±7.87% (83 runs sampled)\n      * #4: html-entities.encode - xml, extensive x 237,766 ops/sec ±0.45% (93 runs sampled)\n\n    Decode test\n\n        #1: entities.decodeXML x 888,700 ops/sec ±0.48% (93 runs sampled)\n      * #2: html-entities.decode - xml, strict x 353,127 ops/sec ±0.40% (92 runs sampled)\n      * #3: html-entities.decode - xml, body x 355,796 ops/sec ±1.58% (86 runs sampled)\n      * #4: html-entities.decode - xml, attribute x 369,454 ops/sec ±8.74% (84 runs sampled)\n\nEscaping\n\n    Escape test\n\n        #1: entities.escapeUTF8 x 1,308,013 ops/sec ±0.37% (91 runs sampled)\n      * #2: html-entities.encode - xml, specialChars x 1,258,760 ops/sec ±1.00% (93 runs sampled)\n        #3: he.escape x 822,569 ops/sec ±0.24% (94 runs sampled)\n        #4: entities.escape x 434,243 ops/sec ±0.34% (91 runs sampled)\n```\n\nLicense\n-------\n\nMIT\n\nSecurity contact information\n----------------------------\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security). Tidelift will\ncoordinate the fix and disclosure.\n\n`html-entities` for enterprise\n------------------------------\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of `html-entities` and thousands of other packages are working with\nTidelift to deliver commercial support and maintenance for the open source\ndependencies you use to build your applications. Save time, reduce risk, and\nimprove code health, while paying the maintainers of the exact dependencies you\nuse.\n[Learn more.](https://tidelift.com/subscription/pkg/npm-html-entities?utm_source=npm-html-entities&utm_medium=referral&utm_campaign=enterprise)\n",
    "licenseText": "Copyright (c) 2021 Dulin Marat\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/html-entities/-/html-entities-2.3.3.tgz#117d7626bece327fc8baace8868fa6f5ef856e46",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/html-entities/-/html-entities-2.3.3.tgz",
    "hash": "117d7626bece327fc8baace8868fa6f5ef856e46",
    "integrity": "sha512-DV5Ln36z34NNTDgnz0EWGBLZENelNAtkiFA4kyNOG2tDI6Mz1uSWiq1wAKdyjnJwyDiDO7Fa2SO1CTxPXL8VxA==",
    "registry": "npm",
    "packageName": "html-entities",
    "cacheIntegrity": "sha512-DV5Ln36z34NNTDgnz0EWGBLZENelNAtkiFA4kyNOG2tDI6Mz1uSWiq1wAKdyjnJwyDiDO7Fa2SO1CTxPXL8VxA== sha1-EX12Jr7OMn/Iuqzoho+m9e+FbkY="
  },
  "registry": "npm",
  "hash": "117d7626bece327fc8baace8868fa6f5ef856e46"
}