{
  "manifest": {
    "name": "simple-plist",
    "author": {
      "name": "Joe Wollard"
    },
    "license": "MIT",
    "homepage": "https://github.com/wollardj/node-simple-plist.git",
    "repository": {
      "type": "git",
      "url": "https://github.com/wollardj/node-simple-plist.git"
    },
    "version": "1.1.0",
    "description": "A wrapper utility for interacting with plist data.",
    "main": "simple-plist.js",
    "files": [
      "simple-plist.js"
    ],
    "keywords": [
      "plist",
      "binary",
      "bplist",
      "xml"
    ],
    "scripts": {
      "clean": "rimraf __tests__/write-test* coverage",
      "jest": "jest --coverage ",
      "jest:verbose": "jest --coverage --verbose",
      "test": "run-s clean jest",
      "test:verbose": "run-s clean jest:verbose"
    },
    "husky": {
      "hooks": {
        "pre-commit": "npx run-s test",
        "pre-push": "npx run-s test"
      }
    },
    "lint-staged": {
      "*.js": [
        "eslint --fix",
        "prettier --write",
        "git add"
      ]
    },
    "dependencies": {
      "bplist-creator": "0.0.8",
      "bplist-parser": "0.2.0",
      "plist": "^3.0.1"
    },
    "devDependencies": {
      "eslint": "^6.6.0",
      "eslint-config-airbnb": "^18.0.1",
      "eslint-config-prettier": "^6.5.0",
      "eslint-plugin-import": "^2.18.2",
      "eslint-plugin-jsx-a11y": "^6.2.3",
      "eslint-plugin-react": "^7.16.0",
      "husky": "^3.0.9",
      "jest": "^24.9.0",
      "lint-staged": "^9.4.2",
      "npm-run-all": "^4.1.5",
      "prettier": "^1.18.2",
      "rimraf": "^3.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-simple-plist-1.1.0-8354ab63eb3922a054c78ce96c209c532e907a23-integrity/node_modules/simple-plist/package.json",
    "readmeFilename": "README.md",
    "readme": "# node-simple-plist\n\n[![npm](https://img.shields.io/npm/dw/simple-plist.svg?style=popout&logo=npm)](https://www.npmjs.org/package/simple-plist)\n[![npm](https://img.shields.io/npm/v/simple-plist.svg?style=popout&logo=npm)](https://www.npmjs.com/package/simple-plist)\n[![Travis (.com) branch](https://img.shields.io/travis/com/wollardj/node-simple-plist/develop.svg?style=popout&logo=Travis%20CI)](https://travis-ci.com/wollardj/node-simple-plist)\n\nA simple API for interacting with binary and plain text plist data.\n\n## Installation\n\n```sh\n$ npm install simple-plist\n```\n\n## Reading Data\n\n```js\nvar plist = require('simple-plist')\n\n// Read data from a file (xml or binary) (asynchronous)\nplist.readFile('/path/to/some.plist', function(err, data) {\n  if (err) {\n    throw err\n  }\n  console.log(JSON.stringify(data))\n})\n\n// Read data from a file (xml or binary) (synchronous)\nvar data = plist.readFileSync('/path/to/some.plist')\nconsole.log(JSON.stringify(data))\n```\n\n## Writing Data\n\n```js\nvar plist = require('simple-plist'),\n  data = plist.readFileSync('/path/to/some.plist')\n\n// Write data to a xml file (asynchronous)\nplist.writeFile('/path/to/plaintext.plist', data, function(err) {\n  if (err) {\n    throw err\n  }\n})\n\n// Write data to a xml file (synchronous)\nplist.writeFileSync('/path/to/plaintext.plist', data)\n\n// Write data to a binary plist file (asynchronous)\nplist.writeBinaryFile('/path/to/binary.plist', data, function(err) {\n  if (err) {\n    throw err\n  }\n})\n\n// Write data to a binary plist file (synchronous)\nplist.writeBinaryFileSync('/path/to/binary.plist', data)\n```\n\n## Mutating Plists In Memory\n\n```js\nvar plist = require('simple-plist')\n\n// Convert a Javascript object to a plist xml string\nvar xml = plist.stringify({ name: 'Joe', answer: 42 })\nconsole.log(xml) // output is a valid plist xml string\n\n// Convert a plist xml string or a binary plist buffer to a Javascript object\nvar data = plist.parse(\n  '<plist><dict><key>name</key><string>Joe</string></dict></plist>'\n)\nconsole.log(JSON.stringify(data))\n```\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2013 Joe Wollard\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/simple-plist/-/simple-plist-1.1.0.tgz#8354ab63eb3922a054c78ce96c209c532e907a23",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/simple-plist/-/simple-plist-1.1.0.tgz",
    "hash": "8354ab63eb3922a054c78ce96c209c532e907a23",
    "integrity": "sha512-2i5Tc0BYAqppM7jVzmNrI+aEUntPolIq4fDgji6WuNNn1D/qYdn2KwoLhZdzQkE04lu9L5tUoeJsjuJAvd+lFg==",
    "registry": "npm",
    "packageName": "simple-plist",
    "cacheIntegrity": "sha512-2i5Tc0BYAqppM7jVzmNrI+aEUntPolIq4fDgji6WuNNn1D/qYdn2KwoLhZdzQkE04lu9L5tUoeJsjuJAvd+lFg== sha1-g1SrY+s5IqBUx4zpbCCcUy6QeiM="
  },
  "registry": "npm",
  "hash": "8354ab63eb3922a054c78ce96c209c532e907a23"
}