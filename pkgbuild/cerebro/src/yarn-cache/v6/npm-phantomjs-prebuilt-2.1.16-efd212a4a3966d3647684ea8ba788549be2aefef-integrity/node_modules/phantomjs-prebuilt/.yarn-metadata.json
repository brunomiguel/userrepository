{
  "manifest": {
    "name": "phantomjs-prebuilt",
    "version": "2.1.16",
    "keywords": [
      "phantomjs",
      "headless",
      "webkit"
    ],
    "description": "Headless WebKit with JS API",
    "homepage": "https://github.com/Medium/phantomjs",
    "repository": {
      "type": "git",
      "url": "git://github.com/Medium/phantomjs.git"
    },
    "license": "Apache-2.0",
    "author": {
      "name": "Dan Pupius",
      "email": "dan@obvious.com",
      "url": "http://pupius.co.uk"
    },
    "maintainers": [
      {
        "name": "Dan Pupius",
        "email": "dan@medium.com",
        "url": "http://pupius.co.uk/"
      },
      {
        "name": "Nick Santos",
        "email": "nick@medium.com",
        "url": "http://nick-santos.com/"
      }
    ],
    "main": "lib/phantomjs",
    "bin": {
      "phantomjs": "bin/phantomjs"
    },
    "scripts": {
      "install": "node install.js",
      "test": "nodeunit --reporter=minimal test/tests.js && eslint ."
    },
    "dependencies": {
      "es6-promise": "^4.0.3",
      "extract-zip": "^1.6.5",
      "fs-extra": "^1.0.0",
      "hasha": "^2.2.0",
      "kew": "^0.7.0",
      "progress": "^1.1.8",
      "request": "^2.81.0",
      "request-progress": "^2.0.1",
      "which": "^1.2.10"
    },
    "devDependencies": {
      "eslint": "2.7.0",
      "nodeunit": "0.9.1",
      "webdriverio": "~4.2.3"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-phantomjs-prebuilt-2.1.16-efd212a4a3966d3647684ea8ba788549be2aefef-integrity/node_modules/phantomjs-prebuilt/package.json",
    "readmeFilename": "README.md",
    "readme": "phantomjs-prebuilt\n==================\n\nAn NPM installer for [PhantomJS](http://phantomjs.org/), headless webkit with JS API.\n\n[![Build Status](https://travis-ci.org/Medium/phantomjs.svg?branch=master)](https://travis-ci.org/Medium/phantomjs)\n\nBuilding and Installing\n-----------------------\n\n```shell\nnpm install phantomjs-prebuilt\n```\n\nOr grab the source and\n\n```shell\nnode ./install.js\n```\n\nWhat this installer is really doing is just grabbing a particular \"blessed\" (by\nthis module) version of Phantom. As new versions of Phantom are released\nand vetted, this module will be updated accordingly.\n\nRunning\n-------\n\n```shell\nbin/phantomjs [phantom arguments]\n```\n\nAnd npm will install a link to the binary in `node_modules/.bin` as\nit is wont to do.\n\nRunning via node\n----------------\n\nThe package exports a `path` string that contains the path to the\nphantomjs binary/executable.\n\nBelow is an example of using this package via node.\n\n```javascript\nvar path = require('path')\nvar childProcess = require('child_process')\nvar phantomjs = require('phantomjs-prebuilt')\nvar binPath = phantomjs.path\n\nvar childArgs = [\n  path.join(__dirname, 'phantomjs-script.js'),\n  'some other argument (passed to phantomjs script)'\n]\n\nchildProcess.execFile(binPath, childArgs, function(err, stdout, stderr) {\n  // handle results\n})\n\n```\n\nOr `exec()` method is also provided for convenience:\n\n```javascript\nvar phantomjs = require('phantomjs-prebuilt')\nvar program = phantomjs.exec('phantomjs-script.js', 'arg1', 'arg2')\nprogram.stdout.pipe(process.stdout)\nprogram.stderr.pipe(process.stderr)\nprogram.on('exit', code => {\n  // do something on end\n})\n```\n\nNote: [childProcess.spawn()](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options) is called inside `exec()`.\n\nRunning with WebDriver\n----------------------\n\n`run()` method detects when PhantomJS gets ready. It's handy to use with WebDriver (Selenium).\n\n```javascript\nvar phantomjs = require('phantomjs-prebuilt')\nvar webdriverio = require('webdriverio')\nvar wdOpts = { desiredCapabilities: { browserName: 'phantomjs' } }\n\nphantomjs.run('--webdriver=4444').then(program => {\n  webdriverio.remote(wdOpts).init()\n    .url('https://developer.mozilla.org/en-US/')\n    .getTitle().then(title => {\n      console.log(title) // 'Mozilla Developer Network'\n      program.kill() // quits PhantomJS\n    })\n})\n```\n\nVersioning\n----------\n\nThe major and minor number tracks the version of PhantomJS that will be\ninstalled. The patch number is incremented when there is either an installer\nupdate or a patch build of the phantom binary.\n\nPre-2.0, this package was published to NPM as [phantomjs](https://www.npmjs.com/package/phantomjs).\nWe changed the name to [phantomjs-prebuilt](https://www.npmjs.com/package/phantomjs-prebuilt) at\nthe request of PhantomJS team.\n\nContinuous Integration\n----------------------\n\nPlease **do not** download PhantomJS for every CI job because it can quickly\noverload our CDNs. Instead take advantage of CI caching.\n\nIn [Travis-CI](https://travis-ci.org/) add the following to your `.travis.yml`\nto [enable caching](https://docs.travis-ci.com/user/caching/) & avoid repeated\ndownloads of PhantomJS.\n\n#### .travis.yml\n```yml\ncache:\n  directories:\n    - travis_phantomjs\n\nbefore_install:\n  # Upgrade PhantomJS to v2.1.1.\n  - \"export PHANTOMJS_VERSION=2.1.1\"\n  - \"export PATH=$PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/bin:$PATH\"\n  - \"if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then rm -rf $PWD/travis_phantomjs; mkdir -p $PWD/travis_phantomjs; fi\"\n  - \"if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then wget https://github.com/Medium/phantomjs/releases/download/v$PHANTOMJS_VERSION/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -O $PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2; fi\"\n  - \"if [ $(phantomjs --version) != $PHANTOMJS_VERSION ]; then tar -xvf $PWD/travis_phantomjs/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C $PWD/travis_phantomjs; fi\"\n  - \"phantomjs --version\"\n```\n\nDeciding Where To Get PhantomJS\n-------------------------------\n\nBy default, this package will download phantomjs from our [releases](https://github.com/Medium/phantomjs/releases/).\nThis should work fine for most people.\n\n##### Downloading from a custom URL\n\nIf github is down, or the Great Firewall is blocking github, you may need to use\na different download mirror. To set a mirror, set npm config property `phantomjs_cdnurl`.\n\nAlternatives include `https://bitbucket.org/ariya/phantomjs/downloads` (the official download site)\nand `http://cnpmjs.org/downloads`.\n\n```Shell\nnpm install phantomjs-prebuilt --phantomjs_cdnurl=https://bitbucket.org/ariya/phantomjs/downloads\n```\n\nOr add property into your `.npmrc` file (https://www.npmjs.org/doc/files/npmrc.html)\n\n```\nphantomjs_cdnurl=https://bitbucket.org/ariya/phantomjs/downloads\n```\n\nAnother option is to use PATH variable `PHANTOMJS_CDNURL`.\n```shell\nPHANTOMJS_CDNURL=https://bitbucket.org/ariya/phantomjs/downloads npm install phantomjs\n```\n\n##### Using PhantomJS from disk\n\nIf you plan to install phantomjs many times on a single machine, you can\ninstall the `phantomjs` binary on PATH. The installer will automatically detect\nand use that for non-global installs.\n\nCross-Platform Repositories\n---------------------------\n\nPhantomJS needs to be compiled separately for each platform. This installer\nfinds a prebuilt binary for your operating system, and downloads it.\n\nIf you check your dependencies into git, and work on a cross-platform\nteam, then you need to tell NPM to rebuild any platform-specific dependencies. Run\n\n```shell\nnpm rebuild\n```\n\nas part of your build process. This problem is not specific to PhantomJS, and this\nsolution will work for any NodeJS package with native or platform-specific code.\n\nIf you know in advance that you want to install PhantomJS for a specific architecture,\nyou can set the environment variables: `PHANTOMJS_PLATFORM`\n(to set target platform) and `PHANTOMJS_ARCH` (to set target\narch), where `platform` and `arch` are valid values for\n[process.platform and process.arch](https://nodejs.org/api/process.html).\n\nA Note on PhantomJS\n-------------------\n\nPhantomJS is not a library for NodeJS.  It's a separate environment and code\nwritten for node is unlikely to be compatible.  In particular PhantomJS does\nnot expose a Common JS package loader.\n\nThis is an _NPM wrapper_ and can be used to conveniently make Phantom available.\nIt is not a Node JS wrapper.\n\nI have had reasonable experiences writing standalone Phantom scripts which I\nthen drive from within a node program by spawning phantom in a child process.\n\nRead the PhantomJS FAQ for more details: http://phantomjs.org/faq.html\n\n### Linux Note\n\nAn extra note on Linux usage, from the PhantomJS download page:\n\n > There is no requirement to install Qt, WebKit, or any other libraries. It\n > however still relies on Fontconfig (the package fontconfig or libfontconfig,\n > depending on the distribution).\n\nTroubleshooting\n---------------\n\n##### Installation fails with `spawn ENOENT`\n\nThis is NPM's way of telling you that it was not able to start a process. It usually means:\n\n- `node` is not on your PATH, or otherwise not correctly installed.\n- `tar` is not on your PATH. This package expects `tar` on your PATH on Linux-based platforms.\n- `bzip2` is not on your PATH.\n\nCheck your specific error message for more information.\n\n##### Installation fails with `Error: EPERM` or `operation not permitted` or `permission denied`\n\nThis error means that NPM was not able to install phantomjs to the file system. There are three\nmajor reasons why this could happen:\n\n- You don't have write access to the installation directory.\n- The permissions in the NPM cache got messed up, and you need to run `npm cache clean` to fix them.\n- You have over-zealous anti-virus software installed, and it's blocking file system writes.\n\n##### Installation fails with `Error: read ECONNRESET` or `Error: connect ETIMEDOUT`\n\nThis error means that something went wrong with your internet connection, and the installer\nwas not able to download the PhantomJS binary for your platform. Please try again.\n\n##### I tried again, but I get `ECONNRESET` or `ETIMEDOUT` consistently.\n\nDo you live in China, or a country with an authoritarian government? We've seen problems where\nthe GFW or local ISP blocks github, preventing the installer from downloading the binary.\n\nTry visiting [the download page](https://bitbucket.org/ariya/phantomjs/downloads) manually.\nIf that page is blocked, you can try using a different CDN with the `PHANTOMJS_CDNURL`\nenv variable described above.\n\n##### I am behind a corporate proxy that uses self-signed SSL certificates to intercept encrypted traffic.\n\nYou can tell NPM and the PhantomJS installer to skip validation of ssl keys with NPM's\n[strict-ssl](https://www.npmjs.org/doc/misc/npm-config.html#strict-ssl) setting:\n\n```\nnpm set strict-ssl false\n```\n\nWARNING: Turning off `strict-ssl` leaves you vulnerable to attackers reading\nyour encrypted traffic, so run this at your own risk!\n\n##### I tried everything, but my network is b0rked. What do I do?\n\nIf you install PhantomJS manually, and put it on PATH, the installer will try to\nuse the manually-installed binaries.\n\n##### I'm on Debian or Ubuntu, and the installer failed because it couldn't find `node`\n\nSome Linux distros tried to rename `node` to `nodejs` due to a package\nconflict. This is a non-portable change, and we do not try to support this. The\n[official documentation](https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#ubuntu-mint-elementary-os)\nrecommends that you run `apt-get install nodejs-legacy` to symlink `node` to `nodejs`\non those platforms, or many NodeJS programs won't work properly.\n\n##### I'm using an unsupported version of Linux or an ARM processor. I get errors about \"Unexpected platform or architecture\". What do I do?\n\nWe only have binaries available for common OS / processor configurations. Sorry.\n\nYou may be able to get a PhantomJS binary from your operating system's package\nmanager. Or you can build your own from source. If you put that binary on PATH,\nthis installer will use it (see \"Deciding Where to Get PhantomJS\" above).\n\n\nContributing\n------------\n\nQuestions, comments, bug reports, and pull requests are all welcome.  Submit them at\n[the project on GitHub](https://github.com/Medium/phantomjs/).  If you haven't contributed to an\n[Medium](http://github.com/Medium/) project before please head over to the\n[Open Source Project](https://github.com/Medium/open-source#note-to-external-contributors) and fill\nout an OCLA (it should be pretty painless).\n\nBug reports that include steps-to-reproduce (including code) are the\nbest. Even better, make them in the form of pull requests.\n\nAuthor\n------\n\n[Dan Pupius](https://github.com/dpup)\n([personal website](http://pupius.co.uk)) and\n[Nick Santos](https://github.com/nicks), supported by\n[A Medium Corporation](http://medium.com/).\n\nLicense\n-------\n\nCopyright 2012 [A Medium Corporation](http://medium.com/).\n\nLicensed under the Apache License, Version 2.0.\nSee the top-level file `LICENSE.txt` and\n(http://www.apache.org/licenses/LICENSE-2.0).\n",
    "licenseText": "Copyright 2012 The Obvious Corporation.\nhttp://obvious.com/\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n-------------------------------------------------------------------------\n                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.16.tgz#efd212a4a3966d3647684ea8ba788549be2aefef",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/phantomjs-prebuilt/-/phantomjs-prebuilt-2.1.16.tgz",
    "hash": "efd212a4a3966d3647684ea8ba788549be2aefef",
    "integrity": "sha512-PIiRzBhW85xco2fuj41FmsyuYHKjKuXWmhjy3A/Y+CMpN/63TV+s9uzfVhsUwFe0G77xWtHBG8xmXf5BqEUEuQ==",
    "registry": "npm",
    "packageName": "phantomjs-prebuilt",
    "cacheIntegrity": "sha512-PIiRzBhW85xco2fuj41FmsyuYHKjKuXWmhjy3A/Y+CMpN/63TV+s9uzfVhsUwFe0G77xWtHBG8xmXf5BqEUEuQ== sha1-79ISpKOWbTZHaE6ouniFSb4q7+8="
  },
  "registry": "npm",
  "hash": "efd212a4a3966d3647684ea8ba788549be2aefef"
}