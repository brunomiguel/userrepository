{
  "manifest": {
    "name": "@jridgewell/gen-mapping",
    "version": "0.1.1",
    "description": "Generate source maps",
    "keywords": [
      "source",
      "map"
    ],
    "author": {
      "name": "Justin Ridgewell",
      "email": "justin@ridgewell.name"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/jridgewell/gen-mapping"
    },
    "main": "dist/gen-mapping.umd.js",
    "module": "dist/gen-mapping.mjs",
    "typings": "dist/types/gen-mapping.d.ts",
    "exports": {
      ".": {
        "browser": "./dist/gen-mapping.umd.js",
        "require": "./dist/gen-mapping.umd.js",
        "import": "./dist/gen-mapping.mjs"
      },
      "./package.json": "./package.json"
    },
    "files": [
      "dist"
    ],
    "engines": {
      "node": ">=6.0.0"
    },
    "scripts": {
      "benchmark": "run-s build:rollup benchmark:*",
      "benchmark:install": "cd benchmark && npm install",
      "benchmark:only": "node benchmark/index.mjs",
      "prebuild": "rm -rf dist",
      "build": "run-s -n build:*",
      "build:rollup": "rollup -c rollup.config.js",
      "build:ts": "tsc --project tsconfig.build.json",
      "lint": "run-s -n lint:*",
      "lint:prettier": "npm run test:lint:prettier -- --write",
      "lint:ts": "npm run test:lint:ts -- --fix",
      "pretest": "run-s build:rollup",
      "test": "run-s -n test:lint test:coverage",
      "test:debug": "mocha --inspect-brk",
      "test:lint": "run-s -n test:lint:*",
      "test:lint:prettier": "prettier --check '{src,test}/**/*.ts'",
      "test:lint:ts": "eslint '{src,test}/**/*.ts'",
      "test:only": "mocha",
      "test:coverage": "c8 mocha",
      "test:watch": "run-p 'build:rollup -- --watch' 'test:only -- --watch'",
      "prepublishOnly": "npm run preversion",
      "preversion": "run-s test build"
    },
    "devDependencies": {
      "@rollup/plugin-typescript": "8.3.2",
      "@types/mocha": "9.1.1",
      "@types/node": "17.0.29",
      "@typescript-eslint/eslint-plugin": "5.21.0",
      "@typescript-eslint/parser": "5.21.0",
      "benchmark": "2.1.4",
      "c8": "7.11.2",
      "eslint": "8.14.0",
      "eslint-config-prettier": "8.5.0",
      "mocha": "9.2.2",
      "npm-run-all": "4.1.5",
      "prettier": "2.6.2",
      "rollup": "2.70.2",
      "typescript": "4.6.3"
    },
    "dependencies": {
      "@jridgewell/set-array": "^1.0.0",
      "@jridgewell/sourcemap-codec": "^1.4.10"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@jridgewell-gen-mapping-0.1.1-e5d2e450306a9491e3bd77e323e38d7aff315996-integrity/node_modules/@jridgewell/gen-mapping/package.json",
    "readmeFilename": "README.md",
    "readme": "# @jridgewell/gen-mapping\n\n> Generate source maps\n\n`gen-mapping` allows you to generate a source map during transpilation or minification.\nWith a source map, you're able to trace the original location in the source file, either in Chrome's\nDevTools or using a library like [`@jridgewell/trace-mapping`][trace-mapping].\n\nYou may already be familiar with the [`source-map`][source-map] package's `SourceMapGenerator`. This\nprovides the same `addMapping` and `setSourceContent` API.\n\n## Installation\n\n```sh\nnpm install @jridgewell/gen-mapping\n```\n\n## Usage\n\n```typescript\nimport { GenMapping, addMapping, setSourceContent, encodedMap } from '@jridgewell/gen-mapping';\n\nconst map = new GenMapping({\n  file: 'output.js',\n  sourceRoot: 'https://example.com/',\n});\n\nsetSourceContent(map, 'input.js', `function foo() {}`);\n\naddMapping(map, {\n  // Lines start at line 1, columns at column 0.\n  generated: { line: 1, column: 0 },\n  source: 'input.js',\n  original: { line: 1, column: 0 },\n});\n\naddMapping(map, {\n  generated: { line: 1, column: 9 },\n  source: 'input.js',\n  original: { line: 1, column: 9 },\n  name: 'foo',\n});\n\nassert.deepEqual(encodedMap(map), {\n  version: 3,\n  file: 'output.js',\n  names: ['foo'],\n  sourceRoot: 'https://example.com/',\n  sources: ['input.js'],\n  sourcesContent: ['function foo() {}'],\n  mappings: 'AAAA,SAASA',\n});\n```\n\n## Benchmarks\n\n```\nnode v18.0.0\n\namp.js.map\ngen-mapping:      addSegment x 462 ops/sec ±1.53% (91 runs sampled)\ngen-mapping:      addMapping x 471 ops/sec ±0.77% (93 runs sampled)\nsource-map-js:    addMapping x 178 ops/sec ±1.14% (84 runs sampled)\nsource-map-0.6.1: addMapping x 178 ops/sec ±1.21% (84 runs sampled)\nsource-map-0.8.0: addMapping x 177 ops/sec ±1.21% (83 runs sampled)\nFastest is gen-mapping:      addMapping,gen-mapping:      addSegment\n\ngen-mapping:      decoded output x 157,499,812 ops/sec ±0.25% (100 runs sampled)\ngen-mapping:      encoded output x 625 ops/sec ±1.95% (88 runs sampled)\nsource-map-js:    encoded output x 162 ops/sec ±0.37% (84 runs sampled)\nsource-map-0.6.1: encoded output x 161 ops/sec ±0.51% (84 runs sampled)\nsource-map-0.8.0: encoded output x 191 ops/sec ±0.12% (90 runs sampled)\nFastest is gen-mapping:      decoded output\n\n***\n\nbabel.min.js.map\ngen-mapping:      addSegment x 35.38 ops/sec ±4.48% (48 runs sampled)\ngen-mapping:      addMapping x 29.93 ops/sec ±5.03% (55 runs sampled)\nsource-map-js:    addMapping x 22.19 ops/sec ±3.39% (41 runs sampled)\nsource-map-0.6.1: addMapping x 22.57 ops/sec ±2.90% (41 runs sampled)\nsource-map-0.8.0: addMapping x 22.73 ops/sec ±2.84% (41 runs sampled)\nFastest is gen-mapping:      addSegment\n\ngen-mapping:      decoded output x 157,767,591 ops/sec ±0.10% (99 runs sampled)\ngen-mapping:      encoded output x 97.06 ops/sec ±1.69% (73 runs sampled)\nsource-map-js:    encoded output x 17.51 ops/sec ±2.27% (37 runs sampled)\nsource-map-0.6.1: encoded output x 17.40 ops/sec ±4.61% (35 runs sampled)\nsource-map-0.8.0: encoded output x 17.83 ops/sec ±4.85% (36 runs sampled)\nFastest is gen-mapping:      decoded output\n\n***\n\npreact.js.map\ngen-mapping:      addSegment x 13,516 ops/sec ±0.27% (98 runs sampled)\ngen-mapping:      addMapping x 12,117 ops/sec ±0.25% (97 runs sampled)\nsource-map-js:    addMapping x 4,285 ops/sec ±1.53% (98 runs sampled)\nsource-map-0.6.1: addMapping x 4,482 ops/sec ±0.20% (100 runs sampled)\nsource-map-0.8.0: addMapping x 4,482 ops/sec ±0.28% (99 runs sampled)\nFastest is gen-mapping:      addSegment\n\ngen-mapping:      decoded output x 157,769,691 ops/sec ±0.06% (92 runs sampled)\ngen-mapping:      encoded output x 18,610 ops/sec ±1.03% (93 runs sampled)\nsource-map-js:    encoded output x 5,397 ops/sec ±0.38% (97 runs sampled)\nsource-map-0.6.1: encoded output x 5,422 ops/sec ±0.16% (100 runs sampled)\nsource-map-0.8.0: encoded output x 5,595 ops/sec ±0.11% (100 runs sampled)\nFastest is gen-mapping:      decoded output\n\n***\n\nreact.js.map\ngen-mapping:      addSegment x 5,058 ops/sec ±0.27% (100 runs sampled)\ngen-mapping:      addMapping x 4,352 ops/sec ±0.13% (97 runs sampled)\nsource-map-js:    addMapping x 1,569 ops/sec ±0.19% (99 runs sampled)\nsource-map-0.6.1: addMapping x 1,550 ops/sec ±0.31% (97 runs sampled)\nsource-map-0.8.0: addMapping x 1,560 ops/sec ±0.18% (99 runs sampled)\nFastest is gen-mapping:      addSegment\n\ngen-mapping:      decoded output x 157,479,701 ops/sec ±0.14% (99 runs sampled)\ngen-mapping:      encoded output x 6,392 ops/sec ±1.03% (94 runs sampled)\nsource-map-js:    encoded output x 2,213 ops/sec ±0.36% (99 runs sampled)\nsource-map-0.6.1: encoded output x 2,238 ops/sec ±0.23% (100 runs sampled)\nsource-map-0.8.0: encoded output x 2,304 ops/sec ±0.20% (100 runs sampled)\nFastest is gen-mapping:      decoded output\n```\n\n[source-map]: https://www.npmjs.com/package/source-map\n[trace-mapping]: https://github.com/jridgewell/trace-mapping\n",
    "licenseText": "Copyright 2022 Justin Ridgewell <jridgewell@google.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz#e5d2e450306a9491e3bd77e323e38d7aff315996",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.1.1.tgz",
    "hash": "e5d2e450306a9491e3bd77e323e38d7aff315996",
    "integrity": "sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w==",
    "registry": "npm",
    "packageName": "@jridgewell/gen-mapping",
    "cacheIntegrity": "sha512-sQXCasFk+U8lWYEe66WxRDOE9PjVz4vSM51fTu3Hw+ClTpUSQb718772vH3pyS5pShp6lvQM7SxgIDXXXmOX7w== sha1-5dLkUDBqlJHjvXfjI+ONev8xWZY="
  },
  "registry": "npm",
  "hash": "e5d2e450306a9491e3bd77e323e38d7aff315996"
}