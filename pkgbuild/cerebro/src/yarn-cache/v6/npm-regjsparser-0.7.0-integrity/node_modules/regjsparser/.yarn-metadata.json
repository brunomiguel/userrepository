{
  "manifest": {
    "name": "regjsparser",
    "version": "0.7.0",
    "author": {
      "name": "'Julian Viereck'",
      "email": "julian.viereck@gmail.com"
    },
    "license": "BSD-2-Clause",
    "main": "./parser",
    "bin": {
      "regjsparser": "bin/parser"
    },
    "homepage": "https://github.com/jviereck/regjsparser",
    "repository": {
      "type": "git",
      "url": "git@github.com:jviereck/regjsparser.git"
    },
    "scripts": {
      "test": "node test/index.js"
    },
    "files": [
      "bin/",
      "LICENSE.BSD",
      "parser.js",
      "README.md"
    ],
    "dependencies": {
      "jsesc": "~0.5.0"
    },
    "devDependencies": {
      "regenerate": "~1.0.1",
      "unicode-11.0.0": "^0.7.8"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-regjsparser-0.7.0-integrity/node_modules/regjsparser/package.json",
    "readmeFilename": "README.md",
    "readme": "# RegJSParser\n\nParsing the JavaScript's RegExp in JavaScript.\n\n## Installation\n\n```bash\nnpm install regjsparser\n```\n\n## Usage\n\n```js\nvar parse = require('regjsparser').parse;\n\nvar parseTree = parse('^a'); // /^a/\nconsole.log(parseTree);\n\n// Toggle on/off additional features:\nvar parseTree = parse('^a', '', {\n  // SEE: https://github.com/jviereck/regjsparser/pull/78\n  unicodePropertyEscape: true,\n\n  // SEE: https://github.com/jviereck/regjsparser/pull/83\n  namedGroups: true,\n\n  // SEE: https://github.com/jviereck/regjsparser/pull/89\n  lookbehind: true\n});\nconsole.log(parseTree);\n```\n\n## Testing\n\nTo run the tests, run the following command:\n\n```bash\nnpm test\n```\n\nTo create a new reference file, execute…\n\n```bash\nnode test/update-fixtures.js\n```\n\n…from the repo top directory.\n",
    "description": "Parsing the JavaScript's RegExp in JavaScript.",
    "licenseText": "Copyright (c) Julian Viereck and Contributors, All Rights Reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.7.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.7.0.tgz",
    "hash": "",
    "integrity": "sha512-A4pcaORqmNMDVwUjWoTzuhwMGpP+NykpfqAsEgI1FSH/EzC7lrN5TMd+kN8YCovX+jMpu8eaqXgXPCa0g8FQNQ==",
    "registry": "npm",
    "packageName": "regjsparser",
    "cacheIntegrity": "sha512-A4pcaORqmNMDVwUjWoTzuhwMGpP+NykpfqAsEgI1FSH/EzC7lrN5TMd+kN8YCovX+jMpu8eaqXgXPCa0g8FQNQ== sha1-prZntUyIXhi1JVTLSWDvcRh+mWg="
  },
  "registry": "npm",
  "hash": "038a5c68e46a98d3035705235a84f3ba1c0c1a93fe3729297ea02c1202351521ff1330bb96b3794cc77e90df180a8bd7fa3329bbc79aa978173c26b483c15035"
}