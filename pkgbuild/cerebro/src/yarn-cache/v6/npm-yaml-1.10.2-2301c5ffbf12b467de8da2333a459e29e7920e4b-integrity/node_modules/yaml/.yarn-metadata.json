{
  "manifest": {
    "name": "yaml",
    "version": "1.10.2",
    "license": "ISC",
    "author": {
      "name": "Eemeli Aro",
      "email": "eemeli@gmail.com"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/eemeli/yaml.git"
    },
    "description": "JavaScript parser and stringifier for YAML",
    "keywords": [
      "YAML",
      "parser",
      "stringifier"
    ],
    "homepage": "https://eemeli.org/yaml/v1/",
    "files": [
      "browser/",
      "dist/",
      "types/",
      "*.d.ts",
      "*.js",
      "*.mjs",
      "!*config.js"
    ],
    "type": "commonjs",
    "main": "./index.js",
    "browser": {
      "./index.js": "./browser/index.js",
      "./map.js": "./browser/map.js",
      "./pair.js": "./browser/pair.js",
      "./parse-cst.js": "./browser/parse-cst.js",
      "./scalar.js": "./browser/scalar.js",
      "./schema.js": "./browser/schema.js",
      "./seq.js": "./browser/seq.js",
      "./types.js": "./browser/types.js",
      "./types.mjs": "./browser/types.js",
      "./types/binary.js": "./browser/types/binary.js",
      "./types/omap.js": "./browser/types/omap.js",
      "./types/pairs.js": "./browser/types/pairs.js",
      "./types/set.js": "./browser/types/set.js",
      "./types/timestamp.js": "./browser/types/timestamp.js",
      "./util.js": "./browser/util.js",
      "./util.mjs": "./browser/util.js"
    },
    "exports": {
      ".": "./index.js",
      "./parse-cst": "./parse-cst.js",
      "./types": [
        {
          "import": "./types.mjs"
        },
        "./types.js"
      ],
      "./util": [
        {
          "import": "./util.mjs"
        },
        "./util.js"
      ],
      "./": "./"
    },
    "scripts": {
      "build": "npm run build:node && npm run build:browser",
      "build:browser": "rollup -c rollup.browser-config.js",
      "build:node": "rollup -c rollup.node-config.js",
      "clean": "git clean -fdxe node_modules",
      "lint": "eslint src/",
      "prettier": "prettier --write .",
      "start": "cross-env TRACE_LEVEL=log npm run build:node && node -i -e 'YAML=require(\".\")'",
      "test": "jest",
      "test:browsers": "cd playground && npm test",
      "test:dist": "npm run build:node && jest",
      "test:types": "tsc --lib ES2017 --noEmit tests/typings.ts",
      "docs:install": "cd docs-slate && bundle install",
      "docs:deploy": "cd docs-slate && ./deploy.sh",
      "docs": "cd docs-slate && bundle exec middleman server",
      "preversion": "npm test && npm run build",
      "prepublishOnly": "npm run clean && npm test && npm run build"
    },
    "browserslist": "> 0.5%, not dead",
    "prettier": {
      "arrowParens": "avoid",
      "semi": false,
      "singleQuote": true,
      "trailingComma": "none"
    },
    "devDependencies": {
      "@babel/core": "^7.12.10",
      "@babel/plugin-proposal-class-properties": "^7.12.1",
      "@babel/preset-env": "^7.12.11",
      "@rollup/plugin-babel": "^5.2.3",
      "babel-eslint": "^10.1.0",
      "babel-jest": "^26.6.3",
      "babel-plugin-trace": "^1.1.0",
      "common-tags": "^1.8.0",
      "cross-env": "^7.0.3",
      "eslint": "^7.19.0",
      "eslint-config-prettier": "^7.2.0",
      "fast-check": "^2.12.0",
      "jest": "^26.6.3",
      "prettier": "^2.2.1",
      "rollup": "^2.38.2",
      "typescript": "^4.1.3"
    },
    "engines": {
      "node": ">= 6"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-yaml-1.10.2-2301c5ffbf12b467de8da2333a459e29e7920e4b-integrity/node_modules/yaml/package.json",
    "readmeFilename": "README.md",
    "readme": "# YAML <a href=\"https://www.npmjs.com/package/yaml\"><img align=\"right\" src=\"https://badge.fury.io/js/yaml.svg\" title=\"npm package\" /></a>\n\n`yaml` is a JavaScript parser and stringifier for [YAML](http://yaml.org/), a human friendly data serialization standard. It supports both parsing and stringifying data using all versions of YAML, along with all common data schemas. As a particularly distinguishing feature, `yaml` fully supports reading and writing comments and blank lines in YAML documents.\n\nThe library is released under the ISC open source license, and the code is [available on GitHub](https://github.com/eemeli/yaml/). It has no external dependencies and runs on Node.js 6 and later, and in browsers from IE 11 upwards.\n\nFor the purposes of versioning, any changes that break any of the endpoints or APIs documented here will be considered semver-major breaking changes. Undocumented library internals may change between minor versions, and previous APIs may be deprecated (but not removed).\n\nFor more information, see the project's documentation site: [**eemeli.org/yaml/v1**](https://eemeli.org/yaml/v1/)\n\nTo install:\n\n```sh\nnpm install yaml\n```\n\n**Note:** This is `yaml@1`. You may also be interested in the next version, currently available as [`yaml@next`](https://www.npmjs.com/package/yaml/v/next).\n\n## API Overview\n\nThe API provided by `yaml` has three layers, depending on how deep you need to go: [Parse & Stringify](https://eemeli.org/yaml/v1/#parse-amp-stringify), [Documents](https://eemeli.org/yaml/#documents), and the [CST Parser](https://eemeli.org/yaml/#cst-parser). The first has the simplest API and \"just works\", the second gets you all the bells and whistles supported by the library along with a decent [AST](https://eemeli.org/yaml/#content-nodes), and the third is the closest to YAML source, making it fast, raw, and crude.\n\n```js\nimport YAML from 'yaml'\n// or\nconst YAML = require('yaml')\n```\n\n### Parse & Stringify\n\n- [`YAML.parse(str, options): value`](https://eemeli.org/yaml/v1/#yaml-parse)\n- [`YAML.stringify(value, options): string`](https://eemeli.org/yaml/v1/#yaml-stringify)\n\n### YAML Documents\n\n- [`YAML.createNode(value, wrapScalars, tag): Node`](https://eemeli.org/yaml/v1/#creating-nodes)\n- [`YAML.defaultOptions`](https://eemeli.org/yaml/v1/#options)\n- [`YAML.Document`](https://eemeli.org/yaml/v1/#yaml-documents)\n  - [`constructor(options)`](https://eemeli.org/yaml/v1/#creating-documents)\n  - [`defaults`](https://eemeli.org/yaml/v1/#options)\n  - [`#anchors`](https://eemeli.org/yaml/v1/#working-with-anchors)\n  - [`#contents`](https://eemeli.org/yaml/v1/#content-nodes)\n  - [`#errors`](https://eemeli.org/yaml/v1/#errors)\n- [`YAML.parseAllDocuments(str, options): YAML.Document[]`](https://eemeli.org/yaml/v1/#parsing-documents)\n- [`YAML.parseDocument(str, options): YAML.Document`](https://eemeli.org/yaml/v1/#parsing-documents)\n\n```js\nimport { Pair, YAMLMap, YAMLSeq } from 'yaml/types'\n```\n\n- [`new Pair(key, value)`](https://eemeli.org/yaml/v1/#creating-nodes)\n- [`new YAMLMap()`](https://eemeli.org/yaml/v1/#creating-nodes)\n- [`new YAMLSeq()`](https://eemeli.org/yaml/v1/#creating-nodes)\n\n### CST Parser\n\n```js\nimport parseCST from 'yaml/parse-cst'\n```\n\n- [`parseCST(str): CSTDocument[]`](https://eemeli.org/yaml/v1/#parsecst)\n- [`YAML.parseCST(str): CSTDocument[]`](https://eemeli.org/yaml/v1/#parsecst)\n\n## YAML.parse\n\n```yaml\n# file.yml\nYAML:\n  - A human-readable data serialization language\n  - https://en.wikipedia.org/wiki/YAML\nyaml:\n  - A complete JavaScript implementation\n  - https://www.npmjs.com/package/yaml\n```\n\n```js\nimport fs from 'fs'\nimport YAML from 'yaml'\n\nYAML.parse('3.14159')\n// 3.14159\n\nYAML.parse('[ true, false, maybe, null ]\\n')\n// [ true, false, 'maybe', null ]\n\nconst file = fs.readFileSync('./file.yml', 'utf8')\nYAML.parse(file)\n// { YAML:\n//   [ 'A human-readable data serialization language',\n//     'https://en.wikipedia.org/wiki/YAML' ],\n//   yaml:\n//   [ 'A complete JavaScript implementation',\n//     'https://www.npmjs.com/package/yaml' ] }\n```\n\n## YAML.stringify\n\n```js\nimport YAML from 'yaml'\n\nYAML.stringify(3.14159)\n// '3.14159\\n'\n\nYAML.stringify([true, false, 'maybe', null])\n// `- true\n// - false\n// - maybe\n// - null\n// `\n\nYAML.stringify({ number: 3, plain: 'string', block: 'two\\nlines\\n' })\n// `number: 3\n// plain: string\n// block: >\n//   two\n//\n//   lines\n// `\n```\n\n---\n\nBrowser testing provided by:\n\n<a href=\"https://www.browserstack.com/open-source\">\n<img width=200 src=\"https://eemeli.org/yaml/images/browserstack.svg\" />\n</a>\n",
    "licenseText": "Copyright 2018 Eemeli Aro <eemeli@gmail.com>\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/yaml/-/yaml-1.10.2.tgz#2301c5ffbf12b467de8da2333a459e29e7920e4b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/yaml/-/yaml-1.10.2.tgz",
    "hash": "2301c5ffbf12b467de8da2333a459e29e7920e4b",
    "integrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==",
    "registry": "npm",
    "packageName": "yaml",
    "cacheIntegrity": "sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg== sha1-IwHF/78StGfejaIzOkWeKeeSDks="
  },
  "registry": "npm",
  "hash": "2301c5ffbf12b467de8da2333a459e29e7920e4b"
}