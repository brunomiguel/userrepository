{
  "manifest": {
    "name": "through",
    "version": "2.3.8",
    "description": "simplified stream construction",
    "main": "index.js",
    "scripts": {
      "test": "set -e; for t in test/*.js; do node $t; done"
    },
    "devDependencies": {
      "stream-spec": "~0.3.5",
      "tape": "~2.3.2",
      "from": "~0.1.3"
    },
    "keywords": [
      "stream",
      "streams",
      "user-streams",
      "pipe"
    ],
    "author": {
      "name": "Dominic Tarr",
      "email": "dominic.tarr@gmail.com",
      "url": "dominictarr.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/dominictarr/through.git"
    },
    "homepage": "https://github.com/dominictarr/through",
    "testling": {
      "browsers": [
        "ie/8..latest",
        "ff/15..latest",
        "chrome/20..latest",
        "safari/5.1..latest"
      ],
      "files": "test/*.js"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-through-2.3.8-integrity/node_modules/through/package.json",
    "readmeFilename": "readme.markdown",
    "readme": "#through\n\n[![build status](https://secure.travis-ci.org/dominictarr/through.png)](http://travis-ci.org/dominictarr/through)\n[![testling badge](https://ci.testling.com/dominictarr/through.png)](https://ci.testling.com/dominictarr/through)\n\nEasy way to create a `Stream` that is both `readable` and `writable`. \n\n* Pass in optional `write` and `end` methods.\n* `through` takes care of pause/resume logic if you use `this.queue(data)` instead of `this.emit('data', data)`.\n* Use `this.pause()` and `this.resume()` to manage flow.\n* Check `this.paused` to see current flow state. (`write` always returns `!this.paused`).\n\nThis function is the basis for most of the synchronous streams in \n[event-stream](http://github.com/dominictarr/event-stream).\n\n``` js\nvar through = require('through')\n\nthrough(function write(data) {\n    this.queue(data) //data *must* not be null\n  },\n  function end () { //optional\n    this.queue(null)\n  })\n```\n\nOr, can also be used _without_ buffering on pause, use `this.emit('data', data)`,\nand this.emit('end')\n\n``` js\nvar through = require('through')\n\nthrough(function write(data) {\n    this.emit('data', data)\n    //this.pause() \n  },\n  function end () { //optional\n    this.emit('end')\n  })\n```\n\n## Extended Options\n\nYou will probably not need these 99% of the time.\n\n### autoDestroy=false\n\nBy default, `through` emits close when the writable\nand readable side of the stream has ended.\nIf that is not desired, set `autoDestroy=false`.\n\n``` js\nvar through = require('through')\n\n//like this\nvar ts = through(write, end, {autoDestroy: false})\n//or like this\nvar ts = through(write, end)\nts.autoDestroy = false\n```\n\n## License\n\nMIT / Apache2\n",
    "licenseText": "Apache License, Version 2.0\n\nCopyright (c) 2011 Dominic Tarr\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
    "hash": "",
    "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
    "registry": "npm",
    "packageName": "through",
    "cacheIntegrity": "sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg== sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="
  },
  "registry": "npm",
  "hash": "c3cf6a83b3c8f3001dbd7eb46cc0cff9b1680f90ef866f682e1785a793b86b6405d1c4811ac057e2a66669d3ccbd5aa52c9041722f96a8618e00fbdc0de35256"
}