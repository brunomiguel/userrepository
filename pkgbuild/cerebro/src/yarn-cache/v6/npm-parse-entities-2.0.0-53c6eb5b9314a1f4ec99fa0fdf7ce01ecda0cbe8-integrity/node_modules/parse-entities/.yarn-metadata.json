{
  "manifest": {
    "name": "parse-entities",
    "version": "2.0.0",
    "description": "Parse HTML character references: fast, spec-compliant, positional information",
    "license": "MIT",
    "keywords": [
      "parse",
      "html",
      "character",
      "reference",
      "entity",
      "entities"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/wooorm/parse-entities.git"
    },
    "bugs": {
      "url": "https://github.com/wooorm/parse-entities/issues"
    },
    "funding": {
      "type": "github",
      "url": "https://github.com/sponsors/wooorm"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "browser": {
      "./decode-entity.js": "./decode-entity.browser.js"
    },
    "react-native": {
      "./decode-entity.js": "./decode-entity.js"
    },
    "files": [
      "index.js",
      "decode-entity.js",
      "decode-entity.browser.js",
      "types/index.d.ts"
    ],
    "types": "types/index.d.ts",
    "dependencies": {
      "character-entities": "^1.0.0",
      "character-entities-legacy": "^1.0.0",
      "character-reference-invalid": "^1.0.0",
      "is-alphanumerical": "^1.0.0",
      "is-decimal": "^1.0.0",
      "is-hexadecimal": "^1.0.0"
    },
    "devDependencies": {
      "browserify": "^16.0.0",
      "dtslint": "^2.0.0",
      "nyc": "^15.0.0",
      "prettier": "^1.0.0",
      "remark-cli": "^7.0.0",
      "remark-preset-wooorm": "^6.0.0",
      "tape": "^4.0.0",
      "tape-run": "^6.0.0",
      "tinyify": "^2.0.0",
      "xo": "^0.25.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier --write \"**/*.{js,ts}\" && xo --fix",
      "build-bundle": "browserify . -s parseEntities > parse-entities.js",
      "build-mangle": "browserify . -s parseEntities -p tinyify > parse-entities.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test.js",
      "test-browser": "browserify test.js | tape-run",
      "test-types": "dtslint types",
      "test": "npm run format && npm run build && npm run test-coverage && npm run test-types"
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "no-self-compare": "off",
        "guard-for-in": "off",
        "max-depth": "off"
      },
      "ignores": [
        "parse-entities.js"
      ]
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-parse-entities-2.0.0-53c6eb5b9314a1f4ec99fa0fdf7ce01ecda0cbe8-integrity/node_modules/parse-entities/package.json",
    "readmeFilename": "readme.md",
    "readme": "# parse-entities\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n\nParse HTML character references: fast, spec-compliant, positional\ninformation.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install parse-entities\n```\n\n## Use\n\n```js\nvar decode = require('parse-entities')\n\ndecode('alpha &amp bravo')\n// => alpha & bravo\n\ndecode('charlie &copycat; delta')\n// => charlie ¬©cat; delta\n\ndecode('echo &copy; foxtrot &#8800; golf &#x1D306; hotel')\n// => echo ¬© foxtrot ‚â† golf ùåÜ hotel\n```\n\n## API\n\n## `parseEntities(value[, options])`\n\n##### `options`\n\n###### `options.additional`\n\nAdditional character to accept (`string?`, default: `''`).\nThis allows other characters, without error, when following an ampersand.\n\n###### `options.attribute`\n\nWhether to parse `value` as an attribute value (`boolean?`, default:\n`false`).\n\n###### `options.nonTerminated`\n\nWhether to allow non-terminated entities (`boolean`, default: `true`).\nFor example, `&copycat` for `¬©cat`.  This behaviour is spec-compliant but\ncan lead to unexpected results.\n\n###### `options.warning`\n\nError handler ([`Function?`][warning]).\n\n###### `options.text`\n\nText handler ([`Function?`][text]).\n\n###### `options.reference`\n\nReference handler ([`Function?`][reference]).\n\n###### `options.warningContext`\n\nContext used when invoking `warning` (`'*'`, optional).\n\n###### `options.textContext`\n\nContext used when invoking `text` (`'*'`, optional).\n\n###### `options.referenceContext`\n\nContext used when invoking `reference` (`'*'`, optional)\n\n###### `options.position`\n\nStarting `position` of `value` (`Location` or `Position`, optional).  Useful\nwhen dealing with values nested in some sort of syntax tree.  The default is:\n\n```js\n{\n  start: {line: 1, column: 1, offset: 0},\n  indent: []\n}\n```\n\n##### Returns\n\n`string` ‚Äî Decoded `value`.\n\n### `function warning(reason, position, code)`\n\nError handler.\n\n##### Context\n\n`this` refers to `warningContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `reason`\n\nHuman-readable reason for triggering a parse error (`string`).\n\n###### `position`\n\nPlace at which the parse error occurred (`Position`).\n\n###### `code`\n\nIdentifier of reason for triggering a parse error (`number`).\n\nThe following codes are used:\n\n| Code | Example            | Note                                          |\n| ---- | ------------------ | --------------------------------------------- |\n| `1`  | `foo &amp bar`     | Missing semicolon (named)                     |\n| `2`  | `foo &#123 bar`    | Missing semicolon (numeric)                   |\n| `3`  | `Foo &bar baz`     | Ampersand did not start a reference           |\n| `4`  | `Foo &#`           | Empty reference                               |\n| `5`  | `Foo &bar; baz`    | Unknown entity                                |\n| `6`  | `Foo &#128; baz`   | [Disallowed reference][invalid]               |\n| `7`  | `Foo &#xD800; baz` | Prohibited: outside permissible unicode range |\n\n### `function text(value, location)`\n\nText handler.\n\n##### Context\n\n`this` refers to `textContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `value`\n\nString of content (`string`).\n\n###### `location`\n\nLocation at which `value` starts and ends (`Location`).\n\n### `function reference(value, location, source)`\n\nCharacter reference handler.\n\n##### Context\n\n`this` refers to `referenceContext` when given to `parseEntities`.\n\n##### Parameters\n\n###### `value`\n\nEncoded character reference (`string`).\n\n###### `location`\n\nLocation at which `value` starts and ends (`Location`).\n\n###### `source`\n\nSource of character reference (`Location`).\n\n## Related\n\n*   [`stringify-entities`](https://github.com/wooorm/stringify-entities)\n    ‚Äî Encode HTML character references\n*   [`character-entities`](https://github.com/wooorm/character-entities)\n    ‚Äî Info on character entities\n*   [`character-entities-html4`](https://github.com/wooorm/character-entities-html4)\n    ‚Äî Info on HTML4 character entities\n*   [`character-entities-legacy`](https://github.com/wooorm/character-entities-legacy)\n    ‚Äî Info on legacy character entities\n*   [`character-reference-invalid`](https://github.com/wooorm/character-reference-invalid)\n    ‚Äî Info on invalid numeric character references\n\n## License\n\n[MIT][license] ¬© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/parse-entities.svg\n\n[build]: https://travis-ci.org/wooorm/parse-entities\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/parse-entities.svg\n\n[coverage]: https://codecov.io/github/wooorm/parse-entities\n\n[downloads-badge]: https://img.shields.io/npm/dm/parse-entities.svg\n\n[downloads]: https://www.npmjs.com/package/parse-entities\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/parse-entities.svg\n\n[size]: https://bundlephobia.com/result?p=parse-entities\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[warning]: #function-warningreason-position-code\n\n[text]: #function-textvalue-location\n\n[reference]: #function-referencevalue-location-source\n\n[invalid]: https://github.com/wooorm/character-reference-invalid\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2015 Titus Wormer <mailto:tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/parse-entities/-/parse-entities-2.0.0.tgz#53c6eb5b9314a1f4ec99fa0fdf7ce01ecda0cbe8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/parse-entities/-/parse-entities-2.0.0.tgz",
    "hash": "53c6eb5b9314a1f4ec99fa0fdf7ce01ecda0cbe8",
    "integrity": "sha512-kkywGpCcRYhqQIchaWqZ875wzpS/bMKhz5HnN3p7wveJTkTtyAB/AlnS0f8DFSqYW1T82t6yEAkEcB+A1I3MbQ==",
    "registry": "npm",
    "packageName": "parse-entities",
    "cacheIntegrity": "sha512-kkywGpCcRYhqQIchaWqZ875wzpS/bMKhz5HnN3p7wveJTkTtyAB/AlnS0f8DFSqYW1T82t6yEAkEcB+A1I3MbQ== sha1-U8brW5MUofTsmfoP33zgHs2gy+g="
  },
  "registry": "npm",
  "hash": "53c6eb5b9314a1f4ec99fa0fdf7ce01ecda0cbe8"
}