{
  "manifest": {
    "name": "request-progress",
    "version": "2.0.1",
    "description": "Tracks the download progress of a request made with mikeal/request, giving insight of various metrics including progress percent, download speed and time remaining",
    "main": "index.js",
    "dependencies": {
      "throttleit": "^1.0.0"
    },
    "devDependencies": {
      "coveralls": "^2.11.6",
      "expect.js": "^0.3.1",
      "istanbul": "^0.4.1",
      "mocha": "^2.3.4"
    },
    "scripts": {
      "test": "mocha --bail",
      "test-cov": "istanbul cover --dir test/coverage _mocha -- --bail && echo open test/coverage/lcov-report/index.html",
      "test-travis": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- --bail && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/IndigoUnited/node-request-progress"
    },
    "bugs": {
      "url": "http://github.com/IndigoUnited/node-request-progress/issues"
    },
    "keywords": [
      "progress",
      "request",
      "mikeal",
      "size",
      "bytes",
      "percent",
      "percentage",
      "speed",
      "eta",
      "etr"
    ],
    "author": {
      "name": "IndigoUnited",
      "email": "hello@indigounited.com",
      "url": "http://indigounited.com"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-request-progress-2.0.1-5d36bb57961c673aa5b788dbc8141fdf23b44e08-integrity/node_modules/request-progress/package.json",
    "readmeFilename": "README.md",
    "readme": "# request-progress\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coverage Status][coveralls-image]][coveralls-url] [![Dependency status][david-dm-image]][david-dm-url] [![Dev Dependency status][david-dm-dev-image]][david-dm-dev-url]\n\n[npm-url]:https://npmjs.org/package/request-progress\n[downloads-image]:http://img.shields.io/npm/dm/request-progress.svg\n[npm-image]:http://img.shields.io/npm/v/request-progress.svg\n[travis-url]:https://travis-ci.org/IndigoUnited/node-request-progress\n[travis-image]:http://img.shields.io/travis/IndigoUnited/node-request-progress.svg\n[coveralls-url]:https://coveralls.io/r/IndigoUnited/node-request-progress\n[coveralls-image]:https://img.shields.io/coveralls/IndigoUnited/node-request-progress.svg\n[david-dm-url]:https://david-dm.org/IndigoUnited/node-request-progress\n[david-dm-image]:https://img.shields.io/david/IndigoUnited/node-request-progress.svg\n[david-dm-dev-url]:https://david-dm.org/IndigoUnited/node-request-progress#info=devDependencies\n[david-dm-dev-image]:https://img.shields.io/david/dev/IndigoUnited/node-request-progress.svg\n\nTracks the download progress of a request made with [request](https://github.com/mikeal/request), giving insight of various metrics including progress percentage, download speed and time remaining.\n\n\n## Installation\n\n`$ npm install request-progress`\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar request = require('request');\nvar progress = require('request-progress');\n\n// The options argument is optional so you can omit it\nprogress(request('http://google.com/doodle.png'), {\n    throttle: 2000,                    // Throttle the progress event to 2000ms, defaults to 1000ms\n    delay: 1000,                       // Only start to emit after 1000ms delay, defaults to 0ms\n    lengthHeader: 'x-transfer-length'  // Length header to use, defaults to content-length\n})\n.on('progress', function (state) {\n    // The state is an object that looks like this:\n    // {\n    //     percentage: 0.5,           // Overall percentage (between 0 to 1)\n    //     speed: 554732,             // The download speed in bytes/sec\n    //     size: {\n    //         total: 90044871,       // The total payload size in bytes\n    //         transferred: 27610959  // The transferred payload size in bytes\n    //     },\n    //     time: {\n    //         elapsed: 36.235,      // The total elapsed seconds since the start (3 decimals)\n    //         remaining: 81.403     // The remaining seconds to finish (3 decimals)\n    //     }\n    // }\n    console.log('progress', state);\n})\n.on('error', function (err) {\n    // Do something with err\n})\n.pipe(fs.createWriteStream('doodle.png'));\n```\n\nIf the request's response does not include the `content-length` header, the values of some metrics will be `null`.\nAlso `speed` and `time.remaining` will be `null` until it can be calculated.\n\nThe `state` object emitted in the `progress` event is reused to avoid creating a new object for each event.   \nIf you wish to peek the `state` object at any time, it is available in `request.progressState`.\n\n\n## Tests\n\n`$ npm test`   \n`$ npm test-cov` to get coverage report\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n",
    "licenseText": "Copyright (c) 2012 IndigoUnited\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/request-progress/-/request-progress-2.0.1.tgz#5d36bb57961c673aa5b788dbc8141fdf23b44e08",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/request-progress/-/request-progress-2.0.1.tgz",
    "hash": "5d36bb57961c673aa5b788dbc8141fdf23b44e08",
    "integrity": "sha512-dxdraeZVUNEn9AvLrxkgB2k6buTlym71dJk1fk4v8j3Ou3RKNm07BcgbHdj2lLgYGfqX71F+awb1MR+tWPFJzA==",
    "registry": "npm",
    "packageName": "request-progress",
    "cacheIntegrity": "sha512-dxdraeZVUNEn9AvLrxkgB2k6buTlym71dJk1fk4v8j3Ou3RKNm07BcgbHdj2lLgYGfqX71F+awb1MR+tWPFJzA== sha1-XTa7V5YcZzqlt4jbyBQf3yO0Tgg="
  },
  "registry": "npm",
  "hash": "5d36bb57961c673aa5b788dbc8141fdf23b44e08"
}