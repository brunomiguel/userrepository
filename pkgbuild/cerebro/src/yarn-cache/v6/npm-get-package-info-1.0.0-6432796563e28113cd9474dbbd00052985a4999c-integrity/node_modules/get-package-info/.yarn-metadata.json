{
  "manifest": {
    "name": "get-package-info",
    "description": "Gets properties from package.json files in parent directories.",
    "version": "1.0.0",
    "license": "MIT",
    "main": "lib/index.js",
    "author": {
      "name": "Rahat Ahmed"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/rahatarmanahmed/get-package-info"
    },
    "scripts": {
      "lint": "standard",
      "test": "mocha --compilers js:babel-register,es6:babel-register,es6.js:babel-register test/",
      "build": "babel -d lib/ src/",
      "pretest": "npm run lint",
      "prebuild": "npm run test",
      "watch": "onchange src/ -- npm run build && echo Done",
      "dev": "npm run watch",
      "prepublish": "npm run build"
    },
    "devDependencies": {
      "babel-cli": "^6.4.0",
      "babel-preset-es2015": "^6.3.13",
      "babel-register": "^6.4.3",
      "chai": "^3.4.1",
      "mocha": "^3.0.0",
      "onchange": "^3.0.0",
      "standard": "^8.4.0"
    },
    "dependencies": {
      "bluebird": "^3.1.1",
      "debug": "^2.2.0",
      "lodash.get": "^4.0.0",
      "read-pkg-up": "^2.0.0"
    },
    "engines": {
      "node": ">= 4.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-get-package-info-1.0.0-6432796563e28113cd9474dbbd00052985a4999c-integrity/node_modules/get-package-info/package.json",
    "readmeFilename": "README.md",
    "readme": "# get-package-info [![Build Status](https://travis-ci.org/rahatarmanahmed/get-package-info.svg?branch=master)](https://travis-ci.org/rahatarmanahmed/get-package-info)\nGets properties from package.json files in parent directories.\n\n## Installing\n`npm install get-package-info`\n\n## Usage\n\n### `getPackageInfo(props, dir, [cb])`\n\nSearches for properties from package.json starting from the given directory going upwards, until all properties are found. Properties are set to the first instance found, and not overwritten. It returns a promise that resolves with the results (see [example](#Example) below for the structure of the results object). You may also specify a node-style callback if you prefer.\n\n#### `props`\n\nAn array of string properties to search for. Nested properties can be retreived with dot notation (ex: `dependencies.lodash`).\n\nIf an individual property is an array, it will search for those properties in order, and the first value found will be saved under all the given properties. This is useful if you want at least one of those properties, but don't want the search to fail when it finds one but not another. Ex: `getPackageInfo([['dependencies.lodash', 'devDependencies.lodash']], dir)` will search for lodash in both `dependencies` and `devDependencies`, and save whichever one it finds first under both properties in the results.\n\n#### `dir`\n\nThe initial directory to search in. `getPackageInfo(props, dir)` will look for a package.json in `dir`, and get the requested properties. If all the properties are not found, it will look in package.json files in parent directories.\n\n## Example\n```js\nvar getPackageInfo = require('get-package-info');\n\ngetPackageInfo([['productName', 'name'], 'dependencies.lodash'], '/path/to/dir')\n.then((result) => {\n    console.log(result);\n});\n```\n\nPossible output, depending on the directory structure and package.json contents:\n\n```\n{\n    values: {\n        name: 'package-name',\n        'dependencies.lodash': '~3.0.0'\n    },\n    source: {\n        productName: {\n            src: '/path/to/dir/package.json',\n            pkg: { ... }, // the parsed package.json this property came from\n            prop: 'productName'\n        },\n        name: {\n            src: '/path/to/dir/package.json',\n            pkg: { ... }, // the parsed package.json this property came from\n            prop: 'productName' // name uses productName's value because productName has priority\n        },\n        'dependencies.lodash': {\n            src: '/path/to/package.json', // This property was found in a higher directory\n            pkg: { ... },\n            prop: 'dependencies.lodash'\n        }\n    }\n}\n*/\n```\n\n## Handling Errors\n\nIf all the properties cannot be found in parent package.json files, then `getPackageInfo()` will reject it's promise (or callback with err argument) with an Error. `err.missingProps` will have an array of the properties that it could not find, and `err.result` will contain all the props that were found.\n\nIf any other error occurs(like I/O or runtime errors), `getPackageInfo()` will reject with that error itself.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Rahat Ahmed\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/get-package-info/-/get-package-info-1.0.0.tgz#6432796563e28113cd9474dbbd00052985a4999c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/get-package-info/-/get-package-info-1.0.0.tgz",
    "hash": "6432796563e28113cd9474dbbd00052985a4999c",
    "integrity": "sha512-SCbprXGAPdIhKAXiG+Mk6yeoFH61JlYunqdFQFHDtLjJlDjFf6x07dsS8acO+xWt52jpdVo49AlVDnUVK1sDNw==",
    "registry": "npm",
    "packageName": "get-package-info",
    "cacheIntegrity": "sha512-SCbprXGAPdIhKAXiG+Mk6yeoFH61JlYunqdFQFHDtLjJlDjFf6x07dsS8acO+xWt52jpdVo49AlVDnUVK1sDNw== sha1-ZDJ5ZWPigRPNlHTbvQAFKYWkmZw="
  },
  "registry": "npm",
  "hash": "6432796563e28113cd9474dbbd00052985a4999c"
}