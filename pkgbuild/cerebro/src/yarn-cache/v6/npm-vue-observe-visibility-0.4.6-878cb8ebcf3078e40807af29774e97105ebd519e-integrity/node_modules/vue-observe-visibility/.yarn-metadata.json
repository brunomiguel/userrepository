{
  "manifest": {
    "name": "vue-observe-visibility",
    "description": "Detect when an element is becoming visible or hidden on the page. ",
    "version": "0.4.6",
    "author": {
      "name": "Guillaume Chau",
      "email": "guillaume.b.chau@gmail.com"
    },
    "keywords": [
      "vue",
      "vuejs",
      "plugin"
    ],
    "license": "MIT",
    "main": "dist/vue-observe-visibility.umd.js",
    "module": "dist/vue-observe-visibility.esm.js",
    "unpkg": "dist/vue-observe-visibility.min.js",
    "scripts": {
      "dev": "nodemon --exec 'npm run build' --watch src",
      "build": "npm run build:browser && npm run build:es && npm run build:umd",
      "build:browser": "rollup --config build/rollup.config.browser.js",
      "build:es": "rollup --config build/rollup.config.es.js",
      "build:umd": "rollup --config build/rollup.config.umd.js",
      "prepublishOnly": "npm run build",
      "serve": "serve --open ./dist"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/Akryum/vue-observe-visibility.git"
    },
    "bugs": {
      "url": "https://github.com/Akryum/vue-observe-visibility/issues"
    },
    "homepage": "https://github.com/Akryum/vue-observe-visibility#readme",
    "devDependencies": {
      "@babel/core": "^7.4.0",
      "@babel/plugin-transform-runtime": "^7.4.0",
      "@babel/polyfill": "^7.4.3",
      "@babel/preset-env": "^7.4.2",
      "cross-env": "^5.2.0",
      "eslint": "^5.16.0",
      "eslint-config-standard": "^12.0.0",
      "eslint-plugin-html": "^5.0.3",
      "eslint-plugin-import": "^2.17.2",
      "eslint-plugin-node": "^9.0.1",
      "eslint-plugin-promise": "^4.1.1",
      "eslint-plugin-standard": "^4.0.0",
      "nodemon": "^1.19.0",
      "rollup": "^1.7.0",
      "rollup-plugin-babel": "^4.3.2",
      "rollup-plugin-commonjs": "^9.2.1",
      "rollup-plugin-node-resolve": "^4.0.1",
      "rollup-plugin-replace": "^2.0.0",
      "rollup-plugin-terser": "^4.0.4",
      "serve": "^6.5.8"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-vue-observe-visibility-0.4.6-878cb8ebcf3078e40807af29774e97105ebd519e-integrity/node_modules/vue-observe-visibility/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n<img src=\"./logo.png\" alt=\"vue-observe-visibility logo\"/>\n</p>\n\n<h1 align=\"center\">vue-observe-visibility</h1>\n\n<p align=\"center\">\n<a href=\"https://www.npmjs.com/package/vue-observe-visibility\"><img src=\"https://img.shields.io/npm/v/vue-observe-visibility.svg\"/> <img src=\"https://img.shields.io/npm/dm/vue-observe-visibility.svg\"/></a> <a href=\"https://vuejs.org/\"><img src=\"https://img.shields.io/badge/vue-2.x-brightgreen.svg\"/></a>\n</p>\n\n<p align=\"center\">\nDetect when an element is becoming visible or hidden on the page. <a href=\"https://jsfiddle.net/Akryum/ppt7endj/\">Demo</a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.patreon.com/akryum\" target=\"_blank\">\n    <img src=\"https://c5.patreon.com/external/logo/become_a_patron_button.png\" alt=\"Become a Patreon\">\n  </a>\n</p>\n\n## Sponsors\n\n### Gold\n\n<p align=\"center\">\n  <a href=\"https://www.sumcumo.com/en/\" target=\"_blank\">\n    <img src=\"https://cdn.discordapp.com/attachments/258614093362102272/570728242399674380/logo-sumcumo.png\" alt=\"sum.cumo logo\" width=\"400px\">\n  </a>\n</p>\n\n### Silver\n\n<p align=\"center\">\n  <a href=\"https://vueschool.io/\" target=\"_blank\">\n    <img src=\"https://vueschool.io/img/logo/vueschool_logo_multicolor.svg\" alt=\"VueSchool logo\" width=\"200px\">\n  </a>\n\n  <a href=\"https://www.vuemastery.com/\" target=\"_blank\">\n    <img src=\"https://cdn.discordapp.com/attachments/258614093362102272/557267759130607630/Vue-Mastery-Big.png\" alt=\"Vue Mastery logo\" width=\"200px\">\n  </a>\n</p>\n\n### Bronze\n\n<p align=\"center\">\n  <a href=\"https://vuetifyjs.com\" target=\"_blank\">\n    <img src=\"https://cdn.discordapp.com/attachments/537832759985700914/537832771691872267/Horizontal_Logo_-_Dark.png\" width=\"100\">\n  </a>\n\n  <a href=\"https://www.frontenddeveloperlove.com/\" target=\"_blank\" title=\"Frontend Developer Love\">\n    <img src=\"https://cdn.discordapp.com/attachments/258614093362102272/557267744249085953/frontend_love-logo.png\" width=\"56\">\n  </a>\n</p>\n\n<br>\n\n## Table of contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Example](#example)\n\n# Installation\n\n```\nnpm install --save vue-observe-visibility\n```\n\n**⚠️ This plugin uses the [Intersection Observer API](http://caniuse.com/#feat=intersectionobserver) that is not supported in every browser (currently supported in Edge, Firefox and Chrome). You need to include a [polyfill](https://github.com/w3c/IntersectionObserver/tree/master/polyfill) to make it work on incompatible browsers.**\n\n## Import\n\n```javascript\nimport Vue from 'vue'\nimport VueObserveVisibility from 'vue-observe-visibility'\n\nVue.use(VueObserveVisibility)\n```\n\nOr:\n\n```javascript\nimport Vue from 'vue'\nimport { ObserveVisibility } from 'vue-observe-visibility'\n\nVue.directive('observe-visibility', ObserveVisibility)\n```\n\n## Browser\n\n```html\n<script src=\"vue.js\"></script>\n<script src=\"https://unpkg.com/vue-observe-visibility/dist/vue-observe-visibility.min.js\"></script>\n```\n\nThe plugin should be auto-installed. If not, you can install it manually with the instructions below.\n\nInstall all the directives:\n\n```javascript\nVue.use(VueObserveVisibility)\n```\n\nUse specific directives:\n\n```javascript\nVue.directive('observe-visibility', VueObserveVisibility.ObserveVisibility)\n```\n\n# Usage\n\nThe `v-observe-visibility` directive is very easy to use. Just pass a function as the value:\n\n```html\n<div v-observe-visibility=\"visibilityChanged\">\n```\n\nThis also works on components:\n\n```html\n<MyComponent v-observe-visibility=\"visibilityChanged\" />\n```\n\nThe function will be called whenever the visiblity of the element changes with the argument being a boolean (`true` means the element is visible on the page, `false` means that it is not).\n\nThe second argument is the corresponding [IntersectionObserverEntry](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry) object.\n\n```javascript\nvisibilityChanged (isVisible, entry) {\n  this.isVisible = isVisible\n  console.log(entry)\n}\n```\n\n## IntersectionObserver options\n\nIt's possible to pass the [IntersectionObserver `options` object](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver#Parameters) using the `intersection` attribute:\n\n```html\n<div v-observe-visibility=\"{\n  callback: visibilityChanged,\n  intersection: {\n    root: ...,\n    rootMargin: ...,\n    threshold: 0.3,\n  },\n}\">\n```\n\n## Once\n\nIt can be useful to listen for when the element is visible only once, for example to build introduction animations. Set the `once` option to `true`:\n\n```html\n<div v-observe-visibility=\"{\n  callback: visibilityChanged,\n  once: true,\n}\">\n```\n\n## Throttling visibility\n\nYou can use the `throttle` options (in ms) specifying minimal state duration after which an event will be fired. It's useful when you are tracking visibility while scrolling and don't want events from fastly scrolled out elements.\n\n```html\n<div v-observe-visibility=\"{\n  callback: visibilityChanged,\n  throttle: 300,\n}\">\n```\n\nYou can also pass a `leading` option to trigger the callback the first time when the visibility changes without waiting for the throttle delay.\nI can either be `visible`, `hidden` or `both`.\n\n```html\n<div v-observe-visibility=\"{\n  callback: visibilityChanged,\n  throttle: 300,\n  throttleOptions: {\n    leading: 'visible',\n  },\n}\">\n```\n\n## Passing custom arguments\n\nYou can add custom argument by using an intermediate function:\n\n```html\n<div v-observe-visibility=\"(isVisible, entry) => visibilityChanged(isVisible, entry, customArgument)\">\n```\n\nHere `visibilityChanged` will be call with a third custom argument `customArgument`.\n\n## Disabling the observer\n\nPassing a falsy value to the directive will disable the observer:\n\n```html\n<div\n  v-for=\"(item, index) of items\"\n  :key=\"item.id\"\n  v-observe-visibility=\"index === items.length - 1 ? visibilityChanged : false\"\n>\n```\n\n# Example\n\n```html\n<div id=\"app\">\n  <button @click=\"show = !show\">Toggle</button>\n  <label>\n    <input type=\"checkbox\" v-model=\"isVisible\" disabled/> Is visible?\n  </label>\n  <div ref=\"test\" v-show=\"show\" v-observe-visibility=\"visibilityChanged\">Hello world!</div>\n</div>\n\n<script>\nnew Vue({\n  el: '#app',\n  data: {\n    show: true,\n    isVisible: true,\n  },\n  methods: {\n    visibilityChanged (isVisible, entry) {\n      this.isVisible = isVisible\n      console.log(entry)\n    },\n  },\n})\n</script>\n```\n\n---\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vue-observe-visibility/-/vue-observe-visibility-0.4.6.tgz#878cb8ebcf3078e40807af29774e97105ebd519e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vue-observe-visibility/-/vue-observe-visibility-0.4.6.tgz",
    "hash": "878cb8ebcf3078e40807af29774e97105ebd519e",
    "integrity": "sha512-xo0CEVdkjSjhJoDdLSvoZoQrw/H2BlzB5jrCBKGZNXN2zdZgMuZ9BKrxXDjNP2AxlcCoKc8OahI3F3r3JGLv2Q==",
    "registry": "npm",
    "packageName": "vue-observe-visibility",
    "cacheIntegrity": "sha512-xo0CEVdkjSjhJoDdLSvoZoQrw/H2BlzB5jrCBKGZNXN2zdZgMuZ9BKrxXDjNP2AxlcCoKc8OahI3F3r3JGLv2Q== sha1-h4y4688weOQIB68pd06XEF69UZ4="
  },
  "registry": "npm",
  "hash": "878cb8ebcf3078e40807af29774e97105ebd519e"
}