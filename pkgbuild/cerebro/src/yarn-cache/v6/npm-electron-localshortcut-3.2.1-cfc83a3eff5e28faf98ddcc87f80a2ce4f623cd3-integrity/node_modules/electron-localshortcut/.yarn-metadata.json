{
  "manifest": {
    "name": "electron-localshortcut",
    "version": "3.2.1",
    "description": "register/unregister a keyboard shortcut locally to a BrowserWindow instance, without using a Menu",
    "repository": {
      "type": "git",
      "url": "https://github.com/parro-it/electron-localshortcut.git"
    },
    "license": "MIT",
    "author": {
      "name": "andrea@parro.it"
    },
    "scripts": {
      "doc": "documentation readme index.js --section=API",
      "start": "electron example.js",
      "test": "electron test.js | faucet && xo",
      "setup-dev": "npm rebuild --runtime=electron --target=4.2.12 --disturl=https://atom.io/download/atom-shell --abi=64",
      "tape": "DEBUG=electron-localshortcut electron test.js"
    },
    "keywords": [
      "electron",
      "shortcuts",
      "browser-window"
    ],
    "files": [
      "index.js"
    ],
    "dependencies": {
      "debug": "^4.0.1",
      "electron-is-accelerator": "^0.1.0",
      "keyboardevent-from-electron-accelerator": "^2.0.0",
      "keyboardevents-areequal": "^0.2.1"
    },
    "devDependencies": {
      "ava": "^2.4.0",
      "delay": "^4.0.1",
      "documentation": "^12.1.3",
      "electron": "^4.2.12",
      "faucet": "0.0.1",
      "p-electron": "^0.8.0",
      "p-event": "^4.1.0",
      "p-timeout": "^3.2.0",
      "robotjs": "^0.5.1",
      "tape-async": "^2.3.0",
      "xo": "^0.25.3"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-electron-localshortcut-3.2.1-cfc83a3eff5e28faf98ddcc87f80a2ce4f623cd3-integrity/node_modules/electron-localshortcut/package.json",
    "readmeFilename": "README.md",
    "readme": "# electron-localshortcut\n\nA module to register/unregister a keyboard shortcut\nlocally to a BrowserWindow instance, without using a Menu.\n\nThis is built to circumvent [this Electron issue](https://github.com/atom/electron/issues/1334).\n\n[![Travis Build Status](https://img.shields.io/travis/parro-it/electron-localshortcut/master.svg)](http://travis-ci.org/parro-it/electron-localshortcut)\n[![NPM module](https://img.shields.io/npm/v/electron-localshortcut.svg)](https://npmjs.org/package/electron-localshortcut)\n[![NPM downloads](https://img.shields.io/npm/dt/electron-localshortcut.svg)](https://npmjs.org/package/electron-localshortcut)\n[![Greenkeeper badge](https://badges.greenkeeper.io/parro-it/electron-localshortcut.svg)](https://greenkeeper.io/)\n\n# Installation\n\n```bash\nnpm install --save electron-localshortcut\n```\n\n# Usage\n\n```javascript\n\tconst electronLocalshortcut = require('electron-localshortcut');\n\tconst BrowserWindow = require('electron').BrowserWindow;\n\n\tconst win = new BrowserWindow();\n\twin.loadUrl('https://github.com');\n\twin.show();\n\n\telectronLocalshortcut.register(win, 'Ctrl+A', () => {\n\t\tconsole.log('You pressed ctrl & A');\n\t});\n\n\telectronLocalshortcut.register(win, 'Ctrl+B', () => {\n\t\tconsole.log('You pressed ctrl & B');\n\t});\n\n\telectronLocalshortcut.register(win, ['Ctrl+R', 'F5'], () => {\n        console.log('You pressed ctrl & R or F5');\n    });\n\n\tconsole.log(\n\t\telectronLocalshortcut.isRegistered(win, 'Ctrl+A')\n\t);      // true\n\n\telectronLocalshortcut.unregister(win, 'Ctrl+A');\n\telectronLocalshortcut.unregisterAll(win);\n```\n\n# App shortcuts.\n\nIf you omit the window argument of `isRegistered`, `unregisterAll`, `unregister` and `register` methods, the shortcut is registered as an app shortcut.\nIt is active when any window of the app is focused.\n\nThey differ from native [global-shortcuts](https://github.com/atom/electron/blob/master/docs/api/global-shortcut.md) because they doesn't interfere with other apps running on the same machine.\n\n# Shortcut behaviour.\n\nIf you register a shortcut for a window, this module unregister the shortcut when the window is hidden, unfocused or minimized, and automatically restore them when the window is restored and focused again.\n\nIf you register an app shortcut, this module unregister the shortcut when all windows of your app are hidden, unfocused or minimized, and automatically restore it when any window of your app is restored and focused again.\n\n# API\n\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->\n\n## disableAll\n\nDisable all of the shortcuts registered on the BrowserWindow instance.\nRegistered shortcuts no more works on the `window` instance, but the module\nkeep a reference on them. You can reactivate them later by calling `enableAll`\nmethod on the same window instance.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance\n\nReturns **[Undefined](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## enableAll\n\nEnable all of the shortcuts registered on the BrowserWindow instance that\nyou had previously disabled calling `disableAll` method.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance\n\nReturns **[Undefined](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## unregisterAll\n\nUnregisters all of the shortcuts registered on any focused BrowserWindow\ninstance. This method does not unregister any shortcut you registered on\na particular window instance.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance\n\nReturns **[Undefined](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## register\n\nRegisters the shortcut `accelerator`on the BrowserWindow instance.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance to register.\n    This argument could be omitted, in this case the function register\n    the shortcut on all app windows.\n-   `accelerator` **([String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String) \\| [Array](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array)&lt;[String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)>)** the shortcut to register\n-   `callback` **[Function](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/function)** This function is called when the shortcut is pressed\n    and the window is focused and not minimized.\n\nReturns **[Undefined](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## unregister\n\nUnregisters the shortcut of `accelerator` registered on the BrowserWindow instance.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance to unregister.\n    This argument could be omitted, in this case the function unregister the shortcut\n    on all app windows. If you registered the shortcut on a particular window instance, it will do nothing.\n-   `accelerator` **([String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String) \\| [Array](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array)&lt;[String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)>)** the shortcut to unregister\n\nReturns **[Undefined](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## isRegistered\n\nReturns `true` or `false` depending on whether the shortcut `accelerator`\nis registered on `window`.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance to check. This argument\n    could be omitted, in this case the function returns whether the shortcut\n    `accelerator` is registered on all app windows. If you registered the\n    shortcut on a particular window instance, it return false.\n-   `accelerator` **[String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** the shortcut to check\n\nReturns **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** if the shortcut `accelerator` is registered on `window`.\n\n# License\n\nThe MIT License (MIT)\n\nCopyright (c) 2017 Andrea Parodi\n",
    "licenseText": "The MIT License (MIT)\nCopyright (c) 2017 Andrea Parodi\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/electron-localshortcut/-/electron-localshortcut-3.2.1.tgz#cfc83a3eff5e28faf98ddcc87f80a2ce4f623cd3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/electron-localshortcut/-/electron-localshortcut-3.2.1.tgz",
    "hash": "cfc83a3eff5e28faf98ddcc87f80a2ce4f623cd3",
    "integrity": "sha512-DWvhKv36GsdXKnaFFhEiK8kZZA+24/yFLgtTwJJHc7AFgDjNRIBJZ/jq62Y/dWv9E4ypYwrVWN2bVrCYw1uv7Q==",
    "registry": "npm",
    "packageName": "electron-localshortcut",
    "cacheIntegrity": "sha512-DWvhKv36GsdXKnaFFhEiK8kZZA+24/yFLgtTwJJHc7AFgDjNRIBJZ/jq62Y/dWv9E4ypYwrVWN2bVrCYw1uv7Q== sha1-z8g6Pv9eKPr5jdzIf4Cizk9iPNM="
  },
  "registry": "npm",
  "hash": "cfc83a3eff5e28faf98ddcc87f80a2ce4f623cd3"
}