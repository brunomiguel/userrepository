{
  "manifest": {
    "name": "applescript",
    "description": "Easily execute arbitrary AppleScript code on OS X through NodeJS.",
    "version": "1.0.0",
    "author": {
      "name": "Nathan Rajlich",
      "email": "nathan@tootallnate.net"
    },
    "keywords": [
      "applescript",
      "mac",
      "osx"
    ],
    "main": "./lib/applescript",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-applescript-1.0.0-bb87af568cad034a4e48c4bdaf6067a3a2701317-integrity/node_modules/applescript/package.json",
    "readmeFilename": "README.md",
    "readme": "node-applescript\n================\n\nA high-level way to execute AppleScript code through NodeJS, and retrieve\nthe result as a native JavaScript object. Underneath the hood, this\nmodule is just a simple wrapper around the OS X `osascript` command.\n\n### Why?\nAppleScripts are the only way to communicate and interact with certain\nexternal OS X processes, for example [iTunes](http://www.itunes.com).\n\nEasy Install\n------------\n\n``` bash\n$ npm install applescript\n```\n\nRequirements\n------------\n\n * Mac (or Hackintosh) running [OS X](http://www.apple.com/macosx) (tested with Snow Leopard)\n * [NodeJS](http://nodejs.org) (v0.2.0 or newer)\n\nUsage\n-----\n\nThe `node-applescript` module provides `execString` and `execFile` functions\nto easily execute AppleScript commands and buffer the output into a calback.\n\n``` js\nvar applescript = require('applescript');\n\n// Very basic AppleScript command. Returns the song name of each\n// currently selected track in iTunes as an 'Array' of 'String's.\nvar script = 'tell application \"iTunes\" to get name of selection';\n\napplescript.execString(script, function(err, rtn) {\n  if (err) {\n    // Something went wrong!\n  }\n  if (Array.isArray(rtn)) {\n    rtn.forEach(function(songName) {\n      console.log(songName);\n    });\n  }\n});\n```\n\n`execFile` works the exact same way, except you pass the _path_ of the AppleScript\n(`*.applescript`) file as the first argument instead of the command itself, and you\nmay pass an optional Array of String arguments to send to the applescript file.\n\nLicence\n-------\n\nThe `node-applescript` module is licensed under the MIT license, of course!\n",
    "licenseText": " Copyright (c) 2010 Nathan Rajlich\n\n Permission is hereby granted, free of charge, to any person\n obtaining a copy of this software and associated documentation\n files (the \"Software\"), to deal in the Software without\n restriction, including without limitation the rights to use,\n copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the\n Software is furnished to do so, subject to the following\n conditions:\n\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n OTHER DEALINGS IN THE SOFTWARE.\n",
    "license": "MIT"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/applescript/-/applescript-1.0.0.tgz#bb87af568cad034a4e48c4bdaf6067a3a2701317",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/applescript/-/applescript-1.0.0.tgz",
    "hash": "bb87af568cad034a4e48c4bdaf6067a3a2701317",
    "integrity": "sha512-yvtNHdWvtbYEiIazXAdp/NY+BBb65/DAseqlNiJQjOx9DynuzOYDbVLBJvuc0ve0VL9x6B3OHF6eH52y9hCBtQ==",
    "registry": "npm",
    "packageName": "applescript",
    "cacheIntegrity": "sha512-yvtNHdWvtbYEiIazXAdp/NY+BBb65/DAseqlNiJQjOx9DynuzOYDbVLBJvuc0ve0VL9x6B3OHF6eH52y9hCBtQ== sha1-u4evVoytA0pOSMS9r2Bno6JwExc="
  },
  "registry": "npm",
  "hash": "bb87af568cad034a4e48c4bdaf6067a3a2701317"
}