{
  "manifest": {
    "name": "defaults",
    "version": "1.0.3",
    "description": "merge single level defaults over a config object",
    "main": "index.js",
    "scripts": {
      "test": "node test.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/tmpvar/defaults.git"
    },
    "keywords": [
      "config",
      "defaults"
    ],
    "author": {
      "name": "Elijah Insua",
      "email": "tmpvar@gmail.com"
    },
    "license": "MIT",
    "readmeFilename": "README.md",
    "dependencies": {
      "clone": "^1.0.2"
    },
    "devDependencies": {
      "tap": "^2.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-defaults-1.0.3-c656051e9817d9ff08ed881477f3fe4019f3ef7d-integrity/node_modules/defaults/package.json",
    "readme": "# defaults\n\nA simple one level options merge utility\n\n## install\n\n`npm install defaults`\n\n## use\n\n```javascript\n\nvar defaults = require('defaults');\n\nvar handle = function(options, fn) {\n  options = defaults(options, {\n    timeout: 100\n  });\n\n  setTimeout(function() {\n    fn(options);\n  }, options.timeout);\n}\n\nhandle({ timeout: 1000 }, function() {\n  // we're here 1000 ms later\n});\n\nhandle({ timeout: 10000 }, function() {\n  // we're here 10s later\n});\n\n```\n\n## summary\n\nthis module exports a function that takes 2 arguments: `options` and `defaults`.  When called, it overrides all of `undefined` properties in `options` with the clones of properties defined in `defaults`\n\nSidecases: if called with a falsy `options` value, options will be initialized to a new object before being merged onto.\n\n## license\n\n[MIT](LICENSE)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Elijah Insua\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/defaults/-/defaults-1.0.3.tgz#c656051e9817d9ff08ed881477f3fe4019f3ef7d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/defaults/-/defaults-1.0.3.tgz",
    "hash": "c656051e9817d9ff08ed881477f3fe4019f3ef7d",
    "integrity": "sha512-s82itHOnYrN0Ib8r+z7laQz3sdE+4FP3d9Q7VLO7U+KRT+CR0GsWuyHxzdAY82I7cXv0G/twrqomTJLOssO5HA==",
    "registry": "npm",
    "packageName": "defaults",
    "cacheIntegrity": "sha512-s82itHOnYrN0Ib8r+z7laQz3sdE+4FP3d9Q7VLO7U+KRT+CR0GsWuyHxzdAY82I7cXv0G/twrqomTJLOssO5HA== sha1-xlYFHpgX2f8I7YgUd/P+QBnz730="
  },
  "registry": "npm",
  "hash": "c656051e9817d9ff08ed881477f3fe4019f3ef7d"
}