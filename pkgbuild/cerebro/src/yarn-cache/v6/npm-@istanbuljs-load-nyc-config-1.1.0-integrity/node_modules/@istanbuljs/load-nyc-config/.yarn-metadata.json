{
  "manifest": {
    "name": "@istanbuljs/load-nyc-config",
    "version": "1.1.0",
    "description": "Utility function to load nyc configuration",
    "main": "index.js",
    "scripts": {
      "pretest": "xo",
      "test": "tap",
      "snap": "npm test -- --snapshot",
      "release": "standard-version"
    },
    "engines": {
      "node": ">=8"
    },
    "license": "ISC",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/istanbuljs/load-nyc-config.git"
    },
    "bugs": {
      "url": "https://github.com/istanbuljs/load-nyc-config/issues"
    },
    "homepage": "https://github.com/istanbuljs/load-nyc-config#readme",
    "dependencies": {
      "camelcase": "^5.3.1",
      "find-up": "^4.1.0",
      "get-package-type": "^0.1.0",
      "js-yaml": "^3.13.1",
      "resolve-from": "^5.0.0"
    },
    "devDependencies": {
      "semver": "^6.3.0",
      "standard-version": "^7.0.0",
      "tap": "^14.10.5",
      "xo": "^0.25.3"
    },
    "xo": {
      "ignores": [
        "test/fixtures/extends/invalid.*"
      ],
      "rules": {
        "require-atomic-updates": 0,
        "capitalized-comments": 0,
        "unicorn/import-index": 0,
        "import/extensions": 0,
        "import/no-useless-path-segments": 0
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@istanbuljs-load-nyc-config-1.1.0-integrity/node_modules/@istanbuljs/load-nyc-config/package.json",
    "readmeFilename": "README.md",
    "readme": "# @istanbuljs/load-nyc-config\n\nThe utility function which NYC uses to load configuration.\nThis can be used by outside programs to calculate the configuration.\nCommand-line arguments are not considered by this function.\n\n```js\nconst {loadNycConfig} = require('@istanbuljs/load-nyc-config');\n\n(async () {\n  console.log(await loadNycConfig());\n})();\n```\n\n## loadNycConfig([options])\n\n### options.cwd\n\nType: `string`\nDefault: `cwd` from parent nyc process or `process.cwd()`\n\n### options.nycrcPath\n\nType: `string`\nDefault: `undefined`\n\nName of the file containing nyc configuration.\nThis can be a relative or absolute path.\nRelative paths can exist at `options.cwd` or any parent directory.\nIf an nycrc is specified but cannot be found an exception is thrown.\n\nIf no nycrc option is provided the default priority of config files are:\n\n* .nycrc\n* .nycrc.json\n* .nycrc.yml\n* .nycrc.yaml\n* nyc.config.js\n* nyc.config.cjs\n* nyc.config.mjs\n\n## Configuration merging\n\nConfiguration is first loaded from `package.json` if found, this serves as the package\ndefaults.  These options can be overridden by an nycrc if found.  Arrays are not merged,\nso if `package.json` sets `\"require\": [\"@babel/register\"]` and `.nycrc` sets `\"require\": [\"esm\"]`\nthe effective require setting will only include `\"esm\"`.\n\n## isLoading\n\n```js\nconst {isLoading} = require('@istanbuljs/load-nyc-config');\n\nconsole.log(isLoading());\n```\n\nIn some cases source transformation hooks can get installed before the configuration is\nloaded.  This allows hooks to ignore source loads that occur during configuration load.\n\n## `@istanbuljs/load-nyc-config` for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `@istanbuljs/load-nyc-config` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-istanbuljs-load-nyc-config?utm_source=npm-istanbuljs-load-nyc-config&utm_medium=referral&utm_campaign=enterprise)\n",
    "licenseText": "ISC License\n\nCopyright (c) 2019, Contributors\n\nPermission to use, copy, modify, and/or distribute this software\nfor any purpose with or without fee is hereby granted, provided\nthat the above copyright notice and this permission notice\nappear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE\nLIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES\nOR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\nWHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\nARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz",
    "hash": "",
    "integrity": "sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==",
    "registry": "npm",
    "packageName": "@istanbuljs/load-nyc-config",
    "cacheIntegrity": "sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ== sha1-/T2x1Z7PfPEh6AZQu4ZxL5tV7O0="
  },
  "registry": "npm",
  "hash": "5637874a5233a6ffcdc83dcdd18b877d738f0c88b1700d6ad9957df30b0ca9c6253e6bf69f761bda560ff5730496768555783903b60b4de2eee95f38b900e399"
}