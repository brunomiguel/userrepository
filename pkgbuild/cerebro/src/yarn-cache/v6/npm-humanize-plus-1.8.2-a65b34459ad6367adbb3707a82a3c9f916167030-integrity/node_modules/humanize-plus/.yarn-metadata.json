{
  "manifest": {
    "name": "humanize-plus",
    "title": "Humanize",
    "description": "A simple utility library for making the web more humane.",
    "version": "1.8.2",
    "license": "MIT",
    "homepage": "https://github.com/HubSpot/humanize",
    "main": "./dist/humanize.js",
    "author": {
      "name": "HubSpotDev",
      "email": "devteam@hubspot.com",
      "url": "dev.hubspot.com"
    },
    "maintainers": [
      {
        "name": "Jonathan Kim",
        "email": "me@jonathan-kim.com",
        "url": "http://jonathan-kim.com"
      },
      {
        "name": "Bryan Ash",
        "email": "ashbryanct@gmail.com",
        "url": "http://github.com/b-ash"
      },
      {
        "name": "Andy Aylward",
        "email": "aaylward@gmail.com",
        "url": "http://github.com/aaylward"
      },
      {
        "name": "Nicholas Hwang",
        "email": "geek@nicholashwang.com",
        "url": "http://github.com/geekjuice"
      }
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/HubSpot/humanize.git"
    },
    "bugs": {
      "url": "https://github.com/HubSpot/humanize/issues"
    },
    "engines": {
      "node": ">= 0.8.0"
    },
    "scripts": {
      "reinstall": "del node_modules && npm install",
      "clean": "del dist",
      "preuglify": "mkdir -p dist",
      "uglify": "uglifyjs -cmo dist/humanize.min.js dist/humanize.js",
      "watch": "babel --watch src -d dist",
      "babel": "babel src -d dist",
      "header": "./bin/header",
      "build": "./bin/build",
      "test": "node __tests__/runner.js"
    },
    "devDependencies": {
      "babel-cli": "^6.6.5",
      "babel-core": "^6.7.2",
      "babel-preset-es2015-riot": "^1.0.3",
      "del-cli": "^0.2.0",
      "glob": "^7.0.3",
      "jasmine": "^2.4.1",
      "uglify-js": "^2.6.2"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-humanize-plus-1.8.2-a65b34459ad6367adbb3707a82a3c9f916167030-integrity/node_modules/humanize-plus/package.json",
    "readmeFilename": "README.md",
    "readme": "# Humanize Plus\n\n[![npm version](https://img.shields.io/npm/v/humanize-plus.svg?style=flat-square)](https://www.npmjs.com/package/humanize-plus)\n[![build status](https://img.shields.io/travis/HubSpot/humanize/master.svg?style=flat-square)](https://travis-ci.org/HubSpot/humanize)\n[![npm downloads](https://img.shields.io/npm/dm/humanize-plus.svg?style=flat-square)](https://www.npmjs.com/package/humanize-plus)\n\n\nA simple utility library for making the web more humane.\n\n## Getting Started\n\nHumanize Plus is available via node package manager.\n\n`npm install humanize-plus`\n\nOr download the [minified version][min] or the [full version][max].\n\n[min]: https://raw.github.com/HubSpot/humanize/master/dist/humanize.min.js\n[max]: https://raw.github.com/HubSpot/humanize/master/src/humanize.js\n\nIn your web page:\n\n```html\n<script src=\"public/humanize.min.js\"></script>\n<script>\nvar capitalized = Humanize.capitalize(\"ten tiny ducklings.\")\n// \"Ten tiny ducklings.\"\n</script>\n```\n\nIn your node package.json:\n```javascript\n\"dependencies\": {\n  \"humanize-plus\": \"^1.7.0\"\n}\n```\n\nFor recent changes, see the [changelog](https://github.com/HubSpot/humanize/blob/master/CHANGELOG.md).\n\n## API Methods\n\n### Numbers\n\n##### formatNumber\nFormats a number to a human-readable string. Localize by overriding the precision, thousand and decimal arguments.\n\n```javascript\nHumanize.formatNumber(123456789, 2)\n// \"123,456,789.00\"\n```\n\n##### intComma\nConverts an integer to a string containing commas every three digits.\n\n```javascript\nHumanize.intComma(123456789)\n// \"123,456,789\"\n```\n##### intcomma - DEPRECATED - This method will not be present in the next major version.\nAlias for `intComma`\n\n\n##### intword - DEPRECATED - This method will not be present in the next major version.\nConverts a large integer to a friendly text representation.\nThis method is now a thin wrapper around compactInteger\n\n`Humanize.intword(num, ch, de) === Humanize.compactInteger(num, de)`\n\n```javascript\nHumanize.intword(123456789, 'nopnopnopnop', 1)\n// \"123.5M\"\n\nHumanize.intword(123456789, 'this is a nop', 3)\n// \"123.457M\"\n\nHumanize.intword(10, 'still a nop', 1)\n// \"10\"\n```\n\n##### compactInteger\nConverts an integer into its most compact representation. Decimal precision is ignored for all integers, n, such that abs(n) < 1000.\n\n```javascript\nHumanize.compactInteger(123456789, 1)\n// \"123.5M\"\n\n// Switch to scientific notation for trillons, because no one knows those abbreviations.\nHumanize.compactInteger(-7832186132456328967, 4)\n// \"-7.8322x10^18\"\n\nHumanize.compactInteger(-100, 2)\n// \"-100\"\n```\n\n##### boundedNumber\nBounds a value from above. Modified values have customizable ending strings ('+' by default)\n\n```javascript\nHumanize.boundedNumber(110, 100)\n// \"100+\"\n\nHumanize.boundedNumber(50, 100)\n// \"50\"\n```\n\n##### truncatenumber - DEPRECATED - This method will not be present in the next major version.\nAlias for `boundedNumber`\n\n##### ordinal\nConverts an integer to its ordinal as a string.\n\n```javascript\nHumanize.ordinal(22)\n// \"22nd\"\n```\n\n##### times\nInterprets numbers as occurences. Also accepts an optional array/map of overrides.\n\n```javascript\nfor (i=0; i<5; i++) {\n  Humanize.times(i, {\"4\": \"too many\"});\n  // Bonus!\n  if (i === 1) {\n    Humanize.times(1.1);\n  }\n}\n// never\n// once\n// 1.1 times\n// twice\n// 3 times\n// too many times\n```\n\n##### pace\nMatches a pace (value and interval) with a logical time frame. Very useful for slow paces.\n\n```javascript\nsecond = 1000\nweek = 6.048e8\ndecade = 3.156e11\n\nHumanize.pace(1.5, second, \"heartbeat\")\n// Approximately 2 heartbeats per second\n\nHumanize.pace(4, week)\n// Approximately 4 times per week\n\nHumanize.pace(1, decade, \"life crisis\")\n// Less than 1 life crisis per week\n```\n\n##### fileSize\nFormats the value like a 'human-readable' file size (i.e. '13 KB', '4.1 MB', '102 bytes', etc).\n\n```javascript\nHumanize.fileSize(1024 * 20)\n// \"20 Kb\"\n\nHumanize.fileSize(1024 * 2000)\n// \"1.95 Mb\"\n\nHumanize.fileSize(Math.pow(1000, 4))\n// \"931.32 Gb\"\n```\n##### filesize - DEPRECATED - This method will not be present in the next major version.\nAlias for `fileSize`\n\n\n##### pluralize\nReturns the plural version of a given word if the value is not 1. The default suffix is 's'.\n\n```javascript\nHumanize.pluralize(1, \"duck\")\n// \"duck\"\n\nHumanize.pluralize(3, \"duck\")\n// \"ducks\"\n\nHumanize.pluralize(3, \"duck\", \"duckies\")\n// \"duckies\"\n```\n\n### Strings\n\n##### truncate\nTruncates a string if it is longer than the specified number of characters. Truncated strings will end with a translatable ellipsis sequence (\"â€¦\").\n\n```javascript\nHumanize.truncate('long text is good for you')\n// \"long text is good for you\"\n\nHumanize.truncate('long text is good for you', 19)\n// \"long text is goo...\"\n\nHumanize.truncate('long text is good for you', 19, '... etc')\n// \"long text is... etc\"\n```\n\n##### truncateWords\nTruncates a string after a certain number of words.\n\n```javascript\nHumanize.truncateWords('long text is good for you', 5)\n// \"long text is good for ...\"\n```\n\n##### truncatewords - DEPRECATED - This method will not be present in the next major version.\nAlias for `truncateWords`\n\n##### nl2br and br2nl\nFlexible conversion of `<br/>` tags to newlines and vice versa.\n\n```javascript\n// Use your imagination\n```\n\n##### capitalize\nCapitalizes the first letter in a string, optionally downcasing the tail.\n\n```javascript\nHumanize.capitalize(\"some boring string\")\n// \"Some boring string\"\n\nHumanize.capitalize(\"wHoOaA!\")\n// \"WHoOaA!\"\n\nHumanize.capitalize(\"wHoOaA!\", true)\n// \"Whooaa!\"\n```\n\n##### capitalizeAll\nCaptializes the first letter of every word in a string.\n\n```javascript\nHumanize.capitalizeAll(\"some boring string\")\n// \"Some Boring String\"\n```\n\n##### titleCase\nIntelligently capitalizes eligible words in a string and normalizes internal whitespace.\n\n```javascript\nHumanize.titleCase(\"some of a boring string\")\n// \"Some of a Boring String\"\n\nHumanize.titleCase(\"cool the          iTunes cake, O'Malley!\")\n// \"Cool the iTunes Cake, O'Malley!\"\n```\n\n##### titlecase - DEPRECATED - This method will not be present in the next major version.\nAlias for `titleCase`\n\n\n### Arrays\n\n##### oxford\nConverts a list of items to a human readable string with an optional limit.\n\n```javascript\nitems = ['apple', 'orange', 'banana', 'pear', 'pineapple']\n\nHumanize.oxford(items)\n// \"apple, orange, banana, pear, and pineapple\"\n\nHumanize.oxford(items, 3)\n// \"apple, orange, banana, and 2 others\"\n\n// Pluralizes properly too!\nHumanize.oxford(items, 4)\n// \"apple, orange, banana, pear, and 1 other\"\n\nHumanize.oxford(items, 3, \"and some other fruits\")\n// \"apple, orange, banana, and some other fruits\"\n```\n\n##### frequency\nDescribes how many times an item appears in a list\n\n```javascript\naznPics = [\n  'http://24.media.tumblr.com/77082543cb69af56ede38a0cdb2511d0/tumblr_mh96olWPLv1r8k4ywo1_1280.jpg',\n  'http://25.media.tumblr.com/3e2d318be34d5ef8f86a612cd1d795ff/tumblr_mhbhb96t3z1r8k4ywo1_1280.jpg',\n  'http://24.media.tumblr.com/8c5a052e33c27c784514e1b124b383a1/tumblr_mhexaqrk0w1r8k4ywo1_1280.jpg'\n]\nbigfootPics = []\n\n\"Asians \" + Humanize.frequency(aznPics, \"took pictures of food\")\n// \"Asians took pictures of food 3 times\"\n\n\"Bigfoot \" + Humanize.frequency(bigfootPics, \"took pictures of food\")\n// \"Bigfoot never took pictures of food\"\n```\n\n\n### Utility methods\n\n##### toFixed\nFixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\").\n\n```javascript\nHumanize.toFixed(0.615, 2)\n// \"0.62\"\n```\n\n##### normalizePrecision\nEnsures precision value is a positive integer.\n\n```javascript\nHumanize.normalizePrecision(-232.231)\n// 232\n```\n\n## Important notes\nPlease don't edit files in the `dist` subdirectory as they are generated through compilation. You'll find source code in the `src` subdirectory!\n\n## Compiling\n\n`npm run install && npm run build`\n\nAnd that's it!\n\nThe project will compile the CoffeeScript files into the `dist` subdirectory.\n\n## Testing\n\n`npm run test`\n\n\n## License\nCopyright (c) 2013-2016 HubSpotDev\nLicensed under the MIT license.\n",
    "licenseText": "The MIT License (MIT)\nCopyright (c) 2013-2016 HubSpot\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/humanize-plus/-/humanize-plus-1.8.2.tgz#a65b34459ad6367adbb3707a82a3c9f916167030",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/humanize-plus/-/humanize-plus-1.8.2.tgz",
    "hash": "a65b34459ad6367adbb3707a82a3c9f916167030",
    "integrity": "sha1-pls0RZrWNnrbs3B6gqPJ+RYWcDA=",
    "registry": "npm",
    "packageName": "humanize-plus",
    "cacheIntegrity": "sha512-jaLeQyyzjjINGv7O9JJegjsaUcWjSj/1dcXvLEgU3pGdqCdP1PiC/uwr+saJXhTNBHZtmKnmpXyazgh+eceRxA== sha1-pls0RZrWNnrbs3B6gqPJ+RYWcDA="
  },
  "registry": "npm",
  "hash": "a65b34459ad6367adbb3707a82a3c9f916167030"
}