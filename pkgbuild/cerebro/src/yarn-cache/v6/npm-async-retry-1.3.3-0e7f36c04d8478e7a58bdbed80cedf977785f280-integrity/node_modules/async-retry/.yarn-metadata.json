{
  "manifest": {
    "name": "async-retry",
    "version": "1.3.3",
    "description": "Retrying made simple, easy and async",
    "main": "./lib/index.js",
    "scripts": {
      "test": "yarn run test-lint && yarn run test-unit",
      "test-lint": "eslint .",
      "test-unit": "ava",
      "lint:staged": "lint-staged"
    },
    "files": [
      "lib"
    ],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/vercel/async-retry.git"
    },
    "ava": {
      "failFast": true
    },
    "dependencies": {
      "retry": "0.13.1"
    },
    "pre-commit": "lint:staged",
    "lint-staged": {
      "*.js": [
        "eslint",
        "prettier --write --single-quote",
        "git add"
      ]
    },
    "eslintConfig": {
      "extends": [
        "airbnb",
        "prettier"
      ],
      "rules": {
        "no-var": 0,
        "prefer-arrow-callback": 0
      }
    },
    "devDependencies": {
      "ava": "3.15.0",
      "eslint": "7.32.0",
      "eslint-config-airbnb": "18.2.1",
      "eslint-config-prettier": "8.3.0",
      "eslint-plugin-import": "2.24.0",
      "eslint-plugin-jsx-a11y": "6.4.1",
      "eslint-plugin-react": "7.24.0",
      "lint-staged": "11.1.2",
      "node-fetch": "2.6.1",
      "pre-commit": "1.2.2",
      "prettier": "2.3.2",
      "then-sleep": "1.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-async-retry-1.3.3-0e7f36c04d8478e7a58bdbed80cedf977785f280-integrity/node_modules/async-retry/package.json",
    "readmeFilename": "README.md",
    "readme": "# async-retry\n\nRetrying made simple, easy, and async.\n\n## Usage\n\n```js\n// Packages\nconst retry = require('async-retry');\nconst fetch = require('node-fetch');\n\nawait retry(\n  async (bail) => {\n    // if anything throws, we retry\n    const res = await fetch('https://google.com');\n\n    if (403 === res.status) {\n      // don't retry upon 403\n      bail(new Error('Unauthorized'));\n      return;\n    }\n\n    const data = await res.text();\n    return data.substr(0, 500);\n  },\n  {\n    retries: 5,\n  }\n);\n```\n\n### API\n\n```js\nretry(retrier : Function, opts : Object) => Promise\n```\n\n- The supplied function can be `async` or not. In other words, it can be a function that returns a `Promise` or a value.\n- The supplied function receives two parameters\n  1. A `Function` you can invoke to abort the retrying (bail)\n  2. A `Number` identifying the attempt. The absolute first attempt (before any retries) is `1`.\n- The `opts` are passed to `node-retry`. Read [its docs](https://github.com/tim-kos/node-retry)\n  - `retries`: The maximum amount of times to retry the operation. Default is `10`.\n  - `factor`: The exponential factor to use. Default is `2`.\n  - `minTimeout`: The number of milliseconds before starting the first retry. Default is `1000`.\n  - `maxTimeout`: The maximum number of milliseconds between two retries. Default is `Infinity`.\n  - `randomize`: Randomizes the timeouts by multiplying with a factor between `1` to `2`. Default is `true`.\n  - `onRetry`: an optional `Function` that is invoked after a new retry is performed. It's passed the `Error` that triggered it as a parameter.\n\n## Authors\n\n- Guillermo Rauch ([@rauchg](https://twitter.com/rauchg)) - [Vercel](https://vercel.com)\n- Leo Lamprecht ([@notquiteleo](https://twitter.com/notquiteleo)) - [Vercel](https://vercel.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2021 Vercel, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/async-retry/-/async-retry-1.3.3.tgz#0e7f36c04d8478e7a58bdbed80cedf977785f280",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/async-retry/-/async-retry-1.3.3.tgz",
    "hash": "0e7f36c04d8478e7a58bdbed80cedf977785f280",
    "integrity": "sha512-wfr/jstw9xNi/0teMHrRW7dsz3Lt5ARhYNZ2ewpadnhaIp5mbALhOAP+EAdsC7t4Z6wqsDVv9+W6gm1Dk9mEyw==",
    "registry": "npm",
    "packageName": "async-retry",
    "cacheIntegrity": "sha512-wfr/jstw9xNi/0teMHrRW7dsz3Lt5ARhYNZ2ewpadnhaIp5mbALhOAP+EAdsC7t4Z6wqsDVv9+W6gm1Dk9mEyw== sha1-Dn82wE2EeOeli9vtgM7fl3eF8oA="
  },
  "registry": "npm",
  "hash": "0e7f36c04d8478e7a58bdbed80cedf977785f280"
}