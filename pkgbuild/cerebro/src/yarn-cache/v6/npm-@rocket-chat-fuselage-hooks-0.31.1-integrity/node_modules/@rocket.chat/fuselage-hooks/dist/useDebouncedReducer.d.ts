import { Dispatch, DispatchWithoutAction, Reducer, ReducerState, ReducerStateWithoutAction, ReducerWithoutAction } from 'react';
export declare function useDebouncedReducer<S, R extends ReducerWithoutAction<S>>(reducer: R, initialArg: S, init: undefined, delay: number): [
    ReducerStateWithoutAction<R>,
    DispatchWithoutAction & {
        flush: () => void;
        cancel: () => void;
    }
];
export declare function useDebouncedReducer<S, R extends ReducerWithoutAction<S>, I>(reducer: R, initialArg: I, init: (arg: I) => ReducerStateWithoutAction<R>, delay: number): [
    ReducerStateWithoutAction<R>,
    DispatchWithoutAction & {
        flush: () => void;
        cancel: () => void;
    }
];
export declare function useDebouncedReducer<S, A, R extends Reducer<S, A>>(reducer: R, initialArg: S, init: undefined, delay: number): [
    ReducerState<R>,
    Dispatch<A> & {
        flush: () => void;
        cancel: () => void;
    }
];
