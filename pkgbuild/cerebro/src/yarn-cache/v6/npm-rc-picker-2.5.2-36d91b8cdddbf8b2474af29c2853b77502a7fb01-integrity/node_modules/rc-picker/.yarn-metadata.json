{
  "manifest": {
    "name": "rc-picker",
    "version": "2.5.2",
    "description": "React date & time picker",
    "keywords": [
      "react",
      "react-component",
      "react-picker"
    ],
    "main": "./lib/index",
    "module": "./es/index",
    "files": [
      "assets/*.css",
      "assets/*.less",
      "es",
      "lib",
      "dist"
    ],
    "homepage": "https://react-component.github.io/picker",
    "repository": {
      "type": "git",
      "url": "git@github.com:react-component/picker.git"
    },
    "bugs": {
      "url": "http://github.com/react-component/picker/issues"
    },
    "license": "MIT",
    "scripts": {
      "start": "cross-env NODE_ENV=development father doc dev --storybook",
      "build": "father doc build --storybook",
      "compile": "father build && lessc assets/index.less assets/index.css",
      "gh-pages": "npm run build && father doc deploy",
      "prepublishOnly": "npm run compile && np --yolo --no-publish",
      "lint": "eslint src/ --ext .ts,.tsx,.jsx,.js,.md",
      "prettier": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md}\"",
      "test": "father test",
      "coverage": "father test --coverage",
      "now-build": "npm run build"
    },
    "dependencies": {
      "@babel/runtime": "^7.10.1",
      "classnames": "^2.2.1",
      "date-fns": "^2.15.0",
      "dayjs": "^1.8.30",
      "moment": "^2.24.0",
      "rc-trigger": "^5.0.4",
      "rc-util": "^5.4.0",
      "shallowequal": "^1.1.0"
    },
    "engines": {
      "node": ">=8.x"
    },
    "devDependencies": {
      "@types/classnames": "^2.2.9",
      "@types/enzyme": "^3.10.3",
      "@types/jest": "^26.0.0",
      "@types/react": "^16.9.2",
      "@types/react-dom": "^16.9.0",
      "@types/shallowequal": "^1.1.1",
      "@umijs/fabric": "^2.0.8",
      "coveralls": "^3.0.6",
      "cross-env": "^7.0.2",
      "enzyme": "^3.0.0",
      "enzyme-adapter-react-16": "^1.0.1",
      "enzyme-to-json": "^3.4.0",
      "eslint": "~7.15.0",
      "eslint-plugin-eslint-comments": "^3.1.2",
      "eslint-plugin-jest": "^24.0.0",
      "eslint-plugin-react-hooks": "^4.0.2",
      "eslint-plugin-unicorn": "^25.0.0",
      "father": "^2.13.4",
      "less": "^3.10.3",
      "mockdate": "^3.0.2",
      "np": "^7.1.0",
      "prettier": "^2.0.5",
      "react": "^16.0.0",
      "react-dom": "^16.0.0",
      "react-test-renderer": "^16.0.0",
      "typescript": "^4.0.3"
    },
    "cnpm": {
      "mode": "npm"
    },
    "tnpm": {
      "mode": "npm"
    },
    "peerDependencies": {
      "react": ">=16.9.0",
      "react-dom": ">=16.9.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-rc-picker-2.5.2-36d91b8cdddbf8b2474af29c2853b77502a7fb01-integrity/node_modules/rc-picker/package.json",
    "readmeFilename": "README.md",
    "readme": "# rc-picker\n\n[![NPM version][npm-image]][npm-url]\n[![build status][github-actions-image]][github-actions-url]\n[![Codecov][codecov-image]][codecov-url]\n[![Dependencies][david-image]][david-url]\n[![DevDependencies][david-dev-image]][david-dev-url]\n[![npm download][download-image]][download-url]\n[![bundle size][bundlephobia-image]][bundlephobia-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-picker.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-picker\n[github-actions-image]: https://github.com/react-component/picker/workflows/CI/badge.svg\n[github-actions-url]: https://github.com/react-component/picker/actions\n[codecov-image]: https://img.shields.io/codecov/c/github/react-component/picker/master.svg?style=flat-square\n[codecov-url]: https://codecov.io/gh/react-component/picker/branch/master\n[david-url]: https://david-dm.org/react-component/picker\n[david-image]: https://david-dm.org/react-component/picker/status.svg?style=flat-square\n[david-dev-url]: https://david-dm.org/react-component/picker?type=dev\n[david-dev-image]: https://david-dm.org/react-component/picker/dev-status.svg?style=flat-square\n[download-image]: https://img.shields.io/npm/dm/rc-picker.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-picker\n[bundlephobia-url]: https://bundlephobia.com/result?p=rc-picker\n[bundlephobia-image]: https://badgen.net/bundlephobia/minzip/rc-picker\n\n## Live Demo\n\nhttps://react-component.github.io/picker/\n\n## Install\n\n[![rc-picker](https://nodei.co/npm/rc-picker.png)](https://npmjs.org/package/rc-picker)\n\n## Usage\n\n```js\nimport Picker from 'rc-picker';\nimport 'rc-picker/assets/index.css';\nimport { render } from 'react-dom';\n\nrender(<Picker />, mountNode);\n```\n\n## API\n\n### Picker\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| prefixCls | String | rc-picker | prefixCls of this component |\n| className | String | '' | additional css class of root dom node |\n| style | React.CSSProperties |  | additional style of root dom node |\n| dropdownClassName | String | '' | additional className applied to dropdown |\n| dropdownAlign | Object:alignConfig of [dom-align](https://github.com/yiminghe/dom-align) |  | value will be merged into placement's dropdownAlign config |\n| popupStyle | React.CSSProperties |  | customize popup style |\n| transitionName | String | '' | css class for animation |\n| locale | Object | import from 'rc-picker/lib/locale/en_US' | rc-picker locale |\n| inputReadOnly | Boolean | false | set input to read only |\n| allowClear | Boolean | false | whether show clear button |\n| autoFocus | Boolean | false | whether auto focus |\n| showTime | Boolean \\| Object | [showTime options](#showTime-options) | to provide an additional time selection |\n| picker | time \\| date \\| week \\| month \\| year |  | control which kind of panel should be shown |\n| format | String \\| String[] | depends on whether you set timePicker and your locale | use to format/parse date(without time) value to/from input. When an array is provided, all values are used for parsing and first value for display |\n| use12Hours | Boolean | false | 12 hours display mode |\n| value | moment |  | current value like input's value |\n| defaultValue | moment |  | defaultValue like input's defaultValue |\n| open | Boolean | false | current open state of picker. controlled prop |\n| suffixIcon | ReactNode |  | The custom suffix icon |\n| clearIcon | ReactNode |  | The custom clear icon |\n| prevIcon | ReactNode |  | The custom prev icon |\n| nextIcon | ReactNode |  | The custom next icon |\n| superPrevIcon | ReactNode |  | The custom super prev icon |\n| superNextIcon | ReactNode |  | The custom super next icon |\n| disabled | Boolean | false | whether the picker is disabled |\n| placeholder | String |  | picker input's placeholder |\n| getPopupContainer | function(trigger) |  | to set the container of the floating layer, while the default is to create a div element in body |\n| onChange | Function(date: moment, dateString: string) |  | a callback function, can be executed when the selected time is changing |\n| onOpenChange | Function(open:boolean) |  | called when open/close picker |\n| onFocus | (event:React.FocusEvent<HTMLInputElement>) => void |  | called like input's on focus |\n| onBlur | (event:React.FocusEvent<HTMLInputElement>) => void |  | called like input's on blur |\n| onKeyDown | (event:React.KeyboardEvent<HTMLInputElement>, preventDefault: () => void) => void |  | input on keydown event |\n| direction | String: ltr or rtl |  | Layout direction of picker component, it supports RTL direction too. |\n\n### PickerPanel\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| prefixCls | String | rc-picker | prefixCls of this component |\n| className | String | '' | additional css class of root dom |\n| style | React.CSSProperties |  | additional style of root dom node |\n| locale | Object | import from 'rc-picker/lib/locale/en_US' | rc-picker locale |\n| value | moment |  | current value like input's value |\n| defaultValue | moment |  | defaultValue like input's defaultValue |\n| defaultPickerValue | moment |  | Set default display picker view date |\n| mode | time \\| datetime \\| date \\| week \\| month \\| year \\| decade |  | control which kind of panel |\n| picker | time \\| date \\| week \\| month \\| year |  | control which kind of panel |\n| tabIndex | Number | 0 | view [tabIndex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) |\n| showTime | Boolean \\| Object | [showTime options](#showTime-options) | to provide an additional time selection |\n| showToday | Boolean | false | whether to show today button |\n| disabledDate | Function(date:moment) => Boolean |  | whether to disable select of current date |\n| dateRender | Function(currentDate:moment, today:moment) => React.Node |  | custom rendering function for date cells |\n| monthCellRender | Function(currentDate:moment, locale:Locale) => React.Node |  | Custom month cell render method |\n| renderExtraFooter | (mode) => React.Node |  | extra footer |\n| onSelect | Function(date: moment) |  | a callback function, can be executed when the selected time |\n| onPanelChange | Function(value: moment, mode) |  | callback when picker panel mode is changed |\n| onMouseDown | (event:React.MouseEvent<HTMLInputElement>) => void |  | callback when executed onMouseDown evnent |\n| direction | String: ltr or rtl |  | Layout direction of picker component, it supports RTL direction too. |\n\n### RangePicker\n\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| prefixCls | String | rc-picker | prefixCls of this component |\n| className | String | '' | additional css class of root dom |\n| style | React.CSSProperties |  | additional style of root dom node |\n| locale | Object | import from 'rc-picker/lib/locale/en_US' | rc-picker locale |\n| value | moment |  | current value like input's value |\n| defaultValue | moment |  | defaultValue like input's defaultValue |\n| defaultPickerValue | moment |  | Set default display picker view date |\n| separator | String | '~' | set separator between inputs |\n| picker | time \\| date \\| week \\| month \\| year |  | control which kind of panel |\n| placeholder | [String, String] |  | placeholder of date input |\n| showTime | Boolean \\| Object | [showTime options](#showTime-options) | to provide an additional time selection |\n| showTime.defaultValue | [moment, moment] |  | to set default time of selected date |\n| use12Hours | Boolean | false | 12 hours display mode |\n| disabledTime | Function(date: moment, type:'start'\\|'end'):Object |  |  | to specify the time that cannot be selected |\n| ranges | { String \\| [range: string]: moment[] } \\| { [range: string]: () => moment[] } |  | preseted ranges for quick selection |\n| format | String \\| String[] | depends on whether you set timePicker and your locale | use to format/parse date(without time) value to/from input. When an array is provided, all values are used for parsing and first value for display |\n| allowEmpty | [Boolean, Boolean] |  | allow range picker clearing text |\n| selectable | [Boolean, Boolean] |  | whether to selected picker |\n| disabled | Boolean | false | whether the range picker is disabled |\n| onChange | Function(value:[moment], formatString: [string, string]) |  | a callback function, can be executed when the selected time is changing |\n| onCalendarChange | Function(value:[moment], formatString: [string, string], info: { range:'start'\\|'end' }) |  | a callback function, can be executed when the start time or the end time of the range is changing |\n| direction | String: ltr or rtl |  | Layout direction of picker component, it supports RTL direction too. |\n| order | Boolean | true | (TimeRangePicker only) `false` to disable auto order |\n\n### showTime-options\n\n| Property            | Type    | Default | Description                        |\n| ------------------- | ------- | ------- | ---------------------------------- |\n| format              | String  |         | moment format                      |\n| showHour            | Boolean | true    | whether show hour                  |\n| showMinute          | Boolean | true    | whether show minute                |\n| showSecond          | Boolean | true    | whether show second                |\n| use12Hours          | Boolean | false   | 12 hours display mode              |\n| hourStep            | Number  | 1       | interval between hours in picker   |\n| minuteStep          | Number  | 1       | interval between minutes in picker |\n| secondStep          | Number  | 1       | interval between seconds in picker |\n| hideDisabledOptions | Boolean | false   | whether hide disabled options      |\n| defaultValue        | moment  | null    | default initial value              |\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## License\n\nrc-picker is released under the MIT license.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2019-present afc163\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rc-picker/-/rc-picker-2.5.2.tgz#36d91b8cdddbf8b2474af29c2853b77502a7fb01",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rc-picker/-/rc-picker-2.5.2.tgz",
    "hash": "36d91b8cdddbf8b2474af29c2853b77502a7fb01",
    "integrity": "sha512-rQLgvjyFrxjiWlR+Q7CyXdTOP/gHbiXlBca7irOtuEb6HMRLdm+/OfIB7xaaPHgdkv1ZOsxCk8zCEX6j0qf24g==",
    "registry": "npm",
    "packageName": "rc-picker",
    "cacheIntegrity": "sha512-rQLgvjyFrxjiWlR+Q7CyXdTOP/gHbiXlBca7irOtuEb6HMRLdm+/OfIB7xaaPHgdkv1ZOsxCk8zCEX6j0qf24g== sha1-NtkbjN3b+LJHSvKcKFO3dQKn+wE="
  },
  "registry": "npm",
  "hash": "36d91b8cdddbf8b2474af29c2853b77502a7fb01"
}