{
  "manifest": {
    "name": "clone-deep",
    "description": "Recursively (deep) clone JavaScript native types, like Object, Array, RegExp, Date as well as primitives.",
    "version": "4.0.1",
    "homepage": "https://github.com/jonschlinkert/clone-deep",
    "author": {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/jonschlinkert/clone-deep.git"
    },
    "bugs": {
      "url": "https://github.com/jonschlinkert/clone-deep/issues"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "engines": {
      "node": ">=6"
    },
    "scripts": {
      "test": "mocha"
    },
    "dependencies": {
      "is-plain-object": "^2.0.4",
      "kind-of": "^6.0.2",
      "shallow-clone": "^3.0.0"
    },
    "devDependencies": {
      "gulp-format-md": "^2.0.0",
      "mocha": "^5.2.0"
    },
    "keywords": [
      "array",
      "assign",
      "buffer",
      "clamped",
      "clone",
      "clone-array",
      "clone-array-deep",
      "clone-buffer",
      "clone-date",
      "clone-deep",
      "clone-map",
      "clone-object",
      "clone-object-deep",
      "clone-reg-exp",
      "clone-regex",
      "clone-regexp",
      "clone-set",
      "date",
      "deep",
      "extend",
      "mixin",
      "mixin-object",
      "object",
      "regex",
      "regexp",
      "shallow",
      "symbol"
    ],
    "verb": {
      "toc": false,
      "layout": "default",
      "tasks": [
        "readme"
      ],
      "plugins": [
        "gulp-format-md"
      ],
      "related": {
        "list": [
          "is-plain-object",
          "isobject",
          "kind-of",
          "shallow-clone"
        ]
      },
      "lint": {
        "reflinks": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-clone-deep-4.0.1-c19fd9bdbbf85942b4fd979c84dcf7d5f07c2387-integrity/node_modules/clone-deep/package.json",
    "readmeFilename": "README.md",
    "readme": "# clone-deep [![NPM version](https://img.shields.io/npm/v/clone-deep.svg?style=flat)](https://www.npmjs.com/package/clone-deep) [![NPM monthly downloads](https://img.shields.io/npm/dm/clone-deep.svg?style=flat)](https://npmjs.org/package/clone-deep) [![NPM total downloads](https://img.shields.io/npm/dt/clone-deep.svg?style=flat)](https://npmjs.org/package/clone-deep) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/clone-deep.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/clone-deep)\n\n> Recursively (deep) clone JavaScript native types, like Object, Array, RegExp, Date as well as primitives.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save clone-deep\n```\n\n## Usage\n\n```js\nconst cloneDeep = require('clone-deep');\n\nlet obj = { a: 'b' };\nlet arr = [obj];\nlet copy = cloneDeep(arr);\nobj.c = 'd';\n\nconsole.log(copy);\n//=> [{ a: 'b' }]\n\nconsole.log(arr);\n//=> [{ a: 'b', c: 'd' }]\n```\n\n## Heads up!\n\nThe last argument specifies whether or not to clone instances (objects that are from a custom class or are not created by the `Object` constructor. This value may be `true` or the function use for cloning instances.\n\nWhen an `instanceClone` function is provided, it will be invoked to clone objects that are not \"plain\" objects (as defined by [isPlainObject](#isPlainObject)`isPlainObject`). If `instanceClone` is not specified, this library will not attempt to clone non-plain objects, and will simply copy the object reference.\n\n## Attribution\n\nInitially based on [mout's](https://github.com/mout/mout) implementation of deepClone.\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [is-plain-object](https://www.npmjs.com/package/is-plain-object): Returns true if an object was created by the `Object` constructor. | [homepage](https://github.com/jonschlinkert/is-plain-object \"Returns true if an object was created by the `Object` constructor.\")\n* [isobject](https://www.npmjs.com/package/isobject): Returns true if the value is an object and not an array or null. | [homepage](https://github.com/jonschlinkert/isobject \"Returns true if the value is an object and not an array or null.\")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n* [shallow-clone](https://www.npmjs.com/package/shallow-clone): Creates a shallow clone of any JavaScript value. | [homepage](https://github.com/jonschlinkert/shallow-clone \"Creates a shallow clone of any JavaScript value.\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 46 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 2  | [yujunlong2000](https://github.com/yujunlong2000) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright Â© 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on November 21, 2018._",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014-2018, Jon Schlinkert.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/clone-deep/-/clone-deep-4.0.1.tgz#c19fd9bdbbf85942b4fd979c84dcf7d5f07c2387",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/clone-deep/-/clone-deep-4.0.1.tgz",
    "hash": "c19fd9bdbbf85942b4fd979c84dcf7d5f07c2387",
    "integrity": "sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ==",
    "registry": "npm",
    "packageName": "clone-deep",
    "cacheIntegrity": "sha512-neHB9xuzh/wk0dIHweyAXv2aPGZIVk3pLMe+/RNzINf17fe0OG96QroktYAUm7SM1PBnzTabaLboqqxDyMU+SQ== sha1-wZ/Zvbv4WUK0/ZechNz31fB8I4c="
  },
  "registry": "npm",
  "hash": "c19fd9bdbbf85942b4fd979c84dcf7d5f07c2387"
}