{
  "manifest": {
    "name": "app-builder-bin",
    "description": "app-builder precompiled binaries",
    "version": "3.7.1",
    "files": [
      "*.js",
      "mac",
      "linux",
      "win",
      "index.d.ts"
    ],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/develar/app-builder.git"
    },
    "keywords": [
      "snap",
      "appimage",
      "icns"
    ],
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-app-builder-bin-3.7.1-cb0825c5e12efc85b196ac3ed9c89f076c61040e-integrity/node_modules/app-builder-bin/package.json",
    "readmeFilename": "readme.md",
    "readme": "# app-builder\n\nGeneric helper tool to build app in a distributable formats.\nUsed by [electron-builder](http://github.com/electron-userland/electron-builder) but applicable not only for building Electron applications.\n\n```\nusage: app-builder [<flags>] <command> [<args> ...]\n\napp-builder\n\nFlags:\n  --help     Show context-sensitive help (also try --help-long and --help-man).\n  --version  Show application version.\n\nCommands:\n  help [<command>...]\n    Show help.\n\n\n  blockmap --input=INPUT [<flags>]\n    Generates file block map for differential update using content defined\n    chunking (that is robust to insertions, deletions, and changes to input\n    file)\n\n    -i, --input=INPUT       input file\n    -o, --output=OUTPUT     output file\n    -c, --compression=gzip  compression, one of: gzip, deflate\n\n  download --url=URL --output=OUTPUT [<flags>]\n    Download file.\n\n    -u, --url=URL        The URL.\n    -o, --output=OUTPUT  The output file.\n        --sha512=SHA512  The expected sha512 of file.\n\n  download-artifact --name=NAME --url=URL [<flags>]\n    Download, unpack and cache artifact from GitHub.\n\n    -n, --name=NAME      The artifact name.\n    -u, --url=URL        The artifact URL.\n        --sha512=SHA512  The expected sha512 of file.\n\n  copy --from=FROM --to=TO [<flags>]\n    Copy file or dir.\n\n    -f, --from=FROM\n    -t, --to=TO\n        --hard-link  Whether to use hard-links if possible\n\n  appimage --app=APP --stage=STAGE --output=OUTPUT [<flags>]\n    Build AppImage.\n\n    -a, --app=APP                  The app dir.\n    -s, --stage=STAGE              The stage dir.\n    -o, --output=OUTPUT            The output file.\n        --arch=x64                 The arch.\n        --compression=COMPRESSION  The compression.\n        --remove-stage             Whether to remove stage after build.\n\n  snap --app=APP --stage=STAGE --output=OUTPUT [<flags>]\n    Build snap.\n\n    -t, --template=TEMPLATE  The template file.\n    -u, --template-url=TEMPLATE-URL\n                             The template archive URL.\n        --template-sha512=TEMPLATE-SHA512\n                             The expected sha512 of template archive.\n    -a, --app=APP            The app dir.\n    -s, --stage=STAGE        The stage dir.\n        --icon=ICON          The path to the icon.\n        --hooks=HOOKS        The hooks dir.\n        --arch=amd64         The arch.\n    -o, --output=OUTPUT      The output file.\n        --docker-image=\"snapcore/snapcraft:latest\"\n                             The docker image.\n        --docker             Whether to use Docker.\n        --remove-stage       Whether to remove stage after build.\n\n  icon --input=INPUT --format=FORMAT --out=OUT [<flags>]\n    create ICNS or ICO or icon set from PNG files\n\n    -i, --input=INPUT ...  input directory or file\n    -f, --format=FORMAT    output format\n        --out=OUT          output directory\n    -r, --root=ROOT ...    base directory to resolve relative path\n\n  dmg --volume=VOLUME [<flags>]\n    Build dmg.\n\n    --volume=VOLUME\n    --icon=ICON\n    --background=BACKGROUND\n```"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/app-builder-bin/-/app-builder-bin-3.7.1.tgz#cb0825c5e12efc85b196ac3ed9c89f076c61040e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/app-builder-bin/-/app-builder-bin-3.7.1.tgz",
    "hash": "cb0825c5e12efc85b196ac3ed9c89f076c61040e",
    "integrity": "sha512-ql93vEUq6WsstGXD+SBLSIQw6SNnhbDEM0swzgugytMxLp3rT24Ag/jcC80ZHxiPRTdew1niuR7P3/FCrDqIjw==",
    "registry": "npm",
    "packageName": "app-builder-bin",
    "cacheIntegrity": "sha512-ql93vEUq6WsstGXD+SBLSIQw6SNnhbDEM0swzgugytMxLp3rT24Ag/jcC80ZHxiPRTdew1niuR7P3/FCrDqIjw== sha1-ywglxeEu/IWxlqw+2cifB2xhBA4="
  },
  "registry": "npm",
  "hash": "cb0825c5e12efc85b196ac3ed9c89f076c61040e"
}