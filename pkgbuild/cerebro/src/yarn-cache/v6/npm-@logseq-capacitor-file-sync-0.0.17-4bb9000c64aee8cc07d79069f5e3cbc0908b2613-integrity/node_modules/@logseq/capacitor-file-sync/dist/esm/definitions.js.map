{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface FileSyncPlugin {\n  keygen(): Promise<{ secretKey: string; publicKey: string }>;\n\n  setEnv(options: {\n    graphUUID: string;\n    env: string;\n    secretKey: string;\n    publicKey: string;\n  }): Promise<void>;\n\n  encryptFnames(options: {\n    graphUUID: string;\n    filePaths: string[];\n  }): Promise<{ value: string[] }>;\n\n  decryptFnames(options: {\n    graphUUID: string;\n    filePaths: string[];\n  }): Promise<{ value: string[] }>;\n\n  getLocalFilesMeta(options: {\n    graphUUID: string;\n    basePath: string;\n    filePaths: string[];\n  }): Promise<{ result: any[] }>;\n\n  getLocalAllFilesMeta(options: {\n    graphUUID: string;\n    basePath: string;\n  }): Promise<{ result: any[] }>;\n\n  deleteLocalFiles(options: {\n    graphUUID: string;\n    basePath: string;\n    filePaths: string[];\n  }): Promise<void>;\n\n  updateLocalFiles(options: {\n    graphUUID: string;\n    basePath: string;\n    filePaths: string[];\n    token: string;\n  }): Promise<void>;\n\n  updateLocalVersionFiles(options: {\n    graphUUID: string;\n    basePath: string;\n    filePaths: string[];\n    token: string;\n  }): Promise<void>;\n\n  deleteRemoteFiles(options: {\n    graphUUID: string;\n    filePaths: string[];\n    token: string;\n    txid: number;\n  }): Promise<{ txid: number }>;\n\n  updateRemoteFiles(options: {\n    graphUUID: string;\n    basePath: string;\n    filePaths: string[];\n    token: string;\n    txid: number;\n  }): Promise<{ txid: number }>;\n\n  encryptWithPassphrase(options: {\n    passphrase: string;\n    content: string;\n  }): Promise<{ data: string }>;\n\n  decryptWithPassphrase(options: {\n    passphrase: string;\n    content: string;\n  }): Promise<{ data: string }>;\n\n  cancelAllRequests(options: unknown): Promise<void>;\n}\n"]}