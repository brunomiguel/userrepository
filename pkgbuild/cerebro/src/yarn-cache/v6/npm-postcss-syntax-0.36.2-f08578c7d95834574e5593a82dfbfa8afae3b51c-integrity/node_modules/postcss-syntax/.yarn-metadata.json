{
  "manifest": {
    "name": "postcss-syntax",
    "version": "0.36.2",
    "description": "Automatically switch PostCSS syntax by file extensions",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/gucong3000/postcss-syntax.git"
    },
    "keywords": [
      "postcss",
      "syntax",
      "switch",
      "extension"
    ],
    "author": {
      "name": "gucong"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/gucong3000/postcss-syntax/issues"
    },
    "homepage": "https://github.com/gucong3000/postcss-syntax#readme",
    "nyc": {
      "reporter": [
        "lcov",
        "text"
      ],
      "all": true,
      "cache": true,
      "check-coverage": true
    },
    "scripts": {
      "mocha": "mocha --require ./test/fixtures/link --no-timeouts",
      "test": "nyc npm run mocha",
      "debug": "npm run mocha -- --inspect-brk"
    },
    "extensions": [
      ".css",
      ".pcss",
      ".postcss",
      ".acss",
      ".wxss",
      ".sass",
      ".scss",
      ".less",
      ".sss",
      ".js",
      ".es6",
      ".mjs",
      ".pac",
      ".jsx",
      ".ts",
      ".tsx",
      ".babel",
      ".flow",
      ".html",
      ".htm",
      ".shtml",
      ".xhtml",
      ".mdoc",
      ".jsp",
      ".asp",
      ".aspx",
      ".jshtm",
      ".volt",
      ".ejs",
      ".rhtml",
      ".xsl",
      ".xslt",
      ".vue",
      ".wpy",
      ".ux",
      ".php",
      ".php4",
      ".php5",
      ".phtml",
      ".ctp",
      ".twig",
      ".liquid",
      ".md",
      ".mdown",
      ".markdown",
      ".markdn",
      ".svelte"
    ],
    "peerDependencies": {
      "postcss": ">=5.0.0"
    },
    "devDependencies": {
      "chai": "^4.2.0",
      "codecov": "^3.1.0",
      "mocha": "^5.2.0",
      "nyc": "^13.1.0",
      "postcss": "^7.0.7",
      "postcss-html": ">=0.36.0",
      "postcss-jsx": ">=0.36.0",
      "postcss-less": "^3.1.0",
      "postcss-markdown": ">=0.36.0",
      "postcss-safe-parser": "^4.0.1",
      "postcss-scss": "^2.0.0",
      "proxyquire": "^2.1.0",
      "sugarss": "^2.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-postcss-syntax-0.36.2-f08578c7d95834574e5593a82dfbfa8afae3b51c-integrity/node_modules/postcss-syntax/package.json",
    "readmeFilename": "README.md",
    "readme": "PostCSS Syntax\n====\n\n[![NPM version](https://img.shields.io/npm/v/postcss-syntax.svg?style=flat-square)](https://www.npmjs.com/package/postcss-syntax)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-syntax.svg)](https://travis-ci.org/gucong3000/postcss-syntax)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-syntaxes.svg?label=integration)](https://travis-ci.org/gucong3000/postcss-syntaxes)\n[![Codecov](https://img.shields.io/codecov/c/github/gucong3000/postcss-syntax.svg)](https://codecov.io/gh/gucong3000/postcss-syntax)\n[![David](https://img.shields.io/david/dev/gucong3000/postcss-syntax.svg)](https://david-dm.org/gucong3000/postcss-syntax?type=dev)\n\n<img align=\"right\" width=\"95\" height=\"95\"\n\ttitle=\"Philosopher’s stone, logo of PostCSS\"\n\tsrc=\"http://postcss.github.io/postcss/logo.svg\">\n\npostcss-syntax can automatically switch the required [PostCSS](https://github.com/postcss/postcss) syntax by file extension/source\n\n## Getting Started\n\nFirst thing's first, install the module:\n\n```\nnpm install postcss-syntax --save-dev\n```\n\nIf you want support SCSS/SASS/LESS/SugarSS syntax, you need to install these module:\n\n- SCSS: [postcss-scss](https://github.com/postcss/postcss-scss)\n- SASS: [postcss-sass](https://github.com/aleshaoleg/postcss-sass)\n- LESS: [postcss-less](https://github.com/shellscape/postcss-less)\n- SugarSS: [sugarss](https://github.com/postcss/sugarss)\n\nIf you want support HTML (and HTML-like)/Markdown/CSS-in-JS file format, you need to install these module:\n\n- CSS-in-JS: [postcss-jsx](https://github.com/gucong3000/postcss-jsx)\n- HTML (and HTML-like): [postcss-html](https://github.com/gucong3000/postcss-html)\n- Markdown: [postcss-markdown](https://github.com/gucong3000/postcss-markdown)\n\n## Use Cases\n\n```js\nconst postcss = require('postcss');\nconst syntax = require('postcss-syntax')({\n\trules: [\n\t\t{\n\t\t\ttest: /\\.(?:[sx]?html?|[sx]ht|vue|ux|php)$/i,\n\t\t\textract: 'html',\n\t\t},\n\t\t{\n\t\t\ttest: /\\.(?:markdown|md)$/i,\n\t\t\textract: 'markdown',\n\t\t},\n\t\t{\n\t\t\ttest: /\\.(?:m?[jt]sx?|es\\d*|pac)$/i,\n\t\t\textract: 'jsx',\n\t\t},\n\t\t{\n\t\t\t// custom language for file extension\n\t\t\ttest: /\\.postcss$/i,\n\t\t\tlang: 'scss'\n\t\t},\n\t\t{\n\t\t\t// custom language for file extension\n\t\t\ttest: /\\.customcss$/i,\n\t\t\tlang: 'custom'\n\t\t},\n\t],\n\n\t// custom parser for CSS (using `postcss-safe-parser`)\n\tcss: 'postcss-safe-parser',\n\t// custom parser for SASS (PostCSS-compatible syntax.)\n\tsass: require('postcss-sass'),\n\t// custom parser for SCSS (by module name)\n\tscss: 'postcss-scss',\n\t// custom parser for LESS (by module path)\n\tless: './node_modules/postcss-less',\n\t// custom parser for SugarSS\n\tsugarss: require('sugarss'),\n\t// custom parser for custom language\n\tcustom: require('postcss-custom-syntax'),\n\n});\npostcss(plugins).process(source, { syntax: syntax }).then(function (result) {\n\t// An alias for the result.css property. Use it with syntaxes that generate non-CSS output.\n\tresult.content\n});\n```\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 刘祺\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-syntax/-/postcss-syntax-0.36.2.tgz#f08578c7d95834574e5593a82dfbfa8afae3b51c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-syntax/-/postcss-syntax-0.36.2.tgz",
    "hash": "f08578c7d95834574e5593a82dfbfa8afae3b51c",
    "integrity": "sha512-nBRg/i7E3SOHWxF3PpF5WnJM/jQ1YpY9000OaVXlAQj6Zp/kIqJxEDWIZ67tAd7NLuk7zqN4yqe9nc0oNAOs1w==",
    "registry": "npm",
    "packageName": "postcss-syntax",
    "cacheIntegrity": "sha512-nBRg/i7E3SOHWxF3PpF5WnJM/jQ1YpY9000OaVXlAQj6Zp/kIqJxEDWIZ67tAd7NLuk7zqN4yqe9nc0oNAOs1w== sha1-8IV4x9lYNFdOVZOoLfv6ivrjtRw="
  },
  "registry": "npm",
  "hash": "f08578c7d95834574e5593a82dfbfa8afae3b51c"
}