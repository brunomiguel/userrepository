{
  "manifest": {
    "name": "read-cache",
    "version": "1.0.0",
    "description": "Reads and caches the entire contents of a file until it is modified",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "scripts": {
      "test": "ava"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/TrySound/read-cache.git"
    },
    "keywords": [
      "fs",
      "read",
      "cache"
    ],
    "author": {
      "name": "Bogdan Chadkin",
      "email": "trysound@yandex.ru"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/TrySound/read-cache/issues"
    },
    "homepage": "https://github.com/TrySound/read-cache#readme",
    "devDependencies": {
      "ava": "^0.9.1",
      "del": "^2.2.0"
    },
    "dependencies": {
      "pify": "^2.3.0"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-read-cache-1.0.0-e664ef31161166c9751cdbe8dbcf86b5fb58f774-integrity/node_modules/read-cache/package.json",
    "readmeFilename": "README.md",
    "readme": "# read-cache [![Build Status](https://travis-ci.org/TrySound/read-cache.svg?branch=master)](https://travis-ci.org/TrySound/read-cache)\n\nReads and caches the entire contents of a file until it is modified.\n\n\n## Install\n\n```\n$ npm i read-cache\n```\n\n\n## Usage\n\n```js\n// foo.js\nvar readCache = require('read-cache');\n\nreadCache('foo.js').then(function (contents) {\n\tconsole.log(contents);\n});\n```\n\n\n## API\n\n### readCache(path[, encoding])\n\nReturns a promise that resolves with the file's contents.\n\n### readCache.sync(path[, encoding])\n\nReturns the content of the file.\n\n### readCache.get(path[, encoding])\n\nReturns the content of cached file or null.\n\n### readCache.clear()\n\nClears the contents of the cache.\n\n\n## License\n\nMIT Â© [Bogdan Chadkin](mailto:trysound@yandex.ru)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright 2016 Bogdan Chadkin <trysound@yandex.ru>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/read-cache/-/read-cache-1.0.0.tgz#e664ef31161166c9751cdbe8dbcf86b5fb58f774",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/read-cache/-/read-cache-1.0.0.tgz",
    "hash": "e664ef31161166c9751cdbe8dbcf86b5fb58f774",
    "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
    "registry": "npm",
    "packageName": "read-cache",
    "cacheIntegrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA== sha1-5mTvMRYRZsl1HNvo28+GtftY93Q="
  },
  "registry": "npm",
  "hash": "e664ef31161166c9751cdbe8dbcf86b5fb58f774"
}