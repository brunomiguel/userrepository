{
  "api": {
    "name": "FileSyncPlugin",
    "slug": "filesyncplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "keygen",
        "signature": "() => Promise<{ secretKey: string; publicKey: string; }>",
        "parameters": [],
        "returns": "Promise<{ secretKey: string; publicKey: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "keygen"
      },
      {
        "name": "setEnv",
        "signature": "(options: { graphUUID: string; env: string; secretKey: string; publicKey: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; env: string; secretKey: string; publicKey: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "setenv"
      },
      {
        "name": "encryptFnames",
        "signature": "(options: { graphUUID: string; filePaths: string[]; }) => Promise<{ value: string[]; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; filePaths: string[]; }"
          }
        ],
        "returns": "Promise<{ value: string[]; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "encryptfnames"
      },
      {
        "name": "decryptFnames",
        "signature": "(options: { graphUUID: string; filePaths: string[]; }) => Promise<{ value: string[]; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; filePaths: string[]; }"
          }
        ],
        "returns": "Promise<{ value: string[]; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "decryptfnames"
      },
      {
        "name": "getLocalFilesMeta",
        "signature": "(options: { graphUUID: string; basePath: string; filePaths: string[]; }) => Promise<{ result: any[]; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; basePath: string; filePaths: string[]; }"
          }
        ],
        "returns": "Promise<{ result: any[]; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getlocalfilesmeta"
      },
      {
        "name": "getLocalAllFilesMeta",
        "signature": "(options: { graphUUID: string; basePath: string; }) => Promise<{ result: any[]; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; basePath: string; }"
          }
        ],
        "returns": "Promise<{ result: any[]; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getlocalallfilesmeta"
      },
      {
        "name": "deleteLocalFiles",
        "signature": "(options: { graphUUID: string; basePath: string; filePaths: string[]; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; basePath: string; filePaths: string[]; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "deletelocalfiles"
      },
      {
        "name": "updateLocalFiles",
        "signature": "(options: { graphUUID: string; basePath: string; filePaths: string[]; token: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; basePath: string; filePaths: string[]; token: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "updatelocalfiles"
      },
      {
        "name": "updateLocalVersionFiles",
        "signature": "(options: { graphUUID: string; basePath: string; filePaths: string[]; token: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; basePath: string; filePaths: string[]; token: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "updatelocalversionfiles"
      },
      {
        "name": "deleteRemoteFiles",
        "signature": "(options: { graphUUID: string; filePaths: string[]; token: string; txid: number; }) => Promise<{ txid: number; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; filePaths: string[]; token: string; txid: number; }"
          }
        ],
        "returns": "Promise<{ txid: number; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "deleteremotefiles"
      },
      {
        "name": "updateRemoteFiles",
        "signature": "(options: { graphUUID: string; basePath: string; filePaths: string[]; token: string; txid: number; }) => Promise<{ txid: number; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ graphUUID: string; basePath: string; filePaths: string[]; token: string; txid: number; }"
          }
        ],
        "returns": "Promise<{ txid: number; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "updateremotefiles"
      },
      {
        "name": "encryptWithPassphrase",
        "signature": "(options: { passphrase: string; content: string; }) => Promise<{ data: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ passphrase: string; content: string; }"
          }
        ],
        "returns": "Promise<{ data: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "encryptwithpassphrase"
      },
      {
        "name": "decryptWithPassphrase",
        "signature": "(options: { passphrase: string; content: string; }) => Promise<{ data: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ passphrase: string; content: string; }"
          }
        ],
        "returns": "Promise<{ data: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "decryptwithpassphrase"
      },
      {
        "name": "cancelAllRequests",
        "signature": "(options: unknown) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "unknown"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "cancelallrequests"
      }
    ],
    "properties": []
  },
  "interfaces": [],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}