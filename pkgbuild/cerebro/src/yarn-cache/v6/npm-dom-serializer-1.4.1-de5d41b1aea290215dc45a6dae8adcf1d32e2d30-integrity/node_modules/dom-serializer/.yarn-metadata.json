{
  "manifest": {
    "name": "dom-serializer",
    "version": "1.4.1",
    "description": "render domhandler DOM nodes to a string",
    "author": {
      "name": "Felix Boehm",
      "email": "me@feedic.com"
    },
    "sideEffects": false,
    "keywords": [
      "html",
      "xml",
      "render"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/cheeriojs/dom-renderer.git"
    },
    "main": "lib/index.js",
    "types": "lib/index.d.ts",
    "files": [
      "lib/**/*"
    ],
    "dependencies": {
      "domelementtype": "^2.0.1",
      "domhandler": "^4.2.0",
      "entities": "^2.0.0"
    },
    "devDependencies": {
      "@types/jest": "^26.0.23",
      "@types/node": "^15.3.0",
      "@typescript-eslint/eslint-plugin": "^4.23.0",
      "@typescript-eslint/parser": "^4.23.0",
      "cheerio": "^1.0.0-rc.9",
      "coveralls": "^3.0.5",
      "eslint": "^7.26.0",
      "eslint-config-prettier": "^8.3.0",
      "htmlparser2": "^6.1.0",
      "jest": "^26.0.1",
      "prettier": "^2.3.0",
      "ts-jest": "^26.5.6",
      "typescript": "^4.0.2"
    },
    "scripts": {
      "test": "jest --coverage && npm run lint",
      "coverage": "cat coverage/lcov.info | coveralls",
      "lint": "eslint src",
      "format": "prettier --write '**/*.{ts,md,json}'",
      "build": "tsc",
      "prepare": "npm run build"
    },
    "jest": {
      "preset": "ts-jest",
      "testEnvironment": "node"
    },
    "funding": "https://github.com/cheeriojs/dom-serializer?sponsor=1",
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-dom-serializer-1.4.1-de5d41b1aea290215dc45a6dae8adcf1d32e2d30-integrity/node_modules/dom-serializer/package.json",
    "readmeFilename": "README.md",
    "readme": "# dom-serializer [![Build Status](https://travis-ci.com/cheeriojs/dom-serializer.svg?branch=master)](https://travis-ci.com/cheeriojs/dom-serializer)\n\nRenders a [domhandler](https://github.com/fb55/domhandler) DOM node or an array of domhandler DOM nodes to a string.\n\n```js\nimport render from \"dom-serializer\";\n\n// OR\n\nconst render = require(\"dom-serializer\").default;\n```\n\n# API\n\n## `render`\n\n▸ **render**(`node`: Node \\| Node[], `options?`: [_Options_](#Options)): _string_\n\nRenders a DOM node or an array of DOM nodes to a string.\n\nCan be thought of as the equivalent of the `outerHTML` of the passed node(s).\n\n#### Parameters:\n\n| Name      | Type                               | Default value | Description                    |\n| :-------- | :--------------------------------- | :------------ | :----------------------------- |\n| `node`    | Node \\| Node[]                     | -             | Node to be rendered.           |\n| `options` | [_DomSerializerOptions_](#Options) | {}            | Changes serialization behavior |\n\n**Returns:** _string_\n\n## Options\n\n### `decodeEntities`\n\n• `Optional` **decodeEntities**: _boolean_\n\nEncode characters that are either reserved in HTML or XML, or are outside of the ASCII range.\n\n**`default`** true\n\n---\n\n### `emptyAttrs`\n\n• `Optional` **emptyAttrs**: _boolean_\n\nPrint an empty attribute's value.\n\n**`default`** xmlMode\n\n**`example`** With <code>emptyAttrs: false</code>: <code>&lt;input checked&gt;</code>\n\n**`example`** With <code>emptyAttrs: true</code>: <code>&lt;input checked=\"\"&gt;</code>\n\n---\n\n### `selfClosingTags`\n\n• `Optional` **selfClosingTags**: _boolean_\n\nPrint self-closing tags for tags without contents.\n\n**`default`** xmlMode\n\n**`example`** With <code>selfClosingTags: false</code>: <code>&lt;foo&gt;&lt;/foo&gt;</code>\n\n**`example`** With <code>selfClosingTags: true</code>: <code>&lt;foo /&gt;</code>\n\n---\n\n### `xmlMode`\n\n• `Optional` **xmlMode**: _boolean_ \\| _\"foreign\"_\n\nTreat the input as an XML document; enables the `emptyAttrs` and `selfClosingTags` options.\n\nIf the value is `\"foreign\"`, it will try to correct mixed-case attribute names.\n\n**`default`** false\n\n---\n\n## Ecosystem\n\n| Name                                                          | Description                                             |\n| ------------------------------------------------------------- | ------------------------------------------------------- |\n| [htmlparser2](https://github.com/fb55/htmlparser2)            | Fast & forgiving HTML/XML parser                        |\n| [domhandler](https://github.com/fb55/domhandler)              | Handler for htmlparser2 that turns documents into a DOM |\n| [domutils](https://github.com/fb55/domutils)                  | Utilities for working with domhandler's DOM             |\n| [css-select](https://github.com/fb55/css-select)              | CSS selector engine, compatible with domhandler's DOM   |\n| [cheerio](https://github.com/cheeriojs/cheerio)               | The jQuery API for domhandler's DOM                     |\n| [dom-serializer](https://github.com/cheeriojs/dom-serializer) | Serializer for domhandler's DOM                         |\n\n---\n\nLICENSE: MIT\n",
    "licenseText": "License\n\n(The MIT License)\n\nCopyright (c) 2014 The cheeriojs contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/dom-serializer/-/dom-serializer-1.4.1.tgz#de5d41b1aea290215dc45a6dae8adcf1d32e2d30",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/dom-serializer/-/dom-serializer-1.4.1.tgz",
    "hash": "de5d41b1aea290215dc45a6dae8adcf1d32e2d30",
    "integrity": "sha512-VHwB3KfrcOOkelEG2ZOfxqLZdfkil8PtJi4P8N2MMXucZq2yLp75ClViUlOVwyoHEDjYU433Aq+5zWP61+RGag==",
    "registry": "npm",
    "packageName": "dom-serializer",
    "cacheIntegrity": "sha512-VHwB3KfrcOOkelEG2ZOfxqLZdfkil8PtJi4P8N2MMXucZq2yLp75ClViUlOVwyoHEDjYU433Aq+5zWP61+RGag== sha1-3l1Bsa6ikCFdxFptrorc8dMuLTA="
  },
  "registry": "npm",
  "hash": "de5d41b1aea290215dc45a6dae8adcf1d32e2d30"
}