{
  "manifest": {
    "name": "eslint-plugin-unused-imports",
    "version": "2.0.0",
    "description": "Report and remove unused es6 modules",
    "keywords": [
      "eslint",
      "eslintplugin",
      "eslint-plugin",
      "import",
      "unused",
      "modules",
      "autofix"
    ],
    "author": {
      "name": "Mikkel Holmer Pedersen"
    },
    "main": "lib/index.js",
    "scripts": {
      "test": "jest"
    },
    "peerDependencies": {
      "@typescript-eslint/eslint-plugin": "^5.0.0",
      "eslint": "^8.0.0"
    },
    "peerDependenciesMeta": {
      "@typescript-eslint/eslint-plugin": {
        "optional": true
      }
    },
    "dependencies": {
      "eslint-rule-composer": "^0.3.0"
    },
    "devDependencies": {
      "@typescript-eslint/eslint-plugin": "^5.0.0",
      "@typescript-eslint/parser": "^5.0.0",
      "eslint": "^8.0.1",
      "jest": "^27.2.5"
    },
    "engines": {
      "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sweepline/eslint-plugin-unused-imports"
    },
    "homepage": "https://github.com/sweepline/eslint-plugin-unused-imports",
    "bugs": {
      "url": "https://github.com/sweepline/eslint-plugin-unused-imports/issues"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-eslint-plugin-unused-imports-2.0.0-d8db8c4d0cfa0637a8b51ce3fd7d1b6bc3f08520-integrity/node_modules/eslint-plugin-unused-imports/package.json",
    "readmeFilename": "README.md",
    "readme": "# eslint-plugin-unused-imports\n\nFind and remove unused es6 module imports. It works by splitting up the `no-unused-vars` rule depending on it being an import statement in the AST and providing an autofix rule to remove the nodes if they are imports. This plugin composes the rule `no-unused-vars` of either the typescript or js plugin so be aware that the other plugins needs to be installed and reporting correctly for this to do so.\n\n## _Important for version 1.1_\n\nThe `-ts` rules are deprecated, the package now looks for `@typescript-eslint/eslint-plugin` to exist to decide between the typescript and eslint version.\nThe `-ts` rule will still work, but point to the new rule instead.\n\n## Typescript\n\nIf running typescript with [@typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) make sure to use both `@typescript-eslint/eslint-plugin` and `@typescript-eslint/parser`.\n\n## React\n\nIf writing react code you need to install `eslint-plugin-react` and enable the two rules `react/jsx-uses-react` and `react/jsx-uses-vars`. Otherwise all imports for components will be reported unused.\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org) (and [@typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) if using typescript):\n\n```bash\nnpm i eslint --save-dev\n```\n\nNext, install `eslint-plugin-unused-imports`:\n\n```bash\nnpm install eslint-plugin-unused-imports --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must also install `eslint-plugin-unused-imports` globally.\n\n## Usage\n\nAdd `unused-imports` to the plugins section of your `.eslintrc` configuration file. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n\t\"plugins\": [\"unused-imports\"]\n}\n```\n\nThen configure the rules you want to use under the rules section. I can recommend adding a check for underscores, e.g.\n\n```json\n{\n\t\"rules\": {\n\t\t\"no-unused-vars\": \"off\", // or \"@typescript-eslint/no-unused-vars\": \"off\",\n\t\t\"unused-imports/no-unused-imports\": \"error\",\n\t\t\"unused-imports/no-unused-vars\": [\n\t\t\t\"warn\",\n\t\t\t{ \"vars\": \"all\", \"varsIgnorePattern\": \"^_\", \"args\": \"after-used\", \"argsIgnorePattern\": \"^_\" }\n\t\t]\n\t}\n}\n```\n\n## Supported Rules\n\n- `no-unused-imports`\n- `no-unused-vars`\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/eslint-plugin-unused-imports/-/eslint-plugin-unused-imports-2.0.0.tgz#d8db8c4d0cfa0637a8b51ce3fd7d1b6bc3f08520",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/eslint-plugin-unused-imports/-/eslint-plugin-unused-imports-2.0.0.tgz",
    "hash": "d8db8c4d0cfa0637a8b51ce3fd7d1b6bc3f08520",
    "integrity": "sha512-3APeS/tQlTrFa167ThtP0Zm0vctjr4M44HMpeg1P4bK6wItarumq0Ma82xorMKdFsWpphQBlRPzw/pxiVELX1A==",
    "registry": "npm",
    "packageName": "eslint-plugin-unused-imports",
    "cacheIntegrity": "sha512-3APeS/tQlTrFa167ThtP0Zm0vctjr4M44HMpeg1P4bK6wItarumq0Ma82xorMKdFsWpphQBlRPzw/pxiVELX1A== sha1-2NuMTQz6BjeotRzj/X0ba8PwhSA="
  },
  "registry": "npm",
  "hash": "d8db8c4d0cfa0637a8b51ce3fd7d1b6bc3f08520"
}