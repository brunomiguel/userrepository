{
  "manifest": {
    "name": "parse-color",
    "version": "1.0.0",
    "description": "parse a css color string (plus hsv and cmyk) into an object",
    "main": "index.js",
    "dependencies": {
      "color-convert": "~0.5.0"
    },
    "devDependencies": {
      "tape": "~1.0.4"
    },
    "scripts": {
      "test": "tape test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/substack/parse-color.git"
    },
    "homepage": "https://github.com/substack/parse-color",
    "keywords": [
      "rgb",
      "rgba",
      "hsl",
      "hsla",
      "hsv",
      "hsva",
      "cmyk",
      "cmyka",
      "color",
      "css",
      "alpha"
    ],
    "author": {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "http://substack.net"
    },
    "license": "MIT",
    "testling": {
      "files": "test/*.js",
      "browsers": [
        "ie/8..latest",
        "firefox/16..latest",
        "firefox/nightly",
        "chrome/22..latest",
        "chrome/canary",
        "opera/12..latest",
        "opera/next",
        "safari/5.1..latest",
        "ipad/6.0..latest",
        "iphone/6.0..latest",
        "android-browser/4.2..latest"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-parse-color-1.0.0-7b748b95a83f03f16a94f535e52d7f3d94658619-integrity/node_modules/parse-color/package.json",
    "readmeFilename": "readme.markdown",
    "readme": "# parse-color\n\nparse a [css color string](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)\nplus `hsv()` and `cmyk()` strings\n\n[![testling badge](https://ci.testling.com/substack/parse-color.png)](https://ci.testling.com/substack/parse-color)\n\n[![build status](https://secure.travis-ci.org/substack/parse-color.png)](http://travis-ci.org/substack/parse-color)\n\n# example\n\n``` js\nvar parse = require('parse-color');\nconsole.log(parse(process.argv[2]));\n```\n\noutput:\n\n```\n$ node example/parse.js '#ffa500'\n{ rgb: [ 255, 165, 0 ],\n  hsl: [ 39, 100, 50 ],\n  hsv: [ 39, 100, 100 ],\n  cmyk: [ 0, 35, 100, 0 ],\n  keyword: 'orange',\n  hex: '#ffa500',\n  rgba: [ 255, 165, 0, 1 ],\n  hsla: [ 39, 100, 50, 1 ],\n  hsva: [ 39, 100, 100, 1 ],\n  cmyka: [ 0, 35, 100, 0, 1 ] }\n```\n\n```\n$ node example/parse.js lime\n{ rgb: [ 0, 255, 0 ],\n  hsl: [ 120, 100, 50 ],\n  hsv: [ 120, 100, 100 ],\n  cmyk: [ 100, 0, 100, 0 ],\n  keyword: 'lime',\n  hex: '#00ff00',\n  rgba: [ 0, 255, 0, 1 ],\n  hsla: [ 120, 100, 50, 1 ],\n  hsva: [ 120, 100, 100, 1 ],\n  cmyka: [ 100, 0, 100, 0, 1 ] }\n```\n\n```\n$ node example/parse.js 'hsl(210,50,50)'\n{ rgb: [ 64, 127, 191 ],\n  hsl: [ 210, 50, 50 ],\n  hsv: [ 210, 67, 75 ],\n  cmyk: [ 67, 33, 0, 25 ],\n  keyword: undefined,\n  hex: '#407fbf',\n  rgba: [ 64, 127, 191, 1 ],\n  hsla: [ 210, 50, 50, 1 ],\n  hsva: [ 210, 67, 75, 1 ],\n  cmyka: [ 67, 33, 0, 25, 1 ] }\n```\n\n```\n$ node example/parse.js 'rgba(153,50,204,60%)'\n{ rgb: [ 153, 50, 204 ],\n  hsl: [ 280, 61, 50 ],\n  hsv: [ 280, 75, 80 ],\n  cmyk: [ 25, 75, 0, 20 ],\n  keyword: 'darkorchid',\n  hex: '#9932cc',\n  rgba: [ 153, 50, 204, 0.6 ],\n  hsla: [ 280, 61, 50, 0.6 ],\n  hsva: [ 280, 75, 80, 0.6 ],\n  cmyka: [ 25, 75, 0, 20, 0.6 ] }\n```\n\n# methods\n\n``` js\nvar parse = require('parse-color')\n```\n\n## var color = parse(colorString)\n\nReturn a `color` object from the\n[css colorString](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).\n\n`color` has these attributes:\n\n* rgb - an array of `[ red, green, blue ]`\n* hsl - an array of `[ hue, saturation, luminosity ]`\n* hsv - an array of `[ hue, saturation, value ]`\n* cmyk - an array of `[ cyan, magenta, yellow, blac(k) ]`\n* keyword - the name of the color, if known\n* hex - the hex rgb string `#rrggbb`\n* rgba - rgb plus an alpha value from 0 to 1, inclusive\n* hsla - hsl plus an alpha value from 0 to 1, inclusive\n* hsva - hsv plus an alpha value from 0 to 1, inclusive\n* cmyka - cmyk plus an alpha value from 0 to 1, inclusive\n\nWhen a color can't be parsed or is unknown, the attributes will be undefined:\n\n```\n$ node example/parse.js 'x'\n{ rgb: undefined,\n  hsl: undefined,\n  hsv: undefined,\n  cmyk: undefined,\n  keyword: 'x',\n  hex: undefined }\n```\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install parse-color\n```\n\n# license\n\nMIT\n",
    "licenseText": "This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/parse-color/-/parse-color-1.0.0.tgz#7b748b95a83f03f16a94f535e52d7f3d94658619",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/parse-color/-/parse-color-1.0.0.tgz",
    "hash": "7b748b95a83f03f16a94f535e52d7f3d94658619",
    "integrity": "sha512-fuDHYgFHJGbpGMgw9skY/bj3HL/Jrn4l/5rSspy00DoT4RyLnDcRvPxdZ+r6OFwIsgAuhDh4I09tAId4mI12bw==",
    "registry": "npm",
    "packageName": "parse-color",
    "cacheIntegrity": "sha512-fuDHYgFHJGbpGMgw9skY/bj3HL/Jrn4l/5rSspy00DoT4RyLnDcRvPxdZ+r6OFwIsgAuhDh4I09tAId4mI12bw== sha1-e3SLlag/A/FqlPU15S1/PZRlhhk="
  },
  "registry": "npm",
  "hash": "7b748b95a83f03f16a94f535e52d7f3d94658619"
}