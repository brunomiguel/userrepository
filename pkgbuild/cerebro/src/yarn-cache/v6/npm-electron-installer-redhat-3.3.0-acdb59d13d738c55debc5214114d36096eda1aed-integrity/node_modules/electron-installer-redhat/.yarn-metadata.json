{
  "manifest": {
    "name": "electron-installer-redhat",
    "description": "Create a Red Hat package for your Electron app.",
    "version": "3.3.0",
    "license": "MIT",
    "author": {
      "name": "Daniel Perez Alvarez",
      "email": "unindented@gmail.com",
      "url": "http://unindented.org/"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/electron-userland/electron-installer-redhat.git"
    },
    "keywords": [
      "electron",
      "redhat"
    ],
    "os": [
      "darwin",
      "linux"
    ],
    "engines": {
      "node": ">= 10.0.0"
    },
    "main": "src/installer.js",
    "bin": {
      "electron-installer-redhat": "src/cli.js"
    },
    "scripts": {
      "lint": "eslint .",
      "spec": "mocha",
      "test": "npm run lint && npm run spec"
    },
    "dependencies": {
      "@malept/cross-spawn-promise": "^1.0.0",
      "debug": "^4.1.1",
      "electron-installer-common": "^0.10.2",
      "fs-extra": "^9.0.0",
      "lodash": "^4.17.15",
      "word-wrap": "^1.2.3",
      "yargs": "^16.0.2"
    },
    "devDependencies": {
      "chai": "^4.2.0",
      "chai-as-promised": "^7.1.1",
      "eslint": "^7.2.0",
      "eslint-config-standard": "^16.0.0",
      "eslint-plugin-import": "^2.20.0",
      "eslint-plugin-node": "^11.0.0",
      "eslint-plugin-promise": "^4.2.1",
      "eslint-plugin-standard": "^5.0.0",
      "husky": "^4.2.5",
      "lint-staged": "^10.2.7",
      "mocha": "^8.0.1",
      "promise-retry": "^2.0.1",
      "proxyquire": "^2.1.3",
      "sinon": "^9.0.0",
      "tmp-promise": "^3.0.2"
    },
    "husky": {
      "pre-commit": "lint-staged"
    },
    "lint-staged": {
      "*.js": "eslint --fix"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-electron-installer-redhat-3.3.0-acdb59d13d738c55debc5214114d36096eda1aed-integrity/node_modules/electron-installer-redhat/package.json",
    "readmeFilename": "README.md",
    "readme": "![Electron Installer for Red Hat](resources/logo.png)\n\n# electron-installer-redhat [![Version](https://img.shields.io/npm/v/electron-installer-redhat.svg)](https://www.npmjs.com/package/electron-installer-redhat) [![Build Status](https://img.shields.io/travis/electron-userland/electron-installer-redhat.svg)](http://travis-ci.org/electron-userland/electron-installer-redhat)\n\n> Create a Red Hat package for your Electron app.\n\n\n## Requirements\n\nThis tool requires Node 10 or greater and `rpmbuild` 4.13 or greater to build the `.rpm` package.\n\n**Note**: RPM 4.13.0 or greater is required due to the [boolean dependency feature](http://rpm.org/user_doc/boolean_dependencies.html).\n\nOn Fedora you can do something like this:\n\n```\n$ sudo dnf install rpm-build\n```\n\nWhile on Debian/Ubuntu you'll need to do this instead:\n\n```\n$ sudo apt-get install rpm\n```\n\n## Installation\n\nFor use from command-line:\n\n```\n$ npm install -g electron-installer-redhat\n```\n\nFor use in npm scripts or programmatically:\n\n```\n$ npm install --save-dev electron-installer-redhat\n```\n\n\n## Usage\n\nSay your Electron app lives in `path/to/app`, and has a structure like this:\n\n```\n.\n├── LICENSE\n├── README.md\n├── node_modules\n│   ├── electron-packager\n│   └── electron\n├── package.json\n├── resources\n│   ├── Icon.png\n│   ├── IconTemplate.png\n│   └── IconTemplate@2x.png\n└── src\n    ├── index.js\n    ├── main\n    │   └── index.js\n    └── renderer\n        ├── index.html\n        └── index.js\n```\n\nYou now run `electron-packager` to build the app for Red Hat:\n\n```\n$ electron-packager . app --platform linux --arch x64 --out dist/\n```\n\nAnd you end up with something like this in your `dist` folder:\n\n```\n.\n└── dist\n    └── app-linux-x64\n        ├── LICENSE\n        ├── LICENSES.chromium.html\n        ├── content_shell.pak\n        ├── app\n        ├── icudtl.dat\n        ├── libgcrypt.so.11\n        ├── libnode.so\n        ├── locales\n        ├── natives_blob.bin\n        ├── resources\n        ├── snapshot_blob.bin\n        └── version\n```\n\nHow do you turn that into a Red Hat package that your users can install?\n\n### Command-Line\n\nIf you want to run `electron-installer-redhat` straight from the command-line, install the package globally:\n\n```\n$ npm install -g electron-installer-redhat\n```\n\nAnd point it to your built app:\n\n```\n$ electron-installer-redhat --src dist/app-linux-x64/ --dest dist/installers/ --arch x86_64\n```\n\nYou'll end up with the package at `dist/installers/app-0.0.1-1.x86_64.rpm`.\n\n### Scripts\n\nIf you want to run `electron-installer-redhat` through npm, install the package locally:\n\n```\n$ npm install --save-dev electron-installer-redhat\n```\n\nEdit the `scripts` section of your `package.json`:\n\n```json\n{\n  \"name\": \"app\",\n  \"description\": \"An awesome app!\",\n  \"version\": \"0.0.1\",\n  \"scripts\": {\n    \"start\": \"electron .\",\n    \"build\": \"electron-packager . app --platform linux --arch x64 --out dist/\",\n    \"rpm64\": \"electron-installer-redhat --src dist/app-linux-x64/ --dest dist/installers/ --arch x86_64\"\n  },\n  \"devDependencies\": {\n    \"electron-installer-redhat\": \"*\",\n    \"electron-packager\": \"*\",\n    \"electron-prebuilt\": \"*\"\n  }\n}\n```\n\nAnd run the script:\n\n```\n$ npm run rpm64\n```\n\nYou'll end up with the package at `dist/installers/app-0.0.1-1.x86_64.rpm`.\n\n### Programmatically\n\nInstall the package locally:\n\n```shell\n$ npm install --save-dev electron-installer-redhat\n```\n\nAnd write something like this:\n\n```javascript\nconst installer = require('electron-installer-redhat')\n\nconst options = {\n  src: 'dist/app-linux-x64/',\n  dest: 'dist/installers/',\n  arch: 'x86_64'\n}\n\nasync function main (options) {\n  console.log('Creating package (this may take a while)')\n\n  try {\n    await installer(options)\n    console.log(`Successfully created package at ${options.dest}`)\n  } catch (err) {\n    console.error(err, err.stack)\n    process.exit(1)\n  }\n}\nmain(options)\n```\n\nYou'll end up with the package at `dist/installers/app-0.0.1-1.x86_64.rpm`.\n\n_Note: As of 2.0.0, the Node-style callback pattern is no longer available. You can use [`util.callbackify`](https://nodejs.org/api/util.html#util_util_callbackify_original) if this is required for your use case._\n\n### Options\n\nEven though you can pass most of these options through the command-line interface, it may be easier to create a configuration file:\n\n```javascript\n{\n  \"dest\": \"dist/installers/\",\n  \"icon\": \"resources/Icon.png\",\n  \"categories\": [\n    \"Utility\"\n  ]\n}\n```\n\nAnd pass that instead with the `config` option:\n\n```shell\n$ electron-installer-redhat --src dist/app-linux-x64/ --arch x86_64 --config config.json\n```\n\nAnyways, here's the full list of options:\n\n#### src\nType: `String`\nDefault: `undefined`\n\nPath to the folder that contains your built Electron application.\n\n#### dest\nType: `String`\nDefault: `undefined`\n\nPath to the folder that will contain your Red Hat installer.\n\n#### rename\nType: `Function`\nDefault: `function (dest, src) { return path.join(dest, src); }`\n\nFunction that renames all files generated by the task just before putting them in your `dest` folder.\n\n#### options.name\nType: `String`\nDefault: `package.name`\n\nName of the package (e.g. `atom`), used in the [`Name` field of the `spec` file](https://fedoraproject.org/wiki/Packaging:NamingGuidelines).\n\n#### options.productName\nType: `String`\nDefault: `package.productName || package.name`\n\nName of the application (e.g. `Atom`), used in the [`Name` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\n#### options.genericName\nType: `String`\nDefault: `package.genericName || package.productName || package.name`\n\nGeneric name of the application (e.g. `Text Editor`), used in the [`GenericName` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\n#### options.description\nType: `String`\nDefault: `package.description`\n\nShort, one-line description of the application; do not end with a period.\nUsed in the [`Summary` field of the `spec` file](https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html#con_rpm-spec-file-overview).\n\n#### options.productDescription\nType: `String`\nDefault: `package.productDescription || package.description`\n\nLong description of the application, used in the [`%description` tag of the `spec` file](https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html#con_rpm-spec-file-overview).\n\n#### options.version\nType: `String`\nDefault: `package.version`\n\nVersion number of the package, used in the [`Version` field of the `spec` file](https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html#con_rpm-spec-file-overview).\n\n#### options.revision\nType: `String`\nDefault: `package.revision || 1`\n\nRevision number of the package, used in the [`Release` field of the `spec` file](https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html#con_rpm-spec-file-overview).\n\n#### options.license\nType: `String`\nDefault: `package.license`\n\nLicense of the package, used in the [`License` field of the `spec` file](https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html#con_rpm-spec-file-overview).\n\n#### options.arch\nType: `String`\nDefault: `undefined`\n\nMachine architecture the package is targeted to, used to set the `--target` option.\n\n#### options.requires\nType: `Array[String]`\nDefault: The minimum list of packages needed for Electron to run\n\nPackages that are required when the program starts, used in the [`Requires` field of the `spec` file](https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html#con_rpm-spec-file-overview).\n\nAll user requirements will be appended to the default array of requirements, and any duplicates will be removed.\n\n#### options.homepage\nType: `String`\nDefault: `package.homepage || package.author.url`\n\nURL of the homepage for the package, used in the [`URL` field of the `spec` specification](https://docs.fedoraproject.org/en-US/quick-docs/creating-rpm-packages/index.html#con_rpm-spec-file-overview).\n\n#### options.compressionLevel\nType: `Number`\nDefault: `2`\n\nPackage compression level, from `0` to `9`.\n\n#### options.bin\nType: `String`\nDefault: `package.name`\n\nRelative path to the executable that will act as binary for the application, used in the [`Exec` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\nThe generated package will contain a symlink `/usr/bin/<%= options.name %>` pointing to the path provided here.\n\nFor example, providing this configuration:\n\n```js\n{\n  src: '...',\n  dest: '...',\n  name: 'foo',\n  bin: 'resources/cli/launcher.sh'\n}\n```\n\nWill create a package with the following symlink:\n\n```\nusr/bin/foo@ -> ../share/foo/resources/cli/launcher/sh\n```\n\nAnd a desktop specification with the following `Exec` key:\n\n```\nExec=foo %U\n```\n\n#### options.execArguments\nType: `Array[String]`\nDefault: `[]`\n\nCommand-line arguments to pass to the executable. Will be added to the [`Exec` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\n#### options.icon\nType: `String` or `Object[String:String]`\nDefault: `undefined`\n\nPath to a single image that will act as icon for the application:\n\n```js\n{\n  icon: 'resources/Icon.png'\n}\n```\n\nOr multiple images with their corresponding resolutions:\n\n```js\n{\n  icon: {\n    '48x48': 'resources/Icon48.png',\n    '64x64': 'resources/Icon64.png',\n    '128x128': 'resources/Icon128.png',\n    '256x256': 'resources/Icon256.png',\n    'scalable': 'resources/Icon.svg',\n    'symbolic': 'resources/Icon-symbolic.svg',\n  }\n}\n```\nPer the [icon theme specification](https://specifications.freedesktop.org/icon-theme-spec/icon-theme-spec-0.11.html), image files must either PNGs or SVGs. The SVG format can only be used for the `scalable` or `symbolic` resolutions.\n\n\n#### options.categories\nType: `Array[String]`\nDefault: `[]`\n\nCategories in which the application should be shown in a menu, used in the [`Categories` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\nFor possible values check out the [Desktop Menu Specification](http://standards.freedesktop.org/menu-spec/latest/apa.html).\n\n#### options.mimeType\nType: `Array[String]`\nDefault: `[]`\n\nMIME types the application is able to open, used in the [`MimeType` field of the `desktop` specification](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html).\n\nIf this option is specified, make sure to run `update-desktop-database &> /dev/null` as part of the `post` and `postun` scripts to refresh the [cached database of MIME types](https://fedoraproject.org/wiki/NewMIMESystem).\n\n\n#### options.scripts\nType: `Object[String:String]`\nDefault: `undefined`\n\nPath to [installation scripts](https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/) with their corresponding name. The files contents will be added to the spec file.\n\n```javascript\n{\n  scripts: {\n    'pre': 'resources/pre_script',\n    'post': 'resources/post_script',\n    'preun': 'resources/preun_script',\n    'postun': 'resources/postun_script'\n  }\n}\n```\n\n#### options.desktopTemplate\nType: `String`\nDefault: [`resources/desktop.ejs`](https://github.com/electron-userland/electron-installer-redhat/blob/master/resources/desktop.ejs)\n\nThe absolute path to a custom template for the generated [FreeDesktop.org desktop entry](http://standards.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html) file.\n\n## Meta\n\n* Code: `git clone git://github.com/electron-userland/electron-installer-redhat.git`\n* Home: <https://github.com/electron-userland/electron-installer-redhat/>\n\n\n## Contributors\n\n* Daniel Perez Alvarez ([unindented@gmail.com](mailto:unindented@gmail.com))\n\n\n## License\n\nCopyright (c) 2016 Daniel Perez Alvarez ([unindented.org](https://unindented.org/)). This is free software, and may be redistributed under the terms specified in the LICENSE file.\n",
    "licenseText": "Copyright (c) 2016 Daniel Perez Alvarez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/electron-installer-redhat/-/electron-installer-redhat-3.3.0.tgz#acdb59d13d738c55debc5214114d36096eda1aed",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/electron-installer-redhat/-/electron-installer-redhat-3.3.0.tgz",
    "hash": "acdb59d13d738c55debc5214114d36096eda1aed",
    "integrity": "sha512-hXIXB3uQXmXZy/v3MpbwWN4Of28ALpPt9ZyUDNEoSe0w7QZceL9IqI2K6Q6imiBJCLRC0hmT94WhlKj1RyGOWg==",
    "registry": "npm",
    "packageName": "electron-installer-redhat",
    "cacheIntegrity": "sha512-hXIXB3uQXmXZy/v3MpbwWN4Of28ALpPt9ZyUDNEoSe0w7QZceL9IqI2K6Q6imiBJCLRC0hmT94WhlKj1RyGOWg== sha1-rNtZ0T1zjFXevFIUEU02CW7aGu0="
  },
  "registry": "npm",
  "hash": "acdb59d13d738c55debc5214114d36096eda1aed"
}