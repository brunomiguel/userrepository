{
  "manifest": {
    "name": "@caohenghu/vue-colorpicker",
    "version": "1.2.4",
    "description": "Colorpicker of Vue Components",
    "main": "src/index.js",
    "scripts": {
      "hot": "webpack-dev-server --env.config local --env.local",
      "pro": "rm -rf dist && webpack --env.config pro --env.pro",
      "gh": "node build/gh.js"
    },
    "keywords": [
      "vue",
      "colorpicker",
      "color"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/caohenghu/vue-colorpicker"
    },
    "author": {
      "name": "caohenghu",
      "email": "caohenghu@gmail.com"
    },
    "license": "MIT",
    "files": [
      "src"
    ],
    "devDependencies": {
      "autoprefixer": "^9.7.4",
      "css-loader": "^3.2.0",
      "eslint": "^6.2.2",
      "eslint-plugin-vue": "^6.1.2",
      "file-loader": "^4.2.0",
      "gh-pages": "^2.0.1",
      "html-webpack-plugin": "^3.2.0",
      "mini-css-extract-plugin": "^0.9.0",
      "node-sass": "^4.11.0",
      "optimize-css-assets-webpack-plugin": "^5.0.3",
      "postcss-loader": "^3.0.0",
      "sass-loader": "^7.1.0",
      "url-loader": "^2.1.0",
      "vue-loader": "^15.5.1",
      "vue-template-compiler": "^2.5.22",
      "webpack": "^4.41.6",
      "webpack-cli": "^3.2.1",
      "webpack-dev-server": "^3.1.14"
    },
    "_registry": "npm",
    "_loc": "/home/brunomiguel/userrepository/pkgbuild/cerebro/src/yarn-cache/v6/npm-@caohenghu-vue-colorpicker-1.2.4-1595f47b9e25b278c73318a812c0df9e989a90c0-integrity/node_modules/@caohenghu/vue-colorpicker/package.json",
    "readmeFilename": "README.md",
    "readme": "# vue-colorpicker\n\n## [LiveDemo](https://caohenghu.github.io/vue-colorpicker/)\n\n![preview-dark](https://raw.githubusercontent.com/caohenghu/vue-colorpicker/master/src/img/preview-dark.jpg)\n![preview-light](https://raw.githubusercontent.com/caohenghu/vue-colorpicker/master/src/img/preview-light.jpg)\n\n## Install\n\n```bash\n$ yarn add @caohenghu/vue-colorpicker\n```\n\n## Example\n\n```html\n<template>\n    <div :style=\"{background: color}\">\n        <color-picker\n            theme=\"light\"\n            :color=\"color\"\n            :sucker-hide=\"false\"\n            :sucker-canvas=\"suckerCanvas\"\n            :sucker-area=\"suckerArea\"\n            @changeColor=\"changeColor\"\n            @openSucker=\"openSucker\"\n        />\n    </div>\n</template>\n\n<script>\n    import colorPicker from '@caohenghu/vue-colorpicker'\n\n    export default {\n        components: {\n            colorPicker\n        },\n        data() {\n            return {\n                color: '#59c7f9',\n                suckerCanvas: null,\n                suckerArea: [],\n                isSucking: false\n            }\n        },\n        methods: {\n            changeColor(color) {\n                const { r, g, b, a } = color.rgba\n                this.color = `rgba(${r}, ${g}, ${b}, ${a})`\n            },\n            openSucker(isOpen) {\n                if (isOpen) {\n                    // ... canvas be created\n                    // this.suckerCanvas = canvas\n                    // this.suckerArea = [x1, y1, x2, y2]\n                } else {\n                    // this.suckerCanvas && this.suckerCanvas.remove\n                }\n            }\n        }\n    }\n</script>\n```\n\n## Options\n\n| Name               | Type              | Default                                                                                                                                                                                  | Description                             |\n| ------------------ | ----------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------- |\n| theme              | String            | `dark`                                                                                                                                                                                   | `dark` or `light`                       |\n| color              | String            | `#000000`                                                                                                                                                                                | `rgba` or `hex`                         |\n| colors-default     | Array             | `['#000000', '#FFFFFF', '#FF1900', '#F47365', '#FFB243', '#FFE623', '#6EFF2A', '#1BC7B1', '#00BEFF', '#2E81FF', '#5D61FF', '#FF89CF', '#FC3CAD', '#BF3DCE', '#8E00A7', 'rgba(0,0,0,0)']` | like `['#ff00ff', '#0f0f0f', ...]`      |\n| colors-history-key | String            | `vue-colorpicker-history`                                                                                                                                                                |\n| sucker-hide        | Boolean           | `true`                                                                                                                                                                                   | `true` or `false`                       |\n| sucker-canvas      | HTMLCanvasElement | `null`                                                                                                                                                                                   | like `document.createElement('canvas')` |\n| sucker-area        | Array             | `[]`                                                                                                                                                                                     | like `[x1, y1, x2, y2]`                 |\n\n> `color` is one-way data flow, so you can't use `v-model`. why? because you'll listen `changeColor` event do more things, so i think it's not necessary here.\n\n## Events\n\n| Name        | Type     | Args   | Description                     |\n| ----------- | -------- | ------ | ------------------------------- |\n| changeColor | Function | color  | `{ rgba: {}, hsv: {}, hex: ''}` |\n| openSucker  | Function | isOpen | `true` or `false`               |\n\n> if you want use sucker, then `openSucker`, `sucker-hide`, `sucker-canvas`, `sucker-area` is necessary. when you click sucker button, you can click it again or press key of `esc` to exit.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@caohenghu/vue-colorpicker/-/vue-colorpicker-1.2.4.tgz#1595f47b9e25b278c73318a812c0df9e989a90c0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@caohenghu/vue-colorpicker/-/vue-colorpicker-1.2.4.tgz",
    "hash": "1595f47b9e25b278c73318a812c0df9e989a90c0",
    "integrity": "sha512-2YvCiBOnA9IANRJtw9rqIhVeJZPRPgO9gmFi3qfNgs1IEl7PFlcRx17VD1UF2L97PEk5GaxmrfCdCY15L09UQg==",
    "registry": "npm",
    "packageName": "@caohenghu/vue-colorpicker",
    "cacheIntegrity": "sha512-2YvCiBOnA9IANRJtw9rqIhVeJZPRPgO9gmFi3qfNgs1IEl7PFlcRx17VD1UF2L97PEk5GaxmrfCdCY15L09UQg== sha1-FZX0e54lsnjHMxioEsDfnpiakMA="
  },
  "registry": "npm",
  "hash": "1595f47b9e25b278c73318a812c0df9e989a90c0"
}